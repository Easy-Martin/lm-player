!(function (e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define([], t)
    : 'object' == typeof exports
    ? (exports.LMPlayer = t())
    : (e.LMPlayer = t());
})(self, function () {
  return (function () {
    var e,
      t,
      n = {
        75: function () {
          (window._iconfont_svg_string_1153292 =
            '<svg><symbol id="lm-player-fenping13" viewBox="0 0 1024 1024"><path d="M960 992H64c-19.2 0-32-12.8-32-32V64C32 44.8 44.8 32 64 32h896c19.2 0 32 12.8 32 32v896c0 19.2-12.8 32-32 32z m-192-64h160V768H768v160z m-224 0H704V768H544v160z m-224 0h160V768H320v160z m-224 0H256V768H96v160zM768 704h160V544H768V704z m-224 0H704V544H544V704zM320 704h160V544H320V704z m-224 0H256V544H96V704zM768 480h160V320H768v160z m-224 0H704V320H544v160z m-448 0h384v-384h-384v384zM768 256h160V96H768V256zM544 256H704V96H544V256z"  ></path></symbol><symbol id="lm-player-fenping10" viewBox="0 0 1024 1024"><path d="M960 992H64c-19.2 0-32-12.8-32-32V64C32 44.8 44.8 32 64 32h896c19.2 0 32 12.8 32 32v896c0 19.2-12.8 32-32 32z m-192-64h160V768H768v160z m-224 0H704V768H544v160z m-224 0h160V768H320v160z m-224 0H256V768H96v160zM768 704h160V544H768V704z m-224 0H704V544H544V704zM320 704h160V544H320V704z m-224 0H256V544H96V704z m448-224h384v-384h-384v384z m-448 0h384v-384h-384v384z"  ></path></symbol><symbol id="lm-player-fenping8" viewBox="0 0 1024 1024"><path d="M960 992H64c-19.2 0-32-12.8-32-32V64C32 44.8 44.8 32 64 32h896c19.2 0 32 12.8 32 32v896c0 19.2-12.8 32-32 32z m-268.8-64h236.8v-236.8h-236.8v236.8z m-294.4 0h236.8v-236.8H396.8v236.8z m-300.8 0h236.8v-384H96v384z m595.2-300.8h236.8V396.8h-236.8v230.4z m-294.4 0h236.8V396.8H396.8v230.4zM96 96v384h230.4v-384H96z m595.2 236.8h236.8V96h-236.8v236.8z m-294.4 0h236.8V96H396.8v236.8z"  ></path></symbol><symbol id="lm-player-S_Arrow_SmallDown" viewBox="0 0 1024 1024"><path d="M512 568.704L306.56 421.952a32 32 0 0 0-37.12 52.096l224 160a32 32 0 0 0 37.12 0l224-160a32 32 0 0 0-37.12-52.096L512 568.704z"  ></path></symbol><symbol id="lm-player-S_Bar_Reduction" viewBox="0 0 1024 1024"><path d="M991.424 505.28L992 512v320a32 32 0 0 1-63.488 5.76L928 832v-80.384A479.808 479.808 0 0 1 512 992a480 480 0 0 1-433.792-274.24 32 32 0 0 1 57.792-27.52A416 416 0 0 0 928 512c0-40.32 57.088-42.56 63.424-6.72zM512 288a224 224 0 0 1 32 445.696V832a32 32 0 1 1-64 0v-98.24A224 224 0 0 1 512 288z m0 64a160 160 0 1 0 0 320 160 160 0 0 0 0-320z m0-320a480 480 0 0 1 433.792 274.24 32 32 0 0 1-57.792 27.52A416 416 0 0 0 96 512c0 40.32-57.088 42.56-63.424 6.72L32 512V192a32 32 0 0 1 63.488-5.76L96 192v80.384A479.808 479.808 0 0 1 512 32z"  ></path></symbol><symbol id="lm-player-S_Edit_LineMinus" viewBox="0 0 1024 1024"><path d="M128 544h768a32 32 0 1 0 0-64H128a32 32 0 0 0 0 64z"  ></path></symbol><symbol id="lm-player-S_Edit_LinePlus" viewBox="0 0 1024 1024"><path d="M512 96a32 32 0 0 1 32 32v352H896a32 32 0 0 1 31.488 26.24L928 512a32 32 0 0 1-32 32H544V896a32 32 0 0 1-26.24 31.488L512 928a32 32 0 0 1-32-32V544H128a32 32 0 0 1-31.488-26.24L96 512a32 32 0 0 1 32-32h352V128a32 32 0 0 1 26.24-31.488L512 96z"  ></path></symbol><symbol id="lm-player-S_View_RotateLeft" viewBox="0 0 1024 1024"><path d="M89.6 352A32 32 0 0 1 57.6 320V128a32 32 0 0 1 64 0v104.64A480 480 0 1 1 32 512a32 32 0 0 1 64 0 416 416 0 1 0 65.344-224H281.6a32 32 0 0 1 0 64h-192z"  ></path></symbol><symbol id="lm-player-S_View_ScreenViewExit" viewBox="0 0 1024 1024"><path d="M992.0608 800a32 32 0 0 1 5.76 63.488l-5.76 0.512h-64v64a32 32 0 0 1-63.488 5.76l-0.512-5.76V832a32 32 0 0 1 26.24-31.488L896.0608 800h96zM128.0608 800a32 32 0 0 1 31.488 26.24L160.0608 832v96a32 32 0 0 1-63.488 5.76L96.0608 928v-64h-64a32 32 0 0 1-5.76-63.488L32.0608 800H128.0608z m704-576a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H192.0608a32 32 0 0 1-32-32V256a32 32 0 0 1 32-32h640z m-32 64h-576v448h576v-448zM896.0608 64a32 32 0 0 1 31.488 26.24l0.512 5.76v64h64a32 32 0 0 1 5.76 63.488l-5.76 0.512H896.0608a32 32 0 0 1-31.488-26.24L864.0608 192V96A32 32 0 0 1 896.0608 64zM128.0608 64a32 32 0 0 1 32 32V192a32 32 0 0 1-32 32H32.0608a32 32 0 0 1 0-64h64v-64A32 32 0 0 1 128.0608 64z"  ></path></symbol><symbol id="lm-player-S_View_RotateMiddle" viewBox="0 0 1024 1024"><path d="M512 32a480 480 0 1 1 0 960 480 480 0 0 1 0-960z m0 64a416 416 0 1 0 0 832 416 416 0 0 0 0-832z m0 256a160 160 0 1 1 0 320 160 160 0 0 1 0-320z m0 64a96 96 0 1 0 0 192 96 96 0 0 0 0-192z"  ></path></symbol><symbol id="lm-player-S_View_ScreenViewFull" viewBox="0 0 1024 1024"><path d="M32 768a32 32 0 0 1 31.488 26.24L64 800V896h96a32 32 0 0 1 5.76 63.488L160 960h-128a32 32 0 0 1-31.488-26.24L0 928v-128a32 32 0 0 1 32-32z m960 0a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32h-128a32 32 0 1 1 0-64H960v-96a32 32 0 0 1 32-32zM832 224a32 32 0 0 1 32 32v512a32 32 0 0 1-32 32H192a32 32 0 0 1-32-32V256a32 32 0 0 1 32-32h640z m-32 64h-576v448h576v-448zM160 64a32 32 0 0 1 5.76 63.488L160 128H64v96a32 32 0 0 1-63.488 5.76L0 224v-128a32 32 0 0 1 26.24-31.488L32 64h128z m832 0a32 32 0 0 1 31.488 26.24L1024 96v128a32 32 0 0 1-63.488 5.76L960 224V128h-96a32 32 0 0 1-5.76-63.488L864 64h128z"  ></path></symbol><symbol id="lm-player-S_View_ZoomOut" viewBox="0 0 1024 1024"><path d="M511.825979 31.989124a479.836855 479.836855 0 0 1 361.157207 795.761441l141.327948 141.26397a31.989124 31.989124 0 0 1-40.818122 48.943359l-4.478477-3.64676-141.26397-141.327948A479.836855 479.836855 0 1 1 511.825979 31.989124z m0 63.978247a415.858608 415.858608 0 1 0 0 831.717216 415.858608 415.858608 0 0 0 0-831.717216z m191.934742 383.869484a31.989124 31.989124 0 1 1 0 63.978248H319.891237a31.989124 31.989124 0 0 1 0-63.978248h383.869484z"  ></path></symbol><symbol id="lm-player-S_View_ZoomIn" viewBox="0 0 1024 1024"><path d="M511.825979 31.989124a479.836855 479.836855 0 0 1 361.157207 795.761441l141.327948 141.26397a31.989124 31.989124 0 0 1-40.818122 48.943359l-4.478477-3.64676-141.26397-141.327948A479.836855 479.836855 0 1 1 511.825979 31.989124z m0 63.978247a415.858608 415.858608 0 1 0 0 831.717216 415.858608 415.858608 0 0 0 0-831.717216z m0 191.934742a31.989124 31.989124 0 0 1 31.989124 31.989124v159.945618H703.760721a31.989124 31.989124 0 0 1 5.758043 63.466422L703.760721 543.815103H543.815103V703.760721a31.989124 31.989124 0 0 1-26.231082 31.477298L511.825979 735.749845a31.989124 31.989124 0 0 1-31.989124-31.989124V543.815103H319.891237a31.989124 31.989124 0 0 1-5.758042-63.466422L319.891237 479.836855h159.945618V319.891237a31.989124 31.989124 0 0 1 26.231082-31.477298L511.825979 287.902113z"  ></path></symbol><symbol id="lm-player-volume-close" viewBox="0 0 1024 1024"><path d="M891.648 410.154667a32 32 0 0 1 0 45.226666l-181.034667 181.034667a32 32 0 1 1-45.226666-45.226667l180.992-181.034666a32 32 0 0 1 45.269333 0z"  ></path><path d="M665.386667 410.154667a32 32 0 0 1 45.226666 0l181.034667 180.992a32 32 0 1 1-45.226667 45.226666l-181.034666-180.992a32 32 0 0 1 0-45.226666z"  ></path><path d="M512 128v768c-149.333333 0-260.266667-195.413333-260.266667-195.413333H128a42.666667 42.666667 0 0 1-42.666667-42.666667V362.88a42.666667 42.666667 0 0 1 42.666667-42.666667h123.733333S362.666667 128 512 128z"  ></path><path d="M279.424 336.213333z m0 0l0.170667-0.298666 0.810666-1.28a486.016 486.016 0 0 1 17.109334-25.941334c12.074667-17.109333 29.568-39.808 51.370666-62.336 36.864-38.186667 82.090667-72.021333 131.114667-82.773333v696.789333c-48.853333-10.922667-94.037333-45.269333-130.986667-84.138666a545.706667 545.706667 0 0 1-68.522666-89.813334l-0.768-1.365333-0.170667-0.256v-0.042667a32 32 0 0 0-27.861333-16.213333H128a10.666667 10.666667 0 0 1-10.666667-10.666667V362.88a10.666667 10.666667 0 0 1 10.666667-10.666667h123.733333a32 32 0 0 0 27.690667-15.957333zM233.813333 732.586667a609.408 609.408 0 0 0 68.821334 87.765333C350.592 870.826667 423.68 928 512 928a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32c-88.106667 0-161.109333 56.106667-209.152 105.898667a601.642667 601.642667 0 0 0-68.864 86.314666H128a74.666667 74.666667 0 0 0-74.666667 74.666667v294.997333c0 41.258667 33.450667 74.666667 74.666667 74.666667h105.813333z"  ></path></symbol><symbol id="lm-player-volume-open" viewBox="0 0 1024 1024"><path d="M512 128v768c-149.333333 0-260.266667-195.413333-260.266667-195.413333H128a42.666667 42.666667 0 0 1-42.666667-42.666667V362.88a42.666667 42.666667 0 0 1 42.666667-42.666667h123.733333S362.666667 128 512 128z"  ></path><path d="M279.424 336.213333l0.170667-0.298666 0.810666-1.28a486.016 486.016 0 0 1 17.109334-25.941334c12.074667-17.109333 29.568-39.808 51.370666-62.336 36.864-38.186667 82.090667-72.021333 131.114667-82.773333v696.789333c-48.853333-10.922667-94.037333-45.269333-130.986667-84.138666a545.706667 545.706667 0 0 1-68.522666-89.813334l-0.768-1.365333-0.170667-0.256v-0.042667a32 32 0 0 0-27.861333-16.213333H128a10.666667 10.666667 0 0 1-10.666667-10.666667V362.88a10.666667 10.666667 0 0 1 10.666667-10.666667h123.733333a32 32 0 0 0 27.690667-15.957333zM233.813333 732.586667a609.408 609.408 0 0 0 68.821334 87.765333C350.592 870.826667 423.68 928 512 928a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32c-88.106667 0-161.109333 56.106667-209.152 105.898667a601.642667 601.642667 0 0 0-68.864 86.314666H128a74.666667 74.666667 0 0 0-74.666667 74.666667v294.997333c0 41.258667 33.450667 74.666667 74.666667 74.666667h105.813333z"  ></path><path d="M787.797333 853.76a44.330667 44.330667 0 0 1-27.349333 8.789333c-13.056 0-24.277333-4.693333-33.706667-14.165333a46.037333 46.037333 0 0 1-14.165333-33.706667 46.336 46.336 0 0 1 18.56-37.589333 7.594667 7.594667 0 0 0 1.962667-1.493333l0.938666-0.938667c18.261333-12.373333 35.2-27.050667 50.773334-43.946667 15.658667-16.981333 29.354667-35.370667 41.088-55.210666a275.2 275.2 0 0 0 27.306666-63.488 249.642667 249.642667 0 0 0 9.813334-69.845334c0-48.853333-12.373333-93.44-37.12-133.845333a331.861333 331.861333 0 0 0-92.8-99.626667 45.738667 45.738667 0 0 1-20.522667-39.082666c0-13.013333 4.693333-24.277333 14.165333-33.706667 9.429333-9.429333 20.650667-14.165333 33.706667-14.165333 11.050667 0 20.821333 3.584 29.269333 10.752a425.728 425.728 0 0 1 67.413334 59.093333 392.234667 392.234667 0 0 1 53.76 73.258667c14.933333 26.368 26.666667 54.570667 35.157333 84.48a339.626667 339.626667 0 0 1 12.672 92.842666c0 32.554667-4.224 63.786667-12.672 93.738667a375.808 375.808 0 0 1-35.669333 84.992 405.077333 405.077333 0 0 1-122.581334 132.864zM733.098667 415.146667c13.653333 18.901333 24.576 37.973333 32.725333 57.173333 8.106667 19.2 12.202667 42.496 12.202667 69.845333 0 26.026667-4.266667 49.493333-12.714667 70.314667-8.448 20.864-19.2 39.722667-32.256 56.661333a136.661333 136.661333 0 0 1-16.597333 19.029334 31.402667 31.402667 0 0 1-22.442667 8.32 39.765333 39.765333 0 0 1-29.824-12.714667 42.197333 42.197333 0 0 1-12.202667-30.293333c0-5.205333 0.981333-10.410667 2.944-15.616h-0.981333c3.242667-7.168 7.168-13.994667 11.733333-20.48 4.565333-6.528 8.96-13.226667 13.184-20.053334 4.266667-6.826667 7.808-14.634667 10.752-23.466666 2.901333-8.746667 4.394667-19.328 4.394667-31.701334 0-11.733333-1.493333-22.016-4.394667-30.805333a124.032 124.032 0 0 0-10.752-23.893333 319.914667 319.914667 0 0 0-13.226666-20.522667 88.277333 88.277333 0 0 1-10.709334-20.522667 39.338667 39.338667 0 0 1-2.944-15.616c0-11.733333 4.096-21.845333 12.202667-30.293333a39.765333 39.765333 0 0 1 29.824-12.714667c9.088 0 16.597333 2.773333 22.442667 8.32a136.533333 136.533333 0 0 1 16.64 19.029334z"  ></path></symbol><symbol id="lm-player-fenping1" viewBox="0 0 1024 1024"><path d="M818.657882 198.776471H205.402353a36.562824 36.562824 0 0 0-27.105882 11.444705 38.249412 38.249412 0 0 0-11.264 27.708236v391.529412c0 10.782118 3.794824 19.998118 11.203764 27.708235a36.743529 36.743529 0 0 0 27.105883 11.444706h613.315764a36.502588 36.502588 0 0 0 27.105883-11.444706 38.068706 38.068706 0 0 0 11.264-27.708235v-391.529412a37.948235 37.948235 0 0 0-11.264-27.708236 36.321882 36.321882 0 0 0-27.105883-11.444705zM205.402353 120.470588h613.315765c31.744 0 58.849882 11.444706 81.317647 34.394353 22.467765 23.009882 33.671529 50.597647 33.671529 83.064471v391.529412c0 32.346353-11.203765 60.054588-33.731765 83.004235a109.628235 109.628235 0 0 1-81.257411 34.394353H550.369882v78.305882h114.989177c10.601412 0 19.636706 3.855059 27.105882 11.504941a37.948235 37.948235 0 0 1 11.203765 27.708236 37.948235 37.948235 0 0 1-11.203765 27.648 36.382118 36.382118 0 0 1-27.105882 11.504941H358.701176a36.502588 36.502588 0 0 1-27.105882-11.504941 38.068706 38.068706 0 0 1-11.264-27.708236c0-10.782118 3.734588-19.998118 11.203765-27.648a36.502588 36.502588 0 0 1 27.105882-11.444706h115.049412v-78.305882H205.342118a109.628235 109.628235 0 0 1-81.317647-34.454588c-22.467765-22.889412-33.671529-50.597647-33.67153-83.064471v-391.529412c0-32.406588 11.203765-59.994353 33.731765-83.004235A109.628235 109.628235 0 0 1 205.402353 120.470588z"  ></path></symbol><symbol id="lm-player-fenping4" viewBox="0 0 1024 1024"><path d="M940.8 992H64c-19.2 0-32-12.8-32-32V64C32 44.8 44.8 32 64 32h876.8c19.2 0 32 12.8 32 32v896c0 19.2-12.8 32-32 32z m-403.2-64h377.6v-384H537.6v384z m-441.6 0h377.6v-384H96v384z m441.6-448h377.6v-384H537.6v384z m-441.6 0h377.6v-384H96v384z"  ></path></symbol><symbol id="lm-player-fenping6" viewBox="0 0 1024 1024"><path d="M915.576471 963.764706H90.352941c-18.070588 0-30.117647-12.047059-30.117647-30.117647v-843.294118c0-18.070588 12.047059-30.117647 30.117647-30.117647h825.22353c18.070588 0 30.117647 12.047059 30.117647 30.117647v843.294118c0 18.070588-12.047059 30.117647-30.117647 30.117647z m-240.941177-60.235294h216.847059V542.117647h-216.847059v361.411765z m-277.082353 0h216.847059V542.117647H397.552941v361.411765z m-277.082353 0h216.847059V542.117647H120.470588v361.411765z m554.164706-421.647059h216.847059V120.470588h-216.847059v361.411765zM397.552941 481.882353h216.847059V120.470588H397.552941v361.411765zM120.470588 481.882353h216.847059V120.470588H120.470588v361.411765z"  ></path></symbol><symbol id="lm-player-fenping9" viewBox="0 0 1024 1024"><path d="M960 992H64c-19.2 0-32-12.8-32-32V64C32 44.8 44.8 32 64 32h896c19.2 0 32 12.8 32 32v896c0 19.2-12.8 32-32 32z m-256-64h224V704H704v224z m-307.2 0h230.4V704H396.8v224z m-300.8 0H320V704H96v224zM704 627.2h224V396.8H704v230.4z m-307.2 0h230.4V396.8H396.8v230.4z m-300.8 0H320V396.8H96v230.4zM704 320h224V96H704V320zM396.8 320h230.4V96H396.8V320zM96 320H320V96H96V320z"  ></path></symbol><symbol id="lm-player-kapianmoshi" viewBox="0 0 1024 1024"><path d="M192 160a32 32 0 0 0-32 32v640a32 32 0 0 0 32 32h640a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32H192zM96 192A96 96 0 0 1 192 96h640A96 96 0 0 1 928 192v640a96 96 0 0 1-96 96H192A96 96 0 0 1 96 832V192z"  ></path><path d="M245.312 277.312a32 32 0 0 1 32-32H448a32 32 0 0 1 32 32V448a32 32 0 0 1-32 32H277.312a32 32 0 0 1-32-32V277.312z m64 32V416H416V309.312H309.312zM544 277.312a32 32 0 0 1 32-32h170.688a32 32 0 0 1 32 32V448a32 32 0 0 1-32 32H576a32 32 0 0 1-32-32V277.312z m64 32V416h106.688V309.312H608zM245.312 576a32 32 0 0 1 32-32H448a32 32 0 0 1 32 32v170.688a32 32 0 0 1-32 32H277.312a32 32 0 0 1-32-32V576z m64 32v106.688H416V608H309.312zM544 576a32 32 0 0 1 32-32h170.688a32 32 0 0 1 32 32v170.688a32 32 0 0 1-32 32H576a32 32 0 0 1-32-32V576z m64 32v106.688h106.688V608H608z"  ></path></symbol><symbol id="lm-player-bofang" viewBox="0 0 1024 1024"><path d="M845.74598143 446.25594937L315.54933873 33.98249699A83.2203173 83.2203173 0 0 0 181.23174569 99.64332715v824.7133457a83.2203173 83.2203173 0 0 0 134.31759304 65.74405064l530.1966427-412.43989334a83.2203173 83.2203173 0 0 0 0-131.3216603z"  ></path></symbol><symbol id="lm-player-xiazai" viewBox="0 0 1024 1024"><path d="M394.666667 128a32 32 0 0 1 32-32h170.666666a32 32 0 0 1 32 32v202.666667H768a32 32 0 0 1 22.613333 54.613333l-256 256a32 32 0 0 1-45.226666 0l-256-256A32 32 0 0 1 256 330.666667h138.666667V128zM96 789.333333a32 32 0 0 1 32-32h768a32 32 0 0 1 0 64H128a32 32 0 0 1-32-32zM266.666667 938.666667a32 32 0 0 1 32-32h426.666666a32 32 0 0 1 0 64H298.666667a32 32 0 0 1-32-32z"  ></path></symbol><symbol id="lm-player-tingzhi" viewBox="0 0 1024 1024"><path d="M36.571429 182.857143a146.285714 146.285714 0 0 1 146.285714-146.285714h658.285714a146.285714 146.285714 0 0 1 146.285714 146.285714v658.285714a146.285714 146.285714 0 0 1-146.285714 146.285714h-658.285714a146.285714 146.285714 0 0 1-146.285714-146.285714v-658.285714z"  ></path></symbol><symbol id="lm-player-zhuzhenplay" viewBox="0 0 1024 1024"><path d="M512 42.666667C252.793333 42.666667 42.666667 252.793333 42.666667 512s210.126667 469.333333 469.333333 469.333333 469.333333-210.126667 469.333333-469.333333S771.206667 42.666667 512 42.666667z m239.213333 500.493333l-266.666666 176A37.333333 37.333333 0 0 1 426.666667 688V336.033333a37.333333 37.333333 0 0 1 57.893333-31.16l266.666667 176a37.333333 37.333333 0 0 1 0 62.32zM384 704a21.333333 21.333333 0 0 1-42.666667 0V320a21.333333 21.333333 0 0 1 42.666667 0z"  ></path></symbol><symbol id="lm-player-quanbuguanbi" viewBox="0 0 1024 1024"><path d="M688.751304 272.784696L940.566261 20.925217l47.237565 47.193044-251.859478 251.859478-47.193044-47.193043z"  ></path><path d="M940.610783 319.977739L688.751304 68.118261 735.944348 20.925217l251.859478 251.859479-47.193043 47.193043zM11.130435 89.043478A33.391304 33.391304 0 0 1 44.521739 55.652174h489.739131v66.782609H77.913043v823.652174h823.652174V445.217391h66.782609v534.26087a33.391304 33.391304 0 0 1-33.391304 33.391304H44.521739A33.391304 33.391304 0 0 1 11.130435 979.478261V89.043478z"  ></path><path d="M189.217391 267.130435A33.391304 33.391304 0 0 1 222.608696 233.73913h222.608695a33.391304 33.391304 0 0 1 33.391305 33.391305v222.608695a33.391304 33.391304 0 0 1-33.391305 33.391305H222.608696a33.391304 33.391304 0 0 1-33.391305-33.391305V267.130435z m66.782609 33.391304v155.826087h155.826087v-155.826087h-155.826087zM189.217391 623.304348a33.391304 33.391304 0 0 1 33.391305-33.391305h222.608695a33.391304 33.391304 0 0 1 33.391305 33.391305v222.608695a33.391304 33.391304 0 0 1-33.391305 33.391305H222.608696a33.391304 33.391304 0 0 1-33.391305-33.391305v-222.608695z m66.782609 33.391304v155.826087h155.826087v-155.826087h-155.826087zM545.391304 623.304348a33.391304 33.391304 0 0 1 33.391305-33.391305h222.608695a33.391304 33.391304 0 0 1 33.391305 33.391305v222.608695a33.391304 33.391304 0 0 1-33.391305 33.391305h-222.608695a33.391304 33.391304 0 0 1-33.391305-33.391305v-222.608695z m66.782609 33.391304v155.826087h155.826087v-155.826087h-155.826087z"  ></path></symbol><symbol id="lm-player-huamianshiying" viewBox="0 0 1157 1024"><path d="M11.130435 44.521739A33.391304 33.391304 0 0 1 44.521739 11.130435h142.469565v66.782608H77.913043v110.413914H11.130435V44.521739zM970.573913 11.130435H1113.043478a33.391304 33.391304 0 0 1 33.391305 33.391304v143.805218h-66.782609V77.913043H970.573913V11.130435zM189.217391 224.300522a33.391304 33.391304 0 0 1 33.391305-33.391305h712.347826a33.391304 33.391304 0 0 1 33.391304 33.391305v575.398956a33.391304 33.391304 0 0 1-33.391304 33.391305H222.608696a33.391304 33.391304 0 0 1-33.391305-33.391305V224.300522z m66.782609 33.391304v508.616348h645.565217V257.691826H256zM11.130435 979.478261v-143.805218h66.782608v110.413914H186.991304v66.782608H44.521739A33.391304 33.391304 0 0 1 11.130435 979.478261z m1068.521739-33.391304v-110.413914h66.782609V979.478261a33.391304 33.391304 0 0 1-33.391305 33.391304h-142.469565v-66.782608h109.078261z"  ></path></symbol><symbol id="lm-player-quanping" viewBox="0 0 1024 1024"><path d="M22.918095 22.918095a36.571429 36.571429 0 0 1 51.687619 0l243.809524 243.809524a36.571429 36.571429 0 0 1-51.687619 51.687619l-243.809524-243.809524a36.571429 36.571429 0 0 1 0-51.687619zM318.415238 705.584762a36.571429 36.571429 0 0 1 0 51.687619l-243.809524 243.809524a36.571429 36.571429 0 0 1-51.687619-51.687619l243.809524-243.809524a36.571429 36.571429 0 0 1 51.687619 0zM705.584762 705.584762a36.571429 36.571429 0 0 1 51.687619 0l243.809524 243.809524a36.571429 36.571429 0 1 1-51.687619 51.687619l-243.809524-243.809524a36.571429 36.571429 0 0 1 0-51.687619zM1001.081905 22.918095a36.571429 36.571429 0 0 1 0 51.687619l-243.809524 243.809524a36.571429 36.571429 0 1 1-51.687619-51.687619l243.809524-243.809524a36.571429 36.571429 0 0 1 51.687619 0z"  ></path><path d="M694.857143 48.761905A36.571429 36.571429 0 0 1 731.428571 12.190476h243.809524a36.571429 36.571429 0 0 1 36.571429 36.571429v243.809524a36.571429 36.571429 0 0 1-73.142857 0V85.333333H731.428571a36.571429 36.571429 0 0 1-36.571428-36.571428zM975.238095 694.857143a36.571429 36.571429 0 0 1 36.571429 36.571428v243.809524a36.571429 36.571429 0 0 1-36.571429 36.571429h-243.809524a36.571429 36.571429 0 0 1 0-73.142857h207.238096V731.428571a36.571429 36.571429 0 0 1 36.571428-36.571428zM48.761905 694.857143a36.571429 36.571429 0 0 1 36.571428 36.571428v207.238096H292.571429a36.571429 36.571429 0 0 1 0 73.142857H48.761905A36.571429 36.571429 0 0 1 12.190476 975.238095v-243.809524a36.571429 36.571429 0 0 1 36.571429-36.571428zM12.190476 48.761905A36.571429 36.571429 0 0 1 48.761905 12.190476h243.809524a36.571429 36.571429 0 0 1 0 73.142857H85.333333V292.571429a36.571429 36.571429 0 0 1-73.142857 0V48.761905z"  ></path></symbol><symbol id="lm-player-close" viewBox="0 0 1024 1024"><path d="M512 53.333333C258.688 53.333333 53.333333 258.688 53.333333 512S258.688 970.666667 512 970.666667 970.666667 765.312 970.666667 512 765.312 53.333333 512 53.333333z m143.36 315.349334a32 32 0 0 1 0 45.226666L557.226667 512l98.048 98.048a32 32 0 0 1-45.226667 45.226667L512 557.226667 413.952 655.36a32 32 0 1 1-45.226667-45.269333L466.773333 512 368.725333 413.952a32 32 0 0 1 45.226667-45.226667L512 466.688l98.048-98.048a32 32 0 0 1 45.269333 0z"  ></path></symbol><symbol id="lm-player-lunxunkaishi" viewBox="0 0 1365 1024"><path d="M577.194667 720.270222A42.666667 42.666667 0 0 1 554.666667 682.666667V341.333333a42.666667 42.666667 0 0 1 66.332444-35.498666l256 170.666666a42.666667 42.666667 0 0 1 0 70.997334l-256 170.666666a42.666667 42.666667 0 0 1-43.804444 2.104889zM640 603.022222L776.419556 512 640 421.034667V603.022222z"  ></path><path d="M42.666667 85.333333A42.666667 42.666667 0 0 1 85.333333 42.666667h682.666667a42.666667 42.666667 0 0 1 23.665778 78.165333l-128 85.333333a42.666667 42.666667 0 1 1-47.331556-70.997333l10.752-7.168H128v768H341.333333a42.666667 42.666667 0 0 1 0 85.333333H85.333333a42.666667 42.666667 0 0 1-42.666666-42.666666v-853.333334z m938.666666 0A42.666667 42.666667 0 0 1 1024 42.666667h256a42.666667 42.666667 0 0 1 42.666667 42.666666v853.333334a42.666667 42.666667 0 0 1-42.666667 42.666666h-682.666667a42.666667 42.666667 0 0 1-23.665777-78.165333l128-85.333333a42.666667 42.666667 0 1 1 47.331555 70.997333l-10.752 7.168h499.086222V128H1024a42.666667 42.666667 0 0 1-42.666667-42.666667z"  ></path></symbol><symbol id="lm-player-fenping16" viewBox="0 0 1024 1024"><path d="M961.776941 993.882353H62.223059c-19.275294 0-32.105412-12.830118-32.105412-32.105412V62.223059C30.117647 42.947765 42.947765 30.117647 62.223059 30.117647h899.553882c19.275294 0 32.105412 12.830118 32.105412 32.105412v899.553882c0 19.275294-12.830118 32.105412-32.105412 32.105412z m-192.752941-64.271059h160.587294v-160.587294h-160.587294v160.587294z m-224.918588 0H704.752941v-160.587294H544.105412v160.587294z m-224.858353 0h160.647529v-160.587294H319.247059v160.587294z m-224.858353 0h160.587294v-160.587294H94.388706v160.587294z m674.635294-224.858353h160.587294V544.105412h-160.587294V704.752941z m-224.918588 0H704.752941V544.105412H544.105412V704.752941z m-224.858353 0h160.647529V544.105412H319.247059V704.752941z m-224.858353 0h160.587294V544.105412H94.388706V704.752941z m674.635294-224.858353h160.587294V319.247059h-160.587294v160.647529z m-224.918588 0H704.752941V319.247059H544.105412v160.647529z m-224.858353 0h160.647529V319.247059H319.247059v160.647529z m-224.858353 0h160.587294V319.247059H94.388706v160.647529z m674.635294-224.918588h160.587294V94.388706h-160.587294v160.587294z m-224.918588 0H704.752941V94.388706H544.105412v160.587294z m-224.858353 0h160.647529V94.388706H319.247059v160.587294z m-224.858353 0h160.587294V94.388706H94.388706v160.587294z"  ></path></symbol><symbol id="lm-player-xiangji1fill" viewBox="0 0 1024 1024"><path d="M860.414581 207.449017 509.333781 207.449017c0-52.808332-43.003528-95.81186-95.81186-95.81186l-63.817235 0c-52.808332 0-95.81186 43.003528-95.81186 95.81186L158.424996 207.449017c-52.808332 0-95.81186 43.003528-95.81186 95.81186l0 510.53788c0 52.808332 43.003528 95.81186 95.81186 95.81186l701.989585 0c52.808332 0 95.81186-43.003528 95.81186-95.81186L956.22644 303.260877C956.054426 250.452545 913.050899 207.449017 860.414581 207.449017zM509.333781 749.981522c-105.616664 0-191.451705-85.835041-191.451705-191.451705s85.835041-191.451705 191.451705-191.451705 191.451705 85.835041 191.451705 191.451705S614.950445 749.981522 509.333781 749.981522zM812.422644 430.895347c-26.490173 0-47.819923-21.501764-47.819923-47.819923s21.501764-47.819923 47.819923-47.819923c26.490173 0 47.819923 21.501764 47.819923 47.819923S838.912817 430.895347 812.422644 430.895347z"  ></path></symbol><symbol id="lm-player-S_Device_shezhi" viewBox="0 0 1024 1024"><path d="M696.45833333 983.33333333c-16.875 0-28.125-11.25-28.125-28.125v-22.5c-45-5.625-84.375-22.5-118.125-50.625l-16.875 16.875c-11.25 11.25-28.125 11.25-39.375 0-11.25-11.25-11.25-28.125 0-39.375l16.875-16.875c-28.125-33.75-45-73.125-50.625-118.125h-22.5c-16.875 0-28.125-11.25-28.125-28.125s11.25-28.125 28.125-28.125h22.5c5.625-45 22.5-84.375 50.625-118.125L392.70833333 617.70833333c-11.25 5.625-22.5 5.625-28.125 0-11.25-5.625-16.875-16.875-16.875-28.125V364.58333333c0-11.25 5.625-16.875 16.875-22.5 11.25-5.625 16.875-5.625 28.125 0l191.25 112.5c5.625 5.625 11.25 11.25 11.25 22.5 22.5-11.25 45-16.875 73.125-22.5v-16.875c0-16.875 11.25-28.125 28.125-28.125s28.125 11.25 28.125 28.125v22.5c45 5.625 84.375 22.5 118.125 50.625l16.875-16.875c11.25-11.25 28.125-11.25 39.375 0s11.25 28.125 0 39.375l-16.875 16.875c28.125 33.75 45 73.125 50.625 118.125h22.5c16.875 0 28.125 11.25 28.125 28.125s-11.25 28.125-28.125 28.125h-22.5c-5.625 45-22.5 84.375-50.625 118.125l16.875 16.875c11.25 11.25 11.25 28.125 0 39.375s-28.125 11.25-39.375 0l-16.875-16.875c-33.75 28.125-73.125 45-118.125 50.625v22.5c0 16.875-11.25 28.125-28.125 28.125z m0-472.5c-101.25 0-185.625 84.375-185.625 185.625s84.375 185.625 185.625 185.625 185.625-84.375 185.625-185.625-84.375-185.625-185.625-185.625zM403.95833333 415.20833333v129.375L510.83333333 477.08333333 403.95833333 415.20833333z m292.5 365.625c-45 0-84.375-39.375-84.375-84.375s39.375-84.375 84.375-84.375 84.375 39.375 84.375 84.375-39.375 84.375-84.375 84.375z m0-112.5c-16.875 0-28.125 11.25-28.125 28.125s11.25 28.125 28.125 28.125 28.125-11.25 28.125-28.125-11.25-28.125-28.125-28.125z m-337.5 101.25H111.45833333c-16.875 0-28.125-11.25-28.125-28.125V111.45833333C83.33333333 94.58333333 94.58333333 83.33333333 111.45833333 83.33333333h725.625c16.875 0 28.125 11.25 28.125 28.125v315c0 16.875-11.25 28.125-28.125 28.125s-28.125-11.25-28.125-28.125V285.83333333H139.58333333v427.5h219.375c16.875 0 28.125 11.25 28.125 28.125s-11.25 28.125-28.125 28.125z m326.25-540h118.125V139.58333333h-33.75l-84.375 90z m-219.375 0h135L696.45833333 139.58333333H555.83333333L465.83333333 229.58333333zM252.08333333 229.58333333h135L477.08333333 139.58333333H342.08333333L252.08333333 229.58333333z m-112.5 0h33.75L257.70833333 139.58333333H139.58333333v90z"  ></path></symbol><symbol id="lm-player-S_View_RotateRight" viewBox="0 0 1024 1024"><path d="M512 32a479.744 479.744 0 0 1 390.4 200.704V128a32 32 0 1 1 64 0v192a32 32 0 0 1-32 32l-12.352 0.128a31.872 31.872 0 0 1-9.92 0L742.4 352a32 32 0 1 1 0-64h120.256A416 416 0 1 0 928 512a32 32 0 1 1 64 0A480 480 0 1 1 512 32z"  ></path></symbol><symbol id="lm-player-S_Edit_LoadDown" viewBox="0 0 1024 1024"><path d="M256 480a32 32 0 0 1 5.76 63.488L256 544H64V896h896V544h-192a32 32 0 0 1-5.76-63.488L768 480h224a32 32 0 0 1 31.488 26.24L1024 512v416a32 32 0 0 1-26.24 31.488L992 960H32a32 32 0 0 1-31.488-26.24L0 928V512a32 32 0 0 1 26.24-31.488L32 480H256z m608 288a32 32 0 0 1 5.76 63.488L864 832h-64a32 32 0 0 1-5.76-63.488L800 768h64z m-256 0h64a32 32 0 0 1 5.76 63.488L672 832h-64a32 32 0 0 1-5.76-63.488L608 768h64-64zM640 0a32 32 0 0 1 32 32v256H832a32 32 0 0 1 22.656 54.656l-320 320a32 32 0 0 1-45.312 0l-320-320A32 32 0 0 1 192 288h160v-256A32 32 0 0 1 384 0h256z m-32 64h-192v256a32 32 0 0 1-32 32H269.248L512 594.752 754.752 352H640a32 32 0 0 1-32-32V64z"  ></path></symbol><symbol id="lm-player-S_Edit_Reset" viewBox="0 0 1024 1024"><path d="M77.417991 558.764439a31.041572 31.041572 0 0 1 31.041572 31.041572 217.291004 217.291004 0 0 0 205.371041 216.980588L325.750568 807.097015l483.751859-0.062083-102.188856-102.126772a31.041572 31.041572 0 0 1-3.538739-39.609046l3.538739-4.34582a31.041572 31.041572 0 0 1 39.609046-3.538739l4.34582 3.538739 155.952858 156.014941a31.227821 31.227821 0 0 1 7.636227 14.651622l0.496665 3.228324 0.18625 3.290406v1.241663a31.041572 31.041572 0 0 1-1.427913 8.132892l-0.931247 2.483326a30.669073 30.669073 0 0 1-2.483325 4.718319l-1.676245 2.421242-0.248333 0.310416-0.558748 0.682915a31.227821 31.227821 0 0 1-1.055414 1.241663l-155.890775 155.952858a31.041572 31.041572 0 0 1-47.493605-39.609046l3.538739-4.34582L809.502427 869.180159 325.750568 869.180159A279.374149 279.374149 0 0 1 46.376419 589.806011 31.041572 31.041572 0 0 1 77.417991 558.764439z m31.041572-372.498865v-1.241663a31.289905 31.289905 0 0 1 1.427913-8.132892l0.931247-2.483326a30.669073 30.669073 0 0 1 3.104157-5.773732l0.869164-1.117497a31.227821 31.227821 0 0 1 2.048744-2.483325L272.731563 9.142364a31.041572 31.041572 0 0 1 47.493605 39.609046l-3.538739 4.34582-102.250939 102.126772L698.249432 155.224002A279.374149 279.374149 0 0 1 977.623581 434.59815a31.041572 31.041572 0 1 1-62.083144 0A217.291004 217.291004 0 0 0 698.249432 217.307146l-483.813942-0.062083 102.250939 102.250938a31.041572 31.041572 0 0 1-39.609046 47.493606l-4.34582-3.53874L116.840788 207.373843l-1.055414-1.17958-0.558748-0.620831 1.614162 1.800411-1.862495-2.17291-1.738328-2.483326a32.283235 32.283235 0 0 1-4.097487-9.995386l-0.496665-3.228324L108.459563 186.265574z"  ></path></symbol><symbol id="lm-player-S_View_SearchBox" viewBox="0 0 1024 1024"><path d="M192 32a32 32 0 0 1 32 32v32h576V64a32 32 0 0 1 32-32h128a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32h-32v576h32a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32h-128a32 32 0 0 1-32-32v-32h-576v32a32 32 0 0 1-32 32H64a32 32 0 0 1-32-32v-128a32 32 0 0 1 32-32h32v-576H64A32 32 0 0 1 32 192V64A32 32 0 0 1 64 32h128z m-32 832h-64v64h64v-64z m768 0h-64v64h64v-64z m-128-704h-576V192a32 32 0 0 1-32 32h-32v576H192a32 32 0 0 1 32 32v32h576V832a32 32 0 0 1 32-32h32v-576H832a32 32 0 0 1-32-32v-32zM512 288a224 224 0 0 1 179.2 358.4l3.456 2.944 64 64a32 32 0 0 1-45.312 45.312l-64-64a32.256 32.256 0 0 1-3.008-3.52A224 224 0 1 1 512 288z m0 64a160 160 0 1 0 0 320 160 160 0 0 0 0-320z m-352-256h-64v64h64v-64z m768 0h-64v64h64v-64z"  ></path></symbol><symbol id="lm-player-YesorNo_No_Dark" viewBox="0 0 1024 1024"><path d="M213.12 234.88l21.76-21.76a32 32 0 0 1 43.648-1.408l191.36 167.424a64 64 0 0 0 84.288 0l191.296-167.424a32 32 0 0 1 43.712 1.472l21.632 21.632a32 32 0 0 1 1.472 43.712l-167.424 191.36a64 64 0 0 0 0 84.288l167.424 191.296a32 32 0 0 1-1.472 43.712l-21.632 21.632a32 32 0 0 1-43.712 1.472l-191.36-167.424a64 64 0 0 0-84.288 0l-191.296 167.424a32 32 0 0 1-43.712-1.472l-21.632-21.632a32 32 0 0 1-1.472-43.712l167.424-191.36a64 64 0 0 0 0-84.288L211.712 278.528a32 32 0 0 1 1.472-43.712z"  ></path></symbol><symbol id="lm-player-Refresh_Main" viewBox="0 0 1024 1024"><path d="M716.864 266.176A320 320 0 1 0 832 512h64a384 384 0 1 1-125.12-283.648l76.608-53.696a25.6 25.6 0 0 1 40.32 19.648l10.88 204.608a32 32 0 0 1-44.48 31.168L665.6 349.824a25.6 25.6 0 0 1-4.672-44.544l55.872-39.104z"  ></path></symbol><symbol id="lm-player-SearchBox" viewBox="0 0 1024 1024"><path d="M896 768h64v192h-192v-64H256v64H64v-192h64V256H64V64h192v64h512V64h192v192h-64v512z m-64 0V256h-64V192H256v64H192v512h64v64h512v-64h64z m-164.864-164.864L736 672a45.248 45.248 0 1 1-64 64l-68.864-68.864a224 224 0 1 1 64-64z"  ></path></symbol><symbol id="lm-player-PrevFast" viewBox="0 0 1024 1024"><path d="M640 736L512 512l128-224-32-32L384 512l224 256 32-32z m192 0L704 512l128-224-32-32L576 512l224 256 32-32zM320 768V256H256v512h64z"  ></path></symbol><symbol id="lm-player-NextFast_Light" viewBox="0 0 1024 1024"><path d="M384 736L512 512 384 288l32-32L640 512l-224 256-32-32z m320 32V256h64v512h-64z m-512-32L320 512 192 288l32-32L448 512l-224 256-32-32z"  ></path></symbol><symbol id="lm-player-Loading" viewBox="0 0 1024 1024"><path d="M249.836 210.77c5.558-3.827 10.73-7.527 15.812-10.695 4.967-3.314 9.807-6.121 14.208-8.785 2.18-1.362 4.374-2.515 6.425-3.673l5.873-3.281c0.945-0.551 1.789-0.953 2.625-1.377l2.425-1.226 4.381-2.233 1.954-1.004 2.219-1.093 3.918-1.924 7.184-3.527c2.883-1.44 5.996-3.272 8.694-5.22 26.969-19.458 33.057-57.094 13.599-84.063-19.458-26.968-57.094-33.057-84.063-13.599l-6.49 4.682-3.54 2.554-2.071 1.499-2.62 1.947-5.824 4.351a7267.87 7267.87 0 0 0-3.193 2.399c-1.091 0.824-2.25 1.676-3.282 2.533a33346.62 33346.62 0 0 1-6.735 5.441c-2.343 1.915-4.833 3.859-7.308 6.046-4.991 4.313-10.423 8.905-15.952 14.121-5.645 5.071-11.353 10.792-17.394 16.739-5.886 6.125-12.079 12.515-18.185 19.505-12.303 13.875-24.827 29.53-36.839 46.835a494.61 494.61 0 0 0-33.896 56.497 491.342 491.342 0 0 0-27.329 64.159c-1.02 2.77-1.888 5.605-2.789 8.428l-2.688 8.477c-1.692 5.691-3.266 11.429-4.857 17.152l-2.135 8.669c-0.683 2.896-1.479 5.756-2.051 8.682l-1.84 8.729-0.914 4.358-0.785 4.387a479.254 479.254 0 0 0-7.583 69.967c-0.302 5.759-0.239 11.514-0.279 17.214l-0.017 4.267c-0.001 1.42 0.069 2.841 0.101 4.257l0.25 8.464 0.127 4.204 0.264 4.188 0.531 8.317 0.278 4.451 0.399 3.933 0.792 7.821c0.14 1.313 0.244 2.561 0.412 3.918l0.527 4.098 1.056 8.115c0.185 1.337 0.33 2.695 0.549 4.002l0.648 3.91 1.289 7.744c1.825 10.246 3.911 20.188 6.263 29.766a463.195 463.195 0 0 0 16.342 52.81l2.255 5.904 1.108 2.899 1.186 2.836 4.611 10.976c3.247 7.033 6.19 13.723 9.353 19.831 6.048 12.328 12.043 22.661 17.007 31.096 5.121 8.359 9.212 14.84 12.197 19.141l4.472 6.638-3.293-7.292c-2.209-4.713-5.148-11.776-8.748-20.761-3.443-9.059-7.545-20.055-11.346-32.919-2.041-6.376-3.771-13.301-5.726-20.516l-2.612-11.204-0.667-2.878-0.583-2.935-1.183-5.957c-3.105-16.055-5.568-33.549-6.889-52.052-0.668-9.251-1.027-18.753-1.1-28.437l0.03-7.3 0.014-3.67c0.002-1.227 0.084-2.416 0.122-3.629l0.284-7.263 0.139-3.644c0.053-1.229 0.166-2.577 0.247-3.863a35704.717 35704.717 0 0 1 0.798-11.787l0.017-0.247c0.013 0.588 0.018 0.028 0.027 0.098l0.05-0.472 0.101-0.945 0.2-1.891 0.8-7.581 0.4-3.801 0.535-3.801 1.069-7.62c0.187-1.271 0.335-2.545 0.555-3.815l0.67-3.811c0.909-5.082 1.708-10.185 2.859-15.253a424.734 424.734 0 0 1 17.057-60.03l1.316-3.663 1.437-3.623 2.859-7.225c0.907-2.417 2.03-4.761 3.033-7.135l3.079-7.082c2.208-4.653 4.37-9.295 6.624-13.867l3.508-6.783c1.167-2.252 2.294-4.513 3.565-6.702a414.503 414.503 0 0 1 31.89-49.502 407.116 407.116 0 0 1 35.476-41.25 406.598 406.598 0 0 1 35.793-32.288c5.751-4.687 11.515-8.857 16.918-12.861zM1023.966 510.486l-0.001-0.005-0.875-7.954-1.051-9.554-0.687-6.125-1.153-8.152c-0.828-5.729-1.741-12.089-2.813-18.907l-4.259-20.887c-0.691-3.726-1.738-7.517-2.729-11.425l-3.102-12.024c-0.558-2.048-1.019-4.142-1.677-6.221l-1.958-6.314-4.07-13.021-1.049-3.333-1.211-3.324c-0.814-2.223-1.638-4.467-2.469-6.732-1.673-4.522-3.34-9.131-5.115-13.781l-5.938-13.981-3.046-7.123c-1.037-2.384-2.247-4.72-3.375-7.102l-6.997-14.388c-0.569-1.22-1.222-2.408-1.877-3.598l-1.958-3.583-3.95-7.211-3.995-7.265c-1.354-2.422-2.881-4.773-4.324-7.175l-8.875-14.427c-12.567-18.998-26.533-37.793-42.018-55.643-15.662-17.71-32.638-34.534-50.581-50.045a527.617 527.617 0 0 0-56.726-41.602c-19.622-12.201-39.702-22.647-59.484-31.64l-14.925-6.188c-2.47-0.995-4.881-2.072-7.356-2.979l-7.402-2.651-7.306-2.609-3.615-1.289c-1.198-0.434-2.394-0.863-3.618-1.21l-14.37-4.353c-2.366-0.691-4.68-1.466-7.035-2.069l-7.02-1.754-13.669-3.402c-4.524-0.941-8.985-1.788-13.341-2.655l-6.47-1.271-3.184-0.621-3.186-0.465-12.373-1.797-5.96-0.862c-1.957-0.298-3.928-0.403-5.85-0.61l-11.239-1.057c-3.638-0.329-7.151-0.735-10.598-0.81l-19.18-0.823-16.258 0.11-6.935 0.057c-2.177 0.091-4.219 0.237-6.115 0.34l-9.619 0.566-7.982 0.472 7.959 0.875 9.529 1.05c1.872 0.215 3.884 0.411 6.023 0.683l6.797 1.101 15.801 2.578 18.393 3.951c3.283 0.628 6.614 1.603 10.051 2.514l10.571 2.838c1.801 0.509 3.644 0.92 5.469 1.526l5.542 1.793 11.432 3.697 2.927 0.946 2.914 1.104 5.902 2.242c3.965 1.517 8.007 3.017 12.084 4.613l12.243 5.366 6.241 2.733c2.088 0.929 4.128 2.029 6.212 3.044l12.59 6.277c1.068 0.506 2.106 1.094 3.145 1.685l3.131 1.761 6.302 3.542 6.353 3.568c2.118 1.209 4.165 2.586 6.263 3.878l12.601 7.922c16.565 11.247 32.949 23.681 48.48 37.44a473.639 473.639 0 0 1 43.435 44.87 467.917 467.917 0 0 1 35.892 50.115c10.476 17.304 19.389 34.971 27.062 52.322 1.761 4.404 3.506 8.772 5.234 13.098 0.843 2.166 1.771 4.273 2.532 6.444l2.224 6.49 2.201 6.396 1.093 3.162c0.368 1.047 0.734 2.092 1.019 3.166l3.633 12.572c0.578 2.068 1.242 4.086 1.738 6.146l1.441 6.137 2.829 11.931 2.152 11.645 1.045 5.64 0.514 2.772 0.362 2.779 1.423 10.784 0.697 5.188c0.245 1.704 0.3 3.423 0.458 5.098l0.794 9.786c0.249 3.167 0.584 6.22 0.595 9.223l0.516 16.686-0.346 13.152-0.109 5.579-0.343 6.014-0.567 9.595-0.472 7.988c-0.169 3.219-0.107 6.829 0.256 10.138 3.638 33.056 33.383 56.904 66.438 53.267 33.056-3.637 56.905-33.382 53.268-66.438zM885.176 762.451l-4.868 5.897c-1.711 2.052-3.44 4.238-5.4 6.399-3.858 4.365-7.946 9.128-12.608 13.957-4.517 4.944-9.632 9.919-14.922 15.205-5.467 5.131-11.147 10.547-17.374 15.864-12.349 10.726-26.262 21.624-41.613 32.046a434.435 434.435 0 0 1-50.026 29.303 431.157 431.157 0 0 1-56.59 23.39c-2.436 0.874-4.935 1.6-7.419 2.361l-7.455 2.279c-5.006 1.425-10.053 2.742-15.078 4.091-2.536 0.593-5.075 1.187-7.617 1.78-2.545 0.566-5.051 1.25-7.622 1.714l-7.663 1.523-3.822 0.763-3.851 0.64a419.278 419.278 0 0 1-61.304 5.938c-5.039 0.219-10.081 0.088-15.068 0.072l-3.733-0.022c-1.238-0.012-2.392-0.1-3.587-0.145l-7.067-0.313-3.505-0.146-3.997-0.27-7.961-0.537-1.981-0.133-0.989-0.067-0.494-0.033c0.221-0.008-0.844-0.005 0.433-0.022l-0.226-0.025-3.593-0.396-7.127-0.78a406.62 406.62 0 0 1-53.494-10.013 402.48 402.48 0 0 1-45.808-14.792l-5.111-2.022-2.511-0.99-2.452-1.066-9.494-4.124c-6.074-2.917-11.861-5.522-17.131-8.352-10.648-5.379-19.552-10.718-26.826-15.11l-1.338-0.807a1085.391 1085.391 0 0 0-3.457-2.276l-4.116-2.687c-0.638-0.414-1.252-0.813-1.842-1.194l-2.021-1.354-3.621-2.439-6.637-4.472c-2.685-1.782-5.825-3.567-8.857-4.938-30.307-13.689-65.973-0.218-79.662 30.089-13.689 30.308-0.218 65.974 30.089 79.663l7.293 3.294 3.979 1.797 2.369 1.063 2.994 1.302c2.073 0.896 4.3 1.857 6.676 2.885l3.672 1.574 1.917 0.819 1.9 0.745c10.22 4.014 22.646 8.772 37.189 13.242 7.215 2.375 15.042 4.443 23.216 6.727l12.687 3.1 3.261 0.787 3.325 0.701 6.75 1.415c18.195 3.715 38.044 6.719 59.054 8.439a494.284 494.284 0 0 0 65.863 0.997l8.535-0.519 4.285-0.266 0.268-0.017c1.44-0.02 0.541-0.02 0.927-0.03l0.492-0.051 0.986-0.1 1.977-0.201 7.938-0.807 3.991-0.406 4.502-0.554 9.015-1.133c1.492-0.2 3.034-0.365 4.486-0.598l4.344-0.709c5.795-0.965 11.61-1.832 17.399-3.066a485.178 485.178 0 0 0 68.692-18.701l4.2-1.463 4.157-1.588 8.292-3.176c2.771-1.016 5.468-2.251 8.194-3.37l8.134-3.434c5.351-2.451 10.685-4.869 15.941-7.39l7.805-3.918c2.591-1.307 5.188-2.576 7.712-3.991a474.344 474.344 0 0 0 57.071-35.83 467.174 467.174 0 0 0 47.72-40.068 466.596 466.596 0 0 0 37.51-40.586c5.455-6.542 10.335-13.082 14.998-19.24 4.483-6.313 8.789-12.218 12.512-18 3.868-5.667 7.179-11.177 10.297-16.204 1.589-2.492 2.957-4.989 4.318-7.332 1.349-2.348 2.635-4.586 3.854-6.711 4.686-8.611 8.271-15.384 10.509-20.116l3.527-7.185-4.682 6.489c-2.985 4.266-7.65 10.33-13.635 17.935z"  ></path></symbol><symbol id="lm-player-Pause_Main" viewBox="0 0 1024 1024"><path d="M256 192h64a64 64 0 0 1 64 64v512a64 64 0 0 1-64 64H256a64 64 0 0 1-64-64V256a64 64 0 0 1 64-64z m448 0h64a64 64 0 0 1 64 64v512a64 64 0 0 1-64 64h-64a64 64 0 0 1-64-64V256a64 64 0 0 1 64-64z"  ></path></symbol><symbol id="lm-player-Play_Main" viewBox="0 0 1024 1024"><path d="M267.712 169.28l525.312 286.528a64 64 0 0 1 0 112.384l-525.312 286.528A51.2 51.2 0 0 1 192 809.728V214.272a51.2 51.2 0 0 1 75.712-44.992z"  ></path></symbol><symbol id="lm-player-PlaySource" viewBox="0 0 1024 1024"><path d="M208 224h608a48 48 0 0 1 48 48v480a48 48 0 0 1-48 48H208a48 48 0 0 1-48-48V272a48 48 0 0 1 48-48z m-16 64v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64z m576-384v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64z m0 96v64h64v-64h-64zM407.776 365.2A16 16 0 0 0 384 379.2v265.6a16 16 0 0 0 23.776 14L634.24 532.96a24 24 0 0 0 0-41.952l-226.464-125.824z"  ></path></symbol></svg>'),
            (function (e) {
              var t,
                n = (t = (t = document.getElementsByTagName('script'))[t.length - 1]).getAttribute('data-injectcss');
              if (!(t = t.getAttribute('data-disable-injectsvg'))) {
                var r, i, a, o, s;
                if (n && !e.__iconfont__svg__cssinject__) {
                  e.__iconfont__svg__cssinject__ = !0;
                  try {
                    document.write('<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>');
                  } catch (t) {
                    console && console.log(t);
                  }
                }
                (r = function () {
                  var t,
                    n = document.createElement('div');
                  (n.innerHTML = e._iconfont_svg_string_1153292),
                    (n = n.getElementsByTagName('svg')[0]) &&
                      (n.setAttribute('aria-hidden', 'true'),
                      (n.style.position = 'absolute'),
                      (n.style.width = 0),
                      (n.style.height = 0),
                      (n.style.overflow = 'hidden'),
                      (t = document.body).firstChild
                        ? (function (e, t) {
                            t.parentNode.insertBefore(e, t);
                          })(n, t.firstChild)
                        : t.appendChild(n));
                }),
                  document.addEventListener
                    ? ~['complete', 'loaded', 'interactive'].indexOf(document.readyState)
                      ? setTimeout(r, 0)
                      : ((i = function () {
                          document.removeEventListener('DOMContentLoaded', i, !1), r();
                        }),
                        document.addEventListener('DOMContentLoaded', i, !1))
                    : document.attachEvent &&
                      ((a = r),
                      (o = e.document),
                      (s = !1),
                      (function e() {
                        try {
                          o.documentElement.doScroll('left');
                        } catch (t) {
                          return void setTimeout(e, 50);
                        }
                        l();
                      })(),
                      (o.onreadystatechange = function () {
                        'complete' == o.readyState && ((o.onreadystatechange = null), l());
                      }));
              }
              function l() {
                s || ((s = !0), a());
              }
            })(window);
        },
        80: function (e, t, n) {
          var r, i, a;
          e = n.nmd(e);
          var o,
            s = n(360).default;
          window,
            (o = function () {
              return (function (e) {
                var t = {};
                function n(r) {
                  if (t[r]) return t[r].exports;
                  var i = (t[r] = { i: r, l: !1, exports: {} });
                  return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
                }
                return (
                  (n.m = e),
                  (n.c = t),
                  (n.d = function (e, t, r) {
                    n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r });
                  }),
                  (n.r = function (e) {
                    'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 });
                  }),
                  (n.t = function (e, t) {
                    if ((1 & t && (e = n(e)), 8 & t)) return e;
                    if (4 & t && 'object' == s(e) && e && e.__esModule) return e;
                    var r = Object.create(null);
                    if ((n.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: e }), 2 & t && 'string' != typeof e))
                      for (var i in e)
                        n.d(
                          r,
                          i,
                          function (t) {
                            return e[t];
                          }.bind(null, i),
                        );
                    return r;
                  }),
                  (n.n = function (e) {
                    var t =
                      e && e.__esModule
                        ? function () {
                            return e.default;
                          }
                        : function () {
                            return e;
                          };
                    return n.d(t, 'a', t), t;
                  }),
                  (n.o = function (e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t);
                  }),
                  (n.p = ''),
                  n((n.s = 15))
                );
              })([
                function (e, t, n) {
                  'use strict';
                  var r = n(6),
                    i = n.n(r),
                    a = (function () {
                      function e() {}
                      return (
                        (e.e = function (t, n) {
                          (t && !e.FORCE_GLOBAL_TAG) || (t = e.GLOBAL_TAG);
                          var r = '[' + t + '] > ' + n;
                          e.ENABLE_CALLBACK && e.emitter.emit('log', 'error', r), e.ENABLE_ERROR && (console.error ? console.error(r) : console.warn ? console.warn(r) : console.log(r));
                        }),
                        (e.i = function (t, n) {
                          (t && !e.FORCE_GLOBAL_TAG) || (t = e.GLOBAL_TAG);
                          var r = '[' + t + '] > ' + n;
                          e.ENABLE_CALLBACK && e.emitter.emit('log', 'info', r), e.ENABLE_INFO && (console.info ? console.info(r) : console.log(r));
                        }),
                        (e.w = function (t, n) {
                          (t && !e.FORCE_GLOBAL_TAG) || (t = e.GLOBAL_TAG);
                          var r = '[' + t + '] > ' + n;
                          e.ENABLE_CALLBACK && e.emitter.emit('log', 'warn', r), e.ENABLE_WARN && (console.warn ? console.warn(r) : console.log(r));
                        }),
                        (e.d = function (t, n) {
                          (t && !e.FORCE_GLOBAL_TAG) || (t = e.GLOBAL_TAG);
                          var r = '[' + t + '] > ' + n;
                          e.ENABLE_CALLBACK && e.emitter.emit('log', 'debug', r), e.ENABLE_DEBUG && (console.debug ? console.debug(r) : console.log(r));
                        }),
                        (e.v = function (t, n) {
                          (t && !e.FORCE_GLOBAL_TAG) || (t = e.GLOBAL_TAG);
                          var r = '[' + t + '] > ' + n;
                          e.ENABLE_CALLBACK && e.emitter.emit('log', 'verbose', r), e.ENABLE_VERBOSE && console.log(r);
                        }),
                        e
                      );
                    })();
                  (a.GLOBAL_TAG = 'mpegts.js'),
                    (a.FORCE_GLOBAL_TAG = !1),
                    (a.ENABLE_ERROR = !0),
                    (a.ENABLE_INFO = !0),
                    (a.ENABLE_WARN = !0),
                    (a.ENABLE_DEBUG = !0),
                    (a.ENABLE_VERBOSE = !0),
                    (a.ENABLE_CALLBACK = !1),
                    (a.emitter = new i.a()),
                    (t.a = a);
                },
                function (e, t, n) {
                  'use strict';
                  t.a = {
                    IO_ERROR: 'io_error',
                    DEMUX_ERROR: 'demux_error',
                    INIT_SEGMENT: 'init_segment',
                    MEDIA_SEGMENT: 'media_segment',
                    LOADING_COMPLETE: 'loading_complete',
                    RECOVERED_EARLY_EOF: 'recovered_early_eof',
                    MEDIA_INFO: 'media_info',
                    METADATA_ARRIVED: 'metadata_arrived',
                    SCRIPTDATA_ARRIVED: 'scriptdata_arrived',
                    TIMED_ID3_METADATA_ARRIVED: 'timed_id3_metadata_arrived',
                    SMPTE2038_METADATA_ARRIVED: 'smpte2038_metadata_arrived',
                    SCTE35_METADATA_ARRIVED: 'scte35_metadata_arrived',
                    PES_PRIVATE_DATA_DESCRIPTOR: 'pes_private_data_descriptor',
                    PES_PRIVATE_DATA_ARRIVED: 'pes_private_data_arrived',
                    STATISTICS_INFO: 'statistics_info',
                    RECOMMEND_SEEKPOINT: 'recommend_seekpoint',
                  };
                },
                function (e, t, n) {
                  'use strict';
                  n.d(t, 'c', function () {
                    return i;
                  }),
                    n.d(t, 'b', function () {
                      return a;
                    }),
                    n.d(t, 'a', function () {
                      return o;
                    });
                  var r = n(3),
                    i = { kIdle: 0, kConnecting: 1, kBuffering: 2, kError: 3, kComplete: 4 },
                    a = {
                      OK: 'OK',
                      EXCEPTION: 'Exception',
                      HTTP_STATUS_CODE_INVALID: 'HttpStatusCodeInvalid',
                      CONNECTING_TIMEOUT: 'ConnectingTimeout',
                      EARLY_EOF: 'EarlyEof',
                      UNRECOVERABLE_EARLY_EOF: 'UnrecoverableEarlyEof',
                    },
                    o = (function () {
                      function e(e) {
                        (this._type = e || 'undefined'),
                          (this._status = i.kIdle),
                          (this._needStash = !1),
                          (this._onContentLengthKnown = null),
                          (this._onURLRedirect = null),
                          (this._onDataArrival = null),
                          (this._onError = null),
                          (this._onComplete = null);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          (this._status = i.kIdle), (this._onContentLengthKnown = null), (this._onURLRedirect = null), (this._onDataArrival = null), (this._onError = null), (this._onComplete = null);
                        }),
                        (e.prototype.isWorking = function () {
                          return this._status === i.kConnecting || this._status === i.kBuffering;
                        }),
                        Object.defineProperty(e.prototype, 'type', {
                          get: function () {
                            return this._type;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'status', {
                          get: function () {
                            return this._status;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'needStashBuffer', {
                          get: function () {
                            return this._needStash;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onContentLengthKnown', {
                          get: function () {
                            return this._onContentLengthKnown;
                          },
                          set: function (e) {
                            this._onContentLengthKnown = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onURLRedirect', {
                          get: function () {
                            return this._onURLRedirect;
                          },
                          set: function (e) {
                            this._onURLRedirect = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onDataArrival', {
                          get: function () {
                            return this._onDataArrival;
                          },
                          set: function (e) {
                            this._onDataArrival = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onError', {
                          get: function () {
                            return this._onError;
                          },
                          set: function (e) {
                            this._onError = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onComplete', {
                          get: function () {
                            return this._onComplete;
                          },
                          set: function (e) {
                            this._onComplete = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype.open = function (e, t) {
                          throw new r.c('Unimplemented abstract function!');
                        }),
                        (e.prototype.abort = function () {
                          throw new r.c('Unimplemented abstract function!');
                        }),
                        e
                      );
                    })();
                },
                function (e, t, n) {
                  'use strict';
                  n.d(t, 'd', function () {
                    return a;
                  }),
                    n.d(t, 'a', function () {
                      return o;
                    }),
                    n.d(t, 'b', function () {
                      return s;
                    }),
                    n.d(t, 'c', function () {
                      return l;
                    });
                  var r,
                    i =
                      ((r = function (e, t) {
                        return (r =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        r(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    a = (function () {
                      function e(e) {
                        this._message = e;
                      }
                      return (
                        Object.defineProperty(e.prototype, 'name', {
                          get: function () {
                            return 'RuntimeException';
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'message', {
                          get: function () {
                            return this._message;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype.toString = function () {
                          return this.name + ': ' + this.message;
                        }),
                        e
                      );
                    })(),
                    o = (function (e) {
                      function t(t) {
                        return e.call(this, t) || this;
                      }
                      return (
                        i(t, e),
                        Object.defineProperty(t.prototype, 'name', {
                          get: function () {
                            return 'IllegalStateException';
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        t
                      );
                    })(a),
                    s = (function (e) {
                      function t(t) {
                        return e.call(this, t) || this;
                      }
                      return (
                        i(t, e),
                        Object.defineProperty(t.prototype, 'name', {
                          get: function () {
                            return 'InvalidArgumentException';
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        t
                      );
                    })(a),
                    l = (function (e) {
                      function t(t) {
                        return e.call(this, t) || this;
                      }
                      return (
                        i(t, e),
                        Object.defineProperty(t.prototype, 'name', {
                          get: function () {
                            return 'NotImplementedException';
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        t
                      );
                    })(a);
                },
                function (e, t, n) {
                  'use strict';
                  var r = {};
                  !(function () {
                    var e = self.navigator.userAgent.toLowerCase(),
                      t =
                        /(edge)\/([\w.]+)/.exec(e) ||
                        /(opr)[\/]([\w.]+)/.exec(e) ||
                        /(chrome)[ \/]([\w.]+)/.exec(e) ||
                        /(iemobile)[\/]([\w.]+)/.exec(e) ||
                        /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) ||
                        /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) ||
                        /(webkit)[ \/]([\w.]+)/.exec(e) ||
                        /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
                        /(msie) ([\w.]+)/.exec(e) ||
                        (e.indexOf('trident') >= 0 && /(rv)(?::| )([\w.]+)/.exec(e)) ||
                        (e.indexOf('compatible') < 0 && /(firefox)[ \/]([\w.]+)/.exec(e)) ||
                        [],
                      n =
                        /(ipad)/.exec(e) ||
                        /(ipod)/.exec(e) ||
                        /(windows phone)/.exec(e) ||
                        /(iphone)/.exec(e) ||
                        /(kindle)/.exec(e) ||
                        /(android)/.exec(e) ||
                        /(windows)/.exec(e) ||
                        /(mac)/.exec(e) ||
                        /(linux)/.exec(e) ||
                        /(cros)/.exec(e) ||
                        [],
                      i = { browser: t[5] || t[3] || t[1] || '', version: t[2] || t[4] || '0', majorVersion: t[4] || t[2] || '0', platform: n[0] || '' },
                      a = {};
                    if (i.browser) {
                      a[i.browser] = !0;
                      var o = i.majorVersion.split('.');
                      (a.version = { major: parseInt(i.majorVersion, 10), string: i.version }),
                        o.length > 1 && (a.version.minor = parseInt(o[1], 10)),
                        o.length > 2 && (a.version.build = parseInt(o[2], 10));
                    }
                    for (var s in (i.platform && (a[i.platform] = !0),
                    (a.chrome || a.opr || a.safari) && (a.webkit = !0),
                    (a.rv || a.iemobile) && (a.rv && delete a.rv, (i.browser = 'msie'), (a.msie = !0)),
                    a.edge && (delete a.edge, (i.browser = 'msedge'), (a.msedge = !0)),
                    a.opr && ((i.browser = 'opera'), (a.opera = !0)),
                    a.safari && a.android && ((i.browser = 'android'), (a.android = !0)),
                    (a.name = i.browser),
                    (a.platform = i.platform),
                    r))
                      r.hasOwnProperty(s) && delete r[s];
                    Object.assign(r, a);
                  })(),
                    (t.a = r);
                },
                function (e, t, n) {
                  'use strict';
                  t.a = { OK: 'OK', FORMAT_ERROR: 'FormatError', FORMAT_UNSUPPORTED: 'FormatUnsupported', CODEC_UNSUPPORTED: 'CodecUnsupported' };
                },
                function (e, t, n) {
                  'use strict';
                  var r,
                    i = 'object' == ('undefined' == typeof Reflect ? 'undefined' : s(Reflect)) ? Reflect : null,
                    a =
                      i && 'function' == typeof i.apply
                        ? i.apply
                        : function (e, t, n) {
                            return Function.prototype.apply.call(e, t, n);
                          };
                  r =
                    i && 'function' == typeof i.ownKeys
                      ? i.ownKeys
                      : Object.getOwnPropertySymbols
                      ? function (e) {
                          return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
                        }
                      : function (e) {
                          return Object.getOwnPropertyNames(e);
                        };
                  var o =
                    Number.isNaN ||
                    function (e) {
                      return e != e;
                    };
                  function l() {
                    l.init.call(this);
                  }
                  (e.exports = l),
                    (e.exports.once = function (e, t) {
                      return new Promise(function (n, r) {
                        function i(n) {
                          e.removeListener(t, a), r(n);
                        }
                        function a() {
                          'function' == typeof e.removeListener && e.removeListener('error', i), n([].slice.call(arguments));
                        }
                        y(e, t, a, { once: !0 }),
                          'error' !== t &&
                            (function (e, t, n) {
                              'function' == typeof e.on && y(e, 'error', t, { once: !0 });
                            })(e, i);
                      });
                    }),
                    (l.EventEmitter = l),
                    (l.prototype._events = void 0),
                    (l.prototype._eventsCount = 0),
                    (l.prototype._maxListeners = void 0);
                  var u = 10;
                  function c(e) {
                    if ('function' != typeof e) throw new TypeError('The "listener" argument must be of type Function. Received type ' + s(e));
                  }
                  function d(e) {
                    return void 0 === e._maxListeners ? l.defaultMaxListeners : e._maxListeners;
                  }
                  function f(e, t, n, r) {
                    var i, a, o, s;
                    if (
                      (c(n),
                      void 0 === (a = e._events)
                        ? ((a = e._events = Object.create(null)), (e._eventsCount = 0))
                        : (void 0 !== a.newListener && (e.emit('newListener', t, n.listener ? n.listener : n), (a = e._events)), (o = a[t])),
                      void 0 === o)
                    )
                      (o = a[t] = n), ++e._eventsCount;
                    else if (('function' == typeof o ? (o = a[t] = r ? [n, o] : [o, n]) : r ? o.unshift(n) : o.push(n), (i = d(e)) > 0 && o.length > i && !o.warned)) {
                      o.warned = !0;
                      var l = new Error('Possible EventEmitter memory leak detected. ' + o.length + ' ' + String(t) + ' listeners added. Use emitter.setMaxListeners() to increase limit');
                      (l.name = 'MaxListenersExceededWarning'), (l.emitter = e), (l.type = t), (l.count = o.length), (s = l), console && console.warn && console.warn(s);
                    }
                    return e;
                  }
                  function h() {
                    if (!this.fired)
                      return (
                        this.target.removeListener(this.type, this.wrapFn), (this.fired = !0), 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
                      );
                  }
                  function p(e, t, n) {
                    var r = { fired: !1, wrapFn: void 0, target: e, type: t, listener: n },
                      i = h.bind(r);
                    return (i.listener = n), (r.wrapFn = i), i;
                  }
                  function v(e, t, n) {
                    var r = e._events;
                    if (void 0 === r) return [];
                    var i = r[t];
                    return void 0 === i
                      ? []
                      : 'function' == typeof i
                      ? n
                        ? [i.listener || i]
                        : [i]
                      : n
                      ? (function (e) {
                          for (var t = new Array(e.length), n = 0; n < t.length; ++n) t[n] = e[n].listener || e[n];
                          return t;
                        })(i)
                      : g(i, i.length);
                  }
                  function m(e) {
                    var t = this._events;
                    if (void 0 !== t) {
                      var n = t[e];
                      if ('function' == typeof n) return 1;
                      if (void 0 !== n) return n.length;
                    }
                    return 0;
                  }
                  function g(e, t) {
                    for (var n = new Array(t), r = 0; r < t; ++r) n[r] = e[r];
                    return n;
                  }
                  function y(e, t, n, r) {
                    if ('function' == typeof e.on) r.once ? e.once(t, n) : e.on(t, n);
                    else {
                      if ('function' != typeof e.addEventListener) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + s(e));
                      e.addEventListener(t, function i(a) {
                        r.once && e.removeEventListener(t, i), n(a);
                      });
                    }
                  }
                  Object.defineProperty(l, 'defaultMaxListeners', {
                    enumerable: !0,
                    get: function () {
                      return u;
                    },
                    set: function (e) {
                      if ('number' != typeof e || e < 0 || o(e)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + '.');
                      u = e;
                    },
                  }),
                    (l.init = function () {
                      (void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events) || ((this._events = Object.create(null)), (this._eventsCount = 0)),
                        (this._maxListeners = this._maxListeners || void 0);
                    }),
                    (l.prototype.setMaxListeners = function (e) {
                      if ('number' != typeof e || e < 0 || o(e)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + '.');
                      return (this._maxListeners = e), this;
                    }),
                    (l.prototype.getMaxListeners = function () {
                      return d(this);
                    }),
                    (l.prototype.emit = function (e) {
                      for (var t = [], n = 1; n < arguments.length; n++) t.push(arguments[n]);
                      var r = 'error' === e,
                        i = this._events;
                      if (void 0 !== i) r = r && void 0 === i.error;
                      else if (!r) return !1;
                      if (r) {
                        var o;
                        if ((t.length > 0 && (o = t[0]), o instanceof Error)) throw o;
                        var s = new Error('Unhandled error.' + (o ? ' (' + o.message + ')' : ''));
                        throw ((s.context = o), s);
                      }
                      var l = i[e];
                      if (void 0 === l) return !1;
                      if ('function' == typeof l) a(l, this, t);
                      else {
                        var u = l.length,
                          c = g(l, u);
                        for (n = 0; n < u; ++n) a(c[n], this, t);
                      }
                      return !0;
                    }),
                    (l.prototype.addListener = function (e, t) {
                      return f(this, e, t, !1);
                    }),
                    (l.prototype.on = l.prototype.addListener),
                    (l.prototype.prependListener = function (e, t) {
                      return f(this, e, t, !0);
                    }),
                    (l.prototype.once = function (e, t) {
                      return c(t), this.on(e, p(this, e, t)), this;
                    }),
                    (l.prototype.prependOnceListener = function (e, t) {
                      return c(t), this.prependListener(e, p(this, e, t)), this;
                    }),
                    (l.prototype.removeListener = function (e, t) {
                      var n, r, i, a, o;
                      if ((c(t), void 0 === (r = this._events))) return this;
                      if (void 0 === (n = r[e])) return this;
                      if (n === t || n.listener === t)
                        0 == --this._eventsCount ? (this._events = Object.create(null)) : (delete r[e], r.removeListener && this.emit('removeListener', e, n.listener || t));
                      else if ('function' != typeof n) {
                        for (i = -1, a = n.length - 1; a >= 0; a--)
                          if (n[a] === t || n[a].listener === t) {
                            (o = n[a].listener), (i = a);
                            break;
                          }
                        if (i < 0) return this;
                        0 === i
                          ? n.shift()
                          : (function (e, t) {
                              for (; t + 1 < e.length; t++) e[t] = e[t + 1];
                              e.pop();
                            })(n, i),
                          1 === n.length && (r[e] = n[0]),
                          void 0 !== r.removeListener && this.emit('removeListener', e, o || t);
                      }
                      return this;
                    }),
                    (l.prototype.off = l.prototype.removeListener),
                    (l.prototype.removeAllListeners = function (e) {
                      var t, n, r;
                      if (void 0 === (n = this._events)) return this;
                      if (void 0 === n.removeListener)
                        return (
                          0 === arguments.length
                            ? ((this._events = Object.create(null)), (this._eventsCount = 0))
                            : void 0 !== n[e] && (0 == --this._eventsCount ? (this._events = Object.create(null)) : delete n[e]),
                          this
                        );
                      if (0 === arguments.length) {
                        var i,
                          a = Object.keys(n);
                        for (r = 0; r < a.length; ++r) 'removeListener' !== (i = a[r]) && this.removeAllListeners(i);
                        return this.removeAllListeners('removeListener'), (this._events = Object.create(null)), (this._eventsCount = 0), this;
                      }
                      if ('function' == typeof (t = n[e])) this.removeListener(e, t);
                      else if (void 0 !== t) for (r = t.length - 1; r >= 0; r--) this.removeListener(e, t[r]);
                      return this;
                    }),
                    (l.prototype.listeners = function (e) {
                      return v(this, e, !0);
                    }),
                    (l.prototype.rawListeners = function (e) {
                      return v(this, e, !1);
                    }),
                    (l.listenerCount = function (e, t) {
                      return 'function' == typeof e.listenerCount ? e.listenerCount(t) : m.call(e, t);
                    }),
                    (l.prototype.listenerCount = m),
                    (l.prototype.eventNames = function () {
                      return this._eventsCount > 0 ? r(this._events) : [];
                    });
                },
                function (e, t, n) {
                  'use strict';
                  n.d(t, 'd', function () {
                    return r;
                  }),
                    n.d(t, 'b', function () {
                      return i;
                    }),
                    n.d(t, 'a', function () {
                      return a;
                    }),
                    n.d(t, 'c', function () {
                      return o;
                    });
                  var r = function (e, t, n, r, i) {
                      (this.dts = e), (this.pts = t), (this.duration = n), (this.originalDts = r), (this.isSyncPoint = i), (this.fileposition = null);
                    },
                    i = (function () {
                      function e() {
                        (this.beginDts = 0),
                          (this.endDts = 0),
                          (this.beginPts = 0),
                          (this.endPts = 0),
                          (this.originalBeginDts = 0),
                          (this.originalEndDts = 0),
                          (this.syncPoints = []),
                          (this.firstSample = null),
                          (this.lastSample = null);
                      }
                      return (
                        (e.prototype.appendSyncPoint = function (e) {
                          (e.isSyncPoint = !0), this.syncPoints.push(e);
                        }),
                        e
                      );
                    })(),
                    a = (function () {
                      function e() {
                        this._list = [];
                      }
                      return (
                        (e.prototype.clear = function () {
                          this._list = [];
                        }),
                        (e.prototype.appendArray = function (e) {
                          var t = this._list;
                          0 !== e.length && (t.length > 0 && e[0].originalDts < t[t.length - 1].originalDts && this.clear(), Array.prototype.push.apply(t, e));
                        }),
                        (e.prototype.getLastSyncPointBeforeDts = function (e) {
                          if (0 == this._list.length) return null;
                          var t = this._list,
                            n = 0,
                            r = t.length - 1,
                            i = 0,
                            a = 0,
                            o = r;
                          for (e < t[0].dts && ((n = 0), (a = o + 1)); a <= o; ) {
                            if ((i = a + Math.floor((o - a) / 2)) === r || (e >= t[i].dts && e < t[i + 1].dts)) {
                              n = i;
                              break;
                            }
                            t[i].dts < e ? (a = i + 1) : (o = i - 1);
                          }
                          return this._list[n];
                        }),
                        e
                      );
                    })(),
                    o = (function () {
                      function e(e) {
                        (this._type = e), (this._list = []), (this._lastAppendLocation = -1);
                      }
                      return (
                        Object.defineProperty(e.prototype, 'type', {
                          get: function () {
                            return this._type;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'length', {
                          get: function () {
                            return this._list.length;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype.isEmpty = function () {
                          return 0 === this._list.length;
                        }),
                        (e.prototype.clear = function () {
                          (this._list = []), (this._lastAppendLocation = -1);
                        }),
                        (e.prototype._searchNearestSegmentBefore = function (e) {
                          var t = this._list;
                          if (0 === t.length) return -2;
                          var n = t.length - 1,
                            r = 0,
                            i = 0,
                            a = n,
                            o = 0;
                          if (e < t[0].originalBeginDts) return -1;
                          for (; i <= a; ) {
                            if ((r = i + Math.floor((a - i) / 2)) === n || (e > t[r].lastSample.originalDts && e < t[r + 1].originalBeginDts)) {
                              o = r;
                              break;
                            }
                            t[r].originalBeginDts < e ? (i = r + 1) : (a = r - 1);
                          }
                          return o;
                        }),
                        (e.prototype._searchNearestSegmentAfter = function (e) {
                          return this._searchNearestSegmentBefore(e) + 1;
                        }),
                        (e.prototype.append = function (e) {
                          var t = this._list,
                            n = e,
                            r = this._lastAppendLocation,
                            i = 0;
                          -1 !== r && r < t.length && n.originalBeginDts >= t[r].lastSample.originalDts && (r === t.length - 1 || (r < t.length - 1 && n.originalBeginDts < t[r + 1].originalBeginDts))
                            ? (i = r + 1)
                            : t.length > 0 && (i = this._searchNearestSegmentBefore(n.originalBeginDts) + 1),
                            (this._lastAppendLocation = i),
                            this._list.splice(i, 0, n);
                        }),
                        (e.prototype.getLastSegmentBefore = function (e) {
                          var t = this._searchNearestSegmentBefore(e);
                          return t >= 0 ? this._list[t] : null;
                        }),
                        (e.prototype.getLastSampleBefore = function (e) {
                          var t = this.getLastSegmentBefore(e);
                          return null != t ? t.lastSample : null;
                        }),
                        (e.prototype.getLastSyncPointBefore = function (e) {
                          for (var t = this._searchNearestSegmentBefore(e), n = this._list[t].syncPoints; 0 === n.length && t > 0; ) t--, (n = this._list[t].syncPoints);
                          return n.length > 0 ? n[n.length - 1] : null;
                        }),
                        e
                      );
                    })();
                },
                function (e, t, n) {
                  'use strict';
                  var r = (function () {
                    function e() {
                      (this.mimeType = null),
                        (this.duration = null),
                        (this.hasAudio = null),
                        (this.hasVideo = null),
                        (this.audioCodec = null),
                        (this.videoCodec = null),
                        (this.audioDataRate = null),
                        (this.videoDataRate = null),
                        (this.audioSampleRate = null),
                        (this.audioChannelCount = null),
                        (this.width = null),
                        (this.height = null),
                        (this.fps = null),
                        (this.profile = null),
                        (this.level = null),
                        (this.refFrames = null),
                        (this.chromaFormat = null),
                        (this.sarNum = null),
                        (this.sarDen = null),
                        (this.metadata = null),
                        (this.segments = null),
                        (this.segmentCount = null),
                        (this.hasKeyframesIndex = null),
                        (this.keyframesIndex = null);
                    }
                    return (
                      (e.prototype.isComplete = function () {
                        var e = !1 === this.hasAudio || (!0 === this.hasAudio && null != this.audioCodec && null != this.audioSampleRate && null != this.audioChannelCount),
                          t =
                            !1 === this.hasVideo ||
                            (!0 === this.hasVideo &&
                              null != this.videoCodec &&
                              null != this.width &&
                              null != this.height &&
                              null != this.fps &&
                              null != this.profile &&
                              null != this.level &&
                              null != this.refFrames &&
                              null != this.chromaFormat &&
                              null != this.sarNum &&
                              null != this.sarDen);
                        return null != this.mimeType && e && t;
                      }),
                      (e.prototype.isSeekable = function () {
                        return !0 === this.hasKeyframesIndex;
                      }),
                      (e.prototype.getNearestKeyframe = function (e) {
                        if (null == this.keyframesIndex) return null;
                        var t = this.keyframesIndex,
                          n = this._search(t.times, e);
                        return { index: n, milliseconds: t.times[n], fileposition: t.filepositions[n] };
                      }),
                      (e.prototype._search = function (e, t) {
                        var n = 0,
                          r = e.length - 1,
                          i = 0,
                          a = 0,
                          o = r;
                        for (t < e[0] && ((n = 0), (a = o + 1)); a <= o; ) {
                          if ((i = a + Math.floor((o - a) / 2)) === r || (t >= e[i] && t < e[i + 1])) {
                            n = i;
                            break;
                          }
                          e[i] < t ? (a = i + 1) : (o = i - 1);
                        }
                        return n;
                      }),
                      e
                    );
                  })();
                  t.a = r;
                },
                function (e, t, n) {
                  'use strict';
                  var r = n(6),
                    i = n.n(r),
                    a = n(0),
                    o = (function () {
                      function e() {}
                      return (
                        Object.defineProperty(e, 'forceGlobalTag', {
                          get: function () {
                            return a.a.FORCE_GLOBAL_TAG;
                          },
                          set: function (t) {
                            (a.a.FORCE_GLOBAL_TAG = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'globalTag', {
                          get: function () {
                            return a.a.GLOBAL_TAG;
                          },
                          set: function (t) {
                            (a.a.GLOBAL_TAG = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableAll', {
                          get: function () {
                            return a.a.ENABLE_VERBOSE && a.a.ENABLE_DEBUG && a.a.ENABLE_INFO && a.a.ENABLE_WARN && a.a.ENABLE_ERROR;
                          },
                          set: function (t) {
                            (a.a.ENABLE_VERBOSE = t), (a.a.ENABLE_DEBUG = t), (a.a.ENABLE_INFO = t), (a.a.ENABLE_WARN = t), (a.a.ENABLE_ERROR = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableDebug', {
                          get: function () {
                            return a.a.ENABLE_DEBUG;
                          },
                          set: function (t) {
                            (a.a.ENABLE_DEBUG = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableVerbose', {
                          get: function () {
                            return a.a.ENABLE_VERBOSE;
                          },
                          set: function (t) {
                            (a.a.ENABLE_VERBOSE = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableInfo', {
                          get: function () {
                            return a.a.ENABLE_INFO;
                          },
                          set: function (t) {
                            (a.a.ENABLE_INFO = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableWarn', {
                          get: function () {
                            return a.a.ENABLE_WARN;
                          },
                          set: function (t) {
                            (a.a.ENABLE_WARN = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e, 'enableError', {
                          get: function () {
                            return a.a.ENABLE_ERROR;
                          },
                          set: function (t) {
                            (a.a.ENABLE_ERROR = t), e._notifyChange();
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.getConfig = function () {
                          return {
                            globalTag: a.a.GLOBAL_TAG,
                            forceGlobalTag: a.a.FORCE_GLOBAL_TAG,
                            enableVerbose: a.a.ENABLE_VERBOSE,
                            enableDebug: a.a.ENABLE_DEBUG,
                            enableInfo: a.a.ENABLE_INFO,
                            enableWarn: a.a.ENABLE_WARN,
                            enableError: a.a.ENABLE_ERROR,
                            enableCallback: a.a.ENABLE_CALLBACK,
                          };
                        }),
                        (e.applyConfig = function (e) {
                          (a.a.GLOBAL_TAG = e.globalTag),
                            (a.a.FORCE_GLOBAL_TAG = e.forceGlobalTag),
                            (a.a.ENABLE_VERBOSE = e.enableVerbose),
                            (a.a.ENABLE_DEBUG = e.enableDebug),
                            (a.a.ENABLE_INFO = e.enableInfo),
                            (a.a.ENABLE_WARN = e.enableWarn),
                            (a.a.ENABLE_ERROR = e.enableError),
                            (a.a.ENABLE_CALLBACK = e.enableCallback);
                        }),
                        (e._notifyChange = function () {
                          var t = e.emitter;
                          if (t.listenerCount('change') > 0) {
                            var n = e.getConfig();
                            t.emit('change', n);
                          }
                        }),
                        (e.registerListener = function (t) {
                          e.emitter.addListener('change', t);
                        }),
                        (e.removeListener = function (t) {
                          e.emitter.removeListener('change', t);
                        }),
                        (e.addLogListener = function (t) {
                          a.a.emitter.addListener('log', t), a.a.emitter.listenerCount('log') > 0 && ((a.a.ENABLE_CALLBACK = !0), e._notifyChange());
                        }),
                        (e.removeLogListener = function (t) {
                          a.a.emitter.removeListener('log', t), 0 === a.a.emitter.listenerCount('log') && ((a.a.ENABLE_CALLBACK = !1), e._notifyChange());
                        }),
                        e
                      );
                    })();
                  (o.emitter = new i.a()), (t.a = o);
                },
                function (e, t, n) {
                  'use strict';
                  var r = n(6),
                    i = n.n(r),
                    a = n(0),
                    o = n(4),
                    l = n(8);
                  function u(e, t, n) {
                    var r = e;
                    if (t + n < r.length) {
                      for (; n--; ) if (128 != (192 & r[++t])) return !1;
                      return !0;
                    }
                    return !1;
                  }
                  var c,
                    d = function (e) {
                      for (var t = [], n = e, r = 0, i = e.length; r < i; )
                        if (n[r] < 128) t.push(String.fromCharCode(n[r])), ++r;
                        else {
                          if (n[r] < 192);
                          else if (n[r] < 224) {
                            if (u(n, r, 1) && (a = ((31 & n[r]) << 6) | (63 & n[r + 1])) >= 128) {
                              t.push(String.fromCharCode(65535 & a)), (r += 2);
                              continue;
                            }
                          } else if (n[r] < 240) {
                            if (u(n, r, 2) && (a = ((15 & n[r]) << 12) | ((63 & n[r + 1]) << 6) | (63 & n[r + 2])) >= 2048 && 55296 != (63488 & a)) {
                              t.push(String.fromCharCode(65535 & a)), (r += 3);
                              continue;
                            }
                          } else if (n[r] < 248) {
                            var a;
                            if (u(n, r, 3) && (a = ((7 & n[r]) << 18) | ((63 & n[r + 1]) << 12) | ((63 & n[r + 2]) << 6) | (63 & n[r + 3])) > 65536 && a < 1114112) {
                              (a -= 65536), t.push(String.fromCharCode((a >>> 10) | 55296)), t.push(String.fromCharCode((1023 & a) | 56320)), (r += 4);
                              continue;
                            }
                          }
                          t.push(String.fromCharCode(65533)), ++r;
                        }
                      return t.join('');
                    },
                    f = n(3),
                    h = ((c = new ArrayBuffer(2)), new DataView(c).setInt16(0, 256, !0), 256 === new Int16Array(c)[0]),
                    p = (function () {
                      function e() {}
                      return (
                        (e.parseScriptData = function (t, n, r) {
                          var i = {};
                          try {
                            var o = e.parseValue(t, n, r),
                              s = e.parseValue(t, n + o.size, r - o.size);
                            i[o.data] = s.data;
                          } catch (e) {
                            a.a.e('AMF', e.toString());
                          }
                          return i;
                        }),
                        (e.parseObject = function (t, n, r) {
                          if (r < 3) throw new f.a('Data not enough when parse ScriptDataObject');
                          var i = e.parseString(t, n, r),
                            a = e.parseValue(t, n + i.size, r - i.size),
                            o = a.objectEnd;
                          return { data: { name: i.data, value: a.data }, size: i.size + a.size, objectEnd: o };
                        }),
                        (e.parseVariable = function (t, n, r) {
                          return e.parseObject(t, n, r);
                        }),
                        (e.parseString = function (e, t, n) {
                          if (n < 2) throw new f.a('Data not enough when parse String');
                          var r = new DataView(e, t, n).getUint16(0, !h);
                          return { data: r > 0 ? d(new Uint8Array(e, t + 2, r)) : '', size: 2 + r };
                        }),
                        (e.parseLongString = function (e, t, n) {
                          if (n < 4) throw new f.a('Data not enough when parse LongString');
                          var r = new DataView(e, t, n).getUint32(0, !h);
                          return { data: r > 0 ? d(new Uint8Array(e, t + 4, r)) : '', size: 4 + r };
                        }),
                        (e.parseDate = function (e, t, n) {
                          if (n < 10) throw new f.a('Data size invalid when parse Date');
                          var r = new DataView(e, t, n),
                            i = r.getFloat64(0, !h),
                            a = r.getInt16(8, !h);
                          return { data: new Date((i += 60 * a * 1e3)), size: 10 };
                        }),
                        (e.parseValue = function (t, n, r) {
                          if (r < 1) throw new f.a('Data not enough when parse Value');
                          var i,
                            o = new DataView(t, n, r),
                            s = 1,
                            l = o.getUint8(0),
                            u = !1;
                          try {
                            switch (l) {
                              case 0:
                                (i = o.getFloat64(1, !h)), (s += 8);
                                break;
                              case 1:
                                (i = !!o.getUint8(1)), (s += 1);
                                break;
                              case 2:
                                var c = e.parseString(t, n + 1, r - 1);
                                (i = c.data), (s += c.size);
                                break;
                              case 3:
                                i = {};
                                var d = 0;
                                for (9 == (16777215 & o.getUint32(r - 4, !h)) && (d = 3); s < r - 4; ) {
                                  var p = e.parseObject(t, n + s, r - s - d);
                                  if (p.objectEnd) break;
                                  (i[p.data.name] = p.data.value), (s += p.size);
                                }
                                s <= r - 3 && 9 == (16777215 & o.getUint32(s - 1, !h)) && (s += 3);
                                break;
                              case 8:
                                for (i = {}, s += 4, d = 0, 9 == (16777215 & o.getUint32(r - 4, !h)) && (d = 3); s < r - 8; ) {
                                  var v = e.parseVariable(t, n + s, r - s - d);
                                  if (v.objectEnd) break;
                                  (i[v.data.name] = v.data.value), (s += v.size);
                                }
                                s <= r - 3 && 9 == (16777215 & o.getUint32(s - 1, !h)) && (s += 3);
                                break;
                              case 9:
                                (i = void 0), (s = 1), (u = !0);
                                break;
                              case 10:
                                i = [];
                                var m = o.getUint32(1, !h);
                                s += 4;
                                for (var g = 0; g < m; g++) {
                                  var y = e.parseValue(t, n + s, r - s);
                                  i.push(y.data), (s += y.size);
                                }
                                break;
                              case 11:
                                var _ = e.parseDate(t, n + 1, r - 1);
                                (i = _.data), (s += _.size);
                                break;
                              case 12:
                                var b = e.parseString(t, n + 1, r - 1);
                                (i = b.data), (s += b.size);
                                break;
                              default:
                                (s = r), a.a.w('AMF', 'Unsupported AMF value type ' + l);
                            }
                          } catch (e) {
                            a.a.e('AMF', e.toString());
                          }
                          return { data: i, size: s, objectEnd: u };
                        }),
                        e
                      );
                    })(),
                    v = (function () {
                      function e(e) {
                        (this.TAG = 'ExpGolomb'),
                          (this._buffer = e),
                          (this._buffer_index = 0),
                          (this._total_bytes = e.byteLength),
                          (this._total_bits = 8 * e.byteLength),
                          (this._current_word = 0),
                          (this._current_word_bits_left = 0);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          this._buffer = null;
                        }),
                        (e.prototype._fillCurrentWord = function () {
                          var e = this._total_bytes - this._buffer_index;
                          if (e <= 0) throw new f.a('ExpGolomb: _fillCurrentWord() but no bytes available');
                          var t = Math.min(4, e),
                            n = new Uint8Array(4);
                          n.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)),
                            (this._current_word = new DataView(n.buffer).getUint32(0, !1)),
                            (this._buffer_index += t),
                            (this._current_word_bits_left = 8 * t);
                        }),
                        (e.prototype.readBits = function (e) {
                          if (e > 32) throw new f.b('ExpGolomb: readBits() bits exceeded max 32bits!');
                          if (e <= this._current_word_bits_left) {
                            var t = this._current_word >>> (32 - e);
                            return (this._current_word <<= e), (this._current_word_bits_left -= e), t;
                          }
                          var n = this._current_word_bits_left ? this._current_word : 0;
                          n >>>= 32 - this._current_word_bits_left;
                          var r = e - this._current_word_bits_left;
                          this._fillCurrentWord();
                          var i = Math.min(r, this._current_word_bits_left),
                            a = this._current_word >>> (32 - i);
                          return (this._current_word <<= i), (this._current_word_bits_left -= i), (n << i) | a;
                        }),
                        (e.prototype.readBool = function () {
                          return 1 === this.readBits(1);
                        }),
                        (e.prototype.readByte = function () {
                          return this.readBits(8);
                        }),
                        (e.prototype._skipLeadingZero = function () {
                          var e;
                          for (e = 0; e < this._current_word_bits_left; e++)
                            if (0 != (this._current_word & (2147483648 >>> e))) return (this._current_word <<= e), (this._current_word_bits_left -= e), e;
                          return this._fillCurrentWord(), e + this._skipLeadingZero();
                        }),
                        (e.prototype.readUEG = function () {
                          var e = this._skipLeadingZero();
                          return this.readBits(e + 1) - 1;
                        }),
                        (e.prototype.readSEG = function () {
                          var e = this.readUEG();
                          return 1 & e ? (e + 1) >>> 1 : -1 * (e >>> 1);
                        }),
                        e
                      );
                    })(),
                    m = (function () {
                      function e() {}
                      return (
                        (e._ebsp2rbsp = function (e) {
                          for (var t = e, n = t.byteLength, r = new Uint8Array(n), i = 0, a = 0; a < n; a++) (a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2]) || ((r[i] = t[a]), i++);
                          return new Uint8Array(r.buffer, 0, i);
                        }),
                        (e.parseSPS = function (t) {
                          for (var n = t.subarray(1, 4), r = 'avc1.', i = 0; i < 3; i++) {
                            var a = n[i].toString(16);
                            a.length < 2 && (a = '0' + a), (r += a);
                          }
                          var o = e._ebsp2rbsp(t),
                            s = new v(o);
                          s.readByte();
                          var l = s.readByte();
                          s.readByte();
                          var u = s.readByte();
                          s.readUEG();
                          var c = e.getProfileString(l),
                            d = e.getLevelString(u),
                            f = 1,
                            h = 420,
                            p = 8,
                            m = 8;
                          if (
                            (100 === l || 110 === l || 122 === l || 244 === l || 44 === l || 83 === l || 86 === l || 118 === l || 128 === l || 138 === l || 144 === l) &&
                            (3 === (f = s.readUEG()) && s.readBits(1), f <= 3 && (h = [0, 420, 422, 444][f]), (p = s.readUEG() + 8), (m = s.readUEG() + 8), s.readBits(1), s.readBool())
                          )
                            for (var g = 3 !== f ? 8 : 12, y = 0; y < g; y++) s.readBool() && (y < 6 ? e._skipScalingList(s, 16) : e._skipScalingList(s, 64));
                          s.readUEG();
                          var _ = s.readUEG();
                          if (0 === _) s.readUEG();
                          else if (1 === _) {
                            s.readBits(1), s.readSEG(), s.readSEG();
                            var b = s.readUEG();
                            for (y = 0; y < b; y++) s.readSEG();
                          }
                          var E = s.readUEG();
                          s.readBits(1);
                          var S = s.readUEG(),
                            k = s.readUEG(),
                            T = s.readBits(1);
                          0 === T && s.readBits(1), s.readBits(1);
                          var w = 0,
                            A = 0,
                            L = 0,
                            R = 0;
                          s.readBool() && ((w = s.readUEG()), (A = s.readUEG()), (L = s.readUEG()), (R = s.readUEG()));
                          var C = 1,
                            x = 1,
                            D = 0,
                            I = !0,
                            M = 0,
                            P = 0;
                          if (s.readBool()) {
                            if (s.readBool()) {
                              var O = s.readByte();
                              O > 0 && O < 16
                                ? ((C = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][O - 1]), (x = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][O - 1]))
                                : 255 === O && ((C = (s.readByte() << 8) | s.readByte()), (x = (s.readByte() << 8) | s.readByte()));
                            }
                            if ((s.readBool() && s.readBool(), s.readBool() && (s.readBits(4), s.readBool() && s.readBits(24)), s.readBool() && (s.readUEG(), s.readUEG()), s.readBool())) {
                              var F = s.readBits(32),
                                N = s.readBits(32);
                              (I = s.readBool()), (D = (M = N) / (P = 2 * F));
                            }
                          }
                          var B = 1;
                          (1 === C && 1 === x) || (B = C / x);
                          var U = 0,
                            z = 0;
                          0 === f ? ((U = 1), (z = 2 - T)) : ((U = 3 === f ? 1 : 2), (z = (1 === f ? 2 : 1) * (2 - T)));
                          var H = 16 * (S + 1),
                            V = 16 * (k + 1) * (2 - T);
                          (H -= (w + A) * U), (V -= (L + R) * z);
                          var G = Math.ceil(H * B);
                          return (
                            s.destroy(),
                            (s = null),
                            {
                              codec_mimetype: r,
                              profile_idc: l,
                              level_idc: u,
                              profile_string: c,
                              level_string: d,
                              chroma_format_idc: f,
                              bit_depth: p,
                              bit_depth_luma: p,
                              bit_depth_chroma: m,
                              ref_frames: E,
                              chroma_format: h,
                              chroma_format_string: e.getChromaFormatString(h),
                              frame_rate: { fixed: I, fps: D, fps_den: P, fps_num: M },
                              sar_ratio: { width: C, height: x },
                              codec_size: { width: H, height: V },
                              present_size: { width: G, height: V },
                            }
                          );
                        }),
                        (e._skipScalingList = function (e, t) {
                          for (var n = 8, r = 8, i = 0; i < t; i++) 0 !== r && (r = (n + e.readSEG() + 256) % 256), (n = 0 === r ? n : r);
                        }),
                        (e.getProfileString = function (e) {
                          switch (e) {
                            case 66:
                              return 'Baseline';
                            case 77:
                              return 'Main';
                            case 88:
                              return 'Extended';
                            case 100:
                              return 'High';
                            case 110:
                              return 'High10';
                            case 122:
                              return 'High422';
                            case 244:
                              return 'High444';
                            default:
                              return 'Unknown';
                          }
                        }),
                        (e.getLevelString = function (e) {
                          return (e / 10).toFixed(1);
                        }),
                        (e.getChromaFormatString = function (e) {
                          switch (e) {
                            case 420:
                              return '4:2:0';
                            case 422:
                              return '4:2:2';
                            case 444:
                              return '4:4:4';
                            default:
                              return 'Unknown';
                          }
                        }),
                        e
                      );
                    })(),
                    g = n(5),
                    y = (function () {
                      function e() {}
                      return (
                        (e._ebsp2rbsp = function (e) {
                          for (var t = e, n = t.byteLength, r = new Uint8Array(n), i = 0, a = 0; a < n; a++) (a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2]) || ((r[i] = t[a]), i++);
                          return new Uint8Array(r.buffer, 0, i);
                        }),
                        (e.parseVPS = function (t) {
                          var n = e._ebsp2rbsp(t),
                            r = new v(n);
                          return r.readByte(), r.readByte(), r.readBits(4), r.readBits(2), r.readBits(6), { num_temporal_layers: r.readBits(3) + 1, temporal_id_nested: r.readBool() };
                        }),
                        (e.parseSPS = function (t) {
                          var n = e._ebsp2rbsp(t),
                            r = new v(n);
                          r.readByte(), r.readByte();
                          for (
                            var i = 0,
                              a = 0,
                              o = 0,
                              s = 0,
                              l = (r.readBits(4), r.readBits(3)),
                              u = (r.readBool(), r.readBits(2)),
                              c = r.readBool(),
                              d = r.readBits(5),
                              f = r.readByte(),
                              h = r.readByte(),
                              p = r.readByte(),
                              m = r.readByte(),
                              g = r.readByte(),
                              y = r.readByte(),
                              _ = r.readByte(),
                              b = r.readByte(),
                              E = r.readByte(),
                              S = r.readByte(),
                              k = r.readByte(),
                              T = [],
                              w = [],
                              A = 0;
                            A < l;
                            A++
                          )
                            T.push(r.readBool()), w.push(r.readBool());
                          if (l > 0) for (A = l; A < 8; A++) r.readBits(2);
                          for (A = 0; A < l; A++)
                            T[A] && (r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte(), r.readByte()),
                              w[A] && r.readByte();
                          r.readUEG();
                          var L = r.readUEG();
                          3 == L && r.readBits(1);
                          var R = r.readUEG(),
                            C = r.readUEG();
                          r.readBool() && ((i += r.readUEG()), (a += r.readUEG()), (o += r.readUEG()), (s += r.readUEG()));
                          var x = r.readUEG(),
                            D = r.readUEG(),
                            I = r.readUEG();
                          for (A = r.readBool() ? 0 : l; A <= l; A++) r.readUEG(), r.readUEG(), r.readUEG();
                          if ((r.readUEG(), r.readUEG(), r.readUEG(), r.readUEG(), r.readUEG(), r.readUEG(), r.readBool() && r.readBool()))
                            for (var M = 0; M < 4; M++)
                              for (var P = 0; P < (3 === M ? 2 : 6); P++)
                                if (r.readBool()) {
                                  var O = Math.min(64, 1 << (4 + (M << 1)));
                                  for (M > 1 && r.readSEG(), A = 0; A < O; A++) r.readSEG();
                                } else r.readUEG();
                          r.readBool(), r.readBool(), r.readBool() && (r.readByte(), r.readUEG(), r.readUEG(), r.readBool());
                          var F = r.readUEG(),
                            N = 0;
                          for (A = 0; A < F; A++) {
                            var B = !1;
                            if ((0 !== A && (B = r.readBool()), B)) {
                              A === F && r.readUEG(), r.readBool(), r.readUEG();
                              for (var U = 0, z = 0; z <= N; z++) {
                                var H = r.readBool(),
                                  V = !1;
                                H || (V = r.readBool()), (H || V) && U++;
                              }
                              N = U;
                            } else {
                              var G = r.readUEG(),
                                j = r.readUEG();
                              for (N = G + j, z = 0; z < G; z++) r.readUEG(), r.readBool();
                              for (z = 0; z < j; z++) r.readUEG(), r.readBool();
                            }
                          }
                          if (r.readBool()) {
                            var K = r.readUEG();
                            for (A = 0; A < K; A++) {
                              for (z = 0; z < I + 4; z++) r.readBits(1);
                              r.readBits(1);
                            }
                          }
                          var W = 0,
                            q = 1,
                            Y = 1,
                            X = !1,
                            $ = 1,
                            Q = 1;
                          if ((r.readBool(), r.readBool(), r.readBool())) {
                            if (r.readBool()) {
                              var Z = r.readByte();
                              Z > 0 && Z <= 16
                                ? ((q = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][Z - 1]), (Y = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][Z - 1]))
                                : 255 === Z && ((q = r.readBits(16)), (Y = r.readBits(16)));
                            }
                            if (
                              (r.readBool() && r.readBool(),
                              r.readBool() && (r.readBits(3), r.readBool(), r.readBool() && (r.readByte(), r.readByte(), r.readByte())),
                              r.readBool() && (r.readUEG(), r.readUEG()),
                              r.readBool(),
                              r.readBool(),
                              r.readBool(),
                              r.readBool() && (r.readUEG(), r.readUEG(), r.readUEG(), r.readUEG()),
                              r.readBool() && (($ = r.readBits(32)), (Q = r.readBits(32)), r.readBool() && (r.readUEG(), r.readBool())))
                            ) {
                              var J,
                                ee,
                                te = !1;
                              for (
                                J = r.readBool(),
                                  ee = r.readBool(),
                                  (J || ee) &&
                                    ((te = r.readBool()) && (r.readByte(), r.readBits(5), r.readBool(), r.readBits(5)),
                                    r.readBits(4),
                                    r.readBits(4),
                                    te && r.readBits(4),
                                    r.readBits(5),
                                    r.readBits(5),
                                    r.readBits(5)),
                                  A = 0;
                                A <= l;
                                A++
                              ) {
                                var ne = r.readBool();
                                X = ne;
                                var re = !1,
                                  ie = 1;
                                ne || (re = r.readBool());
                                var ae = !1;
                                if ((re ? r.readSEG() : (ae = r.readBool()), ae || (ie = r.readUEG() + 1), J)) for (z = 0; z < ie; z++) r.readUEG(), r.readUEG(), te && (r.readUEG(), r.readUEG());
                                if (ee) for (z = 0; z < ie; z++) r.readUEG(), r.readUEG(), te && (r.readUEG(), r.readUEG());
                              }
                            }
                            r.readBool() && (r.readBool(), r.readBool(), r.readBool(), (W = r.readUEG()), r.readUEG(), r.readUEG(), r.readUEG(), r.readUEG());
                          }
                          r.readBool();
                          var oe = 'hvc1.' + d + '.1.L' + k + '.B0',
                            se = R - (i + a) * (1 === L || 2 === L ? 2 : 1),
                            le = C - (o + s) * (1 === L ? 2 : 1),
                            ue = 1;
                          return (
                            1 !== q && 1 !== Y && (ue = q / Y),
                            r.destroy(),
                            (r = null),
                            {
                              codec_mimetype: oe,
                              level_string: e.getLevelString(k),
                              profile_idc: d,
                              bit_depth: x + 8,
                              ref_frames: 1,
                              chroma_format: L,
                              chroma_format_string: e.getChromaFormatString(L),
                              general_level_idc: k,
                              general_profile_space: u,
                              general_tier_flag: c,
                              general_profile_idc: d,
                              general_profile_compatibility_flags_1: f,
                              general_profile_compatibility_flags_2: h,
                              general_profile_compatibility_flags_3: p,
                              general_profile_compatibility_flags_4: m,
                              general_constraint_indicator_flags_1: g,
                              general_constraint_indicator_flags_2: y,
                              general_constraint_indicator_flags_3: _,
                              general_constraint_indicator_flags_4: b,
                              general_constraint_indicator_flags_5: E,
                              general_constraint_indicator_flags_6: S,
                              min_spatial_segmentation_idc: W,
                              constant_frame_rate: 0,
                              chroma_format_idc: L,
                              bit_depth_luma_minus8: x,
                              bit_depth_chroma_minus8: D,
                              frame_rate: { fixed: X, fps: Q / $, fps_den: $, fps_num: Q },
                              sar_ratio: { width: q, height: Y },
                              codec_size: { width: se, height: le },
                              present_size: { width: se * ue, height: le },
                            }
                          );
                        }),
                        (e.parsePPS = function (t) {
                          var n = e._ebsp2rbsp(t),
                            r = new v(n);
                          r.readByte(),
                            r.readByte(),
                            r.readUEG(),
                            r.readUEG(),
                            r.readBool(),
                            r.readBool(),
                            r.readBits(3),
                            r.readBool(),
                            r.readBool(),
                            r.readUEG(),
                            r.readUEG(),
                            r.readSEG(),
                            r.readBool(),
                            r.readBool(),
                            r.readBool() && r.readUEG(),
                            r.readSEG(),
                            r.readSEG(),
                            r.readBool(),
                            r.readBool(),
                            r.readBool(),
                            r.readBool();
                          var i = r.readBool(),
                            a = r.readBool(),
                            o = 1;
                          return a && i ? (o = 0) : a ? (o = 3) : i && (o = 2), { parallelismType: o };
                        }),
                        (e.getChromaFormatString = function (e) {
                          switch (e) {
                            case 0:
                              return '4:0:0';
                            case 1:
                              return '4:2:0';
                            case 2:
                              return '4:2:2';
                            case 3:
                              return '4:4:4';
                            default:
                              return 'Unknown';
                          }
                        }),
                        (e.getProfileString = function (e) {
                          switch (e) {
                            case 1:
                              return 'Main';
                            case 2:
                              return 'Main10';
                            case 3:
                              return 'MainSP';
                            case 4:
                              return 'Rext';
                            case 9:
                              return 'SCC';
                            default:
                              return 'Unknown';
                          }
                        }),
                        (e.getLevelString = function (e) {
                          return (e / 30).toFixed(1);
                        }),
                        e
                      );
                    })();
                  function _(e) {
                    return e.byteOffset % 2 == 0 && e.byteLength % 2 == 0;
                  }
                  function b(e) {
                    return e.byteOffset % 4 == 0 && e.byteLength % 4 == 0;
                  }
                  function E(e, t) {
                    for (var n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
                    return !0;
                  }
                  var S,
                    k = function (e, t) {
                      return (
                        e.byteLength === t.byteLength &&
                        (b(e) && b(t)
                          ? (function (e, t) {
                              return E(new Uint32Array(e.buffer, e.byteOffset, e.byteLength / 4), new Uint32Array(t.buffer, t.byteOffset, t.byteLength / 4));
                            })(e, t)
                          : _(e) && _(t)
                          ? (function (e, t) {
                              return E(new Uint16Array(e.buffer, e.byteOffset, e.byteLength / 2), new Uint16Array(t.buffer, t.byteOffset, t.byteLength / 2));
                            })(e, t)
                          : (function (e, t) {
                              return E(e, t);
                            })(e, t))
                      );
                    },
                    T = n(14),
                    w = n.n(T),
                    A = [106, 124, 187, 145, 175, 115, 1, 163, 90, 207, 91, 53, 162, 95, 152, 223],
                    L = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    R = (function () {
                      function e(e, t) {
                        (this.TAG = 'FLVDemuxer'),
                          (this._config = t),
                          (this._onError = null),
                          (this._onMediaInfo = null),
                          (this._onMetaDataArrived = null),
                          (this._onScriptDataArrived = null),
                          (this._onTrackMetadata = null),
                          (this._onDataAvailable = null),
                          (this._dataOffset = e.dataOffset),
                          (this._firstParse = !0),
                          (this._dispatch = !1),
                          (this._hasAudio = e.hasAudioTrack),
                          (this._hasVideo = e.hasVideoTrack),
                          (this._hasAudioFlagOverrided = !1),
                          (this._hasVideoFlagOverrided = !1),
                          (this._audioInitialMetadataDispatched = !1),
                          (this._videoInitialMetadataDispatched = !1),
                          (this._mediaInfo = new l.a()),
                          (this._mediaInfo.hasAudio = this._hasAudio),
                          (this._mediaInfo.hasVideo = this._hasVideo),
                          (this._metadata = null),
                          (this._audioMetadata = null),
                          (this._videoMetadata = null),
                          (this._naluLengthSize = 4),
                          (this._timestampBase = 0),
                          (this._timescale = 1e3),
                          (this._duration = 0),
                          (this._durationOverrided = !1),
                          (this._referenceFrameRate = { fixed: !0, fps: 23.976, fps_num: 23976, fps_den: 1e3 }),
                          (this._flvSoundRateTable = [5500, 11025, 22050, 44100, 48e3]),
                          (this._mpegSamplingRates = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]),
                          (this._mpegAudioV10SampleRateTable = [44100, 48e3, 32e3, 0]),
                          (this._mpegAudioV20SampleRateTable = [22050, 24e3, 16e3, 0]),
                          (this._mpegAudioV25SampleRateTable = [11025, 12e3, 8e3, 0]),
                          (this._mpegAudioL1BitRateTable = [0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, -1]),
                          (this._mpegAudioL2BitRateTable = [0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, -1]),
                          (this._mpegAudioL3BitRateTable = [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1]),
                          (this._videoTrack = { type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0 }),
                          (this._audioTrack = { type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0 }),
                          (this._littleEndian = (function () {
                            var e = new ArrayBuffer(2);
                            return new DataView(e).setInt16(0, 256, !0), 256 === new Int16Array(e)[0];
                          })());
                      }
                      return (
                        (e.prototype.destroy = function () {
                          (this._mediaInfo = null),
                            (this._metadata = null),
                            (this._audioMetadata = null),
                            (this._videoMetadata = null),
                            (this._videoTrack = null),
                            (this._audioTrack = null),
                            (this._onError = null),
                            (this._onMediaInfo = null),
                            (this._onMetaDataArrived = null),
                            (this._onScriptDataArrived = null),
                            (this._onTrackMetadata = null),
                            (this._onDataAvailable = null);
                        }),
                        (e.probe = function (e) {
                          var t = new Uint8Array(e);
                          if (t.byteLength < 9) return { needMoreData: !0 };
                          var n = { match: !1 };
                          if (70 !== t[0] || 76 !== t[1] || 86 !== t[2] || 1 !== t[3]) return n;
                          var r,
                            i = (4 & t[4]) >>> 2 != 0,
                            a = 0 != (1 & t[4]),
                            o = ((r = t)[5] << 24) | (r[6] << 16) | (r[7] << 8) | r[8];
                          return o < 9 ? n : { match: !0, consumed: o, dataOffset: o, hasAudioTrack: i, hasVideoTrack: a };
                        }),
                        (e.prototype.bindDataSource = function (e) {
                          return (e.onDataArrival = this.parseChunks.bind(this)), this;
                        }),
                        Object.defineProperty(e.prototype, 'onTrackMetadata', {
                          get: function () {
                            return this._onTrackMetadata;
                          },
                          set: function (e) {
                            this._onTrackMetadata = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onMediaInfo', {
                          get: function () {
                            return this._onMediaInfo;
                          },
                          set: function (e) {
                            this._onMediaInfo = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onMetaDataArrived', {
                          get: function () {
                            return this._onMetaDataArrived;
                          },
                          set: function (e) {
                            this._onMetaDataArrived = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onScriptDataArrived', {
                          get: function () {
                            return this._onScriptDataArrived;
                          },
                          set: function (e) {
                            this._onScriptDataArrived = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onError', {
                          get: function () {
                            return this._onError;
                          },
                          set: function (e) {
                            this._onError = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onDataAvailable', {
                          get: function () {
                            return this._onDataAvailable;
                          },
                          set: function (e) {
                            this._onDataAvailable = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'timestampBase', {
                          get: function () {
                            return this._timestampBase;
                          },
                          set: function (e) {
                            this._timestampBase = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'overridedDuration', {
                          get: function () {
                            return this._duration;
                          },
                          set: function (e) {
                            (this._durationOverrided = !0), (this._duration = e), (this._mediaInfo.duration = e);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'overridedHasAudio', {
                          set: function (e) {
                            (this._hasAudioFlagOverrided = !0), (this._hasAudio = e), (this._mediaInfo.hasAudio = e);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'overridedHasVideo', {
                          set: function (e) {
                            (this._hasVideoFlagOverrided = !0), (this._hasVideo = e), (this._mediaInfo.hasVideo = e);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype.resetMediaInfo = function () {
                          this._mediaInfo = new l.a();
                        }),
                        (e.prototype._isInitialMetadataDispatched = function () {
                          return this._hasAudio && this._hasVideo
                            ? this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched
                            : this._hasAudio && !this._hasVideo
                            ? this._audioInitialMetadataDispatched
                            : !(this._hasAudio || !this._hasVideo) && this._videoInitialMetadataDispatched;
                        }),
                        (e.prototype.parseChunks = function (t, n) {
                          if (!(this._onError && this._onMediaInfo && this._onTrackMetadata && this._onDataAvailable))
                            throw new f.a('Flv: onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');
                          var r = 0,
                            i = this._littleEndian;
                          if (0 === n) {
                            if (!(t.byteLength > 13)) return 0;
                            r = e.probe(t).dataOffset;
                          }
                          for (
                            this._firstParse &&
                            ((this._firstParse = !1),
                            n + r !== this._dataOffset && a.a.w(this.TAG, 'First time parsing but chunk byteStart invalid!'),
                            0 !== (o = new DataView(t, r)).getUint32(0, !i) && a.a.w(this.TAG, 'PrevTagSize0 !== 0 !!!'),
                            (r += 4));
                            r < t.byteLength;

                          ) {
                            this._dispatch = !0;
                            var o = new DataView(t, r);
                            if (r + 11 + 4 > t.byteLength) break;
                            var s = o.getUint8(0),
                              l = 16777215 & o.getUint32(0, !i);
                            if (r + 11 + l + 4 > t.byteLength) break;
                            if (8 === s || 9 === s || 18 === s) {
                              var u = o.getUint8(4),
                                c = o.getUint8(5),
                                d = o.getUint8(6) | (c << 8) | (u << 16) | (o.getUint8(7) << 24);
                              0 != (16777215 & o.getUint32(7, !i)) && a.a.w(this.TAG, 'Meet tag which has StreamID != 0!');
                              var h = r + 11;
                              switch (s) {
                                case 8:
                                  this._parseAudioData(t, h, l, d);
                                  break;
                                case 9:
                                  this._parseVideoData(t, h, l, d, n + r);
                                  break;
                                case 18:
                                  this._parseScriptData(t, h, l);
                              }
                              var p = o.getUint32(11 + l, !i);
                              p !== 11 + l && a.a.w(this.TAG, 'Invalid PrevTagSize ' + p), (r += 11 + l + 4);
                            } else a.a.w(this.TAG, 'Unsupported tag type ' + s + ', skipped'), (r += 11 + l + 4);
                          }
                          return (
                            this._isInitialMetadataDispatched() && this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack),
                            r
                          );
                        }),
                        (e.prototype._parseScriptData = function (e, t, n) {
                          var r = p.parseScriptData(e, t, n);
                          if (r.hasOwnProperty('onMetaData')) {
                            if (null == r.onMetaData || 'object' != s(r.onMetaData)) return void a.a.w(this.TAG, 'Invalid onMetaData structure!');
                            this._metadata && a.a.w(this.TAG, 'Found another onMetaData tag!'), (this._metadata = r);
                            var i = this._metadata.onMetaData;
                            if (
                              (this._onMetaDataArrived && this._onMetaDataArrived(Object.assign({}, i)),
                              'boolean' == typeof i.hasAudio && !1 === this._hasAudioFlagOverrided && ((this._hasAudio = i.hasAudio), (this._mediaInfo.hasAudio = this._hasAudio)),
                              'boolean' == typeof i.hasVideo && !1 === this._hasVideoFlagOverrided && ((this._hasVideo = i.hasVideo), (this._mediaInfo.hasVideo = this._hasVideo)),
                              'number' == typeof i.audiodatarate && (this._mediaInfo.audioDataRate = i.audiodatarate),
                              'number' == typeof i.videodatarate && (this._mediaInfo.videoDataRate = i.videodatarate),
                              'number' == typeof i.width && (this._mediaInfo.width = i.width),
                              'number' == typeof i.height && (this._mediaInfo.height = i.height),
                              'number' == typeof i.duration)
                            ) {
                              if (!this._durationOverrided) {
                                var o = Math.floor(i.duration * this._timescale);
                                (this._duration = o), (this._mediaInfo.duration = o);
                              }
                            } else this._mediaInfo.duration = 0;
                            if ('number' == typeof i.framerate) {
                              var l = Math.floor(1e3 * i.framerate);
                              if (l > 0) {
                                var u = l / 1e3;
                                (this._referenceFrameRate.fixed = !0),
                                  (this._referenceFrameRate.fps = u),
                                  (this._referenceFrameRate.fps_num = l),
                                  (this._referenceFrameRate.fps_den = 1e3),
                                  (this._mediaInfo.fps = u);
                              }
                            }
                            if ('object' == s(i.keyframes)) {
                              this._mediaInfo.hasKeyframesIndex = !0;
                              var c = i.keyframes;
                              (this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(c)), (i.keyframes = null);
                            } else this._mediaInfo.hasKeyframesIndex = !1;
                            (this._dispatch = !1), (this._mediaInfo.metadata = i), a.a.v(this.TAG, 'Parsed onMetaData'), this._mediaInfo.isComplete() && this._onMediaInfo(this._mediaInfo);
                          }
                          Object.keys(r).length > 0 && this._onScriptDataArrived && this._onScriptDataArrived(Object.assign({}, r));
                        }),
                        (e.prototype._parseKeyframesIndex = function (e) {
                          for (var t = [], n = [], r = 1; r < e.times.length; r++) {
                            var i = this._timestampBase + Math.floor(1e3 * e.times[r]);
                            t.push(i), n.push(e.filepositions[r]);
                          }
                          return { times: t, filepositions: n };
                        }),
                        (e.prototype._parseAudioData = function (e, t, n, r) {
                          if (n <= 1) a.a.w(this.TAG, 'Flv: Invalid audio packet, missing SoundData payload!');
                          else if (!0 !== this._hasAudioFlagOverrided || !1 !== this._hasAudio) {
                            this._littleEndian;
                            var i = new DataView(e, t, n).getUint8(0),
                              o = i >>> 4;
                            if (2 === o || 10 === o) {
                              var s = 0,
                                l = (12 & i) >>> 2;
                              if (l >= 0 && l <= 4) {
                                s = this._flvSoundRateTable[l];
                                var u = 1 & i,
                                  c = this._audioMetadata,
                                  d = this._audioTrack;
                                if (
                                  (c ||
                                    (!1 === this._hasAudio && !1 === this._hasAudioFlagOverrided && ((this._hasAudio = !0), (this._mediaInfo.hasAudio = !0)),
                                    ((c = this._audioMetadata = {}).type = 'audio'),
                                    (c.id = d.id),
                                    (c.timescale = this._timescale),
                                    (c.duration = this._duration),
                                    (c.audioSampleRate = s),
                                    (c.channelCount = 0 === u ? 1 : 2)),
                                  10 === o)
                                ) {
                                  var f = this._parseAACAudioData(e, t + 1, n - 1);
                                  if (null == f) return;
                                  if (0 === f.packetType) {
                                    if (c.config) {
                                      if (k(f.data.config, c.config)) return;
                                      a.a.w(this.TAG, 'AudioSpecificConfig has been changed, re-generate initialization segment');
                                    }
                                    var h = f.data;
                                    (c.audioSampleRate = h.samplingRate),
                                      (c.channelCount = h.channelCount),
                                      (c.codec = h.codec),
                                      (c.originalCodec = h.originalCodec),
                                      (c.config = h.config),
                                      (c.refSampleDuration = (1024 / c.audioSampleRate) * c.timescale),
                                      a.a.v(this.TAG, 'Parsed AudioSpecificConfig'),
                                      this._isInitialMetadataDispatched()
                                        ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack)
                                        : (this._audioInitialMetadataDispatched = !0),
                                      (this._dispatch = !1),
                                      this._onTrackMetadata('audio', c),
                                      ((m = this._mediaInfo).audioCodec = c.originalCodec),
                                      (m.audioSampleRate = c.audioSampleRate),
                                      (m.audioChannelCount = c.channelCount),
                                      m.hasVideo
                                        ? null != m.videoCodec && (m.mimeType = 'video/x-flv; codecs="' + m.videoCodec + ',' + m.audioCodec + '"')
                                        : (m.mimeType = 'video/x-flv; codecs="' + m.audioCodec + '"'),
                                      m.isComplete() && this._onMediaInfo(m);
                                  } else if (1 === f.packetType) {
                                    var p = this._timestampBase + r,
                                      v = { unit: f.data, length: f.data.byteLength, dts: p, pts: p };
                                    d.samples.push(v), (d.length += f.data.length);
                                  } else a.a.e(this.TAG, 'Flv: Unsupported AAC data type ' + f.packetType);
                                } else if (2 === o) {
                                  if (!c.codec) {
                                    var m;
                                    if (null == (h = this._parseMP3AudioData(e, t + 1, n - 1, !0))) return;
                                    (c.audioSampleRate = h.samplingRate),
                                      (c.channelCount = h.channelCount),
                                      (c.codec = h.codec),
                                      (c.originalCodec = h.originalCodec),
                                      (c.refSampleDuration = (1152 / c.audioSampleRate) * c.timescale),
                                      a.a.v(this.TAG, 'Parsed MPEG Audio Frame Header'),
                                      (this._audioInitialMetadataDispatched = !0),
                                      this._onTrackMetadata('audio', c),
                                      ((m = this._mediaInfo).audioCodec = c.codec),
                                      (m.audioSampleRate = c.audioSampleRate),
                                      (m.audioChannelCount = c.channelCount),
                                      (m.audioDataRate = h.bitRate),
                                      m.hasVideo
                                        ? null != m.videoCodec && (m.mimeType = 'video/x-flv; codecs="' + m.videoCodec + ',' + m.audioCodec + '"')
                                        : (m.mimeType = 'video/x-flv; codecs="' + m.audioCodec + '"'),
                                      m.isComplete() && this._onMediaInfo(m);
                                  }
                                  var y = this._parseMP3AudioData(e, t + 1, n - 1, !1);
                                  if (null == y) return;
                                  p = this._timestampBase + r;
                                  var _ = { unit: y, length: y.byteLength, dts: p, pts: p };
                                  d.samples.push(_), (d.length += y.length);
                                }
                              } else this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid audio sample rate idx: ' + l);
                            } else this._onError(g.a.CODEC_UNSUPPORTED, 'Flv: Unsupported audio codec idx: ' + o);
                          }
                        }),
                        (e.prototype._parseAACAudioData = function (e, t, n) {
                          if (!(n <= 1)) {
                            var r = {},
                              i = new Uint8Array(e, t, n);
                            return (r.packetType = i[0]), 0 === i[0] ? (r.data = this._parseAACAudioSpecificConfig(e, t + 1, n - 1)) : (r.data = i.subarray(1)), r;
                          }
                          a.a.w(this.TAG, 'Flv: Invalid AAC packet, missing AACPacketType or/and Data!');
                        }),
                        (e.prototype._parseAACAudioSpecificConfig = function (e, t, n) {
                          var r,
                            i,
                            a = new Uint8Array(e, t, n),
                            o = null,
                            s = 0,
                            l = null;
                          if (((s = r = a[0] >>> 3), (i = ((7 & a[0]) << 1) | (a[1] >>> 7)) < 0 || i >= this._mpegSamplingRates.length))
                            this._onError(g.a.FORMAT_ERROR, 'Flv: AAC invalid sampling frequency index!');
                          else {
                            var u = this._mpegSamplingRates[i],
                              c = (120 & a[1]) >>> 3;
                            if (!(c < 0 || c >= 8)) {
                              5 === s && ((l = ((7 & a[1]) << 1) | (a[2] >>> 7)), a[2]);
                              var d = self.navigator.userAgent.toLowerCase();
                              return (
                                -1 !== d.indexOf('firefox')
                                  ? i >= 6
                                    ? ((s = 5), (o = new Array(4)), (l = i - 3))
                                    : ((s = 2), (o = new Array(2)), (l = i))
                                  : -1 !== d.indexOf('android')
                                  ? ((s = 2), (o = new Array(2)), (l = i))
                                  : ((s = 5), (l = i), (o = new Array(4)), i >= 6 ? (l = i - 3) : 1 === c && ((s = 2), (o = new Array(2)), (l = i))),
                                (o[0] = s << 3),
                                (o[0] |= (15 & i) >>> 1),
                                (o[1] = (15 & i) << 7),
                                (o[1] |= (15 & c) << 3),
                                5 === s && ((o[1] |= (15 & l) >>> 1), (o[2] = (1 & l) << 7), (o[2] |= 8), (o[3] = 0)),
                                { config: o, samplingRate: u, channelCount: c, codec: 'mp4a.40.' + s, originalCodec: 'mp4a.40.' + r }
                              );
                            }
                            this._onError(g.a.FORMAT_ERROR, 'Flv: AAC invalid channel configuration');
                          }
                        }),
                        (e.prototype._parseMP3AudioData = function (e, t, n, r) {
                          if (!(n < 4)) {
                            this._littleEndian;
                            var i = new Uint8Array(e, t, n),
                              o = null;
                            if (r) {
                              if (255 !== i[0]) return;
                              var s = (i[1] >>> 3) & 3,
                                l = (6 & i[1]) >> 1,
                                u = (240 & i[2]) >>> 4,
                                c = (12 & i[2]) >>> 2,
                                d = 3 != ((i[3] >>> 6) & 3) ? 2 : 1,
                                f = 0,
                                h = 0;
                              switch (s) {
                                case 0:
                                  f = this._mpegAudioV25SampleRateTable[c];
                                  break;
                                case 2:
                                  f = this._mpegAudioV20SampleRateTable[c];
                                  break;
                                case 3:
                                  f = this._mpegAudioV10SampleRateTable[c];
                              }
                              switch (l) {
                                case 1:
                                  u < this._mpegAudioL3BitRateTable.length && (h = this._mpegAudioL3BitRateTable[u]);
                                  break;
                                case 2:
                                  u < this._mpegAudioL2BitRateTable.length && (h = this._mpegAudioL2BitRateTable[u]);
                                  break;
                                case 3:
                                  u < this._mpegAudioL1BitRateTable.length && (h = this._mpegAudioL1BitRateTable[u]);
                              }
                              o = { bitRate: h, samplingRate: f, channelCount: d, codec: 'mp3', originalCodec: 'mp3' };
                            } else o = i;
                            return o;
                          }
                          a.a.w(this.TAG, 'Flv: Invalid MP3 packet, header missing!');
                        }),
                        (e.prototype._parseVideoData = function (e, t, n, r, i) {
                          if (n <= 1) a.a.w(this.TAG, 'Flv: Invalid video packet, missing VideoData payload!');
                          else if (!0 !== this._hasVideoFlagOverrided || !1 !== this._hasVideo) {
                            var o = new Uint8Array(e, t, n)[0],
                              s = (112 & o) >>> 4;
                            if (0 != (128 & o)) {
                              var l = 15 & o,
                                u = String.fromCharCode.apply(String, new Uint8Array(e, t, n).slice(1, 5));
                              if ('hvc1' !== u) return void this._onError(g.a.CODEC_UNSUPPORTED, 'Flv: Unsupported codec in video frame: ' + u);
                              this._parseEnhancedHEVCVideoPacket(e, t + 5, n - 5, r, i, s, l);
                            } else {
                              var c = 15 & o;
                              if (7 === c) this._parseAVCVideoPacket(e, t + 1, n - 1, r, i, s);
                              else {
                                if (12 !== c) return void this._onError(g.a.CODEC_UNSUPPORTED, 'Flv: Unsupported codec in video frame: ' + c);
                                this._parseHEVCVideoPacket(e, t + 1, n - 1, r, i, s);
                              }
                            }
                          }
                        }),
                        (e.prototype._parseAVCVideoPacket = function (e, t, n, r, i, o) {
                          if (n < 4) a.a.w(this.TAG, 'Flv: Invalid AVC packet, missing AVCPacketType or/and CompositionTime');
                          else {
                            var s = this._littleEndian,
                              l = new DataView(e, t, n),
                              u = l.getUint8(0),
                              c = ((16777215 & l.getUint32(0, !s)) << 8) >> 8;
                            if (0 === u) this._parseAVCDecoderConfigurationRecord(e, t + 4, n - 4);
                            else if (1 === u) this._parseAVCVideoData(e, t + 4, n - 4, r, i, o, c);
                            else if (2 !== u) return void this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid video packet type ' + u);
                          }
                        }),
                        (e.prototype._parseHEVCVideoPacket = function (e, t, n, r, i, o) {
                          if (n < 4) a.a.w(this.TAG, 'Flv: Invalid HEVC packet, missing HEVCPacketType or/and CompositionTime');
                          else {
                            var s = this._littleEndian,
                              l = new DataView(e, t, n),
                              u = l.getUint8(0),
                              c = ((16777215 & l.getUint32(0, !s)) << 8) >> 8;
                            if (0 === u) this._parseHEVCDecoderConfigurationRecord(e, t + 4, n - 4);
                            else if (1 === u) this._parseHEVCVideoData(e, t + 4, n - 4, r, i, o, c);
                            else if (2 !== u) return void this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid video packet type ' + u);
                          }
                        }),
                        (e.prototype._parseEnhancedHEVCVideoPacket = function (e, t, n, r, i, o, s) {
                          if (n < 4) a.a.w(this.TAG, 'Flv: Invalid HEVC packet, missing HEVCPacketType or/and CompositionTime');
                          else {
                            var l = this._littleEndian,
                              u = new DataView(e, t, n);
                            if (0 === s) this._parseHEVCDecoderConfigurationRecord(e, t, n);
                            else if (1 === s) {
                              var c = (4294967040 & u.getUint32(0, !l)) >> 8;
                              this._parseHEVCVideoData(e, t + 3, n - 3, r, i, o, c);
                            } else if (3 === s) this._parseHEVCVideoData(e, t, n, r, i, o, 0);
                            else if (2 !== s) return void this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid video packet type ' + s);
                          }
                        }),
                        (e.prototype._parseAVCDecoderConfigurationRecord = function (e, t, n) {
                          if (n < 7) a.a.w(this.TAG, 'Flv: Invalid AVCDecoderConfigurationRecord, lack of data!');
                          else {
                            var r = this._videoMetadata,
                              i = this._videoTrack,
                              o = this._littleEndian,
                              s = new DataView(e, t, n);
                            if (r) {
                              if (void 0 !== r.avcc) {
                                var l = new Uint8Array(e, t, n);
                                if (k(l, r.avcc)) return;
                                a.a.w(this.TAG, 'AVCDecoderConfigurationRecord has been changed, re-generate initialization segment');
                              }
                            } else
                              !1 === this._hasVideo && !1 === this._hasVideoFlagOverrided && ((this._hasVideo = !0), (this._mediaInfo.hasVideo = !0)),
                                ((r = this._videoMetadata = {}).type = 'video'),
                                (r.id = i.id),
                                (r.timescale = this._timescale),
                                (r.duration = this._duration);
                            var u = s.getUint8(0),
                              c = s.getUint8(1);
                            if ((s.getUint8(2), s.getUint8(3), 1 === u && 0 !== c))
                              if (((this._naluLengthSize = 1 + (3 & s.getUint8(4))), 3 === this._naluLengthSize || 4 === this._naluLengthSize)) {
                                var d = 31 & s.getUint8(5);
                                if (0 !== d) {
                                  d > 1 && a.a.w(this.TAG, 'Flv: Strange AVCDecoderConfigurationRecord: SPS Count = ' + d);
                                  for (var f = 6, h = 0; h < d; h++) {
                                    var p = s.getUint16(f, !o);
                                    if (((f += 2), 0 !== p)) {
                                      var v = new Uint8Array(e, t + f, p);
                                      f += p;
                                      var y = m.parseSPS(v);
                                      if (0 === h) {
                                        (r.codecWidth = y.codec_size.width),
                                          (r.codecHeight = y.codec_size.height),
                                          (r.presentWidth = y.present_size.width),
                                          (r.presentHeight = y.present_size.height),
                                          (r.profile = y.profile_string),
                                          (r.level = y.level_string),
                                          (r.bitDepth = y.bit_depth),
                                          (r.chromaFormat = y.chroma_format),
                                          (r.sarRatio = y.sar_ratio),
                                          (r.frameRate = y.frame_rate),
                                          (!1 !== y.frame_rate.fixed && 0 !== y.frame_rate.fps_num && 0 !== y.frame_rate.fps_den) || (r.frameRate = this._referenceFrameRate);
                                        var _ = r.frameRate.fps_den,
                                          b = r.frameRate.fps_num;
                                        r.refSampleDuration = r.timescale * (_ / b);
                                        for (var E = v.subarray(1, 4), S = 'avc1.', T = 0; T < 3; T++) {
                                          var w = E[T].toString(16);
                                          w.length < 2 && (w = '0' + w), (S += w);
                                        }
                                        r.codec = S;
                                        var A = this._mediaInfo;
                                        (A.width = r.codecWidth),
                                          (A.height = r.codecHeight),
                                          (A.fps = r.frameRate.fps),
                                          (A.profile = r.profile),
                                          (A.level = r.level),
                                          (A.refFrames = y.ref_frames),
                                          (A.chromaFormat = y.chroma_format_string),
                                          (A.sarNum = r.sarRatio.width),
                                          (A.sarDen = r.sarRatio.height),
                                          (A.videoCodec = S),
                                          A.hasAudio
                                            ? null != A.audioCodec && (A.mimeType = 'video/x-flv; codecs="' + A.videoCodec + ',' + A.audioCodec + '"')
                                            : (A.mimeType = 'video/x-flv; codecs="' + A.videoCodec + '"'),
                                          A.isComplete() && this._onMediaInfo(A);
                                      }
                                    }
                                  }
                                  var L = s.getUint8(f);
                                  if (0 !== L) {
                                    for (L > 1 && a.a.w(this.TAG, 'Flv: Strange AVCDecoderConfigurationRecord: PPS Count = ' + L), f++, h = 0; h < L; h++)
                                      (p = s.getUint16(f, !o)), (f += 2), 0 !== p && (f += p);
                                    (r.avcc = new Uint8Array(n)),
                                      r.avcc.set(new Uint8Array(e, t, n), 0),
                                      a.a.v(this.TAG, 'Parsed AVCDecoderConfigurationRecord'),
                                      this._isInitialMetadataDispatched()
                                        ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack)
                                        : (this._videoInitialMetadataDispatched = !0),
                                      (this._dispatch = !1),
                                      this._onTrackMetadata('video', r);
                                  } else this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No PPS');
                                } else this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord: No SPS');
                              } else this._onError(g.a.FORMAT_ERROR, 'Flv: Strange NaluLengthSizeMinusOne: ' + (this._naluLengthSize - 1));
                            else this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid AVCDecoderConfigurationRecord');
                          }
                        }),
                        (e.prototype._parseHEVCDecoderConfigurationRecord = function (e, t, n) {
                          if (n < 22) a.a.w(this.TAG, 'Flv: Invalid HEVCDecoderConfigurationRecord, lack of data!');
                          else {
                            var r = this._videoMetadata,
                              i = this._videoTrack,
                              o = this._littleEndian,
                              s = new DataView(e, t, n);
                            if (r) {
                              if (void 0 !== r.hvcc) {
                                var l = new Uint8Array(e, t, n);
                                if (k(l, r.hvcc)) return;
                                a.a.w(this.TAG, 'HEVCDecoderConfigurationRecord has been changed, re-generate initialization segment');
                              }
                            } else
                              !1 === this._hasVideo && !1 === this._hasVideoFlagOverrided && ((this._hasVideo = !0), (this._mediaInfo.hasVideo = !0)),
                                ((r = this._videoMetadata = {}).type = 'video'),
                                (r.id = i.id),
                                (r.timescale = this._timescale),
                                (r.duration = this._duration);
                            var u = s.getUint8(0),
                              c = 31 & s.getUint8(1);
                            if (1 === u && 0 !== c)
                              if (((this._naluLengthSize = 1 + (3 & s.getUint8(21))), 3 === this._naluLengthSize || 4 === this._naluLengthSize)) {
                                for (var d = s.getUint8(22), f = 0, h = 23; f < d; f++) {
                                  var p = 63 & s.getUint8(h + 0),
                                    v = s.getUint16(h + 1, !o);
                                  h += 3;
                                  for (var m = 0; m < v; m++) {
                                    var _ = s.getUint16(h + 0, !o);
                                    if (0 === m)
                                      if (33 === p) {
                                        h += 2;
                                        var b = new Uint8Array(e, t + h, _),
                                          E = y.parseSPS(b);
                                        (r.codecWidth = E.codec_size.width),
                                          (r.codecHeight = E.codec_size.height),
                                          (r.presentWidth = E.present_size.width),
                                          (r.presentHeight = E.present_size.height),
                                          (r.profile = E.profile_string),
                                          (r.level = E.level_string),
                                          (r.bitDepth = E.bit_depth),
                                          (r.chromaFormat = E.chroma_format),
                                          (r.sarRatio = E.sar_ratio),
                                          (r.frameRate = E.frame_rate),
                                          (!1 !== E.frame_rate.fixed && 0 !== E.frame_rate.fps_num && 0 !== E.frame_rate.fps_den) || (r.frameRate = this._referenceFrameRate);
                                        var S = r.frameRate.fps_den,
                                          T = r.frameRate.fps_num;
                                        (r.refSampleDuration = r.timescale * (S / T)), (r.codec = E.codec_mimetype);
                                        var w = this._mediaInfo;
                                        (w.width = r.codecWidth),
                                          (w.height = r.codecHeight),
                                          (w.fps = r.frameRate.fps),
                                          (w.profile = r.profile),
                                          (w.level = r.level),
                                          (w.refFrames = E.ref_frames),
                                          (w.chromaFormat = E.chroma_format_string),
                                          (w.sarNum = r.sarRatio.width),
                                          (w.sarDen = r.sarRatio.height),
                                          (w.videoCodec = E.codec_mimetype),
                                          w.hasAudio
                                            ? null != w.audioCodec && (w.mimeType = 'video/x-flv; codecs="' + w.videoCodec + ',' + w.audioCodec + '"')
                                            : (w.mimeType = 'video/x-flv; codecs="' + w.videoCodec + '"'),
                                          w.isComplete() && this._onMediaInfo(w),
                                          (h += _);
                                      } else h += 2 + _;
                                    else h += 2 + _;
                                  }
                                }
                                (r.hvcc = new Uint8Array(n)),
                                  r.hvcc.set(new Uint8Array(e, t, n), 0),
                                  a.a.v(this.TAG, 'Parsed HEVCDecoderConfigurationRecord'),
                                  this._isInitialMetadataDispatched()
                                    ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack)
                                    : (this._videoInitialMetadataDispatched = !0),
                                  (this._dispatch = !1),
                                  this._onTrackMetadata('video', r);
                              } else this._onError(g.a.FORMAT_ERROR, 'Flv: Strange NaluLengthSizeMinusOne: ' + (this._naluLengthSize - 1));
                            else this._onError(g.a.FORMAT_ERROR, 'Flv: Invalid HEVCDecoderConfigurationRecord');
                          }
                        }),
                        (e.prototype._parseAVCVideoData = function (e, t, n, r, i, o, s) {
                          for (var l = this._littleEndian, u = new DataView(e, t, n), c = [], d = 0, f = 0, h = this._naluLengthSize, p = this._timestampBase + r, v = 1 === o, m = !1; f < n; ) {
                            if (f + 4 >= n) {
                              a.a.w(this.TAG, 'Malformed Nalu near timestamp ' + p + ', offset = ' + f + ', dataSize = ' + n);
                              break;
                            }
                            var g = u.getUint32(f, !l);
                            if ((3 === h && (g >>>= 8), g > n - h)) return void a.a.w(this.TAG, 'Malformed Nalus near timestamp ' + p + ', NaluSize > DataSize!');
                            var y = 31 & u.getUint8(f + h);
                            6 === y && (m = u.getUint8(f + h + 1));
                            var _ = new Uint8Array(e, t + f, h + g);
                            if (5 === y && ((v = !0), 1 == m)) {
                              var b = new Uint8Array(e, t + f + h + 1, h + g - (h + 1) - ((h + g - (h + 1)) % 16)),
                                E = new w.a.ModeOfOperation.cbc(A, L).decrypt(b);
                              _.set(E, h + 1);
                            }
                            var S = { type: y, data: _ };
                            c.push(S), (d += _.byteLength), (f += h + g);
                          }
                          if (c.length) {
                            var k = this._videoTrack,
                              T = { units: c, length: d, isKeyframe: v, dts: p, cts: s, pts: p + s };
                            v && (T.fileposition = i), k.samples.push(T), (k.length += d);
                          }
                        }),
                        (e.prototype._parseHEVCVideoData = function (e, t, n, r, i, o, s) {
                          for (var l = this._littleEndian, u = new DataView(e, t, n), c = [], d = 0, f = 0, h = this._naluLengthSize, p = this._timestampBase + r, v = 1 === o; f < n; ) {
                            if (f + 4 >= n) {
                              a.a.w(this.TAG, 'Malformed Nalu near timestamp ' + p + ', offset = ' + f + ', dataSize = ' + n);
                              break;
                            }
                            var m = u.getUint32(f, !l);
                            if ((3 === h && (m >>>= 8), m > n - h)) return void a.a.w(this.TAG, 'Malformed Nalus near timestamp ' + p + ', NaluSize > DataSize!');
                            var g = 31 & u.getUint8(f + h);
                            (19 !== g && 20 !== g) || (v = !0);
                            var y = new Uint8Array(e, t + f, h + m),
                              _ = { type: g, data: y };
                            c.push(_), (d += y.byteLength), (f += h + m);
                          }
                          if (c.length) {
                            var b = this._videoTrack,
                              E = { units: c, length: d, isKeyframe: v, dts: p, cts: s, pts: p + s };
                            v && (E.fileposition = i), b.samples.push(E), (b.length += d);
                          }
                        }),
                        e
                      );
                    })(),
                    C = (function () {
                      function e() {}
                      return (
                        (e.prototype.destroy = function () {
                          (this.onError = null),
                            (this.onMediaInfo = null),
                            (this.onMetaDataArrived = null),
                            (this.onTrackMetadata = null),
                            (this.onDataAvailable = null),
                            (this.onTimedID3Metadata = null),
                            (this.onSMPTE2038Metadata = null),
                            (this.onSCTE35Metadata = null),
                            (this.onPESPrivateData = null),
                            (this.onPESPrivateDataDescriptor = null);
                        }),
                        e
                      );
                    })(),
                    x = function () {
                      this.program_pmt_pid = {};
                    };
                  !(function (e) {
                    (e[(e.kMPEG1Audio = 3)] = 'kMPEG1Audio'),
                      (e[(e.kMPEG2Audio = 4)] = 'kMPEG2Audio'),
                      (e[(e.kPESPrivateData = 6)] = 'kPESPrivateData'),
                      (e[(e.kADTSAAC = 15)] = 'kADTSAAC'),
                      (e[(e.kLOASAAC = 17)] = 'kLOASAAC'),
                      (e[(e.kAC3 = 129)] = 'kAC3'),
                      (e[(e.kID3 = 21)] = 'kID3'),
                      (e[(e.kSCTE35 = 134)] = 'kSCTE35'),
                      (e[(e.kH264 = 27)] = 'kH264'),
                      (e[(e.kH265 = 36)] = 'kH265');
                  })(S || (S = {}));
                  var D,
                    I = function () {
                      (this.pid_stream_type = {}),
                        (this.common_pids = { h264: void 0, h265: void 0, adts_aac: void 0, loas_aac: void 0, opus: void 0, ac3: void 0, mp3: void 0 }),
                        (this.pes_private_data_pids = {}),
                        (this.timed_id3_pids = {}),
                        (this.scte_35_pids = {}),
                        (this.smpte2038_pids = {});
                    },
                    M = function () {},
                    P = function () {},
                    O = function () {
                      (this.slices = []), (this.total_length = 0), (this.expected_length = 0), (this.file_position = 0);
                    };
                  !(function (e) {
                    (e[(e.kUnspecified = 0)] = 'kUnspecified'),
                      (e[(e.kSliceNonIDR = 1)] = 'kSliceNonIDR'),
                      (e[(e.kSliceDPA = 2)] = 'kSliceDPA'),
                      (e[(e.kSliceDPB = 3)] = 'kSliceDPB'),
                      (e[(e.kSliceDPC = 4)] = 'kSliceDPC'),
                      (e[(e.kSliceIDR = 5)] = 'kSliceIDR'),
                      (e[(e.kSliceSEI = 6)] = 'kSliceSEI'),
                      (e[(e.kSliceSPS = 7)] = 'kSliceSPS'),
                      (e[(e.kSlicePPS = 8)] = 'kSlicePPS'),
                      (e[(e.kSliceAUD = 9)] = 'kSliceAUD'),
                      (e[(e.kEndOfSequence = 10)] = 'kEndOfSequence'),
                      (e[(e.kEndOfStream = 11)] = 'kEndOfStream'),
                      (e[(e.kFiller = 12)] = 'kFiller'),
                      (e[(e.kSPSExt = 13)] = 'kSPSExt'),
                      (e[(e.kReserved0 = 14)] = 'kReserved0');
                  })(D || (D = {}));
                  var F,
                    N,
                    B = function () {},
                    U = function (e) {
                      var t = e.data.byteLength;
                      (this.type = e.type), (this.data = new Uint8Array(4 + t)), new DataView(this.data.buffer).setUint32(0, t), this.data.set(e.data, 4);
                    },
                    z = (function () {
                      function e(e) {
                        (this.TAG = 'H264AnnexBParser'),
                          (this.current_startcode_offset_ = 0),
                          (this.eof_flag_ = !1),
                          (this.data_ = e),
                          (this.current_startcode_offset_ = this.findNextStartCodeOffset(0)),
                          this.eof_flag_ && a.a.e(this.TAG, 'Could not find H264 startcode until payload end!');
                      }
                      return (
                        (e.prototype.findNextStartCodeOffset = function (e) {
                          for (var t = e, n = this.data_; ; ) {
                            if (t + 3 >= n.byteLength) return (this.eof_flag_ = !0), n.byteLength;
                            var r = (n[t + 0] << 24) | (n[t + 1] << 16) | (n[t + 2] << 8) | n[t + 3],
                              i = (n[t + 0] << 16) | (n[t + 1] << 8) | n[t + 2];
                            if (1 === r || 1 === i) return t;
                            t++;
                          }
                        }),
                        (e.prototype.readNextNaluPayload = function () {
                          for (var e = this.data_, t = null; null == t && !this.eof_flag_; ) {
                            var n = this.current_startcode_offset_,
                              r = 31 & e[(n += 1 == ((e[n] << 24) | (e[n + 1] << 16) | (e[n + 2] << 8) | e[n + 3]) ? 4 : 3)],
                              i = (128 & e[n]) >>> 7,
                              a = this.findNextStartCodeOffset(n);
                            if (((this.current_startcode_offset_ = a), !(r >= D.kReserved0) && 0 === i)) {
                              var o = e.subarray(n, a);
                              ((t = new B()).type = r), (t.data = o);
                            }
                          }
                          return t;
                        }),
                        e
                      );
                    })(),
                    H = (function () {
                      function e(e, t, n) {
                        var r = 8 + e.byteLength + 1 + 2 + t.byteLength,
                          i = !1;
                        66 !== e[3] && 77 !== e[3] && 88 !== e[3] && ((i = !0), (r += 4));
                        var a = (this.data = new Uint8Array(r));
                        (a[0] = 1), (a[1] = e[1]), (a[2] = e[2]), (a[3] = e[3]), (a[4] = 255), (a[5] = 225);
                        var o = e.byteLength;
                        (a[6] = o >>> 8), (a[7] = 255 & o);
                        var s = 8;
                        a.set(e, 8), (a[(s += o)] = 1);
                        var l = t.byteLength;
                        (a[s + 1] = l >>> 8),
                          (a[s + 2] = 255 & l),
                          a.set(t, s + 3),
                          (s += 3 + l),
                          i && ((a[s] = 252 | n.chroma_format_idc), (a[s + 1] = 248 | (n.bit_depth_luma - 8)), (a[s + 2] = 248 | (n.bit_depth_chroma - 8)), (a[s + 3] = 0), (s += 4));
                      }
                      return (
                        (e.prototype.getData = function () {
                          return this.data;
                        }),
                        e
                      );
                    })();
                  !(function (e) {
                    (e[(e.kNull = 0)] = 'kNull'),
                      (e[(e.kAACMain = 1)] = 'kAACMain'),
                      (e[(e.kAAC_LC = 2)] = 'kAAC_LC'),
                      (e[(e.kAAC_SSR = 3)] = 'kAAC_SSR'),
                      (e[(e.kAAC_LTP = 4)] = 'kAAC_LTP'),
                      (e[(e.kAAC_SBR = 5)] = 'kAAC_SBR'),
                      (e[(e.kAAC_Scalable = 6)] = 'kAAC_Scalable'),
                      (e[(e.kLayer1 = 32)] = 'kLayer1'),
                      (e[(e.kLayer2 = 33)] = 'kLayer2'),
                      (e[(e.kLayer3 = 34)] = 'kLayer3');
                  })(F || (F = {})),
                    (function (e) {
                      (e[(e.k96000Hz = 0)] = 'k96000Hz'),
                        (e[(e.k88200Hz = 1)] = 'k88200Hz'),
                        (e[(e.k64000Hz = 2)] = 'k64000Hz'),
                        (e[(e.k48000Hz = 3)] = 'k48000Hz'),
                        (e[(e.k44100Hz = 4)] = 'k44100Hz'),
                        (e[(e.k32000Hz = 5)] = 'k32000Hz'),
                        (e[(e.k24000Hz = 6)] = 'k24000Hz'),
                        (e[(e.k22050Hz = 7)] = 'k22050Hz'),
                        (e[(e.k16000Hz = 8)] = 'k16000Hz'),
                        (e[(e.k12000Hz = 9)] = 'k12000Hz'),
                        (e[(e.k11025Hz = 10)] = 'k11025Hz'),
                        (e[(e.k8000Hz = 11)] = 'k8000Hz'),
                        (e[(e.k7350Hz = 12)] = 'k7350Hz');
                    })(N || (N = {}));
                  var V,
                    G,
                    j = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350],
                    K =
                      ((V = function (e, t) {
                        return (V =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        V(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    W = function () {},
                    q = (function (e) {
                      function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                      }
                      return K(t, e), t;
                    })(W),
                    Y = (function () {
                      function e(e) {
                        (this.TAG = 'AACADTSParser'),
                          (this.data_ = e),
                          (this.current_syncword_offset_ = this.findNextSyncwordOffset(0)),
                          this.eof_flag_ && a.a.e(this.TAG, 'Could not found ADTS syncword until payload end');
                      }
                      return (
                        (e.prototype.findNextSyncwordOffset = function (e) {
                          for (var t = e, n = this.data_; ; ) {
                            if (t + 7 >= n.byteLength) return (this.eof_flag_ = !0), n.byteLength;
                            if (4095 == ((n[t + 0] << 8) | n[t + 1]) >>> 4) return t;
                            t++;
                          }
                        }),
                        (e.prototype.readNextAACFrame = function () {
                          for (var e = this.data_, t = null; null == t && !this.eof_flag_; ) {
                            var n = this.current_syncword_offset_,
                              r = (8 & e[n + 1]) >>> 3,
                              i = (6 & e[n + 1]) >>> 1,
                              a = 1 & e[n + 1],
                              o = (192 & e[n + 2]) >>> 6,
                              s = (60 & e[n + 2]) >>> 2,
                              l = ((1 & e[n + 2]) << 2) | ((192 & e[n + 3]) >>> 6),
                              u = ((3 & e[n + 3]) << 11) | (e[n + 4] << 3) | ((224 & e[n + 5]) >>> 5);
                            if ((e[n + 6], n + u > this.data_.byteLength)) {
                              (this.eof_flag_ = !0), (this.has_last_incomplete_data = !0);
                              break;
                            }
                            var c = 1 === a ? 7 : 9,
                              d = u - c;
                            n += c;
                            var f = this.findNextSyncwordOffset(n + d);
                            if (((this.current_syncword_offset_ = f), (0 === r || 1 === r) && 0 === i)) {
                              var h = e.subarray(n, n + d);
                              ((t = new W()).audio_object_type = o + 1), (t.sampling_freq_index = s), (t.sampling_frequency = j[s]), (t.channel_config = l), (t.data = h);
                            }
                          }
                          return t;
                        }),
                        (e.prototype.hasIncompleteData = function () {
                          return this.has_last_incomplete_data;
                        }),
                        (e.prototype.getIncompleteData = function () {
                          return this.has_last_incomplete_data ? this.data_.subarray(this.current_syncword_offset_) : null;
                        }),
                        e
                      );
                    })(),
                    X = (function () {
                      function e(e) {
                        (this.TAG = 'AACLOASParser'),
                          (this.data_ = e),
                          (this.current_syncword_offset_ = this.findNextSyncwordOffset(0)),
                          this.eof_flag_ && a.a.e(this.TAG, 'Could not found LOAS syncword until payload end');
                      }
                      return (
                        (e.prototype.findNextSyncwordOffset = function (e) {
                          for (var t = e, n = this.data_; ; ) {
                            if (t + 1 >= n.byteLength) return (this.eof_flag_ = !0), n.byteLength;
                            if (695 == ((n[t + 0] << 3) | (n[t + 1] >>> 5))) return t;
                            t++;
                          }
                        }),
                        (e.prototype.getLATMValue = function (e) {
                          for (var t = e.readBits(2), n = 0, r = 0; r <= t; r++) (n <<= 8), (n |= e.readByte());
                          return n;
                        }),
                        (e.prototype.readNextAACFrame = function (e) {
                          for (var t = this.data_, n = null; null == n && !this.eof_flag_; ) {
                            var r = this.current_syncword_offset_,
                              i = ((31 & t[r + 1]) << 8) | t[r + 2];
                            if (r + 3 + i >= this.data_.byteLength) {
                              (this.eof_flag_ = !0), (this.has_last_incomplete_data = !0);
                              break;
                            }
                            var o = new v(t.subarray(r + 3, r + 3 + i)),
                              s = null;
                            if (o.readBool()) {
                              if (null == e) {
                                a.a.w(this.TAG, 'StreamMuxConfig Missing'), (this.current_syncword_offset_ = this.findNextSyncwordOffset(r + 3 + i)), o.destroy();
                                continue;
                              }
                              s = e;
                            } else {
                              var l = o.readBool();
                              if (l && o.readBool()) {
                                a.a.e(this.TAG, 'audioMuxVersionA is Not Supported'), o.destroy();
                                break;
                              }
                              if ((l && this.getLATMValue(o), !o.readBool())) {
                                a.a.e(this.TAG, 'allStreamsSameTimeFraming zero is Not Supported'), o.destroy();
                                break;
                              }
                              if (0 !== o.readBits(6)) {
                                a.a.e(this.TAG, 'more than 2 numSubFrames Not Supported'), o.destroy();
                                break;
                              }
                              if (0 !== o.readBits(4)) {
                                a.a.e(this.TAG, 'more than 2 numProgram Not Supported'), o.destroy();
                                break;
                              }
                              if (0 !== o.readBits(3)) {
                                a.a.e(this.TAG, 'more than 2 numLayer Not Supported'), o.destroy();
                                break;
                              }
                              var u = l ? this.getLATMValue(o) : 0,
                                c = o.readBits(5);
                              u -= 5;
                              var d = o.readBits(4);
                              u -= 4;
                              var f = o.readBits(4);
                              (u -= 4), o.readBits(3), (u -= 3) > 0 && o.readBits(u);
                              var h = o.readBits(3);
                              if (0 !== h) {
                                a.a.e(this.TAG, 'frameLengthType = ' + h + '. Only frameLengthType = 0 Supported'), o.destroy();
                                break;
                              }
                              o.readByte();
                              var p = o.readBool();
                              if (p)
                                if (l) this.getLATMValue(o);
                                else {
                                  for (var m = 0; ; ) {
                                    m <<= 8;
                                    var g = o.readBool();
                                    if (((m += o.readByte()), !g)) break;
                                  }
                                  console.log(m);
                                }
                              o.readBool() && o.readByte(),
                                ((s = new q()).audio_object_type = c),
                                (s.sampling_freq_index = d),
                                (s.sampling_frequency = j[s.sampling_freq_index]),
                                (s.channel_config = f),
                                (s.other_data_present = p);
                            }
                            for (var y = 0; ; ) {
                              var _ = o.readByte();
                              if (((y += _), 255 !== _)) break;
                            }
                            for (var b = new Uint8Array(y), E = 0; E < y; E++) b[E] = o.readByte();
                            ((n = new q()).audio_object_type = s.audio_object_type),
                              (n.sampling_freq_index = s.sampling_freq_index),
                              (n.sampling_frequency = j[s.sampling_freq_index]),
                              (n.channel_config = s.channel_config),
                              (n.other_data_present = s.other_data_present),
                              (n.data = b),
                              (this.current_syncword_offset_ = this.findNextSyncwordOffset(r + 3 + i));
                          }
                          return n;
                        }),
                        (e.prototype.hasIncompleteData = function () {
                          return this.has_last_incomplete_data;
                        }),
                        (e.prototype.getIncompleteData = function () {
                          return this.has_last_incomplete_data ? this.data_.subarray(this.current_syncword_offset_) : null;
                        }),
                        e
                      );
                    })(),
                    $ = function (e) {
                      var t = null,
                        n = e.audio_object_type,
                        r = e.audio_object_type,
                        i = e.sampling_freq_index,
                        a = e.channel_config,
                        o = 0,
                        s = navigator.userAgent.toLowerCase();
                      -1 !== s.indexOf('firefox')
                        ? i >= 6
                          ? ((r = 5), (t = new Array(4)), (o = i - 3))
                          : ((r = 2), (t = new Array(2)), (o = i))
                        : -1 !== s.indexOf('android')
                        ? ((r = 2), (t = new Array(2)), (o = i))
                        : ((r = 5), (o = i), (t = new Array(4)), i >= 6 ? (o = i - 3) : 1 === a && ((r = 2), (t = new Array(2)), (o = i))),
                        (t[0] = r << 3),
                        (t[0] |= (15 & i) >>> 1),
                        (t[1] = (15 & i) << 7),
                        (t[1] |= (15 & a) << 3),
                        5 === r && ((t[1] |= (15 & o) >>> 1), (t[2] = (1 & o) << 7), (t[2] |= 8), (t[3] = 0)),
                        (this.config = t),
                        (this.sampling_rate = j[i]),
                        (this.channel_count = a),
                        (this.codec_mimetype = 'mp4a.40.' + r),
                        (this.original_codec_mimetype = 'mp4a.40.' + n);
                    },
                    Q = function () {},
                    Z = function () {};
                  !(function (e) {
                    (e[(e.kSpliceNull = 0)] = 'kSpliceNull'),
                      (e[(e.kSpliceSchedule = 4)] = 'kSpliceSchedule'),
                      (e[(e.kSpliceInsert = 5)] = 'kSpliceInsert'),
                      (e[(e.kTimeSignal = 6)] = 'kTimeSignal'),
                      (e[(e.kBandwidthReservation = 7)] = 'kBandwidthReservation'),
                      (e[(e.kPrivateCommand = 255)] = 'kPrivateCommand');
                  })(G || (G = {}));
                  var J,
                    ee = function (e) {
                      var t = e.readBool();
                      return t ? (e.readBits(6), { time_specified_flag: t, pts_time: 4 * e.readBits(31) + e.readBits(2) }) : (e.readBits(7), { time_specified_flag: t });
                    },
                    te = function (e) {
                      var t = e.readBool();
                      return e.readBits(6), { auto_return: t, duration: 4 * e.readBits(31) + e.readBits(2) };
                    },
                    ne = function (e, t) {
                      var n = t.readBits(8);
                      return e ? { component_tag: n } : { component_tag: n, splice_time: ee(t) };
                    },
                    re = function (e) {
                      return { component_tag: e.readBits(8), utc_splice_time: e.readBits(32) };
                    },
                    ie = function (e) {
                      var t = e.readBits(32),
                        n = e.readBool();
                      e.readBits(7);
                      var r = { splice_event_id: t, splice_event_cancel_indicator: n };
                      if (n) return r;
                      if (((r.out_of_network_indicator = e.readBool()), (r.program_splice_flag = e.readBool()), (r.duration_flag = e.readBool()), e.readBits(5), r.program_splice_flag))
                        r.utc_splice_time = e.readBits(32);
                      else {
                        (r.component_count = e.readBits(8)), (r.components = []);
                        for (var i = 0; i < r.component_count; i++) r.components.push(re(e));
                      }
                      return r.duration_flag && (r.break_duration = te(e)), (r.unique_program_id = e.readBits(16)), (r.avail_num = e.readBits(8)), (r.avails_expected = e.readBits(8)), r;
                    },
                    ae = function (e, t, n, r) {
                      return { descriptor_tag: e, descriptor_length: t, identifier: n, provider_avail_id: r.readBits(32) };
                    },
                    oe = function (e, t, n, r) {
                      var i = r.readBits(8),
                        a = r.readBits(3);
                      r.readBits(5);
                      for (var o = '', s = 0; s < a; s++) o += String.fromCharCode(r.readBits(8));
                      return { descriptor_tag: e, descriptor_length: t, identifier: n, preroll: i, dtmf_count: a, DTMF_char: o };
                    },
                    se = function (e) {
                      var t = e.readBits(8);
                      return e.readBits(7), { component_tag: t, pts_offset: 4 * e.readBits(31) + e.readBits(2) };
                    },
                    le = function (e, t, n, r) {
                      var i = r.readBits(32),
                        a = r.readBool();
                      r.readBits(7);
                      var o = { descriptor_tag: e, descriptor_length: t, identifier: n, segmentation_event_id: i, segmentation_event_cancel_indicator: a };
                      if (a) return o;
                      if (
                        ((o.program_segmentation_flag = r.readBool()),
                        (o.segmentation_duration_flag = r.readBool()),
                        (o.delivery_not_restricted_flag = r.readBool()),
                        o.delivery_not_restricted_flag
                          ? r.readBits(5)
                          : ((o.web_delivery_allowed_flag = r.readBool()),
                            (o.no_regional_blackout_flag = r.readBool()),
                            (o.archive_allowed_flag = r.readBool()),
                            (o.device_restrictions = r.readBits(2))),
                        !o.program_segmentation_flag)
                      ) {
                        (o.component_count = r.readBits(8)), (o.components = []);
                        for (var s = 0; s < o.component_count; s++) o.components.push(se(r));
                      }
                      o.segmentation_duration_flag && (o.segmentation_duration = r.readBits(40)), (o.segmentation_upid_type = r.readBits(8)), (o.segmentation_upid_length = r.readBits(8));
                      var l = new Uint8Array(o.segmentation_upid_length);
                      for (s = 0; s < o.segmentation_upid_length; s++) l[s] = r.readBits(8);
                      return (
                        (o.segmentation_upid = l.buffer),
                        (o.segmentation_type_id = r.readBits(8)),
                        (o.segment_num = r.readBits(8)),
                        (o.segments_expected = r.readBits(8)),
                        (52 !== o.segmentation_type_id && 54 !== o.segmentation_type_id && 56 !== o.segmentation_type_id && 58 !== o.segmentation_type_id) ||
                          ((o.sub_segment_num = r.readBits(8)), (o.sub_segments_expected = r.readBits(8))),
                        o
                      );
                    },
                    ue = function (e, t, n, r) {
                      return { descriptor_tag: e, descriptor_length: t, identifier: n, TAI_seconds: r.readBits(48), TAI_ns: r.readBits(32), UTC_offset: r.readBits(16) };
                    },
                    ce = function (e) {
                      return {
                        component_tag: e.readBits(8),
                        ISO_code: String.fromCharCode(e.readBits(8), e.readBits(8), e.readBits(8)),
                        Bit_Stream_Mode: e.readBits(3),
                        Num_Channels: e.readBits(4),
                        Full_Srvc_Audio: e.readBool(),
                      };
                    },
                    de = function (e, t, n, r) {
                      for (var i = r.readBits(4), a = [], o = 0; o < i; o++) a.push(ce(r));
                      return { descriptor_tag: e, descriptor_length: t, identifier: n, audio_count: i, components: a };
                    };
                  !(function (e) {
                    (e[(e.kSliceIDR_W_RADL = 19)] = 'kSliceIDR_W_RADL'),
                      (e[(e.kSliceIDR_N_LP = 20)] = 'kSliceIDR_N_LP'),
                      (e[(e.kSliceCRA_NUT = 21)] = 'kSliceCRA_NUT'),
                      (e[(e.kSliceVPS = 32)] = 'kSliceVPS'),
                      (e[(e.kSliceSPS = 33)] = 'kSliceSPS'),
                      (e[(e.kSlicePPS = 34)] = 'kSlicePPS'),
                      (e[(e.kSliceAUD = 35)] = 'kSliceAUD');
                  })(J || (J = {}));
                  var fe,
                    he = function () {},
                    pe = function (e) {
                      var t = e.data.byteLength;
                      (this.type = e.type), (this.data = new Uint8Array(4 + t)), new DataView(this.data.buffer).setUint32(0, t), this.data.set(e.data, 4);
                    },
                    ve = (function () {
                      function e(e) {
                        (this.TAG = 'H265AnnexBParser'),
                          (this.current_startcode_offset_ = 0),
                          (this.eof_flag_ = !1),
                          (this.data_ = e),
                          (this.current_startcode_offset_ = this.findNextStartCodeOffset(0)),
                          this.eof_flag_ && a.a.e(this.TAG, 'Could not find H265 startcode until payload end!');
                      }
                      return (
                        (e.prototype.findNextStartCodeOffset = function (e) {
                          for (var t = e, n = this.data_; ; ) {
                            if (t + 3 >= n.byteLength) return (this.eof_flag_ = !0), n.byteLength;
                            var r = (n[t + 0] << 24) | (n[t + 1] << 16) | (n[t + 2] << 8) | n[t + 3],
                              i = (n[t + 0] << 16) | (n[t + 1] << 8) | n[t + 2];
                            if (1 === r || 1 === i) return t;
                            t++;
                          }
                        }),
                        (e.prototype.readNextNaluPayload = function () {
                          for (var e = this.data_, t = null; null == t && !this.eof_flag_; ) {
                            var n = this.current_startcode_offset_,
                              r = (e[(n += 1 == ((e[n] << 24) | (e[n + 1] << 16) | (e[n + 2] << 8) | e[n + 3]) ? 4 : 3)] >> 1) & 63,
                              i = (128 & e[n]) >>> 7,
                              a = this.findNextStartCodeOffset(n);
                            if (((this.current_startcode_offset_ = a), 0 === i)) {
                              var o = e.subarray(n, a);
                              ((t = new he()).type = r), (t.data = o);
                            }
                          }
                          return t;
                        }),
                        e
                      );
                    })(),
                    me = (function () {
                      function e(e, t, n, r) {
                        var i = 23 + (5 + e.byteLength) + (5 + t.byteLength) + (5 + n.byteLength),
                          a = (this.data = new Uint8Array(i));
                        (a[0] = 1),
                          (a[1] = ((3 & r.general_profile_space) << 6) | ((r.general_tier_flag ? 1 : 0) << 5) | (31 & r.general_profile_idc)),
                          (a[2] = r.general_profile_compatibility_flags_1),
                          (a[3] = r.general_profile_compatibility_flags_2),
                          (a[4] = r.general_profile_compatibility_flags_3),
                          (a[5] = r.general_profile_compatibility_flags_4),
                          (a[6] = r.general_constraint_indicator_flags_1),
                          (a[7] = r.general_constraint_indicator_flags_2),
                          (a[8] = r.general_constraint_indicator_flags_3),
                          (a[9] = r.general_constraint_indicator_flags_4),
                          (a[10] = r.general_constraint_indicator_flags_5),
                          (a[11] = r.general_constraint_indicator_flags_6),
                          (a[12] = r.general_level_idc),
                          (a[13] = 240 | ((3840 & r.min_spatial_segmentation_idc) >> 8)),
                          (a[14] = 255 & r.min_spatial_segmentation_idc),
                          (a[15] = 252 | (3 & r.parallelismType)),
                          (a[16] = 252 | (3 & r.chroma_format_idc)),
                          (a[17] = 248 | (7 & r.bit_depth_luma_minus8)),
                          (a[18] = 248 | (7 & r.bit_depth_chroma_minus8)),
                          (a[19] = 0),
                          (a[20] = 0),
                          (a[21] = ((3 & r.constant_frame_rate) << 6) | ((7 & r.num_temporal_layers) << 3) | ((r.temporal_id_nested ? 1 : 0) << 2) | 3),
                          (a[22] = 3),
                          (a[23] = 128 | J.kSliceVPS),
                          (a[24] = 0),
                          (a[25] = 1),
                          (a[26] = (65280 & e.byteLength) >> 8),
                          (a[27] = (255 & e.byteLength) >> 0),
                          a.set(e, 28),
                          (a[23 + (5 + e.byteLength) + 0] = 128 | J.kSliceSPS),
                          (a[23 + (5 + e.byteLength) + 1] = 0),
                          (a[23 + (5 + e.byteLength) + 2] = 1),
                          (a[23 + (5 + e.byteLength) + 3] = (65280 & t.byteLength) >> 8),
                          (a[23 + (5 + e.byteLength) + 4] = (255 & t.byteLength) >> 0),
                          a.set(t, 23 + (5 + e.byteLength) + 5),
                          (a[23 + (5 + e.byteLength + 5 + t.byteLength) + 0] = 128 | J.kSlicePPS),
                          (a[23 + (5 + e.byteLength + 5 + t.byteLength) + 1] = 0),
                          (a[23 + (5 + e.byteLength + 5 + t.byteLength) + 2] = 1),
                          (a[23 + (5 + e.byteLength + 5 + t.byteLength) + 3] = (65280 & n.byteLength) >> 8),
                          (a[23 + (5 + e.byteLength + 5 + t.byteLength) + 4] = (255 & n.byteLength) >> 0),
                          a.set(n, 23 + (5 + e.byteLength + 5 + t.byteLength) + 5);
                      }
                      return (
                        (e.prototype.getData = function () {
                          return this.data;
                        }),
                        e
                      );
                    })(),
                    ge = function () {},
                    ye = function () {},
                    _e = function () {},
                    be = [
                      [
                        64, 64, 80, 80, 96, 96, 112, 112, 128, 128, 160, 160, 192, 192, 224, 224, 256, 256, 320, 320, 384, 384, 448, 448, 512, 512, 640, 640, 768, 768, 896, 896, 1024, 1024, 1152,
                        1152, 1280, 1280,
                      ],
                      [
                        69, 70, 87, 88, 104, 105, 121, 122, 139, 140, 174, 175, 208, 209, 243, 244, 278, 279, 348, 349, 417, 418, 487, 488, 557, 558, 696, 697, 835, 836, 975, 976, 1114, 1115, 1253,
                        1254, 1393, 1394,
                      ],
                      [
                        96, 96, 120, 120, 144, 144, 168, 168, 192, 192, 240, 240, 288, 288, 336, 336, 384, 384, 480, 480, 576, 576, 672, 672, 768, 768, 960, 960, 1152, 1152, 1344, 1344, 1536, 1536,
                        1728, 1728, 1920, 1920,
                      ],
                    ],
                    Ee = (function () {
                      function e(e) {
                        (this.TAG = 'AC3Parser'),
                          (this.data_ = e),
                          (this.current_syncword_offset_ = this.findNextSyncwordOffset(0)),
                          this.eof_flag_ && a.a.e(this.TAG, 'Could not found AC3 syncword until payload end');
                      }
                      return (
                        (e.prototype.findNextSyncwordOffset = function (e) {
                          for (var t = e, n = this.data_; ; ) {
                            if (t + 7 >= n.byteLength) return (this.eof_flag_ = !0), n.byteLength;
                            if (2935 == ((n[t + 0] << 8) | (n[t + 1] << 0))) return t;
                            t++;
                          }
                        }),
                        (e.prototype.readNextAC3Frame = function () {
                          for (var e = this.data_, t = null; null == t && !this.eof_flag_; ) {
                            var n = this.current_syncword_offset_,
                              r = e[n + 4] >> 6,
                              i = [48e3, 44200, 33e3][r],
                              a = 63 & e[n + 4],
                              o = 2 * be[r][a];
                            if (n + o > this.data_.byteLength) {
                              (this.eof_flag_ = !0), (this.has_last_incomplete_data = !0);
                              break;
                            }
                            var s = this.findNextSyncwordOffset(n + o);
                            this.current_syncword_offset_ = s;
                            var l = e[n + 5] >> 3,
                              u = 7 & e[n + 5],
                              c = e[n + 6] >> 5,
                              d = 0;
                            0 != (1 & c) && 1 !== c && (d += 2), 0 != (4 & c) && (d += 2), 2 === c && (d += 2);
                            var f = (((e[n + 6] << 8) | (e[n + 7] << 0)) >> (12 - d)) & 1,
                              h = [2, 1, 2, 3, 3, 4, 4, 5][c] + f;
                            ((t = new _e()).sampling_frequency = i),
                              (t.channel_count = h),
                              (t.channel_mode = c),
                              (t.bit_stream_identification = l),
                              (t.low_frequency_effects_channel_on = f),
                              (t.bit_stream_mode = u),
                              (t.frame_size_code = a),
                              (t.data = e.subarray(n, n + o));
                          }
                          return t;
                        }),
                        (e.prototype.hasIncompleteData = function () {
                          return this.has_last_incomplete_data;
                        }),
                        (e.prototype.getIncompleteData = function () {
                          return this.has_last_incomplete_data ? this.data_.subarray(this.current_syncword_offset_) : null;
                        }),
                        e
                      );
                    })(),
                    Se = function (e) {
                      var t;
                      (t = [
                        (e.sampling_rate_code << 6) | (e.bit_stream_identification << 1) | (e.bit_stream_mode >> 2),
                        ((3 & e.bit_stream_mode) << 6) | (e.channel_mode << 3) | (e.low_frequency_effects_channel_on << 2) | (e.frame_size_code >> 4),
                        (e.frame_size_code << 4) & 224,
                      ]),
                        (this.config = t),
                        (this.sampling_rate = e.sampling_frequency),
                        (this.bit_stream_identification = e.bit_stream_identification),
                        (this.bit_stream_mode = e.bit_stream_mode),
                        (this.low_frequency_effects_channel_on = e.low_frequency_effects_channel_on),
                        (this.channel_count = e.channel_count),
                        (this.channel_mode = e.channel_mode),
                        (this.codec_mimetype = 'ac-3'),
                        (this.original_codec_mimetype = 'ac-3');
                    },
                    ke =
                      ((fe = function (e, t) {
                        return (fe =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        fe(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    Te = function () {
                      return (Te =
                        Object.assign ||
                        function (e) {
                          for (var t, n = 1, r = arguments.length; n < r; n++) for (var i in (t = arguments[n])) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                          return e;
                        }).apply(this, arguments);
                    },
                    we = (function (e) {
                      function t(t, n) {
                        var r = e.call(this) || this;
                        return (
                          (r.TAG = 'TSDemuxer'),
                          (r.first_parse_ = !0),
                          (r.media_info_ = new l.a()),
                          (r.timescale_ = 90),
                          (r.duration_ = 0),
                          (r.current_pmt_pid_ = -1),
                          (r.program_pmt_map_ = {}),
                          (r.pes_slice_queues_ = {}),
                          (r.section_slice_queues_ = {}),
                          (r.video_metadata_ = { vps: void 0, sps: void 0, pps: void 0, details: void 0 }),
                          (r.audio_metadata_ = { codec: void 0, audio_object_type: void 0, sampling_freq_index: void 0, sampling_frequency: void 0, channel_config: void 0 }),
                          (r.aac_last_sample_pts_ = void 0),
                          (r.aac_last_incomplete_data_ = null),
                          (r.has_video_ = !1),
                          (r.has_audio_ = !1),
                          (r.video_init_segment_dispatched_ = !1),
                          (r.audio_init_segment_dispatched_ = !1),
                          (r.video_metadata_changed_ = !1),
                          (r.audio_metadata_changed_ = !1),
                          (r.loas_previous_frame = null),
                          (r.video_track_ = { type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0 }),
                          (r.audio_track_ = { type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0 }),
                          (r.ts_packet_size_ = t.ts_packet_size),
                          (r.sync_offset_ = t.sync_offset),
                          (r.config_ = n),
                          r
                        );
                      }
                      return (
                        ke(t, e),
                        (t.prototype.destroy = function () {
                          (this.media_info_ = null),
                            (this.pes_slice_queues_ = null),
                            (this.section_slice_queues_ = null),
                            (this.video_metadata_ = null),
                            (this.audio_metadata_ = null),
                            (this.aac_last_incomplete_data_ = null),
                            (this.video_track_ = null),
                            (this.audio_track_ = null),
                            e.prototype.destroy.call(this);
                        }),
                        (t.probe = function (e) {
                          var t = new Uint8Array(e),
                            n = -1,
                            r = 188;
                          if (t.byteLength <= 3 * r) return { needMoreData: !0 };
                          for (; -1 === n; ) {
                            for (var i = Math.min(1e3, t.byteLength - 3 * r), o = 0; o < i; ) {
                              if (71 === t[o] && 71 === t[o + r] && 71 === t[o + 2 * r]) {
                                n = o;
                                break;
                              }
                              o++;
                            }
                            if (-1 === n)
                              if (188 === r) r = 192;
                              else {
                                if (192 !== r) break;
                                r = 204;
                              }
                          }
                          return -1 === n
                            ? { match: !1 }
                            : (192 === r && n >= 4
                                ? (a.a.v('TSDemuxer', 'ts_packet_size = 192, m2ts mode'), (n -= 4))
                                : 204 === r && a.a.v('TSDemuxer', 'ts_packet_size = 204, RS encoded MPEG2-TS stream'),
                              { match: !0, consumed: 0, ts_packet_size: r, sync_offset: n });
                        }),
                        (t.prototype.bindDataSource = function (e) {
                          return (e.onDataArrival = this.parseChunks.bind(this)), this;
                        }),
                        (t.prototype.resetMediaInfo = function () {
                          this.media_info_ = new l.a();
                        }),
                        (t.prototype.parseChunks = function (e, t) {
                          if (!(this.onError && this.onMediaInfo && this.onTrackMetadata && this.onDataAvailable))
                            throw new f.a('onError & onMediaInfo & onTrackMetadata & onDataAvailable callback must be specified');
                          var n = 0;
                          for (this.first_parse_ && ((this.first_parse_ = !1), (n = this.sync_offset_)); n + this.ts_packet_size_ <= e.byteLength; ) {
                            var r = t + n;
                            192 === this.ts_packet_size_ && (n += 4);
                            var i = new Uint8Array(e, n, 188),
                              o = i[0];
                            if (71 !== o) {
                              a.a.e(this.TAG, 'sync_byte = ' + o + ', not 0x47');
                              break;
                            }
                            var s = (64 & i[1]) >>> 6,
                              l = (i[1], ((31 & i[1]) << 8) | i[2]),
                              u = (48 & i[3]) >>> 4,
                              c = 15 & i[3],
                              d = {},
                              h = 4;
                            if (2 == u || 3 == u) {
                              var p = i[4];
                              if (5 + p === 188) {
                                (n += 188), 204 === this.ts_packet_size_ && (n += 16);
                                continue;
                              }
                              p > 0 && (d = this.parseAdaptationField(e, n + 4, 1 + p)), (h = 5 + p);
                            }
                            if (1 == u || 3 == u)
                              if (0 === l || l === this.current_pmt_pid_ || (null != this.pmt_ && this.pmt_.pid_stream_type[l] === S.kSCTE35)) {
                                var v = 188 - h;
                                this.handleSectionSlice(e, n + h, v, {
                                  pid: l,
                                  file_position: r,
                                  payload_unit_start_indicator: s,
                                  continuity_conunter: c,
                                  random_access_indicator: d.random_access_indicator,
                                });
                              } else if (null != this.pmt_ && null != this.pmt_.pid_stream_type[l]) {
                                v = 188 - h;
                                var m = this.pmt_.pid_stream_type[l];
                                (l !== this.pmt_.common_pids.h264 &&
                                  l !== this.pmt_.common_pids.h265 &&
                                  l !== this.pmt_.common_pids.adts_aac &&
                                  l !== this.pmt_.common_pids.loas_aac &&
                                  l !== this.pmt_.common_pids.ac3 &&
                                  l !== this.pmt_.common_pids.opus &&
                                  l !== this.pmt_.common_pids.mp3 &&
                                  !0 !== this.pmt_.pes_private_data_pids[l] &&
                                  !0 !== this.pmt_.timed_id3_pids[l]) ||
                                  this.handlePESSlice(e, n + h, v, {
                                    pid: l,
                                    stream_type: m,
                                    file_position: r,
                                    payload_unit_start_indicator: s,
                                    continuity_conunter: c,
                                    random_access_indicator: d.random_access_indicator,
                                  });
                              }
                            (n += 188), 204 === this.ts_packet_size_ && (n += 16);
                          }
                          return this.dispatchAudioVideoMediaSegment(), n;
                        }),
                        (t.prototype.parseAdaptationField = function (e, t, n) {
                          var r = new Uint8Array(e, t, n),
                            i = r[0];
                          return i > 0
                            ? i > 183
                              ? (a.a.w(this.TAG, 'Illegal adaptation_field_length: ' + i), {})
                              : { discontinuity_indicator: (128 & r[1]) >>> 7, random_access_indicator: (64 & r[1]) >>> 6, elementary_stream_priority_indicator: (32 & r[1]) >>> 5 }
                            : {};
                        }),
                        (t.prototype.handleSectionSlice = function (e, t, n, r) {
                          var i = new Uint8Array(e, t, n),
                            a = this.section_slice_queues_[r.pid];
                          if (r.payload_unit_start_indicator) {
                            var o = i[0];
                            if (null != a && 0 !== a.total_length) {
                              var s = new Uint8Array(e, t + 1, Math.min(n, o));
                              a.slices.push(s), (a.total_length += s.byteLength), a.total_length === a.expected_length ? this.emitSectionSlices(a, r) : this.clearSlices(a, r);
                            }
                            for (var l = 1 + o; l < i.byteLength && 255 !== i[l + 0]; ) {
                              var u = ((15 & i[l + 1]) << 8) | i[l + 2];
                              (this.section_slice_queues_[r.pid] = new O()),
                                ((a = this.section_slice_queues_[r.pid]).expected_length = u + 3),
                                (a.file_position = r.file_position),
                                (a.random_access_indicator = r.random_access_indicator),
                                (s = new Uint8Array(e, t + l, Math.min(n - l, a.expected_length - a.total_length))),
                                a.slices.push(s),
                                (a.total_length += s.byteLength),
                                a.total_length === a.expected_length ? this.emitSectionSlices(a, r) : a.total_length >= a.expected_length && this.clearSlices(a, r),
                                (l += s.byteLength);
                            }
                          } else
                            null != a &&
                              0 !== a.total_length &&
                              ((s = new Uint8Array(e, t, Math.min(n, a.expected_length - a.total_length))),
                              a.slices.push(s),
                              (a.total_length += s.byteLength),
                              a.total_length === a.expected_length ? this.emitSectionSlices(a, r) : a.total_length >= a.expected_length && this.clearSlices(a, r));
                        }),
                        (t.prototype.handlePESSlice = function (e, t, n, r) {
                          var i = new Uint8Array(e, t, n),
                            o = (i[0] << 16) | (i[1] << 8) | i[2],
                            s = (i[3], (i[4] << 8) | i[5]);
                          if (r.payload_unit_start_indicator) {
                            if (1 !== o) return void a.a.e(this.TAG, 'handlePESSlice: packet_start_code_prefix should be 1 but with value ' + o);
                            var l = this.pes_slice_queues_[r.pid];
                            l && (0 === l.expected_length || l.expected_length === l.total_length ? this.emitPESSlices(l, r) : this.clearSlices(l, r)),
                              (this.pes_slice_queues_[r.pid] = new O()),
                              (this.pes_slice_queues_[r.pid].file_position = r.file_position),
                              (this.pes_slice_queues_[r.pid].random_access_indicator = r.random_access_indicator);
                          }
                          if (null != this.pes_slice_queues_[r.pid]) {
                            var u = this.pes_slice_queues_[r.pid];
                            u.slices.push(i),
                              r.payload_unit_start_indicator && (u.expected_length = 0 === s ? 0 : s + 6),
                              (u.total_length += i.byteLength),
                              u.expected_length > 0 && u.expected_length === u.total_length
                                ? this.emitPESSlices(u, r)
                                : u.expected_length > 0 && u.expected_length < u.total_length && this.clearSlices(u, r);
                          }
                        }),
                        (t.prototype.emitSectionSlices = function (e, t) {
                          for (var n = new Uint8Array(e.total_length), r = 0, i = 0; r < e.slices.length; r++) {
                            var a = e.slices[r];
                            n.set(a, i), (i += a.byteLength);
                          }
                          (e.slices = []), (e.expected_length = -1), (e.total_length = 0);
                          var o = new P();
                          (o.pid = t.pid), (o.data = n), (o.file_position = e.file_position), (o.random_access_indicator = e.random_access_indicator), this.parseSection(o);
                        }),
                        (t.prototype.emitPESSlices = function (e, t) {
                          for (var n = new Uint8Array(e.total_length), r = 0, i = 0; r < e.slices.length; r++) {
                            var a = e.slices[r];
                            n.set(a, i), (i += a.byteLength);
                          }
                          (e.slices = []), (e.expected_length = -1), (e.total_length = 0);
                          var o = new M();
                          (o.pid = t.pid),
                            (o.data = n),
                            (o.stream_type = t.stream_type),
                            (o.file_position = e.file_position),
                            (o.random_access_indicator = e.random_access_indicator),
                            this.parsePES(o);
                        }),
                        (t.prototype.clearSlices = function (e, t) {
                          (e.slices = []), (e.expected_length = -1), (e.total_length = 0);
                        }),
                        (t.prototype.parseSection = function (e) {
                          var t = e.data,
                            n = e.pid;
                          0 === n ? this.parsePAT(t) : n === this.current_pmt_pid_ ? this.parsePMT(t) : null != this.pmt_ && this.pmt_.scte_35_pids[n] && this.parseSCTE35(t);
                        }),
                        (t.prototype.parsePES = function (e) {
                          var t = e.data,
                            n = (t[0] << 16) | (t[1] << 8) | t[2],
                            r = t[3],
                            i = (t[4] << 8) | t[5];
                          if (1 === n)
                            if (188 !== r && 190 !== r && 191 !== r && 240 !== r && 241 !== r && 255 !== r && 242 !== r && 248 !== r) {
                              t[6];
                              var o = (192 & t[7]) >>> 6,
                                s = t[8],
                                l = void 0,
                                u = void 0;
                              (2 !== o && 3 !== o) ||
                                ((l = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2),
                                (u = 3 === o ? 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2 : l));
                              var c = 9 + s,
                                d = void 0;
                              if (0 !== i) {
                                if (i < 3 + s) return void a.a.v(this.TAG, 'Malformed PES: PES_packet_length < 3 + PES_header_data_length');
                                d = i - 3 - s;
                              } else d = t.byteLength - c;
                              var f = t.subarray(c, c + d);
                              switch (e.stream_type) {
                                case S.kMPEG1Audio:
                                case S.kMPEG2Audio:
                                  this.parseMP3Payload(f, l);
                                  break;
                                case S.kPESPrivateData:
                                  this.pmt_.common_pids.opus === e.pid
                                    ? this.parseOpusPayload(f, l)
                                    : this.pmt_.common_pids.ac3 === e.pid
                                    ? this.parseAC3Payload(f, l)
                                    : this.pmt_.smpte2038_pids[e.pid]
                                    ? this.parseSMPTE2038MetadataPayload(f, l, u, e.pid, r)
                                    : this.parsePESPrivateDataPayload(f, l, u, e.pid, r);
                                  break;
                                case S.kADTSAAC:
                                  this.parseADTSAACPayload(f, l);
                                  break;
                                case S.kLOASAAC:
                                  this.parseLOASAACPayload(f, l);
                                  break;
                                case S.kAC3:
                                  this.parseAC3Payload(f, l);
                                  break;
                                case S.kID3:
                                  this.parseTimedID3MetadataPayload(f, l, u, e.pid, r);
                                  break;
                                case S.kH264:
                                  this.parseH264Payload(f, l, u, e.file_position, e.random_access_indicator);
                                  break;
                                case S.kH265:
                                  this.parseH265Payload(f, l, u, e.file_position, e.random_access_indicator);
                              }
                            } else
                              (188 !== r && 191 !== r && 240 !== r && 241 !== r && 255 !== r && 242 !== r && 248 !== r) ||
                                e.stream_type !== S.kPESPrivateData ||
                                ((c = 6), (d = void 0), (d = 0 !== i ? i : t.byteLength - c), (f = t.subarray(c, c + d)), this.parsePESPrivateDataPayload(f, void 0, void 0, e.pid, r));
                          else a.a.e(this.TAG, 'parsePES: packet_start_code_prefix should be 1 but with value ' + n);
                        }),
                        (t.prototype.parsePAT = function (e) {
                          var t = e[0];
                          if (0 === t) {
                            var n = ((15 & e[1]) << 8) | e[2],
                              r = (e[3], e[4], (62 & e[5]) >>> 1),
                              i = 1 & e[5],
                              o = e[6],
                              s = (e[7], null);
                            if (1 === i && 0 === o) (s = new x()).version_number = r;
                            else if (null == (s = this.pat_)) return;
                            for (var l = n - 5 - 4, u = -1, c = -1, d = 8; d < 8 + l; d += 4) {
                              var f = (e[d] << 8) | e[d + 1],
                                h = ((31 & e[d + 2]) << 8) | e[d + 3];
                              0 === f ? (s.network_pid = h) : ((s.program_pmt_pid[f] = h), -1 === u && (u = f), -1 === c && (c = h));
                            }
                            1 === i &&
                              0 === o &&
                              (null == this.pat_ && a.a.v(this.TAG, 'Parsed first PAT: ' + JSON.stringify(s)), (this.pat_ = s), (this.current_program_ = u), (this.current_pmt_pid_ = c));
                          } else a.a.e(this.TAG, 'parsePAT: table_id ' + t + ' is not corresponded to PAT!');
                        }),
                        (t.prototype.parsePMT = function (e) {
                          var t = e[0];
                          if (2 === t) {
                            var n = ((15 & e[1]) << 8) | e[2],
                              r = (e[3] << 8) | e[4],
                              i = (62 & e[5]) >>> 1,
                              o = 1 & e[5],
                              s = e[6],
                              l = (e[7], null);
                            if (1 === o && 0 === s) ((l = new I()).program_number = r), (l.version_number = i), (this.program_pmt_map_[r] = l);
                            else if (null == (l = this.program_pmt_map_[r])) return;
                            e[8], e[9];
                            for (var u = ((15 & e[10]) << 8) | e[11], c = 12 + u, d = n - 9 - u - 4, f = c; f < c + d; ) {
                              var h = e[f],
                                p = ((31 & e[f + 1]) << 8) | e[f + 2],
                                v = ((15 & e[f + 3]) << 8) | e[f + 4];
                              l.pid_stream_type[p] = h;
                              var m = l.common_pids.h264 || l.common_pids.h265,
                                g = l.common_pids.adts_aac || l.common_pids.loas_aac || l.common_pids.ac3 || l.common_pids.opus || l.common_pids.mp3;
                              if (h !== S.kH264 || m)
                                if (h !== S.kH265 || m)
                                  if (h !== S.kADTSAAC || g)
                                    if (h !== S.kLOASAAC || g)
                                      if (h !== S.kAC3 || g)
                                        if ((h !== S.kMPEG1Audio && h !== S.kMPEG2Audio) || g)
                                          if (h === S.kPESPrivateData) {
                                            if (((l.pes_private_data_pids[p] = !0), v > 0)) {
                                              for (var y = f + 5; y < f + 5 + v; ) {
                                                var _ = e[y + 0],
                                                  b = e[y + 1];
                                                if (5 === _) {
                                                  var E = String.fromCharCode.apply(String, Array.from(e.subarray(y + 2, y + 2 + b)));
                                                  'VANC' === E ? (l.smpte2038_pids[p] = !0) : 'Opus' === E && (l.common_pids.opus = p);
                                                } else if (127 === _ && p === l.common_pids.opus) {
                                                  var k = null;
                                                  if ((128 === e[y + 2] && (k = e[y + 3]), null == k)) {
                                                    a.a.e(this.TAG, 'Not Supported Opus channel count.');
                                                    continue;
                                                  }
                                                  var T = { codec: 'opus', channel_count: 0 == (15 & k) ? 2 : 15 & k, channel_config_code: k, sample_rate: 48e3 },
                                                    w = { codec: 'opus', meta: T };
                                                  0 == this.audio_init_segment_dispatched_
                                                    ? ((this.audio_metadata_ = T), this.dispatchAudioInitSegment(w))
                                                    : this.detectAudioMetadataChange(w) && (this.dispatchAudioMediaSegment(), this.dispatchAudioInitSegment(w));
                                                }
                                                y += 2 + b;
                                              }
                                              var A = e.subarray(f + 5, f + 5 + v);
                                              this.dispatchPESPrivateDataDescriptor(p, h, A);
                                            }
                                          } else h === S.kID3 ? (l.timed_id3_pids[p] = !0) : h === S.kSCTE35 && (l.scte_35_pids[p] = !0);
                                        else l.common_pids.mp3 = p;
                                      else l.common_pids.ac3 = p;
                                    else l.common_pids.loas_aac = p;
                                  else l.common_pids.adts_aac = p;
                                else l.common_pids.h265 = p;
                              else l.common_pids.h264 = p;
                              f += 5 + v;
                            }
                            r === this.current_program_ &&
                              (null == this.pmt_ && a.a.v(this.TAG, 'Parsed first PMT: ' + JSON.stringify(l)),
                              (this.pmt_ = l),
                              (l.common_pids.h264 || l.common_pids.h265) && (this.has_video_ = !0),
                              (l.common_pids.adts_aac || l.common_pids.loas_aac || l.common_pids.ac3 || l.common_pids.opus || l.common_pids.mp3) && (this.has_audio_ = !0));
                          } else a.a.e(this.TAG, 'parsePMT: table_id ' + t + ' is not corresponded to PMT!');
                        }),
                        (t.prototype.parseSCTE35 = function (e) {
                          var t = (function (e) {
                            var t = new v(e),
                              n = t.readBits(8),
                              r = t.readBool(),
                              i = t.readBool();
                            t.readBits(2);
                            var a = t.readBits(12),
                              o = t.readBits(8),
                              s = t.readBool(),
                              l = t.readBits(6),
                              u = 4 * t.readBits(31) + t.readBits(2),
                              c = t.readBits(8),
                              d = t.readBits(12),
                              f = t.readBits(12),
                              h = t.readBits(8),
                              p = null;
                            h === G.kSpliceNull
                              ? (p = {})
                              : h === G.kSpliceSchedule
                              ? (p = (function (e) {
                                  for (var t = e.readBits(8), n = [], r = 0; r < t; r++) n.push(ie(e));
                                  return { splice_count: t, events: n };
                                })(t))
                              : h === G.kSpliceInsert
                              ? (p = (function (e) {
                                  var t = e.readBits(32),
                                    n = e.readBool();
                                  e.readBits(7);
                                  var r = { splice_event_id: t, splice_event_cancel_indicator: n };
                                  if (n) return r;
                                  if (
                                    ((r.out_of_network_indicator = e.readBool()),
                                    (r.program_splice_flag = e.readBool()),
                                    (r.duration_flag = e.readBool()),
                                    (r.splice_immediate_flag = e.readBool()),
                                    e.readBits(4),
                                    r.program_splice_flag && !r.splice_immediate_flag && (r.splice_time = ee(e)),
                                    !r.program_splice_flag)
                                  ) {
                                    (r.component_count = e.readBits(8)), (r.components = []);
                                    for (var i = 0; i < r.component_count; i++) r.components.push(ne(r.splice_immediate_flag, e));
                                  }
                                  return r.duration_flag && (r.break_duration = te(e)), (r.unique_program_id = e.readBits(16)), (r.avail_num = e.readBits(8)), (r.avails_expected = e.readBits(8)), r;
                                })(t))
                              : h === G.kTimeSignal
                              ? (p = (function (e) {
                                  return { splice_time: ee(e) };
                                })(t))
                              : h === G.kBandwidthReservation
                              ? (p = {})
                              : h === G.kPrivateCommand
                              ? (p = (function (e, t) {
                                  for (var n = String.fromCharCode(t.readBits(8), t.readBits(8), t.readBits(8), t.readBits(8)), r = new Uint8Array(e - 4), i = 0; i < e - 4; i++) r[i] = t.readBits(8);
                                  return { identifier: n, private_data: r.buffer };
                                })(f, t))
                              : t.readBits(8 * f);
                            for (var m = [], g = t.readBits(16), y = 0; y < g; ) {
                              var _ = t.readBits(8),
                                b = t.readBits(8),
                                E = String.fromCharCode(t.readBits(8), t.readBits(8), t.readBits(8), t.readBits(8));
                              0 === _
                                ? m.push(ae(_, b, E, t))
                                : 1 === _
                                ? m.push(oe(_, b, E, t))
                                : 2 === _
                                ? m.push(le(_, b, E, t))
                                : 3 === _
                                ? m.push(ue(_, b, E, t))
                                : 4 === _
                                ? m.push(de(_, b, E, t))
                                : t.readBits(8 * (b - 4)),
                                (y += 2 + b);
                            }
                            var S = {
                              table_id: n,
                              section_syntax_indicator: r,
                              private_indicator: i,
                              section_length: a,
                              protocol_version: o,
                              encrypted_packet: s,
                              encryption_algorithm: l,
                              pts_adjustment: u,
                              cw_index: c,
                              tier: d,
                              splice_command_length: f,
                              splice_command_type: h,
                              splice_command: p,
                              descriptor_loop_length: g,
                              splice_descriptors: m,
                              E_CRC32: s ? t.readBits(32) : void 0,
                              CRC32: t.readBits(32),
                            };
                            if (h === G.kSpliceInsert) {
                              var k = p;
                              if (k.splice_event_cancel_indicator) return { splice_command_type: h, detail: S, data: e };
                              if (k.program_splice_flag && !k.splice_immediate_flag) {
                                var T = k.duration_flag ? k.break_duration.auto_return : void 0,
                                  w = k.duration_flag ? k.break_duration.duration / 90 : void 0;
                                return k.splice_time.time_specified_flag
                                  ? { splice_command_type: h, pts: (u + k.splice_time.pts_time) % Math.pow(2, 33), auto_return: T, duraiton: w, detail: S, data: e }
                                  : { splice_command_type: h, auto_return: T, duraiton: w, detail: S, data: e };
                              }
                              return {
                                splice_command_type: h,
                                auto_return: (T = k.duration_flag ? k.break_duration.auto_return : void 0),
                                duraiton: (w = k.duration_flag ? k.break_duration.duration / 90 : void 0),
                                detail: S,
                                data: e,
                              };
                            }
                            if (h === G.kTimeSignal) {
                              var A = p;
                              return A.splice_time.time_specified_flag
                                ? { splice_command_type: h, pts: (u + A.splice_time.pts_time) % Math.pow(2, 33), detail: S, data: e }
                                : { splice_command_type: h, detail: S, data: e };
                            }
                            return { splice_command_type: h, detail: S, data: e };
                          })(e);
                          if (null != t.pts) {
                            var n = Math.floor(t.pts / this.timescale_);
                            t.pts = n;
                          } else t.nearest_pts = this.aac_last_sample_pts_;
                          this.onSCTE35Metadata && this.onSCTE35Metadata(t);
                        }),
                        (t.prototype.parseH264Payload = function (e, t, n, r, i) {
                          for (var o = new z(e), s = null, l = [], u = 0, c = !1; null != (s = o.readNextNaluPayload()); ) {
                            var d = new U(s);
                            if (d.type === D.kSliceSPS) {
                              var f = m.parseSPS(s.data);
                              this.video_init_segment_dispatched_
                                ? !0 === this.detectVideoMetadataChange(d, f) &&
                                  (a.a.v(this.TAG, 'H264: Critical h264 metadata has been changed, attempt to re-generate InitSegment'),
                                  (this.video_metadata_changed_ = !0),
                                  (this.video_metadata_ = { vps: void 0, sps: d, pps: void 0, details: f }))
                                : ((this.video_metadata_.sps = d), (this.video_metadata_.details = f));
                            } else
                              d.type === D.kSlicePPS
                                ? (this.video_init_segment_dispatched_ && !this.video_metadata_changed_) ||
                                  ((this.video_metadata_.pps = d),
                                  this.video_metadata_.sps && this.video_metadata_.pps && (this.video_metadata_changed_ && this.dispatchVideoMediaSegment(), this.dispatchVideoInitSegment()))
                                : (d.type === D.kSliceIDR || (d.type === D.kSliceNonIDR && 1 === i)) && (c = !0);
                            this.video_init_segment_dispatched_ && (l.push(d), (u += d.data.byteLength));
                          }
                          var h = Math.floor(t / this.timescale_),
                            p = Math.floor(n / this.timescale_);
                          if (l.length) {
                            var v = this.video_track_,
                              g = { units: l, length: u, isKeyframe: c, dts: p, pts: h, cts: h - p, file_position: r };
                            v.samples.push(g), (v.length += u);
                          }
                        }),
                        (t.prototype.parseH265Payload = function (e, t, n, r, i) {
                          for (var o = new ve(e), s = null, l = [], u = 0, c = !1; null != (s = o.readNextNaluPayload()); ) {
                            var d = new pe(s);
                            if (d.type === J.kSliceVPS) {
                              if (!this.video_init_segment_dispatched_) {
                                var f = y.parseVPS(s.data);
                                (this.video_metadata_.vps = d), (this.video_metadata_.details = Te(Te({}, this.video_metadata_.details), f));
                              }
                            } else
                              d.type === J.kSliceSPS
                                ? ((f = y.parseSPS(s.data)),
                                  this.video_init_segment_dispatched_
                                    ? !0 === this.detectVideoMetadataChange(d, f) &&
                                      (a.a.v(this.TAG, 'H265: Critical h265 metadata has been changed, attempt to re-generate InitSegment'),
                                      (this.video_metadata_changed_ = !0),
                                      (this.video_metadata_ = { vps: void 0, sps: d, pps: void 0, details: f }))
                                    : ((this.video_metadata_.sps = d), (this.video_metadata_.details = Te(Te({}, this.video_metadata_.details), f))))
                                : d.type === J.kSlicePPS
                                ? (this.video_init_segment_dispatched_ && !this.video_metadata_changed_) ||
                                  ((f = y.parsePPS(s.data)),
                                  (this.video_metadata_.pps = d),
                                  (this.video_metadata_.details = Te(Te({}, this.video_metadata_.details), f)),
                                  this.video_metadata_.vps &&
                                    this.video_metadata_.sps &&
                                    this.video_metadata_.pps &&
                                    (this.video_metadata_changed_ && this.dispatchVideoMediaSegment(), this.dispatchVideoInitSegment()))
                                : (d.type !== J.kSliceIDR_W_RADL && d.type !== J.kSliceIDR_N_LP && d.type !== J.kSliceCRA_NUT) || (c = !0);
                            this.video_init_segment_dispatched_ && (l.push(d), (u += d.data.byteLength));
                          }
                          var h = Math.floor(t / this.timescale_),
                            p = Math.floor(n / this.timescale_);
                          if (l.length) {
                            var v = this.video_track_,
                              m = { units: l, length: u, isKeyframe: c, dts: p, pts: h, cts: h - p, file_position: r };
                            v.samples.push(m), (v.length += u);
                          }
                        }),
                        (t.prototype.detectVideoMetadataChange = function (e, t) {
                          if (t.codec_mimetype !== this.video_metadata_.details.codec_mimetype)
                            return a.a.v(this.TAG, 'Video: Codec mimeType changed from ' + this.video_metadata_.details.codec_mimetype + ' to ' + t.codec_mimetype), !0;
                          if (t.codec_size.width !== this.video_metadata_.details.codec_size.width || t.codec_size.height !== this.video_metadata_.details.codec_size.height) {
                            var n = this.video_metadata_.details.codec_size,
                              r = t.codec_size;
                            return a.a.v(this.TAG, 'Video: Coded Resolution changed from ' + n.width + 'x' + n.height + ' to ' + r.width + 'x' + r.height), !0;
                          }
                          return (
                            t.present_size.width !== this.video_metadata_.details.present_size.width &&
                            (a.a.v(this.TAG, 'Video: Present resolution width changed from ' + this.video_metadata_.details.present_size.width + ' to ' + t.present_size.width), !0)
                          );
                        }),
                        (t.prototype.isInitSegmentDispatched = function () {
                          return this.has_video_ && this.has_audio_
                            ? this.video_init_segment_dispatched_ && this.audio_init_segment_dispatched_
                            : this.has_video_ && !this.has_audio_
                            ? this.video_init_segment_dispatched_
                            : !(this.has_video_ || !this.has_audio_) && this.audio_init_segment_dispatched_;
                        }),
                        (t.prototype.dispatchVideoInitSegment = function () {
                          var e = this.video_metadata_.details,
                            t = { type: 'video' };
                          (t.id = this.video_track_.id),
                            (t.timescale = 1e3),
                            (t.duration = this.duration_),
                            (t.codecWidth = e.codec_size.width),
                            (t.codecHeight = e.codec_size.height),
                            (t.presentWidth = e.present_size.width),
                            (t.presentHeight = e.present_size.height),
                            (t.profile = e.profile_string),
                            (t.level = e.level_string),
                            (t.bitDepth = e.bit_depth),
                            (t.chromaFormat = e.chroma_format),
                            (t.sarRatio = e.sar_ratio),
                            (t.frameRate = e.frame_rate);
                          var n = t.frameRate.fps_den,
                            r = t.frameRate.fps_num;
                          if (((t.refSampleDuration = (n / r) * 1e3), (t.codec = e.codec_mimetype), this.video_metadata_.vps)) {
                            var i = this.video_metadata_.vps.data.subarray(4),
                              o = this.video_metadata_.sps.data.subarray(4),
                              s = this.video_metadata_.pps.data.subarray(4),
                              l = new me(i, o, s, e);
                            (t.hvcc = l.getData()), 0 == this.video_init_segment_dispatched_ && a.a.v(this.TAG, 'Generated first HEVCDecoderConfigurationRecord for mimeType: ' + t.codec);
                          } else {
                            (o = this.video_metadata_.sps.data.subarray(4)), (s = this.video_metadata_.pps.data.subarray(4));
                            var u = new H(o, s, e);
                            (t.avcc = u.getData()), 0 == this.video_init_segment_dispatched_ && a.a.v(this.TAG, 'Generated first AVCDecoderConfigurationRecord for mimeType: ' + t.codec);
                          }
                          this.onTrackMetadata('video', t), (this.video_init_segment_dispatched_ = !0), (this.video_metadata_changed_ = !1);
                          var c = this.media_info_;
                          (c.hasVideo = !0),
                            (c.width = t.codecWidth),
                            (c.height = t.codecHeight),
                            (c.fps = t.frameRate.fps),
                            (c.profile = t.profile),
                            (c.level = t.level),
                            (c.refFrames = e.ref_frames),
                            (c.chromaFormat = e.chroma_format_string),
                            (c.sarNum = t.sarRatio.width),
                            (c.sarDen = t.sarRatio.height),
                            (c.videoCodec = t.codec),
                            c.hasAudio && c.audioCodec ? (c.mimeType = 'video/mp2t; codecs="' + c.videoCodec + ',' + c.audioCodec + '"') : (c.mimeType = 'video/mp2t; codecs="' + c.videoCodec + '"'),
                            c.isComplete() && this.onMediaInfo(c);
                        }),
                        (t.prototype.dispatchVideoMediaSegment = function () {
                          this.isInitSegmentDispatched() && this.video_track_.length && this.onDataAvailable(null, this.video_track_);
                        }),
                        (t.prototype.dispatchAudioMediaSegment = function () {
                          this.isInitSegmentDispatched() && this.audio_track_.length && this.onDataAvailable(this.audio_track_, null);
                        }),
                        (t.prototype.dispatchAudioVideoMediaSegment = function () {
                          this.isInitSegmentDispatched() && (this.audio_track_.length || this.video_track_.length) && this.onDataAvailable(this.audio_track_, this.video_track_);
                        }),
                        (t.prototype.parseADTSAACPayload = function (e, t) {
                          if (!this.has_video_ || this.video_init_segment_dispatched_) {
                            if (this.aac_last_incomplete_data_) {
                              var n = new Uint8Array(e.byteLength + this.aac_last_incomplete_data_.byteLength);
                              n.set(this.aac_last_incomplete_data_, 0), n.set(e, this.aac_last_incomplete_data_.byteLength), (e = n);
                            }
                            var r, i;
                            if ((null != t && (i = t / this.timescale_), 'aac' === this.audio_metadata_.codec)) {
                              if (null == t && null != this.aac_last_sample_pts_) (r = (1024 / this.audio_metadata_.sampling_frequency) * 1e3), (i = this.aac_last_sample_pts_ + r);
                              else if (null == t) return void a.a.w(this.TAG, 'AAC: Unknown pts');
                              if (this.aac_last_incomplete_data_ && this.aac_last_sample_pts_) {
                                r = (1024 / this.audio_metadata_.sampling_frequency) * 1e3;
                                var o = this.aac_last_sample_pts_ + r;
                                Math.abs(o - i) > 1 && (a.a.w(this.TAG, 'AAC: Detected pts overlapped, expected: ' + o + 'ms, PES pts: ' + i + 'ms'), (i = o));
                              }
                            }
                            for (var s, l = new Y(e), u = null, c = i; null != (u = l.readNextAACFrame()); ) {
                              r = (1024 / u.sampling_frequency) * 1e3;
                              var d = { codec: 'aac', data: u };
                              0 == this.audio_init_segment_dispatched_
                                ? ((this.audio_metadata_ = {
                                    codec: 'aac',
                                    audio_object_type: u.audio_object_type,
                                    sampling_freq_index: u.sampling_freq_index,
                                    sampling_frequency: u.sampling_frequency,
                                    channel_config: u.channel_config,
                                  }),
                                  this.dispatchAudioInitSegment(d))
                                : this.detectAudioMetadataChange(d) && (this.dispatchAudioMediaSegment(), this.dispatchAudioInitSegment(d)),
                                (s = c);
                              var f = Math.floor(c),
                                h = { unit: u.data, length: u.data.byteLength, pts: f, dts: f };
                              this.audio_track_.samples.push(h), (this.audio_track_.length += u.data.byteLength), (c += r);
                            }
                            l.hasIncompleteData() && (this.aac_last_incomplete_data_ = l.getIncompleteData()), s && (this.aac_last_sample_pts_ = s);
                          }
                        }),
                        (t.prototype.parseLOASAACPayload = function (e, t) {
                          var n;
                          if (!this.has_video_ || this.video_init_segment_dispatched_) {
                            if (this.aac_last_incomplete_data_) {
                              var r = new Uint8Array(e.byteLength + this.aac_last_incomplete_data_.byteLength);
                              r.set(this.aac_last_incomplete_data_, 0), r.set(e, this.aac_last_incomplete_data_.byteLength), (e = r);
                            }
                            var i, o;
                            if ((null != t && (o = t / this.timescale_), 'aac' === this.audio_metadata_.codec)) {
                              if (null == t && null != this.aac_last_sample_pts_) (i = (1024 / this.audio_metadata_.sampling_frequency) * 1e3), (o = this.aac_last_sample_pts_ + i);
                              else if (null == t) return void a.a.w(this.TAG, 'AAC: Unknown pts');
                              if (this.aac_last_incomplete_data_ && this.aac_last_sample_pts_) {
                                i = (1024 / this.audio_metadata_.sampling_frequency) * 1e3;
                                var s = this.aac_last_sample_pts_ + i;
                                Math.abs(s - o) > 1 && (a.a.w(this.TAG, 'AAC: Detected pts overlapped, expected: ' + s + 'ms, PES pts: ' + o + 'ms'), (o = s));
                              }
                            }
                            for (var l, u = new X(e), c = null, d = o; null != (c = u.readNextAACFrame(null !== (n = this.loas_previous_frame) && void 0 !== n ? n : void 0)); ) {
                              (this.loas_previous_frame = c), (i = (1024 / c.sampling_frequency) * 1e3);
                              var f = { codec: 'aac', data: c };
                              0 == this.audio_init_segment_dispatched_
                                ? ((this.audio_metadata_ = {
                                    codec: 'aac',
                                    audio_object_type: c.audio_object_type,
                                    sampling_freq_index: c.sampling_freq_index,
                                    sampling_frequency: c.sampling_frequency,
                                    channel_config: c.channel_config,
                                  }),
                                  this.dispatchAudioInitSegment(f))
                                : this.detectAudioMetadataChange(f) && (this.dispatchAudioMediaSegment(), this.dispatchAudioInitSegment(f)),
                                (l = d);
                              var h = Math.floor(d),
                                p = { unit: c.data, length: c.data.byteLength, pts: h, dts: h };
                              this.audio_track_.samples.push(p), (this.audio_track_.length += c.data.byteLength), (d += i);
                            }
                            u.hasIncompleteData() && (this.aac_last_incomplete_data_ = u.getIncompleteData()), l && (this.aac_last_sample_pts_ = l);
                          }
                        }),
                        (t.prototype.parseAC3Payload = function (e, t) {
                          if (!this.has_video_ || this.video_init_segment_dispatched_) {
                            var n, r;
                            if ((null != t && (r = t / this.timescale_), 'ac-3' === this.audio_metadata_.codec))
                              if (null == t && null != this.aac_last_sample_pts_) (n = (1536 / this.audio_metadata_.sampling_frequency) * 1e3), (r = this.aac_last_sample_pts_ + n);
                              else if (null == t) return void a.a.w(this.TAG, 'Opus: Unknown pts');
                            for (var i, o = new Ee(e), s = null, l = r; null != (s = o.readNextAC3Frame()); ) {
                              n = (1536 / s.sampling_frequency) * 1e3;
                              var u = { codec: 'ac-3', data: s };
                              0 == this.audio_init_segment_dispatched_
                                ? ((this.audio_metadata_ = {
                                    codec: 'ac-3',
                                    sampling_frequency: s.sampling_frequency,
                                    bit_stream_identification: s.bit_stream_identification,
                                    bit_stream_mode: s.bit_stream_mode,
                                    low_frequency_effects_channel_on: s.low_frequency_effects_channel_on,
                                    channel_mode: s.channel_mode,
                                  }),
                                  console.log(JSON.stringify(this.audio_metadata_)),
                                  this.dispatchAudioInitSegment(u))
                                : this.detectAudioMetadataChange(u) && (this.dispatchAudioMediaSegment(), this.dispatchAudioInitSegment(u)),
                                (i = l);
                              var c = Math.floor(l),
                                d = { unit: s.data, length: s.data.byteLength, pts: c, dts: c };
                              this.audio_track_.samples.push(d), (this.audio_track_.length += s.data.byteLength), (l += n);
                            }
                            i && (this.aac_last_sample_pts_ = i);
                          }
                        }),
                        (t.prototype.parseOpusPayload = function (e, t) {
                          if (!this.has_video_ || this.video_init_segment_dispatched_) {
                            var n, r;
                            if ((null != t && (r = t / this.timescale_), 'opus' === this.audio_metadata_.codec))
                              if (null == t && null != this.aac_last_sample_pts_) (n = 20), (r = this.aac_last_sample_pts_ + n);
                              else if (null == t) return void a.a.w(this.TAG, 'Opus: Unknown pts');
                            for (var i, o = r, s = 0; s < e.length; ) {
                              n = 20;
                              for (var l = 0 != (16 & e[s + 1]), u = 0 != (8 & e[s + 1]), c = s + 2, d = 0; 255 === e[c]; ) (d += 255), (c += 1);
                              (d += e[c]), (c += 1), (c += l ? 2 : 0), (c += u ? 2 : 0), (i = o);
                              var f = Math.floor(o),
                                h = e.slice(c, c + d),
                                p = { unit: h, length: h.byteLength, pts: f, dts: f };
                              this.audio_track_.samples.push(p), (this.audio_track_.length += h.byteLength), (o += n), (s = c + d);
                            }
                            i && (this.aac_last_sample_pts_ = i);
                          }
                        }),
                        (t.prototype.parseMP3Payload = function (e, t) {
                          if (!this.has_video_ || this.video_init_segment_dispatched_) {
                            var n = (e[1] >>> 3) & 3,
                              r = (6 & e[1]) >> 1,
                              i = (e[2], (12 & e[2]) >>> 2),
                              a = 3 != ((e[3] >>> 6) & 3) ? 2 : 1,
                              o = 0,
                              s = 34;
                            switch (n) {
                              case 0:
                                o = [11025, 12e3, 8e3, 0][i];
                                break;
                              case 2:
                                o = [22050, 24e3, 16e3, 0][i];
                                break;
                              case 3:
                                o = [44100, 48e3, 32e3, 0][i];
                            }
                            switch (r) {
                              case 1:
                                s = 34;
                                break;
                              case 2:
                                s = 33;
                                break;
                              case 3:
                                s = 32;
                            }
                            var l = new ye();
                            (l.object_type = s), (l.sample_rate = o), (l.channel_count = a), (l.data = e);
                            var u = { codec: 'mp3', data: l };
                            0 == this.audio_init_segment_dispatched_
                              ? ((this.audio_metadata_ = { codec: 'mp3', object_type: s, sample_rate: o, channel_count: a }), this.dispatchAudioInitSegment(u))
                              : this.detectAudioMetadataChange(u) && (this.dispatchAudioMediaSegment(), this.dispatchAudioInitSegment(u));
                            var c = { unit: e, length: e.byteLength, pts: t / this.timescale_, dts: t / this.timescale_ };
                            this.audio_track_.samples.push(c), (this.audio_track_.length += e.byteLength);
                          }
                        }),
                        (t.prototype.detectAudioMetadataChange = function (e) {
                          if (e.codec !== this.audio_metadata_.codec) return a.a.v(this.TAG, 'Audio: Audio Codecs changed from ' + this.audio_metadata_.codec + ' to ' + e.codec), !0;
                          if ('aac' === e.codec && 'aac' === this.audio_metadata_.codec) {
                            if ((t = e.data).audio_object_type !== this.audio_metadata_.audio_object_type)
                              return a.a.v(this.TAG, 'AAC: AudioObjectType changed from ' + this.audio_metadata_.audio_object_type + ' to ' + t.audio_object_type), !0;
                            if (t.sampling_freq_index !== this.audio_metadata_.sampling_freq_index)
                              return a.a.v(this.TAG, 'AAC: SamplingFrequencyIndex changed from ' + this.audio_metadata_.sampling_freq_index + ' to ' + t.sampling_freq_index), !0;
                            if (t.channel_config !== this.audio_metadata_.channel_config)
                              return a.a.v(this.TAG, 'AAC: Channel configuration changed from ' + this.audio_metadata_.channel_config + ' to ' + t.channel_config), !0;
                          } else if ('ac-3' === e.codec && 'ac-3' === this.audio_metadata_.codec) {
                            var t;
                            if ((t = e.data).sampling_frequency !== this.audio_metadata_.sampling_frequency)
                              return a.a.v(this.TAG, 'AC3: Sampling Frequency changed from ' + this.audio_metadata_.sampling_frequency + ' to ' + t.sampling_frequency), !0;
                            if (t.bit_stream_identification !== this.audio_metadata_.bit_stream_identification)
                              return a.a.v(this.TAG, 'AC3: Bit Stream Identification changed from ' + this.audio_metadata_.bit_stream_identification + ' to ' + t.bit_stream_identification), !0;
                            if (t.bit_stream_mode !== this.audio_metadata_.bit_stream_mode)
                              return a.a.v(this.TAG, 'AC3: BitStream Mode changed from ' + this.audio_metadata_.bit_stream_mode + ' to ' + t.bit_stream_mode), !0;
                            if (t.channel_mode !== this.audio_metadata_.channel_mode)
                              return a.a.v(this.TAG, 'AC3: Channel Mode changed from ' + this.audio_metadata_.channel_mode + ' to ' + t.channel_mode), !0;
                            if (t.low_frequency_effects_channel_on !== this.audio_metadata_.low_frequency_effects_channel_on)
                              return (
                                a.a.v(
                                  this.TAG,
                                  'AC3: Low Frequency Effects Channel On changed from ' + this.audio_metadata_.low_frequency_effects_channel_on + ' to ' + t.low_frequency_effects_channel_on,
                                ),
                                !0
                              );
                          } else if ('opus' === e.codec && 'opus' === this.audio_metadata_.codec) {
                            if ((n = e.meta).sample_rate !== this.audio_metadata_.sample_rate)
                              return a.a.v(this.TAG, 'Opus: SamplingFrequencyIndex changed from ' + this.audio_metadata_.sample_rate + ' to ' + n.sample_rate), !0;
                            if (n.channel_count !== this.audio_metadata_.channel_count)
                              return a.a.v(this.TAG, 'Opus: Channel count changed from ' + this.audio_metadata_.channel_count + ' to ' + n.channel_count), !0;
                          } else if ('mp3' === e.codec && 'mp3' === this.audio_metadata_.codec) {
                            var n;
                            if ((n = e.data).object_type !== this.audio_metadata_.object_type)
                              return a.a.v(this.TAG, 'MP3: AudioObjectType changed from ' + this.audio_metadata_.object_type + ' to ' + n.object_type), !0;
                            if (n.sample_rate !== this.audio_metadata_.sample_rate)
                              return a.a.v(this.TAG, 'MP3: SamplingFrequencyIndex changed from ' + this.audio_metadata_.sample_rate + ' to ' + n.sample_rate), !0;
                            if (n.channel_count !== this.audio_metadata_.channel_count)
                              return a.a.v(this.TAG, 'MP3: Channel count changed from ' + this.audio_metadata_.channel_count + ' to ' + n.channel_count), !0;
                          }
                          return !1;
                        }),
                        (t.prototype.dispatchAudioInitSegment = function (e) {
                          var t = { type: 'audio' };
                          if (((t.id = this.audio_track_.id), (t.timescale = 1e3), (t.duration = this.duration_), 'aac' === this.audio_metadata_.codec)) {
                            var n = 'aac' === e.codec ? e.data : null,
                              r = new $(n);
                            (t.audioSampleRate = r.sampling_rate),
                              (t.channelCount = r.channel_count),
                              (t.codec = r.codec_mimetype),
                              (t.originalCodec = r.original_codec_mimetype),
                              (t.config = r.config),
                              (t.refSampleDuration = (1024 / t.audioSampleRate) * t.timescale);
                          } else if ('ac-3' === this.audio_metadata_.codec) {
                            var i = 'ac-3' === e.codec ? e.data : null,
                              o = new Se(i);
                            (t.audioSampleRate = o.sampling_rate),
                              (t.channelCount = o.channel_count),
                              (t.codec = o.codec_mimetype),
                              (t.originalCodec = o.original_codec_mimetype),
                              (t.config = o.config),
                              (t.refSampleDuration = (1536 / t.audioSampleRate) * t.timescale);
                          } else
                            'opus' === this.audio_metadata_.codec
                              ? ((t.audioSampleRate = this.audio_metadata_.sample_rate),
                                (t.channelCount = this.audio_metadata_.channel_count),
                                (t.channelConfigCode = this.audio_metadata_.channel_config_code),
                                (t.codec = 'opus'),
                                (t.originalCodec = 'opus'),
                                (t.config = void 0),
                                (t.refSampleDuration = 20))
                              : 'mp3' === this.audio_metadata_.codec &&
                                ((t.audioSampleRate = this.audio_metadata_.sample_rate),
                                (t.channelCount = this.audio_metadata_.channel_count),
                                (t.codec = 'mp3'),
                                (t.originalCodec = 'mp3'),
                                (t.config = void 0));
                          0 == this.audio_init_segment_dispatched_ && a.a.v(this.TAG, 'Generated first AudioSpecificConfig for mimeType: ' + t.codec),
                            this.onTrackMetadata('audio', t),
                            (this.audio_init_segment_dispatched_ = !0),
                            (this.video_metadata_changed_ = !1);
                          var s = this.media_info_;
                          (s.hasAudio = !0),
                            (s.audioCodec = t.originalCodec),
                            (s.audioSampleRate = t.audioSampleRate),
                            (s.audioChannelCount = t.channelCount),
                            s.hasVideo && s.videoCodec ? (s.mimeType = 'video/mp2t; codecs="' + s.videoCodec + ',' + s.audioCodec + '"') : (s.mimeType = 'video/mp2t; codecs="' + s.audioCodec + '"'),
                            s.isComplete() && this.onMediaInfo(s);
                        }),
                        (t.prototype.dispatchPESPrivateDataDescriptor = function (e, t, n) {
                          var r = new Z();
                          (r.pid = e), (r.stream_type = t), (r.descriptor = n), this.onPESPrivateDataDescriptor && this.onPESPrivateDataDescriptor(r);
                        }),
                        (t.prototype.parsePESPrivateDataPayload = function (e, t, n, r, i) {
                          var a = new Q();
                          if (((a.pid = r), (a.stream_id = i), (a.len = e.byteLength), (a.data = e), null != t)) {
                            var o = Math.floor(t / this.timescale_);
                            a.pts = o;
                          } else a.nearest_pts = this.aac_last_sample_pts_;
                          if (null != n) {
                            var s = Math.floor(n / this.timescale_);
                            a.dts = s;
                          }
                          this.onPESPrivateData && this.onPESPrivateData(a);
                        }),
                        (t.prototype.parseTimedID3MetadataPayload = function (e, t, n, r, i) {
                          var a = new Q();
                          if (((a.pid = r), (a.stream_id = i), (a.len = e.byteLength), (a.data = e), null != t)) {
                            var o = Math.floor(t / this.timescale_);
                            a.pts = o;
                          }
                          if (null != n) {
                            var s = Math.floor(n / this.timescale_);
                            a.dts = s;
                          }
                          this.onTimedID3Metadata && this.onTimedID3Metadata(a);
                        }),
                        (t.prototype.parseSMPTE2038MetadataPayload = function (e, t, n, r, i) {
                          var a = new ge();
                          if (((a.pid = r), (a.stream_id = i), (a.len = e.byteLength), (a.data = e), null != t)) {
                            var o = Math.floor(t / this.timescale_);
                            a.pts = o;
                          }
                          if (((a.nearest_pts = this.aac_last_sample_pts_), null != n)) {
                            var s = Math.floor(n / this.timescale_);
                            a.dts = s;
                          }
                          (a.ancillaries = (function (e) {
                            for (var t = new v(e), n = 0, r = []; (n += 6), 0 === t.readBits(6); ) {
                              var i = t.readBool();
                              n += 1;
                              var a = t.readBits(11);
                              n += 11;
                              var o = t.readBits(12);
                              n += 12;
                              var s = 255 & t.readBits(10);
                              n += 10;
                              var l = 255 & t.readBits(10);
                              n += 10;
                              var u = 255 & t.readBits(10);
                              n += 10;
                              for (var c = new Uint8Array(u), d = 0; d < u; d++) {
                                var f = 255 & t.readBits(10);
                                (n += 10), (c[d] = f);
                              }
                              t.readBits(10), (n += 10);
                              var h = 'User Defined';
                              65 === s
                                ? 7 === l && (h = 'SCTE-104')
                                : 95 === s
                                ? 220 === l
                                  ? (h = 'ARIB STD-B37 (1SEG)')
                                  : 221 === l
                                  ? (h = 'ARIB STD-B37 (ANALOG)')
                                  : 222 === l
                                  ? (h = 'ARIB STD-B37 (SD)')
                                  : 223 === l && (h = 'ARIB STD-B37 (HD)')
                                : 97 === s && (1 === l ? (h = 'EIA-708') : 2 === l && (h = 'EIA-608')),
                                r.push({ yc_indicator: i, line_number: a, horizontal_offset: o, did: s, sdid: l, user_data: c, description: h, information: {} }),
                                t.readBits(8 - ((n - Math.floor(n / 8)) % 8)),
                                (n += (8 - (n - Math.floor(n / 8))) % 8);
                            }
                            return t.destroy(), (t = null), r;
                          })(e)),
                            this.onSMPTE2038Metadata && this.onSMPTE2038Metadata(a);
                        }),
                        t
                      );
                    })(C),
                    Ae = (function () {
                      function e() {}
                      return (
                        (e.init = function () {
                          for (var t in ((e.types = {
                            avc1: [],
                            avcC: [],
                            btrt: [],
                            dinf: [],
                            dref: [],
                            esds: [],
                            ftyp: [],
                            hdlr: [],
                            hvc1: [],
                            hvcC: [],
                            mdat: [],
                            mdhd: [],
                            mdia: [],
                            mfhd: [],
                            minf: [],
                            moof: [],
                            moov: [],
                            mp4a: [],
                            mvex: [],
                            mvhd: [],
                            sdtp: [],
                            stbl: [],
                            stco: [],
                            stsc: [],
                            stsd: [],
                            stsz: [],
                            stts: [],
                            tfdt: [],
                            tfhd: [],
                            traf: [],
                            trak: [],
                            trun: [],
                            trex: [],
                            tkhd: [],
                            vmhd: [],
                            smhd: [],
                            '.mp3': [],
                            Opus: [],
                            dOps: [],
                            'ac-3': [],
                            dac3: [],
                          }),
                          e.types))
                            e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                          var n = (e.constants = {});
                          (n.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49])),
                            (n.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1])),
                            (n.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                            (n.STSC = n.STCO = n.STTS),
                            (n.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                            (n.HDLR_VIDEO = new Uint8Array([
                              0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0,
                            ])),
                            (n.HDLR_AUDIO = new Uint8Array([
                              0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0,
                            ])),
                            (n.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])),
                            (n.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                            (n.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]));
                        }),
                        (e.box = function (e) {
                          for (var t = 8, n = null, r = Array.prototype.slice.call(arguments, 1), i = r.length, a = 0; a < i; a++) t += r[a].byteLength;
                          ((n = new Uint8Array(t))[0] = (t >>> 24) & 255), (n[1] = (t >>> 16) & 255), (n[2] = (t >>> 8) & 255), (n[3] = 255 & t), n.set(e, 4);
                          var o = 8;
                          for (a = 0; a < i; a++) n.set(r[a], o), (o += r[a].byteLength);
                          return n;
                        }),
                        (e.generateInitSegment = function (t) {
                          var n = e.box(e.types.ftyp, e.constants.FTYP),
                            r = e.moov(t),
                            i = new Uint8Array(n.byteLength + r.byteLength);
                          return i.set(n, 0), i.set(r, n.byteLength), i;
                        }),
                        (e.moov = function (t) {
                          var n = e.mvhd(t.timescale, t.duration),
                            r = e.trak(t),
                            i = e.mvex(t);
                          return e.box(e.types.moov, n, r, i);
                        }),
                        (e.mvhd = function (t, n) {
                          return e.box(
                            e.types.mvhd,
                            new Uint8Array([
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              (t >>> 24) & 255,
                              (t >>> 16) & 255,
                              (t >>> 8) & 255,
                              255 & t,
                              (n >>> 24) & 255,
                              (n >>> 16) & 255,
                              (n >>> 8) & 255,
                              255 & n,
                              0,
                              1,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              64,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              255,
                              255,
                              255,
                              255,
                            ]),
                          );
                        }),
                        (e.trak = function (t) {
                          return e.box(e.types.trak, e.tkhd(t), e.mdia(t));
                        }),
                        (e.tkhd = function (t) {
                          var n = t.id,
                            r = t.duration,
                            i = t.presentWidth,
                            a = t.presentHeight;
                          return e.box(
                            e.types.tkhd,
                            new Uint8Array([
                              0,
                              0,
                              0,
                              7,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              (n >>> 24) & 255,
                              (n >>> 16) & 255,
                              (n >>> 8) & 255,
                              255 & n,
                              0,
                              0,
                              0,
                              0,
                              (r >>> 24) & 255,
                              (r >>> 16) & 255,
                              (r >>> 8) & 255,
                              255 & r,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              64,
                              0,
                              0,
                              0,
                              (i >>> 8) & 255,
                              255 & i,
                              0,
                              0,
                              (a >>> 8) & 255,
                              255 & a,
                              0,
                              0,
                            ]),
                          );
                        }),
                        (e.mdia = function (t) {
                          return e.box(e.types.mdia, e.mdhd(t), e.hdlr(t), e.minf(t));
                        }),
                        (e.mdhd = function (t) {
                          var n = t.timescale,
                            r = t.duration;
                          return e.box(
                            e.types.mdhd,
                            new Uint8Array([
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              (n >>> 24) & 255,
                              (n >>> 16) & 255,
                              (n >>> 8) & 255,
                              255 & n,
                              (r >>> 24) & 255,
                              (r >>> 16) & 255,
                              (r >>> 8) & 255,
                              255 & r,
                              85,
                              196,
                              0,
                              0,
                            ]),
                          );
                        }),
                        (e.hdlr = function (t) {
                          var n;
                          return (n = 'audio' === t.type ? e.constants.HDLR_AUDIO : e.constants.HDLR_VIDEO), e.box(e.types.hdlr, n);
                        }),
                        (e.minf = function (t) {
                          var n;
                          return (n = 'audio' === t.type ? e.box(e.types.smhd, e.constants.SMHD) : e.box(e.types.vmhd, e.constants.VMHD)), e.box(e.types.minf, n, e.dinf(), e.stbl(t));
                        }),
                        (e.dinf = function () {
                          return e.box(e.types.dinf, e.box(e.types.dref, e.constants.DREF));
                        }),
                        (e.stbl = function (t) {
                          return e.box(
                            e.types.stbl,
                            e.stsd(t),
                            e.box(e.types.stts, e.constants.STTS),
                            e.box(e.types.stsc, e.constants.STSC),
                            e.box(e.types.stsz, e.constants.STSZ),
                            e.box(e.types.stco, e.constants.STCO),
                          );
                        }),
                        (e.stsd = function (t) {
                          return 'audio' === t.type
                            ? 'mp3' === t.codec
                              ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp3(t))
                              : 'ac-3' === t.codec
                              ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.ac3(t))
                              : 'opus' === t.codec
                              ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.Opus(t))
                              : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp4a(t))
                            : 'video' === t.type && t.codec.startsWith('hvc1')
                            ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.hvc1(t))
                            : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.avc1(t));
                        }),
                        (e.mp3 = function (t) {
                          var n = t.channelCount,
                            r = t.audioSampleRate,
                            i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, n, 0, 16, 0, 0, 0, 0, (r >>> 8) & 255, 255 & r, 0, 0]);
                          return e.box(e.types['.mp3'], i);
                        }),
                        (e.mp4a = function (t) {
                          var n = t.channelCount,
                            r = t.audioSampleRate,
                            i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, n, 0, 16, 0, 0, 0, 0, (r >>> 8) & 255, 255 & r, 0, 0]);
                          return e.box(e.types.mp4a, i, e.esds(t));
                        }),
                        (e.ac3 = function (t) {
                          var n = t.channelCount,
                            r = t.audioSampleRate,
                            i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, n, 0, 16, 0, 0, 0, 0, (r >>> 8) & 255, 255 & r, 0, 0]);
                          return e.box(e.types['ac-3'], i, e.box(e.types.dac3, new Uint8Array(t.config)));
                        }),
                        (e.esds = function (t) {
                          var n = t.config || [],
                            r = n.length,
                            i = new Uint8Array([0, 0, 0, 0, 3, 23 + r, 0, 1, 0, 4, 15 + r, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([r]).concat(n).concat([6, 1, 2]));
                          return e.box(e.types.esds, i);
                        }),
                        (e.Opus = function (t) {
                          var n = t.channelCount,
                            r = t.audioSampleRate,
                            i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, n, 0, 16, 0, 0, 0, 0, (r >>> 8) & 255, 255 & r, 0, 0]);
                          return e.box(e.types.Opus, i, e.dOps(t));
                        }),
                        (e.dOps = function (t) {
                          var n = t.channelCount,
                            r = t.channelConfigCode,
                            i = t.audioSampleRate;
                          if (t.config) return e.box(e.types.dOps, o);
                          var a = [];
                          switch (r) {
                            case 1:
                            case 2:
                              a = [0];
                              break;
                            case 0:
                              a = [255, 1, 1, 0, 1];
                              break;
                            case 128:
                              a = [255, 2, 0, 0, 1];
                              break;
                            case 3:
                              a = [1, 2, 1, 0, 2, 1];
                              break;
                            case 4:
                              a = [1, 2, 2, 0, 1, 2, 3];
                              break;
                            case 5:
                              a = [1, 3, 2, 0, 4, 1, 2, 3];
                              break;
                            case 6:
                              a = [1, 4, 2, 0, 4, 1, 2, 3, 5];
                              break;
                            case 7:
                              a = [1, 4, 2, 0, 4, 1, 2, 3, 5, 6];
                              break;
                            case 8:
                              a = [1, 5, 3, 0, 6, 1, 2, 3, 4, 5, 7];
                              break;
                            case 130:
                              a = [1, 1, 2, 0, 1];
                              break;
                            case 131:
                              a = [1, 1, 3, 0, 1, 2];
                              break;
                            case 132:
                              a = [1, 1, 4, 0, 1, 2, 3];
                              break;
                            case 133:
                              a = [1, 1, 5, 0, 1, 2, 3, 4];
                              break;
                            case 134:
                              a = [1, 1, 6, 0, 1, 2, 3, 4, 5];
                              break;
                            case 135:
                              a = [1, 1, 7, 0, 1, 2, 3, 4, 5, 6];
                              break;
                            case 136:
                              a = [1, 1, 8, 0, 1, 2, 3, 4, 5, 6, 7];
                          }
                          var o = new Uint8Array(
                            (function () {
                              for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
                              var r = Array(e),
                                i = 0;
                              for (t = 0; t < n; t++) for (var a = arguments[t], o = 0, s = a.length; o < s; o++, i++) r[i] = a[o];
                              return r;
                            })([0, n, 0, 0, (i >>> 24) & 255, (i >>> 17) & 255, (i >>> 8) & 255, (i >>> 0) & 255, 0, 0], a),
                          );
                          return e.box(e.types.dOps, o);
                        }),
                        (e.avc1 = function (t) {
                          var n = t.avcc,
                            r = t.codecWidth,
                            i = t.codecHeight,
                            a = new Uint8Array([
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              (r >>> 8) & 255,
                              255 & r,
                              (i >>> 8) & 255,
                              255 & i,
                              0,
                              72,
                              0,
                              0,
                              0,
                              72,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              10,
                              120,
                              113,
                              113,
                              47,
                              102,
                              108,
                              118,
                              46,
                              106,
                              115,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              24,
                              255,
                              255,
                            ]);
                          return e.box(e.types.avc1, a, e.box(e.types.avcC, n));
                        }),
                        (e.hvc1 = function (t) {
                          var n = t.hvcc,
                            r = t.codecWidth,
                            i = t.codecHeight,
                            a = new Uint8Array([
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              (r >>> 8) & 255,
                              255 & r,
                              (i >>> 8) & 255,
                              255 & i,
                              0,
                              72,
                              0,
                              0,
                              0,
                              72,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              10,
                              120,
                              113,
                              113,
                              47,
                              102,
                              108,
                              118,
                              46,
                              106,
                              115,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              24,
                              255,
                              255,
                            ]);
                          return e.box(e.types.hvc1, a, e.box(e.types.hvcC, n));
                        }),
                        (e.mvex = function (t) {
                          return e.box(e.types.mvex, e.trex(t));
                        }),
                        (e.trex = function (t) {
                          var n = t.id,
                            r = new Uint8Array([0, 0, 0, 0, (n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, 255 & n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                          return e.box(e.types.trex, r);
                        }),
                        (e.moof = function (t, n) {
                          return e.box(e.types.moof, e.mfhd(t.sequenceNumber), e.traf(t, n));
                        }),
                        (e.mfhd = function (t) {
                          var n = new Uint8Array([0, 0, 0, 0, (t >>> 24) & 255, (t >>> 16) & 255, (t >>> 8) & 255, 255 & t]);
                          return e.box(e.types.mfhd, n);
                        }),
                        (e.traf = function (t, n) {
                          var r = t.id,
                            i = e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, (r >>> 24) & 255, (r >>> 16) & 255, (r >>> 8) & 255, 255 & r])),
                            a = e.box(e.types.tfdt, new Uint8Array([0, 0, 0, 0, (n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, 255 & n])),
                            o = e.sdtp(t),
                            s = e.trun(t, o.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
                          return e.box(e.types.traf, i, a, s, o);
                        }),
                        (e.sdtp = function (t) {
                          for (var n = t.samples || [], r = n.length, i = new Uint8Array(4 + r), a = 0; a < r; a++) {
                            var o = n[a].flags;
                            i[a + 4] = (o.isLeading << 6) | (o.dependsOn << 4) | (o.isDependedOn << 2) | o.hasRedundancy;
                          }
                          return e.box(e.types.sdtp, i);
                        }),
                        (e.trun = function (t, n) {
                          var r = t.samples || [],
                            i = r.length,
                            a = 12 + 16 * i,
                            o = new Uint8Array(a);
                          (n += 8 + a), o.set([0, 0, 15, 1, (i >>> 24) & 255, (i >>> 16) & 255, (i >>> 8) & 255, 255 & i, (n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, 255 & n], 0);
                          for (var s = 0; s < i; s++) {
                            var l = r[s].duration,
                              u = r[s].size,
                              c = r[s].flags,
                              d = r[s].cts;
                            o.set(
                              [
                                (l >>> 24) & 255,
                                (l >>> 16) & 255,
                                (l >>> 8) & 255,
                                255 & l,
                                (u >>> 24) & 255,
                                (u >>> 16) & 255,
                                (u >>> 8) & 255,
                                255 & u,
                                (c.isLeading << 2) | c.dependsOn,
                                (c.isDependedOn << 6) | (c.hasRedundancy << 4) | c.isNonSync,
                                0,
                                0,
                                (d >>> 24) & 255,
                                (d >>> 16) & 255,
                                (d >>> 8) & 255,
                                255 & d,
                              ],
                              12 + 16 * s,
                            );
                          }
                          return e.box(e.types.trun, o);
                        }),
                        (e.mdat = function (t) {
                          return e.box(e.types.mdat, t);
                        }),
                        e
                      );
                    })();
                  Ae.init();
                  var Le = Ae,
                    Re = (function () {
                      function e() {}
                      return (
                        (e.getSilentFrame = function (e, t) {
                          if ('mp4a.40.2' === e) {
                            if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                            if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                            if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                            if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                            if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                            if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                          } else {
                            if (1 === t)
                              return new Uint8Array([
                                1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                                90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                              ]);
                            if (2 === t)
                              return new Uint8Array([
                                1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                                90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                              ]);
                            if (3 === t)
                              return new Uint8Array([
                                1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                                90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                              ]);
                          }
                          return null;
                        }),
                        e
                      );
                    })(),
                    Ce = n(7),
                    xe = (function () {
                      function e(e) {
                        (this.TAG = 'MP4Remuxer'),
                          (this._config = e),
                          (this._isLive = !0 === e.isLive),
                          (this._dtsBase = -1),
                          (this._dtsBaseInited = !1),
                          (this._audioDtsBase = 1 / 0),
                          (this._videoDtsBase = 1 / 0),
                          (this._audioNextDts = void 0),
                          (this._videoNextDts = void 0),
                          (this._audioStashedLastSample = null),
                          (this._videoStashedLastSample = null),
                          (this._audioMeta = null),
                          (this._videoMeta = null),
                          (this._audioSegmentInfoList = new Ce.c('audio')),
                          (this._videoSegmentInfoList = new Ce.c('video')),
                          (this._onInitSegment = null),
                          (this._onMediaSegment = null),
                          (this._forceFirstIDR = !(!o.a.chrome || !(o.a.version.major < 50 || (50 === o.a.version.major && o.a.version.build < 2661)))),
                          (this._fillSilentAfterSeek = o.a.msedge || o.a.msie),
                          (this._mp3UseMpegAudio = !o.a.firefox),
                          (this._fillAudioTimestampGap = this._config.fixAudioTimestampGap);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          (this._dtsBase = -1),
                            (this._dtsBaseInited = !1),
                            (this._audioMeta = null),
                            (this._videoMeta = null),
                            this._audioSegmentInfoList.clear(),
                            (this._audioSegmentInfoList = null),
                            this._videoSegmentInfoList.clear(),
                            (this._videoSegmentInfoList = null),
                            (this._onInitSegment = null),
                            (this._onMediaSegment = null);
                        }),
                        (e.prototype.bindDataSource = function (e) {
                          return (e.onDataAvailable = this.remux.bind(this)), (e.onTrackMetadata = this._onTrackMetadataReceived.bind(this)), this;
                        }),
                        Object.defineProperty(e.prototype, 'onInitSegment', {
                          get: function () {
                            return this._onInitSegment;
                          },
                          set: function (e) {
                            this._onInitSegment = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onMediaSegment', {
                          get: function () {
                            return this._onMediaSegment;
                          },
                          set: function (e) {
                            this._onMediaSegment = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype.insertDiscontinuity = function () {
                          this._audioNextDts = this._videoNextDts = void 0;
                        }),
                        (e.prototype.seek = function (e) {
                          (this._audioStashedLastSample = null), (this._videoStashedLastSample = null), this._videoSegmentInfoList.clear(), this._audioSegmentInfoList.clear();
                        }),
                        (e.prototype.remux = function (e, t) {
                          if (!this._onMediaSegment) throw new f.a('MP4Remuxer: onMediaSegment callback must be specificed!');
                          this._dtsBaseInited || this._calculateDtsBase(e, t), t && this._remuxVideo(t), e && this._remuxAudio(e);
                        }),
                        (e.prototype._onTrackMetadataReceived = function (e, t) {
                          var n = null,
                            r = 'mp4',
                            i = t.codec;
                          if ('audio' === e) (this._audioMeta = t), 'mp3' === t.codec && this._mp3UseMpegAudio ? ((r = 'mpeg'), (i = ''), (n = new Uint8Array())) : (n = Le.generateInitSegment(t));
                          else {
                            if ('video' !== e) return;
                            (this._videoMeta = t), (n = Le.generateInitSegment(t));
                          }
                          if (!this._onInitSegment) throw new f.a('MP4Remuxer: onInitSegment callback must be specified!');
                          this._onInitSegment(e, { type: e, data: n.buffer, codec: i, container: e + '/' + r, mediaDuration: t.duration });
                        }),
                        (e.prototype._calculateDtsBase = function (e, t) {
                          this._dtsBaseInited ||
                            (e && e.samples && e.samples.length && (this._audioDtsBase = e.samples[0].dts),
                            t && t.samples && t.samples.length && (this._videoDtsBase = t.samples[0].dts),
                            (this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase)),
                            (this._dtsBaseInited = !0));
                        }),
                        (e.prototype.getTimestampBase = function () {
                          if (this._dtsBaseInited) return this._dtsBase;
                        }),
                        (e.prototype.flushStashedSamples = function () {
                          var e = this._videoStashedLastSample,
                            t = this._audioStashedLastSample,
                            n = { type: 'video', id: 1, sequenceNumber: 0, samples: [], length: 0 };
                          null != e && (n.samples.push(e), (n.length = e.length));
                          var r = { type: 'audio', id: 2, sequenceNumber: 0, samples: [], length: 0 };
                          null != t && (r.samples.push(t), (r.length = t.length)),
                            (this._videoStashedLastSample = null),
                            (this._audioStashedLastSample = null),
                            this._remuxVideo(n, !0),
                            this._remuxAudio(r, !0);
                        }),
                        (e.prototype._remuxAudio = function (e, t) {
                          if (null != this._audioMeta) {
                            var n,
                              r = e,
                              i = r.samples,
                              s = void 0,
                              l = -1,
                              u = this._audioMeta.refSampleDuration,
                              c = 'mp3' === this._audioMeta.codec && this._mp3UseMpegAudio,
                              d = this._dtsBaseInited && void 0 === this._audioNextDts,
                              f = !1;
                            if (i && 0 !== i.length && (1 !== i.length || t)) {
                              var h = 0,
                                p = null,
                                v = 0;
                              c ? ((h = 0), (v = r.length)) : ((h = 8), (v = 8 + r.length));
                              var m = null;
                              if ((i.length > 1 && (v -= (m = i.pop()).length), null != this._audioStashedLastSample)) {
                                var g = this._audioStashedLastSample;
                                (this._audioStashedLastSample = null), i.unshift(g), (v += g.length);
                              }
                              null != m && (this._audioStashedLastSample = m);
                              var y = i[0].dts - this._dtsBase;
                              if (this._audioNextDts) s = y - this._audioNextDts;
                              else if (this._audioSegmentInfoList.isEmpty())
                                (s = 0), this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty() && 'mp3' !== this._audioMeta.originalCodec && (f = !0);
                              else {
                                var _ = this._audioSegmentInfoList.getLastSampleBefore(y);
                                if (null != _) {
                                  var b = y - (_.originalDts + _.duration);
                                  b <= 3 && (b = 0), (s = y - (_.dts + _.duration + b));
                                } else s = 0;
                              }
                              if (f) {
                                var E = y - s,
                                  S = this._videoSegmentInfoList.getLastSegmentBefore(y);
                                if (null != S && S.beginDts < E) {
                                  if ((M = Re.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount))) {
                                    var k = S.beginDts,
                                      T = E - S.beginDts;
                                    a.a.v(this.TAG, 'InsertPrefixSilentAudio: dts: ' + k + ', duration: ' + T), i.unshift({ unit: M, dts: k, pts: k }), (v += M.byteLength);
                                  }
                                } else f = !1;
                              }
                              for (var w = [], A = 0; A < i.length; A++) {
                                var L = (g = i[A]).unit,
                                  R = g.dts - this._dtsBase,
                                  C = ((k = R), !1),
                                  x = null,
                                  D = 0;
                                if (!(R < -0.001)) {
                                  if ('mp3' !== this._audioMeta.codec) {
                                    var I = R;
                                    if ((this._audioNextDts && (I = this._audioNextDts), (s = R - I) <= -3 * u)) {
                                      a.a.w(this.TAG, 'Dropping 1 audio frame (originalDts: ' + R + ' ms ,curRefDts: ' + I + ' ms)  due to dtsCorrection: ' + s + ' ms overlap.');
                                      continue;
                                    }
                                    if (s >= 3 * u && this._fillAudioTimestampGap && !o.a.safari) {
                                      C = !0;
                                      var M,
                                        P = Math.floor(s / u);
                                      a.a.w(
                                        this.TAG,
                                        'Large audio timestamp gap detected, may cause AV sync to drift. Silent frames will be generated to avoid unsync.\noriginalDts: ' +
                                          R +
                                          ' ms, curRefDts: ' +
                                          I +
                                          ' ms, dtsCorrection: ' +
                                          Math.round(s) +
                                          ' ms, generate: ' +
                                          P +
                                          ' frames',
                                      ),
                                        (k = Math.floor(I)),
                                        (D = Math.floor(I + u) - k),
                                        null == (M = Re.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount)) &&
                                          (a.a.w(
                                            this.TAG,
                                            'Unable to generate silent frame for ' + this._audioMeta.originalCodec + ' with ' + this._audioMeta.channelCount + ' channels, repeat last frame',
                                          ),
                                          (M = L)),
                                        (x = []);
                                      for (var O = 0; O < P; O++) {
                                        I += u;
                                        var F = Math.floor(I),
                                          N = Math.floor(I + u) - F,
                                          B = {
                                            dts: F,
                                            pts: F,
                                            cts: 0,
                                            unit: M,
                                            size: M.byteLength,
                                            duration: N,
                                            originalDts: R,
                                            flags: { isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0 },
                                          };
                                        x.push(B), (v += B.size);
                                      }
                                      this._audioNextDts = I + u;
                                    } else (k = Math.floor(I)), (D = Math.floor(I + u) - k), (this._audioNextDts = I + u);
                                  } else
                                    (k = R - s),
                                      (D =
                                        A !== i.length - 1
                                          ? i[A + 1].dts - this._dtsBase - s - k
                                          : null != m
                                          ? m.dts - this._dtsBase - s - k
                                          : w.length >= 1
                                          ? w[w.length - 1].duration
                                          : Math.floor(u)),
                                      (this._audioNextDts = k + D);
                                  -1 === l && (l = k),
                                    w.push({
                                      dts: k,
                                      pts: k,
                                      cts: 0,
                                      unit: g.unit,
                                      size: g.unit.byteLength,
                                      duration: D,
                                      originalDts: R,
                                      flags: { isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0 },
                                    }),
                                    C && w.push.apply(w, x);
                                }
                              }
                              if (0 === w.length) return (r.samples = []), void (r.length = 0);
                              for (
                                c
                                  ? (p = new Uint8Array(v))
                                  : (((p = new Uint8Array(v))[0] = (v >>> 24) & 255), (p[1] = (v >>> 16) & 255), (p[2] = (v >>> 8) & 255), (p[3] = 255 & v), p.set(Le.types.mdat, 4)),
                                  A = 0;
                                A < w.length;
                                A++
                              )
                                (L = w[A].unit), p.set(L, h), (h += L.byteLength);
                              var U = w[w.length - 1];
                              n = U.dts + U.duration;
                              var z,
                                H = new Ce.b();
                              (H.beginDts = l),
                                (H.endDts = n),
                                (H.beginPts = l),
                                (H.endPts = n),
                                (H.originalBeginDts = w[0].originalDts),
                                (H.originalEndDts = U.originalDts + U.duration),
                                (H.firstSample = new Ce.d(w[0].dts, w[0].pts, w[0].duration, w[0].originalDts, !1)),
                                (H.lastSample = new Ce.d(U.dts, U.pts, U.duration, U.originalDts, !1)),
                                this._isLive || this._audioSegmentInfoList.append(H),
                                (r.samples = w),
                                r.sequenceNumber++,
                                (z = c ? new Uint8Array() : Le.moof(r, l)),
                                (r.samples = []),
                                (r.length = 0);
                              var V = { type: 'audio', data: this._mergeBoxes(z, p).buffer, sampleCount: w.length, info: H };
                              c && d && (V.timestampOffset = l), this._onMediaSegment('audio', V);
                            }
                          }
                        }),
                        (e.prototype._remuxVideo = function (e, t) {
                          if (null != this._videoMeta) {
                            var n,
                              r,
                              i = e,
                              a = i.samples,
                              o = void 0,
                              s = -1,
                              l = -1;
                            if (a && 0 !== a.length && (1 !== a.length || t)) {
                              var u = 8,
                                c = null,
                                d = 8 + e.length,
                                f = null;
                              if ((a.length > 1 && (d -= (f = a.pop()).length), null != this._videoStashedLastSample)) {
                                var h = this._videoStashedLastSample;
                                (this._videoStashedLastSample = null), a.unshift(h), (d += h.length);
                              }
                              null != f && (this._videoStashedLastSample = f);
                              var p = a[0].dts - this._dtsBase;
                              if (this._videoNextDts) o = p - this._videoNextDts;
                              else if (this._videoSegmentInfoList.isEmpty()) o = 0;
                              else {
                                var v = this._videoSegmentInfoList.getLastSampleBefore(p);
                                if (null != v) {
                                  var m = p - (v.originalDts + v.duration);
                                  m <= 3 && (m = 0), (o = p - (v.dts + v.duration + m));
                                } else o = 0;
                              }
                              for (var g = new Ce.b(), y = [], _ = 0; _ < a.length; _++) {
                                var b = (h = a[_]).dts - this._dtsBase,
                                  E = h.isKeyframe,
                                  S = b - o,
                                  k = h.cts,
                                  T = S + k;
                                -1 === s && ((s = S), (l = T));
                                var w = 0;
                                if (
                                  ((w =
                                    _ !== a.length - 1
                                      ? a[_ + 1].dts - this._dtsBase - o - S
                                      : null != f
                                      ? f.dts - this._dtsBase - o - S
                                      : y.length >= 1
                                      ? y[y.length - 1].duration
                                      : Math.floor(this._videoMeta.refSampleDuration)),
                                  E)
                                ) {
                                  var A = new Ce.d(S, T, w, h.dts, !0);
                                  (A.fileposition = h.fileposition), g.appendSyncPoint(A);
                                }
                                y.push({
                                  dts: S,
                                  pts: T,
                                  cts: k,
                                  units: h.units,
                                  size: h.length,
                                  isKeyframe: E,
                                  duration: w,
                                  originalDts: b,
                                  flags: { isLeading: 0, dependsOn: E ? 2 : 1, isDependedOn: E ? 1 : 0, hasRedundancy: 0, isNonSync: E ? 0 : 1 },
                                });
                              }
                              for ((c = new Uint8Array(d))[0] = (d >>> 24) & 255, c[1] = (d >>> 16) & 255, c[2] = (d >>> 8) & 255, c[3] = 255 & d, c.set(Le.types.mdat, 4), _ = 0; _ < y.length; _++)
                                for (var L = y[_].units; L.length; ) {
                                  var R = L.shift().data;
                                  c.set(R, u), (u += R.byteLength);
                                }
                              var C = y[y.length - 1];
                              if (
                                ((n = C.dts + C.duration),
                                (r = C.pts + C.duration),
                                (this._videoNextDts = n),
                                (g.beginDts = s),
                                (g.endDts = n),
                                (g.beginPts = l),
                                (g.endPts = r),
                                (g.originalBeginDts = y[0].originalDts),
                                (g.originalEndDts = C.originalDts + C.duration),
                                (g.firstSample = new Ce.d(y[0].dts, y[0].pts, y[0].duration, y[0].originalDts, y[0].isKeyframe)),
                                (g.lastSample = new Ce.d(C.dts, C.pts, C.duration, C.originalDts, C.isKeyframe)),
                                this._isLive || this._videoSegmentInfoList.append(g),
                                (i.samples = y),
                                i.sequenceNumber++,
                                this._forceFirstIDR)
                              ) {
                                var x = y[0].flags;
                                (x.dependsOn = 2), (x.isNonSync = 0);
                              }
                              var D = Le.moof(i, s);
                              (i.samples = []), (i.length = 0), this._onMediaSegment('video', { type: 'video', data: this._mergeBoxes(D, c).buffer, sampleCount: y.length, info: g });
                            }
                          }
                        }),
                        (e.prototype._mergeBoxes = function (e, t) {
                          var n = new Uint8Array(e.byteLength + t.byteLength);
                          return n.set(e, 0), n.set(t, e.byteLength), n;
                        }),
                        e
                      );
                    })(),
                    De = n(11),
                    Ie = n(1),
                    Me = (function () {
                      function e(e, t) {
                        (this.TAG = 'TransmuxingController'),
                          (this._emitter = new i.a()),
                          (this._config = t),
                          e.segments || (e.segments = [{ duration: e.duration, filesize: e.filesize, url: e.url }]),
                          'boolean' != typeof e.cors && (e.cors = !0),
                          'boolean' != typeof e.withCredentials && (e.withCredentials = !1),
                          (this._mediaDataSource = e),
                          (this._currentSegmentIndex = 0);
                        var n = 0;
                        this._mediaDataSource.segments.forEach(function (r) {
                          (r.timestampBase = n), (n += r.duration), (r.cors = e.cors), (r.withCredentials = e.withCredentials), t.referrerPolicy && (r.referrerPolicy = t.referrerPolicy);
                        }),
                          isNaN(n) || this._mediaDataSource.duration === n || (this._mediaDataSource.duration = n),
                          (this._mediaInfo = null),
                          (this._demuxer = null),
                          (this._remuxer = null),
                          (this._ioctl = null),
                          (this._pendingSeekTime = null),
                          (this._pendingResolveSeekPoint = null),
                          (this._statisticsReporter = null);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          (this._mediaInfo = null),
                            (this._mediaDataSource = null),
                            this._statisticsReporter && this._disableStatisticsReporter(),
                            this._ioctl && (this._ioctl.destroy(), (this._ioctl = null)),
                            this._demuxer && (this._demuxer.destroy(), (this._demuxer = null)),
                            this._remuxer && (this._remuxer.destroy(), (this._remuxer = null)),
                            this._emitter.removeAllListeners(),
                            (this._emitter = null);
                        }),
                        (e.prototype.on = function (e, t) {
                          this._emitter.addListener(e, t);
                        }),
                        (e.prototype.off = function (e, t) {
                          this._emitter.removeListener(e, t);
                        }),
                        (e.prototype.start = function () {
                          this._loadSegment(0), this._enableStatisticsReporter();
                        }),
                        (e.prototype._loadSegment = function (e, t) {
                          this._currentSegmentIndex = e;
                          var n = this._mediaDataSource.segments[e],
                            r = (this._ioctl = new De.a(n, this._config, e));
                          (r.onError = this._onIOException.bind(this)),
                            (r.onSeeked = this._onIOSeeked.bind(this)),
                            (r.onComplete = this._onIOComplete.bind(this)),
                            (r.onRedirect = this._onIORedirect.bind(this)),
                            (r.onRecoveredEarlyEof = this._onIORecoveredEarlyEof.bind(this)),
                            t ? this._demuxer.bindDataSource(this._ioctl) : (r.onDataArrival = this._onInitChunkArrival.bind(this)),
                            r.open(t);
                        }),
                        (e.prototype.stop = function () {
                          this._internalAbort(), this._disableStatisticsReporter();
                        }),
                        (e.prototype._internalAbort = function () {
                          this._ioctl && (this._ioctl.destroy(), (this._ioctl = null));
                        }),
                        (e.prototype.pause = function () {
                          this._ioctl && this._ioctl.isWorking() && (this._ioctl.pause(), this._disableStatisticsReporter());
                        }),
                        (e.prototype.resume = function () {
                          this._ioctl && this._ioctl.isPaused() && (this._ioctl.resume(), this._enableStatisticsReporter());
                        }),
                        (e.prototype.seek = function (e) {
                          if (null != this._mediaInfo && this._mediaInfo.isSeekable()) {
                            var t = this._searchSegmentIndexContains(e);
                            if (t === this._currentSegmentIndex) {
                              var n = this._mediaInfo.segments[t];
                              if (null == n) this._pendingSeekTime = e;
                              else {
                                var r = n.getNearestKeyframe(e);
                                this._remuxer.seek(r.milliseconds), this._ioctl.seek(r.fileposition), (this._pendingResolveSeekPoint = r.milliseconds);
                              }
                            } else {
                              var i = this._mediaInfo.segments[t];
                              null == i
                                ? ((this._pendingSeekTime = e), this._internalAbort(), this._remuxer.seek(), this._remuxer.insertDiscontinuity(), this._loadSegment(t))
                                : ((r = i.getNearestKeyframe(e)),
                                  this._internalAbort(),
                                  this._remuxer.seek(e),
                                  this._remuxer.insertDiscontinuity(),
                                  this._demuxer.resetMediaInfo(),
                                  (this._demuxer.timestampBase = this._mediaDataSource.segments[t].timestampBase),
                                  this._loadSegment(t, r.fileposition),
                                  (this._pendingResolveSeekPoint = r.milliseconds),
                                  this._reportSegmentMediaInfo(t));
                            }
                            this._enableStatisticsReporter();
                          }
                        }),
                        (e.prototype._searchSegmentIndexContains = function (e) {
                          for (var t = this._mediaDataSource.segments, n = t.length - 1, r = 0; r < t.length; r++)
                            if (e < t[r].timestampBase) {
                              n = r - 1;
                              break;
                            }
                          return n;
                        }),
                        (e.prototype._onInitChunkArrival = function (e, t) {
                          var n = this,
                            r = 0;
                          if (t > 0)
                            this._demuxer.bindDataSource(this._ioctl),
                              (this._demuxer.timestampBase = this._mediaDataSource.segments[this._currentSegmentIndex].timestampBase),
                              (r = this._demuxer.parseChunks(e, t));
                          else {
                            var i = null;
                            (i = R.probe(e)).match && (this._setupFLVDemuxerRemuxer(i), (r = this._demuxer.parseChunks(e, t))),
                              i.match || i.needMoreData || ((i = we.probe(e)).match && (this._setupTSDemuxerRemuxer(i), (r = this._demuxer.parseChunks(e, t)))),
                              i.match ||
                                i.needMoreData ||
                                ((i = null),
                                a.a.e(this.TAG, 'Non MPEG-TS/FLV, Unsupported media type!'),
                                Promise.resolve().then(function () {
                                  n._internalAbort();
                                }),
                                this._emitter.emit(Ie.a.DEMUX_ERROR, g.a.FORMAT_UNSUPPORTED, 'Non MPEG-TS/FLV, Unsupported media type!'));
                          }
                          return r;
                        }),
                        (e.prototype._setupFLVDemuxerRemuxer = function (e) {
                          (this._demuxer = new R(e, this._config)), this._remuxer || (this._remuxer = new xe(this._config));
                          var t = this._mediaDataSource;
                          null == t.duration || isNaN(t.duration) || (this._demuxer.overridedDuration = t.duration),
                            'boolean' == typeof t.hasAudio && (this._demuxer.overridedHasAudio = t.hasAudio),
                            'boolean' == typeof t.hasVideo && (this._demuxer.overridedHasVideo = t.hasVideo),
                            (this._demuxer.timestampBase = t.segments[this._currentSegmentIndex].timestampBase),
                            (this._demuxer.onError = this._onDemuxException.bind(this)),
                            (this._demuxer.onMediaInfo = this._onMediaInfo.bind(this)),
                            (this._demuxer.onMetaDataArrived = this._onMetaDataArrived.bind(this)),
                            (this._demuxer.onScriptDataArrived = this._onScriptDataArrived.bind(this)),
                            this._remuxer.bindDataSource(this._demuxer.bindDataSource(this._ioctl)),
                            (this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this)),
                            (this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this));
                        }),
                        (e.prototype._setupTSDemuxerRemuxer = function (e) {
                          var t = (this._demuxer = new we(e, this._config));
                          this._remuxer || (this._remuxer = new xe(this._config)),
                            (t.onError = this._onDemuxException.bind(this)),
                            (t.onMediaInfo = this._onMediaInfo.bind(this)),
                            (t.onMetaDataArrived = this._onMetaDataArrived.bind(this)),
                            (t.onTimedID3Metadata = this._onTimedID3Metadata.bind(this)),
                            (t.onSMPTE2038Metadata = this._onSMPTE2038Metadata.bind(this)),
                            (t.onSCTE35Metadata = this._onSCTE35Metadata.bind(this)),
                            (t.onPESPrivateDataDescriptor = this._onPESPrivateDataDescriptor.bind(this)),
                            (t.onPESPrivateData = this._onPESPrivateData.bind(this)),
                            this._remuxer.bindDataSource(this._demuxer),
                            this._demuxer.bindDataSource(this._ioctl),
                            (this._remuxer.onInitSegment = this._onRemuxerInitSegmentArrival.bind(this)),
                            (this._remuxer.onMediaSegment = this._onRemuxerMediaSegmentArrival.bind(this));
                        }),
                        (e.prototype._onMediaInfo = function (e) {
                          var t = this;
                          null == this._mediaInfo &&
                            ((this._mediaInfo = Object.assign({}, e)),
                            (this._mediaInfo.keyframesIndex = null),
                            (this._mediaInfo.segments = []),
                            (this._mediaInfo.segmentCount = this._mediaDataSource.segments.length),
                            Object.setPrototypeOf(this._mediaInfo, l.a.prototype));
                          var n = Object.assign({}, e);
                          Object.setPrototypeOf(n, l.a.prototype),
                            (this._mediaInfo.segments[this._currentSegmentIndex] = n),
                            this._reportSegmentMediaInfo(this._currentSegmentIndex),
                            null != this._pendingSeekTime &&
                              Promise.resolve().then(function () {
                                var e = t._pendingSeekTime;
                                (t._pendingSeekTime = null), t.seek(e);
                              });
                        }),
                        (e.prototype._onMetaDataArrived = function (e) {
                          this._emitter.emit(Ie.a.METADATA_ARRIVED, e);
                        }),
                        (e.prototype._onScriptDataArrived = function (e) {
                          this._emitter.emit(Ie.a.SCRIPTDATA_ARRIVED, e);
                        }),
                        (e.prototype._onTimedID3Metadata = function (e) {
                          var t = this._remuxer.getTimestampBase();
                          null != t && (null != e.pts && (e.pts -= t), null != e.dts && (e.dts -= t), this._emitter.emit(Ie.a.TIMED_ID3_METADATA_ARRIVED, e));
                        }),
                        (e.prototype._onSMPTE2038Metadata = function (e) {
                          var t = this._remuxer.getTimestampBase();
                          null != t &&
                            (null != e.pts && (e.pts -= t), null != e.dts && (e.dts -= t), null != e.nearest_pts && (e.nearest_pts -= t), this._emitter.emit(Ie.a.SMPTE2038_METADATA_ARRIVED, e));
                        }),
                        (e.prototype._onSCTE35Metadata = function (e) {
                          var t = this._remuxer.getTimestampBase();
                          null != t && (null != e.pts && (e.pts -= t), null != e.nearest_pts && (e.nearest_pts -= t), this._emitter.emit(Ie.a.SCTE35_METADATA_ARRIVED, e));
                        }),
                        (e.prototype._onPESPrivateDataDescriptor = function (e) {
                          this._emitter.emit(Ie.a.PES_PRIVATE_DATA_DESCRIPTOR, e);
                        }),
                        (e.prototype._onPESPrivateData = function (e) {
                          var t = this._remuxer.getTimestampBase();
                          null != t &&
                            (null != e.pts && (e.pts -= t), null != e.nearest_pts && (e.nearest_pts -= t), null != e.dts && (e.dts -= t), this._emitter.emit(Ie.a.PES_PRIVATE_DATA_ARRIVED, e));
                        }),
                        (e.prototype._onIOSeeked = function () {
                          this._remuxer.insertDiscontinuity();
                        }),
                        (e.prototype._onIOComplete = function (e) {
                          var t = e + 1;
                          t < this._mediaDataSource.segments.length
                            ? (this._internalAbort(), this._remuxer && this._remuxer.flushStashedSamples(), this._loadSegment(t))
                            : (this._remuxer && this._remuxer.flushStashedSamples(), this._emitter.emit(Ie.a.LOADING_COMPLETE), this._disableStatisticsReporter());
                        }),
                        (e.prototype._onIORedirect = function (e) {
                          var t = this._ioctl.extraData;
                          this._mediaDataSource.segments[t].redirectedURL = e;
                        }),
                        (e.prototype._onIORecoveredEarlyEof = function () {
                          this._emitter.emit(Ie.a.RECOVERED_EARLY_EOF);
                        }),
                        (e.prototype._onIOException = function (e, t) {
                          a.a.e(this.TAG, 'IOException: type = ' + e + ', code = ' + t.code + ', msg = ' + t.msg), this._emitter.emit(Ie.a.IO_ERROR, e, t), this._disableStatisticsReporter();
                        }),
                        (e.prototype._onDemuxException = function (e, t) {
                          a.a.e(this.TAG, 'DemuxException: type = ' + e + ', info = ' + t), this._emitter.emit(Ie.a.DEMUX_ERROR, e, t);
                        }),
                        (e.prototype._onRemuxerInitSegmentArrival = function (e, t) {
                          this._emitter.emit(Ie.a.INIT_SEGMENT, e, t);
                        }),
                        (e.prototype._onRemuxerMediaSegmentArrival = function (e, t) {
                          if (null == this._pendingSeekTime && (this._emitter.emit(Ie.a.MEDIA_SEGMENT, e, t), null != this._pendingResolveSeekPoint && 'video' === e)) {
                            var n = t.info.syncPoints,
                              r = this._pendingResolveSeekPoint;
                            (this._pendingResolveSeekPoint = null), o.a.safari && n.length > 0 && n[0].originalDts === r && (r = n[0].pts), this._emitter.emit(Ie.a.RECOMMEND_SEEKPOINT, r);
                          }
                        }),
                        (e.prototype._enableStatisticsReporter = function () {
                          null == this._statisticsReporter && (this._statisticsReporter = self.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval));
                        }),
                        (e.prototype._disableStatisticsReporter = function () {
                          this._statisticsReporter && (self.clearInterval(this._statisticsReporter), (this._statisticsReporter = null));
                        }),
                        (e.prototype._reportSegmentMediaInfo = function (e) {
                          var t = this._mediaInfo.segments[e],
                            n = Object.assign({}, t);
                          (n.duration = this._mediaInfo.duration), (n.segmentCount = this._mediaInfo.segmentCount), delete n.segments, delete n.keyframesIndex, this._emitter.emit(Ie.a.MEDIA_INFO, n);
                        }),
                        (e.prototype._reportStatisticsInfo = function () {
                          var e = {};
                          (e.url = this._ioctl.currentURL),
                            (e.hasRedirect = this._ioctl.hasRedirect),
                            e.hasRedirect && (e.redirectedURL = this._ioctl.currentRedirectedURL),
                            (e.speed = this._ioctl.currentSpeed),
                            (e.loaderType = this._ioctl.loaderType),
                            (e.currentSegmentIndex = this._currentSegmentIndex),
                            (e.totalSegmentCount = this._mediaDataSource.segments.length),
                            this._emitter.emit(Ie.a.STATISTICS_INFO, e);
                        }),
                        e
                      );
                    })();
                  t.a = Me;
                },
                function (e, t, n) {
                  'use strict';
                  var r,
                    i,
                    a,
                    o,
                    l = n(0),
                    u = (function () {
                      function e() {
                        (this._firstCheckpoint = 0),
                          (this._lastCheckpoint = 0),
                          (this._intervalBytes = 0),
                          (this._totalBytes = 0),
                          (this._lastSecondBytes = 0),
                          self.performance && self.performance.now ? (this._now = self.performance.now.bind(self.performance)) : (this._now = Date.now);
                      }
                      return (
                        (e.prototype.reset = function () {
                          (this._firstCheckpoint = this._lastCheckpoint = 0), (this._totalBytes = this._intervalBytes = 0), (this._lastSecondBytes = 0);
                        }),
                        (e.prototype.addBytes = function (e) {
                          0 === this._firstCheckpoint
                            ? ((this._firstCheckpoint = this._now()), (this._lastCheckpoint = this._firstCheckpoint), (this._intervalBytes += e), (this._totalBytes += e))
                            : this._now() - this._lastCheckpoint < 1e3
                            ? ((this._intervalBytes += e), (this._totalBytes += e))
                            : ((this._lastSecondBytes = this._intervalBytes), (this._intervalBytes = e), (this._totalBytes += e), (this._lastCheckpoint = this._now()));
                        }),
                        Object.defineProperty(e.prototype, 'currentKBps', {
                          get: function () {
                            this.addBytes(0);
                            var e = (this._now() - this._lastCheckpoint) / 1e3;
                            return 0 == e && (e = 1), this._intervalBytes / e / 1024;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'lastSecondKBps', {
                          get: function () {
                            return this.addBytes(0), 0 !== this._lastSecondBytes ? this._lastSecondBytes / 1024 : this._now() - this._lastCheckpoint >= 500 ? this.currentKBps : 0;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'averageKBps', {
                          get: function () {
                            var e = (this._now() - this._firstCheckpoint) / 1e3;
                            return this._totalBytes / e / 1024;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        e
                      );
                    })(),
                    c = n(2),
                    d = n(4),
                    f = n(3),
                    h =
                      ((r = function (e, t) {
                        return (r =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        r(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    p = (function (e) {
                      function t(t, n) {
                        var r = e.call(this, 'fetch-stream-loader') || this;
                        return (
                          (r.TAG = 'FetchStreamLoader'),
                          (r._seekHandler = t),
                          (r._config = n),
                          (r._needStash = !0),
                          (r._requestAbort = !1),
                          (r._abortController = null),
                          (r._contentLength = null),
                          (r._receivedLength = 0),
                          r
                        );
                      }
                      return (
                        h(t, e),
                        (t.isSupported = function () {
                          try {
                            var e = d.a.msedge && d.a.version.minor >= 15048,
                              t = !d.a.msedge || e;
                            return self.fetch && self.ReadableStream && t;
                          } catch (e) {
                            return !1;
                          }
                        }),
                        (t.prototype.destroy = function () {
                          this.isWorking() && this.abort(), e.prototype.destroy.call(this);
                        }),
                        (t.prototype.open = function (e, t) {
                          var n = this;
                          (this._dataSource = e), (this._range = t);
                          var r = e.url;
                          this._config.reuseRedirectedURL && null != e.redirectedURL && (r = e.redirectedURL);
                          var i = this._seekHandler.getConfig(r, t),
                            a = new self.Headers();
                          if ('object' == s(i.headers)) {
                            var o = i.headers;
                            for (var l in o) o.hasOwnProperty(l) && a.append(l, o[l]);
                          }
                          var u = { method: 'GET', headers: a, mode: 'cors', cache: 'default', referrerPolicy: 'no-referrer-when-downgrade' };
                          if ('object' == s(this._config.headers)) for (var l in this._config.headers) a.append(l, this._config.headers[l]);
                          !1 === e.cors && (u.mode = 'same-origin'),
                            e.withCredentials && (u.credentials = 'include'),
                            e.referrerPolicy && (u.referrerPolicy = e.referrerPolicy),
                            self.AbortController && ((this._abortController = new self.AbortController()), (u.signal = this._abortController.signal)),
                            (this._status = c.c.kConnecting),
                            self
                              .fetch(i.url, u)
                              .then(function (e) {
                                if (n._requestAbort) return (n._status = c.c.kIdle), void e.body.cancel();
                                if (e.ok && e.status >= 200 && e.status <= 299) {
                                  if (e.url !== i.url && n._onURLRedirect) {
                                    var t = n._seekHandler.removeURLParameters(e.url);
                                    n._onURLRedirect(t);
                                  }
                                  var r = e.headers.get('Content-Length');
                                  return (
                                    null != r && ((n._contentLength = parseInt(r)), 0 !== n._contentLength && n._onContentLengthKnown && n._onContentLengthKnown(n._contentLength)),
                                    n._pump.call(n, e.body.getReader())
                                  );
                                }
                                if (((n._status = c.c.kError), !n._onError)) throw new f.d('FetchStreamLoader: Http code invalid, ' + e.status + ' ' + e.statusText);
                                n._onError(c.b.HTTP_STATUS_CODE_INVALID, { code: e.status, msg: e.statusText });
                              })
                              .catch(function (e) {
                                if (!n._abortController || !n._abortController.signal.aborted) {
                                  if (((n._status = c.c.kError), !n._onError)) throw e;
                                  n._onError(c.b.EXCEPTION, { code: -1, msg: e.message });
                                }
                              });
                        }),
                        (t.prototype.abort = function () {
                          if (((this._requestAbort = !0), (this._status !== c.c.kBuffering || !d.a.chrome) && this._abortController))
                            try {
                              this._abortController.abort();
                            } catch (e) {}
                        }),
                        (t.prototype._pump = function (e) {
                          var t = this;
                          return e
                            .read()
                            .then(function (n) {
                              if (n.done)
                                if (null !== t._contentLength && t._receivedLength < t._contentLength) {
                                  t._status = c.c.kError;
                                  var r = c.b.EARLY_EOF,
                                    i = { code: -1, msg: 'Fetch stream meet Early-EOF' };
                                  if (!t._onError) throw new f.d(i.msg);
                                  t._onError(r, i);
                                } else (t._status = c.c.kComplete), t._onComplete && t._onComplete(t._range.from, t._range.from + t._receivedLength - 1);
                              else {
                                if (t._abortController && t._abortController.signal.aborted) return void (t._status = c.c.kComplete);
                                if (!0 === t._requestAbort) return (t._status = c.c.kComplete), e.cancel();
                                t._status = c.c.kBuffering;
                                var a = n.value.buffer,
                                  o = t._range.from + t._receivedLength;
                                (t._receivedLength += a.byteLength), t._onDataArrival && t._onDataArrival(a, o, t._receivedLength), t._pump(e);
                              }
                            })
                            .catch(function (e) {
                              if (t._abortController && t._abortController.signal.aborted) t._status = c.c.kComplete;
                              else if (11 !== e.code || !d.a.msedge) {
                                t._status = c.c.kError;
                                var n = 0,
                                  r = null;
                                if (
                                  ((19 !== e.code && 'network error' !== e.message) || !(null === t._contentLength || (null !== t._contentLength && t._receivedLength < t._contentLength))
                                    ? ((n = c.b.EXCEPTION), (r = { code: e.code, msg: e.message }))
                                    : ((n = c.b.EARLY_EOF), (r = { code: e.code, msg: 'Fetch stream meet Early-EOF' })),
                                  !t._onError)
                                )
                                  throw new f.d(r.msg);
                                t._onError(n, r);
                              }
                            });
                        }),
                        t
                      );
                    })(c.a),
                    v =
                      ((o = function (e, t) {
                        return (o =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        o(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    m = (function (e) {
                      function t(t, n) {
                        var r = e.call(this, 'xhr-moz-chunked-loader') || this;
                        return (
                          (r.TAG = 'MozChunkedLoader'),
                          (r._seekHandler = t),
                          (r._config = n),
                          (r._needStash = !0),
                          (r._xhr = null),
                          (r._requestAbort = !1),
                          (r._contentLength = null),
                          (r._receivedLength = 0),
                          r
                        );
                      }
                      return (
                        v(t, e),
                        (t.isSupported = function () {
                          try {
                            var e = new XMLHttpRequest();
                            return e.open('GET', 'https://example.com', !0), (e.responseType = 'moz-chunked-arraybuffer'), 'moz-chunked-arraybuffer' === e.responseType;
                          } catch (e) {
                            return l.a.w('MozChunkedLoader', e.message), !1;
                          }
                        }),
                        (t.prototype.destroy = function () {
                          this.isWorking() && this.abort(),
                            this._xhr && ((this._xhr.onreadystatechange = null), (this._xhr.onprogress = null), (this._xhr.onloadend = null), (this._xhr.onerror = null), (this._xhr = null)),
                            e.prototype.destroy.call(this);
                        }),
                        (t.prototype.open = function (e, t) {
                          (this._dataSource = e), (this._range = t);
                          var n = e.url;
                          this._config.reuseRedirectedURL && null != e.redirectedURL && (n = e.redirectedURL);
                          var r = this._seekHandler.getConfig(n, t);
                          this._requestURL = r.url;
                          var i = (this._xhr = new XMLHttpRequest());
                          if (
                            (i.open('GET', r.url, !0),
                            (i.responseType = 'moz-chunked-arraybuffer'),
                            (i.onreadystatechange = this._onReadyStateChange.bind(this)),
                            (i.onprogress = this._onProgress.bind(this)),
                            (i.onloadend = this._onLoadEnd.bind(this)),
                            (i.onerror = this._onXhrError.bind(this)),
                            e.withCredentials && (i.withCredentials = !0),
                            'object' == s(r.headers))
                          ) {
                            var a = r.headers;
                            for (var o in a) a.hasOwnProperty(o) && i.setRequestHeader(o, a[o]);
                          }
                          if ('object' == s(this._config.headers)) for (var o in (a = this._config.headers)) a.hasOwnProperty(o) && i.setRequestHeader(o, a[o]);
                          (this._status = c.c.kConnecting), i.send();
                        }),
                        (t.prototype.abort = function () {
                          (this._requestAbort = !0), this._xhr && this._xhr.abort(), (this._status = c.c.kComplete);
                        }),
                        (t.prototype._onReadyStateChange = function (e) {
                          var t = e.target;
                          if (2 === t.readyState) {
                            if (null != t.responseURL && t.responseURL !== this._requestURL && this._onURLRedirect) {
                              var n = this._seekHandler.removeURLParameters(t.responseURL);
                              this._onURLRedirect(n);
                            }
                            if (0 !== t.status && (t.status < 200 || t.status > 299)) {
                              if (((this._status = c.c.kError), !this._onError)) throw new f.d('MozChunkedLoader: Http code invalid, ' + t.status + ' ' + t.statusText);
                              this._onError(c.b.HTTP_STATUS_CODE_INVALID, { code: t.status, msg: t.statusText });
                            } else this._status = c.c.kBuffering;
                          }
                        }),
                        (t.prototype._onProgress = function (e) {
                          if (this._status !== c.c.kError) {
                            null === this._contentLength &&
                              null !== e.total &&
                              0 !== e.total &&
                              ((this._contentLength = e.total), this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength));
                            var t = e.target.response,
                              n = this._range.from + this._receivedLength;
                            (this._receivedLength += t.byteLength), this._onDataArrival && this._onDataArrival(t, n, this._receivedLength);
                          }
                        }),
                        (t.prototype._onLoadEnd = function (e) {
                          !0 !== this._requestAbort
                            ? this._status !== c.c.kError && ((this._status = c.c.kComplete), this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1))
                            : (this._requestAbort = !1);
                        }),
                        (t.prototype._onXhrError = function (e) {
                          this._status = c.c.kError;
                          var t = 0,
                            n = null;
                          if (
                            (this._contentLength && e.loaded < this._contentLength
                              ? ((t = c.b.EARLY_EOF), (n = { code: -1, msg: 'Moz-Chunked stream meet Early-Eof' }))
                              : ((t = c.b.EXCEPTION), (n = { code: -1, msg: e.constructor.name + ' ' + e.type })),
                            !this._onError)
                          )
                            throw new f.d(n.msg);
                          this._onError(t, n);
                        }),
                        t
                      );
                    })(c.a),
                    g =
                      ((a = function (e, t) {
                        return (a =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        a(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    y = (function (e) {
                      function t(t, n) {
                        var r = e.call(this, 'xhr-range-loader') || this;
                        return (
                          (r.TAG = 'RangeLoader'),
                          (r._seekHandler = t),
                          (r._config = n),
                          (r._needStash = !1),
                          (r._chunkSizeKBList = [128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192]),
                          (r._currentChunkSizeKB = 384),
                          (r._currentSpeedNormalized = 0),
                          (r._zeroSpeedChunkCount = 0),
                          (r._xhr = null),
                          (r._speedSampler = new u()),
                          (r._requestAbort = !1),
                          (r._waitForTotalLength = !1),
                          (r._totalLengthReceived = !1),
                          (r._currentRequestURL = null),
                          (r._currentRedirectedURL = null),
                          (r._currentRequestRange = null),
                          (r._totalLength = null),
                          (r._contentLength = null),
                          (r._receivedLength = 0),
                          (r._lastTimeLoaded = 0),
                          r
                        );
                      }
                      return (
                        g(t, e),
                        (t.isSupported = function () {
                          try {
                            var e = new XMLHttpRequest();
                            return e.open('GET', 'https://example.com', !0), (e.responseType = 'arraybuffer'), 'arraybuffer' === e.responseType;
                          } catch (e) {
                            return l.a.w('RangeLoader', e.message), !1;
                          }
                        }),
                        (t.prototype.destroy = function () {
                          this.isWorking() && this.abort(),
                            this._xhr && ((this._xhr.onreadystatechange = null), (this._xhr.onprogress = null), (this._xhr.onload = null), (this._xhr.onerror = null), (this._xhr = null)),
                            e.prototype.destroy.call(this);
                        }),
                        Object.defineProperty(t.prototype, 'currentSpeed', {
                          get: function () {
                            return this._speedSampler.lastSecondKBps;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (t.prototype.open = function (e, t) {
                          (this._dataSource = e), (this._range = t), (this._status = c.c.kConnecting);
                          var n = !1;
                          null != this._dataSource.filesize && 0 !== this._dataSource.filesize && ((n = !0), (this._totalLength = this._dataSource.filesize)),
                            this._totalLengthReceived || n ? this._openSubRange() : ((this._waitForTotalLength = !0), this._internalOpen(this._dataSource, { from: 0, to: -1 }));
                        }),
                        (t.prototype._openSubRange = function () {
                          var e = 1024 * this._currentChunkSizeKB,
                            t = this._range.from + this._receivedLength,
                            n = t + e;
                          null != this._contentLength && n - this._range.from >= this._contentLength && (n = this._range.from + this._contentLength - 1),
                            (this._currentRequestRange = { from: t, to: n }),
                            this._internalOpen(this._dataSource, this._currentRequestRange);
                        }),
                        (t.prototype._internalOpen = function (e, t) {
                          this._lastTimeLoaded = 0;
                          var n = e.url;
                          this._config.reuseRedirectedURL && (null != this._currentRedirectedURL ? (n = this._currentRedirectedURL) : null != e.redirectedURL && (n = e.redirectedURL));
                          var r = this._seekHandler.getConfig(n, t);
                          this._currentRequestURL = r.url;
                          var i = (this._xhr = new XMLHttpRequest());
                          if (
                            (i.open('GET', r.url, !0),
                            (i.responseType = 'arraybuffer'),
                            (i.onreadystatechange = this._onReadyStateChange.bind(this)),
                            (i.onprogress = this._onProgress.bind(this)),
                            (i.onload = this._onLoad.bind(this)),
                            (i.onerror = this._onXhrError.bind(this)),
                            e.withCredentials && (i.withCredentials = !0),
                            'object' == s(r.headers))
                          ) {
                            var a = r.headers;
                            for (var o in a) a.hasOwnProperty(o) && i.setRequestHeader(o, a[o]);
                          }
                          if ('object' == s(this._config.headers)) for (var o in (a = this._config.headers)) a.hasOwnProperty(o) && i.setRequestHeader(o, a[o]);
                          i.send();
                        }),
                        (t.prototype.abort = function () {
                          (this._requestAbort = !0), this._internalAbort(), (this._status = c.c.kComplete);
                        }),
                        (t.prototype._internalAbort = function () {
                          this._xhr &&
                            ((this._xhr.onreadystatechange = null), (this._xhr.onprogress = null), (this._xhr.onload = null), (this._xhr.onerror = null), this._xhr.abort(), (this._xhr = null));
                        }),
                        (t.prototype._onReadyStateChange = function (e) {
                          var t = e.target;
                          if (2 === t.readyState) {
                            if (null != t.responseURL) {
                              var n = this._seekHandler.removeURLParameters(t.responseURL);
                              t.responseURL !== this._currentRequestURL && n !== this._currentRedirectedURL && ((this._currentRedirectedURL = n), this._onURLRedirect && this._onURLRedirect(n));
                            }
                            if (t.status >= 200 && t.status <= 299) {
                              if (this._waitForTotalLength) return;
                              this._status = c.c.kBuffering;
                            } else {
                              if (((this._status = c.c.kError), !this._onError)) throw new f.d('RangeLoader: Http code invalid, ' + t.status + ' ' + t.statusText);
                              this._onError(c.b.HTTP_STATUS_CODE_INVALID, { code: t.status, msg: t.statusText });
                            }
                          }
                        }),
                        (t.prototype._onProgress = function (e) {
                          if (this._status !== c.c.kError) {
                            if (null === this._contentLength) {
                              var t = !1;
                              if (this._waitForTotalLength) {
                                (this._waitForTotalLength = !1), (this._totalLengthReceived = !0), (t = !0);
                                var n = e.total;
                                this._internalAbort(), (null != n) & (0 !== n) && (this._totalLength = n);
                              }
                              if ((-1 === this._range.to ? (this._contentLength = this._totalLength - this._range.from) : (this._contentLength = this._range.to - this._range.from + 1), t))
                                return void this._openSubRange();
                              this._onContentLengthKnown && this._onContentLengthKnown(this._contentLength);
                            }
                            var r = e.loaded - this._lastTimeLoaded;
                            (this._lastTimeLoaded = e.loaded), this._speedSampler.addBytes(r);
                          }
                        }),
                        (t.prototype._normalizeSpeed = function (e) {
                          var t = this._chunkSizeKBList,
                            n = t.length - 1,
                            r = 0,
                            i = 0,
                            a = n;
                          if (e < t[0]) return t[0];
                          for (; i <= a; ) {
                            if ((r = i + Math.floor((a - i) / 2)) === n || (e >= t[r] && e < t[r + 1])) return t[r];
                            t[r] < e ? (i = r + 1) : (a = r - 1);
                          }
                        }),
                        (t.prototype._onLoad = function (e) {
                          if (this._status !== c.c.kError)
                            if (this._waitForTotalLength) this._waitForTotalLength = !1;
                            else {
                              this._lastTimeLoaded = 0;
                              var t = this._speedSampler.lastSecondKBps;
                              if ((0 === t && (this._zeroSpeedChunkCount++, this._zeroSpeedChunkCount >= 3 && (t = this._speedSampler.currentKBps)), 0 !== t)) {
                                var n = this._normalizeSpeed(t);
                                this._currentSpeedNormalized !== n && ((this._currentSpeedNormalized = n), (this._currentChunkSizeKB = n));
                              }
                              var r = e.target.response,
                                i = this._range.from + this._receivedLength;
                              this._receivedLength += r.byteLength;
                              var a = !1;
                              null != this._contentLength && this._receivedLength < this._contentLength ? this._openSubRange() : (a = !0),
                                this._onDataArrival && this._onDataArrival(r, i, this._receivedLength),
                                a && ((this._status = c.c.kComplete), this._onComplete && this._onComplete(this._range.from, this._range.from + this._receivedLength - 1));
                            }
                        }),
                        (t.prototype._onXhrError = function (e) {
                          this._status = c.c.kError;
                          var t = 0,
                            n = null;
                          if (
                            (this._contentLength && this._receivedLength > 0 && this._receivedLength < this._contentLength
                              ? ((t = c.b.EARLY_EOF), (n = { code: -1, msg: 'RangeLoader meet Early-Eof' }))
                              : ((t = c.b.EXCEPTION), (n = { code: -1, msg: e.constructor.name + ' ' + e.type })),
                            !this._onError)
                          )
                            throw new f.d(n.msg);
                          this._onError(t, n);
                        }),
                        t
                      );
                    })(c.a),
                    _ =
                      ((i = function (e, t) {
                        return (i =
                          Object.setPrototypeOf ||
                          ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                              e.__proto__ = t;
                            }) ||
                          function (e, t) {
                            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                          })(e, t);
                      }),
                      function (e, t) {
                        function n() {
                          this.constructor = e;
                        }
                        i(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                      }),
                    b = (function (e) {
                      function t() {
                        var t = e.call(this, 'websocket-loader') || this;
                        return (t.TAG = 'WebSocketLoader'), (t._needStash = !0), (t._ws = null), (t._requestAbort = !1), (t._receivedLength = 0), t;
                      }
                      return (
                        _(t, e),
                        (t.isSupported = function () {
                          try {
                            return void 0 !== self.WebSocket;
                          } catch (e) {
                            return !1;
                          }
                        }),
                        (t.prototype.destroy = function () {
                          this._ws && this.abort(), e.prototype.destroy.call(this);
                        }),
                        (t.prototype.open = function (e) {
                          try {
                            var t = (this._ws = new self.WebSocket(e.url));
                            (t.binaryType = 'arraybuffer'),
                              (t.onopen = this._onWebSocketOpen.bind(this)),
                              (t.onclose = this._onWebSocketClose.bind(this)),
                              (t.onmessage = this._onWebSocketMessage.bind(this)),
                              (t.onerror = this._onWebSocketError.bind(this)),
                              (this._status = c.c.kConnecting);
                          } catch (e) {
                            this._status = c.c.kError;
                            var n = { code: e.code, msg: e.message };
                            if (!this._onError) throw new f.d(n.msg);
                            this._onError(c.b.EXCEPTION, n);
                          }
                        }),
                        (t.prototype.abort = function () {
                          var e = this._ws;
                          !e || (0 !== e.readyState && 1 !== e.readyState) || ((this._requestAbort = !0), e.close()), (this._ws = null), (this._status = c.c.kComplete);
                        }),
                        (t.prototype._onWebSocketOpen = function (e) {
                          this._status = c.c.kBuffering;
                        }),
                        (t.prototype._onWebSocketClose = function (e) {
                          !0 !== this._requestAbort ? ((this._status = c.c.kComplete), this._onComplete && this._onComplete(0, this._receivedLength - 1)) : (this._requestAbort = !1);
                        }),
                        (t.prototype._onWebSocketMessage = function (e) {
                          var t = this;
                          if (e.data instanceof ArrayBuffer) this._dispatchArrayBuffer(e.data);
                          else if (e.data instanceof Blob) {
                            var n = new FileReader();
                            (n.onload = function () {
                              t._dispatchArrayBuffer(n.result);
                            }),
                              n.readAsArrayBuffer(e.data);
                          } else {
                            this._status = c.c.kError;
                            var r = { code: -1, msg: 'Unsupported WebSocket message type: ' + e.data.constructor.name };
                            if (!this._onError) throw new f.d(r.msg);
                            this._onError(c.b.EXCEPTION, r);
                          }
                        }),
                        (t.prototype._dispatchArrayBuffer = function (e) {
                          var t = e,
                            n = this._receivedLength;
                          (this._receivedLength += t.byteLength), this._onDataArrival && this._onDataArrival(t, n, this._receivedLength);
                        }),
                        (t.prototype._onWebSocketError = function (e) {
                          this._status = c.c.kError;
                          var t = { code: e.code, msg: e.message };
                          if (!this._onError) throw new f.d(t.msg);
                          this._onError(c.b.EXCEPTION, t);
                        }),
                        t
                      );
                    })(c.a),
                    E = (function () {
                      function e(e) {
                        this._zeroStart = e || !1;
                      }
                      return (
                        (e.prototype.getConfig = function (e, t) {
                          var n,
                            r = {};
                          0 !== t.from || -1 !== t.to
                            ? ((n = -1 !== t.to ? 'bytes=' + t.from.toString() + '-' + t.to.toString() : 'bytes=' + t.from.toString() + '-'), (r.Range = n))
                            : this._zeroStart && (r.Range = 'bytes=0-');
                          return { url: e, headers: r };
                        }),
                        (e.prototype.removeURLParameters = function (e) {
                          return e;
                        }),
                        e
                      );
                    })(),
                    S = (function () {
                      function e(e, t) {
                        (this._startName = e), (this._endName = t);
                      }
                      return (
                        (e.prototype.getConfig = function (e, t) {
                          var n = e;
                          if (0 !== t.from || -1 !== t.to) {
                            var r = !0;
                            -1 === n.indexOf('?') && ((n += '?'), (r = !1)),
                              r && (n += '&'),
                              (n += this._startName + '=' + t.from.toString()),
                              -1 !== t.to && (n += '&' + this._endName + '=' + t.to.toString());
                          }
                          return { url: n, headers: {} };
                        }),
                        (e.prototype.removeURLParameters = function (e) {
                          var t = e.split('?')[0],
                            n = void 0,
                            r = e.indexOf('?');
                          -1 !== r && (n = e.substring(r + 1));
                          var i = '';
                          if (null != n && n.length > 0)
                            for (var a = n.split('&'), o = 0; o < a.length; o++) {
                              var s = a[o].split('='),
                                l = o > 0;
                              s[0] !== this._startName && s[0] !== this._endName && (l && (i += '&'), (i += a[o]));
                            }
                          return 0 === i.length ? t : t + '?' + i;
                        }),
                        e
                      );
                    })(),
                    k = (function () {
                      function e(e, t, n) {
                        (this.TAG = 'IOController'),
                          (this._config = t),
                          (this._extraData = n),
                          (this._stashInitialSize = 65536),
                          null != t.stashInitialSize && t.stashInitialSize > 0 && (this._stashInitialSize = t.stashInitialSize),
                          (this._stashUsed = 0),
                          (this._stashSize = this._stashInitialSize),
                          (this._bufferSize = 3145728),
                          (this._stashBuffer = new ArrayBuffer(this._bufferSize)),
                          (this._stashByteStart = 0),
                          (this._enableStash = !0),
                          !1 === t.enableStashBuffer && (this._enableStash = !1),
                          (this._loader = null),
                          (this._loaderClass = null),
                          (this._seekHandler = null),
                          (this._dataSource = e),
                          (this._isWebSocketURL = /wss?:\/\/(.+?)/.test(e.url)),
                          (this._refTotalLength = e.filesize ? e.filesize : null),
                          (this._totalLength = this._refTotalLength),
                          (this._fullRequestFlag = !1),
                          (this._currentRange = null),
                          (this._redirectedURL = null),
                          (this._speedNormalized = 0),
                          (this._speedSampler = new u()),
                          (this._speedNormalizeList = [32, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096]),
                          (this._isEarlyEofReconnecting = !1),
                          (this._paused = !1),
                          (this._resumeFrom = 0),
                          (this._onDataArrival = null),
                          (this._onSeeked = null),
                          (this._onError = null),
                          (this._onComplete = null),
                          (this._onRedirect = null),
                          (this._onRecoveredEarlyEof = null),
                          this._selectSeekHandler(),
                          this._selectLoader(),
                          this._createLoader();
                      }
                      return (
                        (e.prototype.destroy = function () {
                          this._loader.isWorking() && this._loader.abort(),
                            this._loader.destroy(),
                            (this._loader = null),
                            (this._loaderClass = null),
                            (this._dataSource = null),
                            (this._stashBuffer = null),
                            (this._stashUsed = this._stashSize = this._bufferSize = this._stashByteStart = 0),
                            (this._currentRange = null),
                            (this._speedSampler = null),
                            (this._isEarlyEofReconnecting = !1),
                            (this._onDataArrival = null),
                            (this._onSeeked = null),
                            (this._onError = null),
                            (this._onComplete = null),
                            (this._onRedirect = null),
                            (this._onRecoveredEarlyEof = null),
                            (this._extraData = null);
                        }),
                        (e.prototype.isWorking = function () {
                          return this._loader && this._loader.isWorking() && !this._paused;
                        }),
                        (e.prototype.isPaused = function () {
                          return this._paused;
                        }),
                        Object.defineProperty(e.prototype, 'status', {
                          get: function () {
                            return this._loader.status;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'extraData', {
                          get: function () {
                            return this._extraData;
                          },
                          set: function (e) {
                            this._extraData = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onDataArrival', {
                          get: function () {
                            return this._onDataArrival;
                          },
                          set: function (e) {
                            this._onDataArrival = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onSeeked', {
                          get: function () {
                            return this._onSeeked;
                          },
                          set: function (e) {
                            this._onSeeked = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onError', {
                          get: function () {
                            return this._onError;
                          },
                          set: function (e) {
                            this._onError = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onComplete', {
                          get: function () {
                            return this._onComplete;
                          },
                          set: function (e) {
                            this._onComplete = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onRedirect', {
                          get: function () {
                            return this._onRedirect;
                          },
                          set: function (e) {
                            this._onRedirect = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'onRecoveredEarlyEof', {
                          get: function () {
                            return this._onRecoveredEarlyEof;
                          },
                          set: function (e) {
                            this._onRecoveredEarlyEof = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'currentURL', {
                          get: function () {
                            return this._dataSource.url;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'hasRedirect', {
                          get: function () {
                            return null != this._redirectedURL || null != this._dataSource.redirectedURL;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'currentRedirectedURL', {
                          get: function () {
                            return this._redirectedURL || this._dataSource.redirectedURL;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'currentSpeed', {
                          get: function () {
                            return this._loaderClass === y ? this._loader.currentSpeed : this._speedSampler.lastSecondKBps;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'loaderType', {
                          get: function () {
                            return this._loader.type;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype._selectSeekHandler = function () {
                          var e = this._config;
                          if ('range' === e.seekType) this._seekHandler = new E(this._config.rangeLoadZeroStart);
                          else if ('param' === e.seekType) {
                            var t = e.seekParamStart || 'bstart',
                              n = e.seekParamEnd || 'bend';
                            this._seekHandler = new S(t, n);
                          } else {
                            if ('custom' !== e.seekType) throw new f.b('Invalid seekType in config: ' + e.seekType);
                            if ('function' != typeof e.customSeekHandler) throw new f.b('Custom seekType specified in config but invalid customSeekHandler!');
                            this._seekHandler = new e.customSeekHandler();
                          }
                        }),
                        (e.prototype._selectLoader = function () {
                          if (null != this._config.customLoader) this._loaderClass = this._config.customLoader;
                          else if (this._isWebSocketURL) this._loaderClass = b;
                          else if (p.isSupported()) this._loaderClass = p;
                          else if (m.isSupported()) this._loaderClass = m;
                          else {
                            if (!y.isSupported()) throw new f.d("Your browser doesn't support xhr with arraybuffer responseType!");
                            this._loaderClass = y;
                          }
                        }),
                        (e.prototype._createLoader = function () {
                          (this._loader = new this._loaderClass(this._seekHandler, this._config)),
                            !1 === this._loader.needStashBuffer && (this._enableStash = !1),
                            (this._loader.onContentLengthKnown = this._onContentLengthKnown.bind(this)),
                            (this._loader.onURLRedirect = this._onURLRedirect.bind(this)),
                            (this._loader.onDataArrival = this._onLoaderChunkArrival.bind(this)),
                            (this._loader.onComplete = this._onLoaderComplete.bind(this)),
                            (this._loader.onError = this._onLoaderError.bind(this));
                        }),
                        (e.prototype.open = function (e) {
                          (this._currentRange = { from: 0, to: -1 }),
                            e && (this._currentRange.from = e),
                            this._speedSampler.reset(),
                            e || (this._fullRequestFlag = !0),
                            this._loader.open(this._dataSource, Object.assign({}, this._currentRange));
                        }),
                        (e.prototype.abort = function () {
                          this._loader.abort(), this._paused && ((this._paused = !1), (this._resumeFrom = 0));
                        }),
                        (e.prototype.pause = function () {
                          this.isWorking() &&
                            (this._loader.abort(),
                            0 !== this._stashUsed ? ((this._resumeFrom = this._stashByteStart), (this._currentRange.to = this._stashByteStart - 1)) : (this._resumeFrom = this._currentRange.to + 1),
                            (this._stashUsed = 0),
                            (this._stashByteStart = 0),
                            (this._paused = !0));
                        }),
                        (e.prototype.resume = function () {
                          if (this._paused) {
                            this._paused = !1;
                            var e = this._resumeFrom;
                            (this._resumeFrom = 0), this._internalSeek(e, !0);
                          }
                        }),
                        (e.prototype.seek = function (e) {
                          (this._paused = !1), (this._stashUsed = 0), (this._stashByteStart = 0), this._internalSeek(e, !0);
                        }),
                        (e.prototype._internalSeek = function (e, t) {
                          this._loader.isWorking() && this._loader.abort(), this._flushStashBuffer(t), this._loader.destroy(), (this._loader = null);
                          var n = { from: e, to: -1 };
                          (this._currentRange = { from: n.from, to: -1 }),
                            this._speedSampler.reset(),
                            (this._stashSize = this._stashInitialSize),
                            this._createLoader(),
                            this._loader.open(this._dataSource, n),
                            this._onSeeked && this._onSeeked();
                        }),
                        (e.prototype.updateUrl = function (e) {
                          if (!e || 'string' != typeof e || 0 === e.length) throw new f.b('Url must be a non-empty string!');
                          this._dataSource.url = e;
                        }),
                        (e.prototype._expandBuffer = function (e) {
                          for (var t = this._stashSize; t + 1048576 < e; ) t *= 2;
                          if ((t += 1048576) !== this._bufferSize) {
                            var n = new ArrayBuffer(t);
                            if (this._stashUsed > 0) {
                              var r = new Uint8Array(this._stashBuffer, 0, this._stashUsed);
                              new Uint8Array(n, 0, t).set(r, 0);
                            }
                            (this._stashBuffer = n), (this._bufferSize = t);
                          }
                        }),
                        (e.prototype._normalizeSpeed = function (e) {
                          var t = this._speedNormalizeList,
                            n = t.length - 1,
                            r = 0,
                            i = 0,
                            a = n;
                          if (e < t[0]) return t[0];
                          for (; i <= a; ) {
                            if ((r = i + Math.floor((a - i) / 2)) === n || (e >= t[r] && e < t[r + 1])) return t[r];
                            t[r] < e ? (i = r + 1) : (a = r - 1);
                          }
                        }),
                        (e.prototype._adjustStashSize = function (e) {
                          var t = 0;
                          (t = this._config.isLive ? e / 8 : e < 512 ? e : e >= 512 && e <= 1024 ? Math.floor(1.5 * e) : 2 * e) > 8192 && (t = 8192);
                          var n = 1024 * t + 1048576;
                          this._bufferSize < n && this._expandBuffer(n), (this._stashSize = 1024 * t);
                        }),
                        (e.prototype._dispatchChunks = function (e, t) {
                          return (this._currentRange.to = t + e.byteLength - 1), this._onDataArrival(e, t);
                        }),
                        (e.prototype._onURLRedirect = function (e) {
                          (this._redirectedURL = e), this._onRedirect && this._onRedirect(e);
                        }),
                        (e.prototype._onContentLengthKnown = function (e) {
                          e && this._fullRequestFlag && ((this._totalLength = e), (this._fullRequestFlag = !1));
                        }),
                        (e.prototype._onLoaderChunkArrival = function (e, t, n) {
                          if (!this._onDataArrival) throw new f.a('IOController: No existing consumer (onDataArrival) callback!');
                          if (!this._paused) {
                            this._isEarlyEofReconnecting && ((this._isEarlyEofReconnecting = !1), this._onRecoveredEarlyEof && this._onRecoveredEarlyEof()), this._speedSampler.addBytes(e.byteLength);
                            var r = this._speedSampler.lastSecondKBps;
                            if (0 !== r) {
                              var i = this._normalizeSpeed(r);
                              this._speedNormalized !== i && ((this._speedNormalized = i), this._adjustStashSize(i));
                            }
                            if (this._enableStash)
                              if ((0 === this._stashUsed && 0 === this._stashByteStart && (this._stashByteStart = t), this._stashUsed + e.byteLength <= this._stashSize))
                                (s = new Uint8Array(this._stashBuffer, 0, this._stashSize)).set(new Uint8Array(e), this._stashUsed), (this._stashUsed += e.byteLength);
                              else if (((s = new Uint8Array(this._stashBuffer, 0, this._bufferSize)), this._stashUsed > 0)) {
                                var a = this._stashBuffer.slice(0, this._stashUsed);
                                (l = this._dispatchChunks(a, this._stashByteStart)) < a.byteLength
                                  ? l > 0 && ((u = new Uint8Array(a, l)), s.set(u, 0), (this._stashUsed = u.byteLength), (this._stashByteStart += l))
                                  : ((this._stashUsed = 0), (this._stashByteStart += l)),
                                  this._stashUsed + e.byteLength > this._bufferSize &&
                                    (this._expandBuffer(this._stashUsed + e.byteLength), (s = new Uint8Array(this._stashBuffer, 0, this._bufferSize))),
                                  s.set(new Uint8Array(e), this._stashUsed),
                                  (this._stashUsed += e.byteLength);
                              } else
                                (l = this._dispatchChunks(e, t)) < e.byteLength &&
                                  ((o = e.byteLength - l) > this._bufferSize && (this._expandBuffer(o), (s = new Uint8Array(this._stashBuffer, 0, this._bufferSize))),
                                  s.set(new Uint8Array(e, l), 0),
                                  (this._stashUsed += o),
                                  (this._stashByteStart = t + l));
                            else if (0 === this._stashUsed) {
                              var o;
                              (l = this._dispatchChunks(e, t)) < e.byteLength &&
                                ((o = e.byteLength - l) > this._bufferSize && this._expandBuffer(o),
                                (s = new Uint8Array(this._stashBuffer, 0, this._bufferSize)).set(new Uint8Array(e, l), 0),
                                (this._stashUsed += o),
                                (this._stashByteStart = t + l));
                            } else {
                              var s, l;
                              if (
                                (this._stashUsed + e.byteLength > this._bufferSize && this._expandBuffer(this._stashUsed + e.byteLength),
                                (s = new Uint8Array(this._stashBuffer, 0, this._bufferSize)).set(new Uint8Array(e), this._stashUsed),
                                (this._stashUsed += e.byteLength),
                                (l = this._dispatchChunks(this._stashBuffer.slice(0, this._stashUsed), this._stashByteStart)) < this._stashUsed && l > 0)
                              ) {
                                var u = new Uint8Array(this._stashBuffer, l);
                                s.set(u, 0);
                              }
                              (this._stashUsed -= l), (this._stashByteStart += l);
                            }
                          }
                        }),
                        (e.prototype._flushStashBuffer = function (e) {
                          if (this._stashUsed > 0) {
                            var t = this._stashBuffer.slice(0, this._stashUsed),
                              n = this._dispatchChunks(t, this._stashByteStart),
                              r = t.byteLength - n;
                            if (n < t.byteLength) {
                              if (!e) {
                                if (n > 0) {
                                  var i = new Uint8Array(this._stashBuffer, 0, this._bufferSize),
                                    a = new Uint8Array(t, n);
                                  i.set(a, 0), (this._stashUsed = a.byteLength), (this._stashByteStart += n);
                                }
                                return 0;
                              }
                              l.a.w(this.TAG, r + ' bytes unconsumed data remain when flush buffer, dropped');
                            }
                            return (this._stashUsed = 0), (this._stashByteStart = 0), r;
                          }
                          return 0;
                        }),
                        (e.prototype._onLoaderComplete = function (e, t) {
                          this._flushStashBuffer(!0), this._onComplete && this._onComplete(this._extraData);
                        }),
                        (e.prototype._onLoaderError = function (e, t) {
                          switch (
                            (l.a.e(this.TAG, 'Loader error, code = ' + t.code + ', msg = ' + t.msg),
                            this._flushStashBuffer(!1),
                            this._isEarlyEofReconnecting && ((this._isEarlyEofReconnecting = !1), (e = c.b.UNRECOVERABLE_EARLY_EOF)),
                            e)
                          ) {
                            case c.b.EARLY_EOF:
                              if (!this._config.isLive && this._totalLength) {
                                var n = this._currentRange.to + 1;
                                return void (n < this._totalLength && (l.a.w(this.TAG, 'Connection lost, trying reconnect...'), (this._isEarlyEofReconnecting = !0), this._internalSeek(n, !1)));
                              }
                              e = c.b.UNRECOVERABLE_EARLY_EOF;
                            case c.b.UNRECOVERABLE_EARLY_EOF:
                            case c.b.CONNECTING_TIMEOUT:
                            case c.b.HTTP_STATUS_CODE_INVALID:
                            case c.b.EXCEPTION:
                          }
                          if (!this._onError) throw new f.d('IOException: ' + t.msg);
                          this._onError(e, t);
                        }),
                        e
                      );
                    })();
                  t.a = k;
                },
                function (e, t, n) {
                  'use strict';
                  var r = (function () {
                    function e() {}
                    return (
                      (e.install = function () {
                        (Object.setPrototypeOf =
                          Object.setPrototypeOf ||
                          function (e, t) {
                            return (e.__proto__ = t), e;
                          }),
                          (Object.assign =
                            Object.assign ||
                            function (e) {
                              if (null == e) throw new TypeError('Cannot convert undefined or null to object');
                              for (var t = Object(e), n = 1; n < arguments.length; n++) {
                                var r = arguments[n];
                                if (null != r) for (var i in r) r.hasOwnProperty(i) && (t[i] = r[i]);
                              }
                              return t;
                            }),
                          'function' != typeof self.Promise && n(16).polyfill();
                      }),
                      e
                    );
                  })();
                  r.install(), (t.a = r);
                },
                function (e, t, n) {
                  function r(e) {
                    var t = {};
                    function n(r) {
                      if (t[r]) return t[r].exports;
                      var i = (t[r] = { i: r, l: !1, exports: {} });
                      return e[r].call(i.exports, i, i.exports, n), (i.l = !0), i.exports;
                    }
                    (n.m = e),
                      (n.c = t),
                      (n.i = function (e) {
                        return e;
                      }),
                      (n.d = function (e, t, r) {
                        n.o(e, t) || Object.defineProperty(e, t, { configurable: !1, enumerable: !0, get: r });
                      }),
                      (n.r = function (e) {
                        Object.defineProperty(e, '__esModule', { value: !0 });
                      }),
                      (n.n = function (e) {
                        var t =
                          e && e.__esModule
                            ? function () {
                                return e.default;
                              }
                            : function () {
                                return e;
                              };
                        return n.d(t, 'a', t), t;
                      }),
                      (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                      }),
                      (n.p = '/'),
                      (n.oe = function (e) {
                        throw (console.error(e), e);
                      });
                    var r = n((n.s = ENTRY_MODULE));
                    return r.default || r;
                  }
                  function i(e) {
                    return (e + '').replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&');
                  }
                  function a(e, t, r) {
                    var a = {};
                    a[r] = [];
                    var o = t.toString(),
                      s = o.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
                    if (!s) return a;
                    for (var l, u = s[1], c = new RegExp('(\\\\n|\\W)' + i(u) + '\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)', 'g'); (l = c.exec(o)); )
                      'dll-reference' !== l[3] && a[r].push(l[3]);
                    for (c = new RegExp('\\(' + i(u) + '\\("(dll-reference\\s([\\.|\\-|\\+|\\w|/|@]+))"\\)\\)\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)', 'g'); (l = c.exec(o)); )
                      e[l[2]] || (a[r].push(l[1]), (e[l[2]] = n(l[1]).m)), (a[l[2]] = a[l[2]] || []), a[l[2]].push(l[4]);
                    for (var d, f = Object.keys(a), h = 0; h < f.length; h++) for (var p = 0; p < a[f[h]].length; p++) (d = a[f[h]][p]), isNaN(1 * d) || (a[f[h]][p] = 1 * a[f[h]][p]);
                    return a;
                  }
                  function o(e) {
                    return Object.keys(e).reduce(function (t, n) {
                      return t || e[n].length > 0;
                    }, !1);
                  }
                  e.exports = function (e, t) {
                    t = t || {};
                    var i = { main: n.m },
                      s = t.all
                        ? { main: Object.keys(i.main) }
                        : (function (e, t) {
                            for (var n = { main: [t] }, r = { main: [] }, i = { main: {} }; o(n); )
                              for (var s = Object.keys(n), l = 0; l < s.length; l++) {
                                var u = s[l],
                                  c = n[u].pop();
                                if (((i[u] = i[u] || {}), !i[u][c] && e[u][c])) {
                                  (i[u][c] = !0), (r[u] = r[u] || []), r[u].push(c);
                                  for (var d = a(e, e[u][c], u), f = Object.keys(d), h = 0; h < f.length; h++) (n[f[h]] = n[f[h]] || []), (n[f[h]] = n[f[h]].concat(d[f[h]]));
                                }
                              }
                            return r;
                          })(i, e),
                      l = '';
                    Object.keys(s)
                      .filter(function (e) {
                        return 'main' !== e;
                      })
                      .forEach(function (e) {
                        for (var t = 0; s[e][t]; ) t++;
                        s[e].push(t),
                          (i[e][t] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'),
                          (l =
                            l +
                            'var ' +
                            e +
                            ' = (' +
                            r.toString().replace('ENTRY_MODULE', JSON.stringify(t)) +
                            ')({' +
                            s[e]
                              .map(function (t) {
                                return JSON.stringify(t) + ': ' + i[e][t].toString();
                              })
                              .join(',') +
                            '});\n');
                      }),
                      (l =
                        l +
                        'new ((' +
                        r.toString().replace('ENTRY_MODULE', JSON.stringify(e)) +
                        ')({' +
                        s.main
                          .map(function (e) {
                            return JSON.stringify(e) + ': ' + i.main[e].toString();
                          })
                          .join(',') +
                        '}))(self);');
                    var u = new window.Blob([l], { type: 'text/javascript' });
                    if (t.bare) return u;
                    var c = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(u),
                      d = new window.Worker(c);
                    return (d.objectURL = c), d;
                  };
                },
                function (e, t, n) {
                  !(function (t) {
                    'use strict';
                    function n(e) {
                      return parseInt(e) === e;
                    }
                    function r(e) {
                      if (!n(e.length)) return !1;
                      for (var t = 0; t < e.length; t++) if (!n(e[t]) || e[t] < 0 || e[t] > 255) return !1;
                      return !0;
                    }
                    function i(e, t) {
                      if (e.buffer && 'Uint8Array' === e.name) return t && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
                      if (Array.isArray(e)) {
                        if (!r(e)) throw new Error('Array contains invalid value: ' + e);
                        return new Uint8Array(e);
                      }
                      if (n(e.length) && r(e)) return new Uint8Array(e);
                      throw new Error('unsupported array-like object');
                    }
                    function a(e) {
                      return new Uint8Array(e);
                    }
                    function o(e, t, n, r, i) {
                      (null == r && null == i) || (e = e.slice ? e.slice(r, i) : Array.prototype.slice.call(e, r, i)), t.set(e, n);
                    }
                    var s,
                      l = {
                        toBytes: function (e) {
                          var t = [],
                            n = 0;
                          for (e = encodeURI(e); n < e.length; ) {
                            var r = e.charCodeAt(n++);
                            37 === r ? (t.push(parseInt(e.substr(n, 2), 16)), (n += 2)) : t.push(r);
                          }
                          return i(t);
                        },
                        fromBytes: function (e) {
                          for (var t = [], n = 0; n < e.length; ) {
                            var r = e[n];
                            r < 128
                              ? (t.push(String.fromCharCode(r)), n++)
                              : r > 191 && r < 224
                              ? (t.push(String.fromCharCode(((31 & r) << 6) | (63 & e[n + 1]))), (n += 2))
                              : (t.push(String.fromCharCode(((15 & r) << 12) | ((63 & e[n + 1]) << 6) | (63 & e[n + 2]))), (n += 3));
                          }
                          return t.join('');
                        },
                      },
                      u =
                        ((s = '0123456789abcdef'),
                        {
                          toBytes: function (e) {
                            for (var t = [], n = 0; n < e.length; n += 2) t.push(parseInt(e.substr(n, 2), 16));
                            return t;
                          },
                          fromBytes: function (e) {
                            for (var t = [], n = 0; n < e.length; n++) {
                              var r = e[n];
                              t.push(s[(240 & r) >> 4] + s[15 & r]);
                            }
                            return t.join('');
                          },
                        }),
                      c = { 16: 10, 24: 12, 32: 14 },
                      d = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
                      f = [
                        99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54,
                        63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41,
                        227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143,
                        146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238,
                        184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8,
                        186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217,
                        142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22,
                      ],
                      h = [
                        82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194,
                        35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204,
                        93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30,
                        143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226,
                        249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90,
                        244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42,
                        245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125,
                      ],
                      p = [
                        3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474,
                        1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738,
                        597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420,
                        3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577,
                        605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627,
                        2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520,
                        3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205,
                        2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474,
                        1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309,
                        3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720,
                        2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771,
                        1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243,
                        3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470,
                        1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977,
                        2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737,
                        1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754,
                        361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755,
                        697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986,
                      ],
                      v = [
                        2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899,
                        2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108,
                        4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129,
                        2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848,
                        1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043,
                        1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914,
                        1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139,
                        2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658,
                        3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324,
                        3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385,
                        3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499,
                        1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572,
                        2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810,
                        3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411,
                        3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753,
                        2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487,
                        550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313,
                        2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766,
                      ],
                      m = [
                        1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099,
                        1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188,
                        2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329,
                        1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768,
                        3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283,
                        3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114,
                        3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739,
                        2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538,
                        2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324,
                        1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865,
                        1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296,
                        844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713,
                        3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050,
                        2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131,
                        3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513,
                        2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927,
                        3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905,
                        2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126,
                      ],
                      g = [
                        1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549,
                        1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243,
                        2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529,
                        1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963,
                        3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198,
                        3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564,
                        3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214,
                        2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143,
                        2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699,
                        1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945,
                        1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771,
                        842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818,
                        3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340,
                        2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126,
                        3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473,
                        2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917,
                        3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930,
                        2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436,
                      ],
                      y = [
                        1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152,
                        3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843,
                        1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237,
                        2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835,
                        2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293,
                        2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247,
                        429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436,
                        1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226,
                        1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775,
                        1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865,
                        3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585,
                        2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645,
                        2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406,
                        566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186,
                        1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798,
                        3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575,
                        404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729,
                        135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890,
                      ],
                      _ = [
                        1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987,
                        2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123,
                        3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807,
                        3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643,
                        2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643,
                        2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037,
                        605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696,
                        1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336,
                        1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030,
                        3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865,
                        1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545,
                        4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200,
                        2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392,
                        3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656,
                        790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242,
                        870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469,
                        1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913,
                        1635502980, 1893020342, 1950903388, 1120974935,
                      ],
                      b = [
                        2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562,
                        1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298,
                        2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209,
                        2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725,
                        2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174,
                        1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318,
                        369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627,
                        1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856,
                        547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199,
                        648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705,
                        2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200,
                        2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595,
                        2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636,
                        3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356,
                        1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431,
                        3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895,
                        3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340,
                        3247465558, 2220981195, 3060847922, 1551124588, 1463996600,
                      ],
                      E = [
                        4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702,
                        1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988,
                        1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559,
                        1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170,
                        3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524,
                        777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348,
                        1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802,
                        292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416,
                        3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819,
                        19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110,
                        698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745,
                        3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770,
                        1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641,
                        367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121,
                        3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243,
                        1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736,
                        3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376,
                        3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480,
                      ],
                      S = [
                        0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529,
                        3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407,
                        3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942,
                        2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501,
                        1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422,
                        3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924,
                        1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634,
                        1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865,
                        2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609,
                        1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380,
                        3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798,
                        2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459,
                        3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592,
                        1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071,
                        2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562,
                        1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858,
                        1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432,
                        4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795,
                      ],
                      k = [
                        0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459,
                        2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537,
                        3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535,
                        77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884,
                        3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824,
                        3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622,
                        507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216,
                        3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879,
                        129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469,
                        3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175,
                        1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921,
                        2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127,
                        3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560,
                        1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387,
                        2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037,
                        4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148,
                        692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663,
                        2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855,
                      ],
                      T = [
                        0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639,
                        3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557,
                        2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032,
                        3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201,
                        344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239,
                        532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878,
                        3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771,
                        4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744,
                        671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199,
                        4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366,
                        492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798,
                        2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695,
                        3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569,
                        4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702,
                        3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217,
                        1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635,
                        1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009,
                        3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150,
                      ],
                      w = [
                        0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874,
                        2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222,
                        4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595,
                        1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591,
                        4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837,
                        923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127,
                        2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424,
                        2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110,
                        4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469,
                        4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481,
                        1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243,
                        3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604,
                        2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802,
                        585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166,
                        4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912,
                        1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703,
                        3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213,
                        2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925,
                      ];
                    function A(e) {
                      for (var t = [], n = 0; n < e.length; n += 4) t.push((e[n] << 24) | (e[n + 1] << 16) | (e[n + 2] << 8) | e[n + 3]);
                      return t;
                    }
                    var L = function e(t) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      Object.defineProperty(this, 'key', { value: i(t, !0) }), this._prepare();
                    };
                    (L.prototype._prepare = function () {
                      var e = c[this.key.length];
                      if (null == e) throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
                      (this._Ke = []), (this._Kd = []);
                      for (var t = 0; t <= e; t++) this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
                      var n,
                        r = 4 * (e + 1),
                        i = this.key.length / 4,
                        a = A(this.key);
                      for (t = 0; t < i; t++) (n = t >> 2), (this._Ke[n][t % 4] = a[t]), (this._Kd[e - n][t % 4] = a[t]);
                      for (var o, s = 0, l = i; l < r; ) {
                        if (((o = a[i - 1]), (a[0] ^= (f[(o >> 16) & 255] << 24) ^ (f[(o >> 8) & 255] << 16) ^ (f[255 & o] << 8) ^ f[(o >> 24) & 255] ^ (d[s] << 24)), (s += 1), 8 != i))
                          for (t = 1; t < i; t++) a[t] ^= a[t - 1];
                        else {
                          for (t = 1; t < i / 2; t++) a[t] ^= a[t - 1];
                          for (o = a[i / 2 - 1], a[i / 2] ^= f[255 & o] ^ (f[(o >> 8) & 255] << 8) ^ (f[(o >> 16) & 255] << 16) ^ (f[(o >> 24) & 255] << 24), t = i / 2 + 1; t < i; t++)
                            a[t] ^= a[t - 1];
                        }
                        for (t = 0; t < i && l < r; ) (u = l >> 2), (h = l % 4), (this._Ke[u][h] = a[t]), (this._Kd[e - u][h] = a[t++]), l++;
                      }
                      for (var u = 1; u < e; u++) for (var h = 0; h < 4; h++) (o = this._Kd[u][h]), (this._Kd[u][h] = S[(o >> 24) & 255] ^ k[(o >> 16) & 255] ^ T[(o >> 8) & 255] ^ w[255 & o]);
                    }),
                      (L.prototype.encrypt = function (e) {
                        if (16 != e.length) throw new Error('invalid plaintext size (must be 16 bytes)');
                        for (var t = this._Ke.length - 1, n = [0, 0, 0, 0], r = A(e), i = 0; i < 4; i++) r[i] ^= this._Ke[0][i];
                        for (var o = 1; o < t; o++) {
                          for (i = 0; i < 4; i++) n[i] = p[(r[i] >> 24) & 255] ^ v[(r[(i + 1) % 4] >> 16) & 255] ^ m[(r[(i + 2) % 4] >> 8) & 255] ^ g[255 & r[(i + 3) % 4]] ^ this._Ke[o][i];
                          r = n.slice();
                        }
                        var s,
                          l = a(16);
                        for (i = 0; i < 4; i++)
                          (s = this._Ke[t][i]),
                            (l[4 * i] = 255 & (f[(r[i] >> 24) & 255] ^ (s >> 24))),
                            (l[4 * i + 1] = 255 & (f[(r[(i + 1) % 4] >> 16) & 255] ^ (s >> 16))),
                            (l[4 * i + 2] = 255 & (f[(r[(i + 2) % 4] >> 8) & 255] ^ (s >> 8))),
                            (l[4 * i + 3] = 255 & (f[255 & r[(i + 3) % 4]] ^ s));
                        return l;
                      }),
                      (L.prototype.decrypt = function (e) {
                        if (16 != e.length) throw new Error('invalid ciphertext size (must be 16 bytes)');
                        for (var t = this._Kd.length - 1, n = [0, 0, 0, 0], r = A(e), i = 0; i < 4; i++) r[i] ^= this._Kd[0][i];
                        for (var o = 1; o < t; o++) {
                          for (i = 0; i < 4; i++) n[i] = y[(r[i] >> 24) & 255] ^ _[(r[(i + 3) % 4] >> 16) & 255] ^ b[(r[(i + 2) % 4] >> 8) & 255] ^ E[255 & r[(i + 1) % 4]] ^ this._Kd[o][i];
                          r = n.slice();
                        }
                        var s,
                          l = a(16);
                        for (i = 0; i < 4; i++)
                          (s = this._Kd[t][i]),
                            (l[4 * i] = 255 & (h[(r[i] >> 24) & 255] ^ (s >> 24))),
                            (l[4 * i + 1] = 255 & (h[(r[(i + 3) % 4] >> 16) & 255] ^ (s >> 16))),
                            (l[4 * i + 2] = 255 & (h[(r[(i + 2) % 4] >> 8) & 255] ^ (s >> 8))),
                            (l[4 * i + 3] = 255 & (h[255 & r[(i + 1) % 4]] ^ s));
                        return l;
                      });
                    var R = function e(t) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      (this.description = 'Electronic Code Block'), (this.name = 'ecb'), (this._aes = new L(t));
                    };
                    (R.prototype.encrypt = function (e) {
                      if ((e = i(e)).length % 16 != 0) throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
                      for (var t = a(e.length), n = a(16), r = 0; r < e.length; r += 16) o(e, n, 0, r, r + 16), o((n = this._aes.encrypt(n)), t, r);
                      return t;
                    }),
                      (R.prototype.decrypt = function (e) {
                        if ((e = i(e)).length % 16 != 0) throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
                        for (var t = a(e.length), n = a(16), r = 0; r < e.length; r += 16) o(e, n, 0, r, r + 16), o((n = this._aes.decrypt(n)), t, r);
                        return t;
                      });
                    var C = function e(t, n) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      if (((this.description = 'Cipher Block Chaining'), (this.name = 'cbc'), n)) {
                        if (16 != n.length) throw new Error('invalid initialation vector size (must be 16 bytes)');
                      } else n = a(16);
                      (this._lastCipherblock = i(n, !0)), (this._aes = new L(t));
                    };
                    (C.prototype.encrypt = function (e) {
                      if ((e = i(e)).length % 16 != 0) throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
                      for (var t = a(e.length), n = a(16), r = 0; r < e.length; r += 16) {
                        o(e, n, 0, r, r + 16);
                        for (var s = 0; s < 16; s++) n[s] ^= this._lastCipherblock[s];
                        (this._lastCipherblock = this._aes.encrypt(n)), o(this._lastCipherblock, t, r);
                      }
                      return t;
                    }),
                      (C.prototype.decrypt = function (e) {
                        if ((e = i(e)).length % 16 != 0) throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
                        for (var t = a(e.length), n = a(16), r = 0; r < e.length; r += 16) {
                          o(e, n, 0, r, r + 16), (n = this._aes.decrypt(n));
                          for (var s = 0; s < 16; s++) t[r + s] = n[s] ^ this._lastCipherblock[s];
                          o(e, this._lastCipherblock, 0, r, r + 16);
                        }
                        return t;
                      });
                    var x = function e(t, n, r) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      if (((this.description = 'Cipher Feedback'), (this.name = 'cfb'), n)) {
                        if (16 != n.length) throw new Error('invalid initialation vector size (must be 16 size)');
                      } else n = a(16);
                      r || (r = 1), (this.segmentSize = r), (this._shiftRegister = i(n, !0)), (this._aes = new L(t));
                    };
                    (x.prototype.encrypt = function (e) {
                      if (e.length % this.segmentSize != 0) throw new Error('invalid plaintext size (must be segmentSize bytes)');
                      for (var t, n = i(e, !0), r = 0; r < n.length; r += this.segmentSize) {
                        t = this._aes.encrypt(this._shiftRegister);
                        for (var a = 0; a < this.segmentSize; a++) n[r + a] ^= t[a];
                        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(n, this._shiftRegister, 16 - this.segmentSize, r, r + this.segmentSize);
                      }
                      return n;
                    }),
                      (x.prototype.decrypt = function (e) {
                        if (e.length % this.segmentSize != 0) throw new Error('invalid ciphertext size (must be segmentSize bytes)');
                        for (var t, n = i(e, !0), r = 0; r < n.length; r += this.segmentSize) {
                          t = this._aes.encrypt(this._shiftRegister);
                          for (var a = 0; a < this.segmentSize; a++) n[r + a] ^= t[a];
                          o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(e, this._shiftRegister, 16 - this.segmentSize, r, r + this.segmentSize);
                        }
                        return n;
                      });
                    var D = function e(t, n) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      if (((this.description = 'Output Feedback'), (this.name = 'ofb'), n)) {
                        if (16 != n.length) throw new Error('invalid initialation vector size (must be 16 bytes)');
                      } else n = a(16);
                      (this._lastPrecipher = i(n, !0)), (this._lastPrecipherIndex = 16), (this._aes = new L(t));
                    };
                    (D.prototype.encrypt = function (e) {
                      for (var t = i(e, !0), n = 0; n < t.length; n++)
                        16 === this._lastPrecipherIndex && ((this._lastPrecipher = this._aes.encrypt(this._lastPrecipher)), (this._lastPrecipherIndex = 0)),
                          (t[n] ^= this._lastPrecipher[this._lastPrecipherIndex++]);
                      return t;
                    }),
                      (D.prototype.decrypt = D.prototype.encrypt);
                    var I = function e(t) {
                      if (!(this instanceof e)) throw Error('Counter must be instanitated with `new`');
                      0 === t || t || (t = 1), 'number' == typeof t ? ((this._counter = a(16)), this.setValue(t)) : this.setBytes(t);
                    };
                    (I.prototype.setValue = function (e) {
                      if ('number' != typeof e || parseInt(e) != e) throw new Error('invalid counter value (must be an integer)');
                      if (e > Number.MAX_SAFE_INTEGER) throw new Error('integer value out of safe range');
                      for (var t = 15; t >= 0; --t) (this._counter[t] = e % 256), (e = parseInt(e / 256));
                    }),
                      (I.prototype.setBytes = function (e) {
                        if (16 != (e = i(e, !0)).length) throw new Error('invalid counter bytes size (must be 16 bytes)');
                        this._counter = e;
                      }),
                      (I.prototype.increment = function () {
                        for (var e = 15; e >= 0; e--) {
                          if (255 !== this._counter[e]) {
                            this._counter[e]++;
                            break;
                          }
                          this._counter[e] = 0;
                        }
                      });
                    var M = function e(t, n) {
                      if (!(this instanceof e)) throw Error('AES must be instanitated with `new`');
                      (this.description = 'Counter'),
                        (this.name = 'ctr'),
                        n instanceof I || (n = new I(n)),
                        (this._counter = n),
                        (this._remainingCounter = null),
                        (this._remainingCounterIndex = 16),
                        (this._aes = new L(t));
                    };
                    (M.prototype.encrypt = function (e) {
                      for (var t = i(e, !0), n = 0; n < t.length; n++)
                        16 === this._remainingCounterIndex && ((this._remainingCounter = this._aes.encrypt(this._counter._counter)), (this._remainingCounterIndex = 0), this._counter.increment()),
                          (t[n] ^= this._remainingCounter[this._remainingCounterIndex++]);
                      return t;
                    }),
                      (M.prototype.decrypt = M.prototype.encrypt);
                    var P = {
                      AES: L,
                      Counter: I,
                      ModeOfOperation: { ecb: R, cbc: C, cfb: x, ofb: D, ctr: M },
                      utils: { hex: u, utf8: l },
                      padding: {
                        pkcs7: {
                          pad: function (e) {
                            var t = 16 - ((e = i(e, !0)).length % 16),
                              n = a(e.length + t);
                            o(e, n);
                            for (var r = e.length; r < n.length; r++) n[r] = t;
                            return n;
                          },
                          strip: function (e) {
                            if ((e = i(e, !0)).length < 16) throw new Error('PKCS#7 invalid length');
                            var t = e[e.length - 1];
                            if (t > 16) throw new Error('PKCS#7 padding byte out of range');
                            for (var n = e.length - t, r = 0; r < t; r++) if (e[n + r] !== t) throw new Error('PKCS#7 invalid padding byte');
                            var s = a(n);
                            return o(e, s, 0, 0, n), s;
                          },
                        },
                      },
                      _arrayTest: { coerceArray: i, createArray: a, copyArray: o },
                    };
                    e.exports = P;
                  })();
                },
                function (e, t, n) {
                  e.exports = n(20).default;
                },
                function (e, t, n) {
                  (function (t, n) {
                    var r;
                    (r = function () {
                      'use strict';
                      function e(e) {
                        return 'function' == typeof e;
                      }
                      var r = Array.isArray
                          ? Array.isArray
                          : function (e) {
                              return '[object Array]' === Object.prototype.toString.call(e);
                            },
                        i = 0,
                        a = void 0,
                        o = void 0,
                        l = function (e, t) {
                          (v[i] = e), (v[i + 1] = t), 2 === (i += 2) && (o ? o(m) : E());
                        },
                        u = 'undefined' != typeof window ? window : void 0,
                        c = u || {},
                        d = c.MutationObserver || c.WebKitMutationObserver,
                        f = 'undefined' == typeof self && void 0 !== t && '[object process]' === {}.toString.call(t),
                        h = 'undefined' != typeof Uint8ClampedArray && 'undefined' != typeof importScripts && 'undefined' != typeof MessageChannel;
                      function p() {
                        var e = setTimeout;
                        return function () {
                          return e(m, 1);
                        };
                      }
                      var v = new Array(1e3);
                      function m() {
                        for (var e = 0; e < i; e += 2) (0, v[e])(v[e + 1]), (v[e] = void 0), (v[e + 1] = void 0);
                        i = 0;
                      }
                      var g,
                        y,
                        _,
                        b,
                        E = void 0;
                      function S(e, t) {
                        var n = this,
                          r = new this.constructor(w);
                        void 0 === r[T] && O(r);
                        var i = n._state;
                        if (i) {
                          var a = arguments[i - 1];
                          l(function () {
                            return M(i, r, a, n._result);
                          });
                        } else D(n, r, e, t);
                        return r;
                      }
                      function k(e) {
                        if (e && 'object' == s(e) && e.constructor === this) return e;
                        var t = new this(w);
                        return L(t, e), t;
                      }
                      f
                        ? (E = function () {
                            return t.nextTick(m);
                          })
                        : d
                        ? ((y = 0),
                          (_ = new d(m)),
                          (b = document.createTextNode('')),
                          _.observe(b, { characterData: !0 }),
                          (E = function () {
                            b.data = y = ++y % 2;
                          }))
                        : h
                        ? (((g = new MessageChannel()).port1.onmessage = m),
                          (E = function () {
                            return g.port2.postMessage(0);
                          }))
                        : (E =
                            void 0 === u
                              ? (function () {
                                  try {
                                    var e = Function('return this')().require('vertx');
                                    return void 0 !== (a = e.runOnLoop || e.runOnContext)
                                      ? function () {
                                          a(m);
                                        }
                                      : p();
                                  } catch (e) {
                                    return p();
                                  }
                                })()
                              : p());
                      var T = Math.random().toString(36).substring(2);
                      function w() {}
                      function A(t, n, r) {
                        n.constructor === t.constructor && r === S && n.constructor.resolve === k
                          ? (function (e, t) {
                              1 === t._state
                                ? C(e, t._result)
                                : 2 === t._state
                                ? x(e, t._result)
                                : D(
                                    t,
                                    void 0,
                                    function (t) {
                                      return L(e, t);
                                    },
                                    function (t) {
                                      return x(e, t);
                                    },
                                  );
                            })(t, n)
                          : void 0 === r
                          ? C(t, n)
                          : e(r)
                          ? (function (e, t, n) {
                              l(function (e) {
                                var r = !1,
                                  i = (function (e, t, n, r) {
                                    try {
                                      e.call(t, n, r);
                                    } catch (e) {
                                      return e;
                                    }
                                  })(
                                    n,
                                    t,
                                    function (n) {
                                      r || ((r = !0), t !== n ? L(e, n) : C(e, n));
                                    },
                                    function (t) {
                                      r || ((r = !0), x(e, t));
                                    },
                                    e._label,
                                  );
                                !r && i && ((r = !0), x(e, i));
                              }, e);
                            })(t, n, r)
                          : C(t, n);
                      }
                      function L(e, t) {
                        if (e === t) x(e, new TypeError('You cannot resolve a promise with itself'));
                        else if (((i = s((r = t))), null === r || ('object' !== i && 'function' !== i))) C(e, t);
                        else {
                          var n = void 0;
                          try {
                            n = t.then;
                          } catch (t) {
                            return void x(e, t);
                          }
                          A(e, t, n);
                        }
                        var r, i;
                      }
                      function R(e) {
                        e._onerror && e._onerror(e._result), I(e);
                      }
                      function C(e, t) {
                        void 0 === e._state && ((e._result = t), (e._state = 1), 0 !== e._subscribers.length && l(I, e));
                      }
                      function x(e, t) {
                        void 0 === e._state && ((e._state = 2), (e._result = t), l(R, e));
                      }
                      function D(e, t, n, r) {
                        var i = e._subscribers,
                          a = i.length;
                        (e._onerror = null), (i[a] = t), (i[a + 1] = n), (i[a + 2] = r), 0 === a && e._state && l(I, e);
                      }
                      function I(e) {
                        var t = e._subscribers,
                          n = e._state;
                        if (0 !== t.length) {
                          for (var r = void 0, i = void 0, a = e._result, o = 0; o < t.length; o += 3) (r = t[o]), (i = t[o + n]), r ? M(n, r, i, a) : i(a);
                          e._subscribers.length = 0;
                        }
                      }
                      function M(t, n, r, i) {
                        var a = e(r),
                          o = void 0,
                          s = void 0,
                          l = !0;
                        if (a) {
                          try {
                            o = r(i);
                          } catch (e) {
                            (l = !1), (s = e);
                          }
                          if (n === o) return void x(n, new TypeError('A promises callback cannot return that same promise.'));
                        } else o = i;
                        void 0 !== n._state || (a && l ? L(n, o) : !1 === l ? x(n, s) : 1 === t ? C(n, o) : 2 === t && x(n, o));
                      }
                      var P = 0;
                      function O(e) {
                        (e[T] = P++), (e._state = void 0), (e._result = void 0), (e._subscribers = []);
                      }
                      var F = (function () {
                          function e(e, t) {
                            (this._instanceConstructor = e),
                              (this.promise = new e(w)),
                              this.promise[T] || O(this.promise),
                              r(t)
                                ? ((this.length = t.length),
                                  (this._remaining = t.length),
                                  (this._result = new Array(this.length)),
                                  0 === this.length ? C(this.promise, this._result) : ((this.length = this.length || 0), this._enumerate(t), 0 === this._remaining && C(this.promise, this._result)))
                                : x(this.promise, new Error('Array Methods must be provided an Array'));
                          }
                          return (
                            (e.prototype._enumerate = function (e) {
                              for (var t = 0; void 0 === this._state && t < e.length; t++) this._eachEntry(e[t], t);
                            }),
                            (e.prototype._eachEntry = function (e, t) {
                              var n = this._instanceConstructor,
                                r = n.resolve;
                              if (r === k) {
                                var i = void 0,
                                  a = void 0,
                                  o = !1;
                                try {
                                  i = e.then;
                                } catch (e) {
                                  (o = !0), (a = e);
                                }
                                if (i === S && void 0 !== e._state) this._settledAt(e._state, t, e._result);
                                else if ('function' != typeof i) this._remaining--, (this._result[t] = e);
                                else if (n === N) {
                                  var s = new n(w);
                                  o ? x(s, a) : A(s, e, i), this._willSettleAt(s, t);
                                } else
                                  this._willSettleAt(
                                    new n(function (t) {
                                      return t(e);
                                    }),
                                    t,
                                  );
                              } else this._willSettleAt(r(e), t);
                            }),
                            (e.prototype._settledAt = function (e, t, n) {
                              var r = this.promise;
                              void 0 === r._state && (this._remaining--, 2 === e ? x(r, n) : (this._result[t] = n)), 0 === this._remaining && C(r, this._result);
                            }),
                            (e.prototype._willSettleAt = function (e, t) {
                              var n = this;
                              D(
                                e,
                                void 0,
                                function (e) {
                                  return n._settledAt(1, t, e);
                                },
                                function (e) {
                                  return n._settledAt(2, t, e);
                                },
                              );
                            }),
                            e
                          );
                        })(),
                        N = (function () {
                          function t(e) {
                            (this[T] = P++),
                              (this._result = this._state = void 0),
                              (this._subscribers = []),
                              w !== e &&
                                ('function' != typeof e &&
                                  (function () {
                                    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
                                  })(),
                                this instanceof t
                                  ? (function (e, t) {
                                      try {
                                        t(
                                          function (t) {
                                            L(e, t);
                                          },
                                          function (t) {
                                            x(e, t);
                                          },
                                        );
                                      } catch (t) {
                                        x(e, t);
                                      }
                                    })(this, e)
                                  : (function () {
                                      throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                                    })());
                          }
                          return (
                            (t.prototype.catch = function (e) {
                              return this.then(null, e);
                            }),
                            (t.prototype.finally = function (t) {
                              var n = this.constructor;
                              return e(t)
                                ? this.then(
                                    function (e) {
                                      return n.resolve(t()).then(function () {
                                        return e;
                                      });
                                    },
                                    function (e) {
                                      return n.resolve(t()).then(function () {
                                        throw e;
                                      });
                                    },
                                  )
                                : this.then(t, t);
                            }),
                            t
                          );
                        })();
                      return (
                        (N.prototype.then = S),
                        (N.all = function (e) {
                          return new F(this, e).promise;
                        }),
                        (N.race = function (e) {
                          var t = this;
                          return r(e)
                            ? new t(function (n, r) {
                                for (var i = e.length, a = 0; a < i; a++) t.resolve(e[a]).then(n, r);
                              })
                            : new t(function (e, t) {
                                return t(new TypeError('You must pass an array to race.'));
                              });
                        }),
                        (N.resolve = k),
                        (N.reject = function (e) {
                          var t = new this(w);
                          return x(t, e), t;
                        }),
                        (N._setScheduler = function (e) {
                          o = e;
                        }),
                        (N._setAsap = function (e) {
                          l = e;
                        }),
                        (N._asap = l),
                        (N.polyfill = function () {
                          var e = void 0;
                          if (void 0 !== n) e = n;
                          else if ('undefined' != typeof self) e = self;
                          else
                            try {
                              e = Function('return this')();
                            } catch (e) {
                              throw new Error('polyfill failed because global object is unavailable in this environment');
                            }
                          var t = e.Promise;
                          if (t) {
                            var r = null;
                            try {
                              r = Object.prototype.toString.call(t.resolve());
                            } catch (e) {}
                            if ('[object Promise]' === r && !t.cast) return;
                          }
                          e.Promise = N;
                        }),
                        (N.Promise = N),
                        N
                      );
                    }),
                      (e.exports = r());
                  }).call(this, n(17), n(18));
                },
                function (e, t) {
                  var n,
                    r,
                    i = (e.exports = {});
                  function a() {
                    throw new Error('setTimeout has not been defined');
                  }
                  function o() {
                    throw new Error('clearTimeout has not been defined');
                  }
                  function s(e) {
                    if (n === setTimeout) return setTimeout(e, 0);
                    if ((n === a || !n) && setTimeout) return (n = setTimeout), setTimeout(e, 0);
                    try {
                      return n(e, 0);
                    } catch (t) {
                      try {
                        return n.call(null, e, 0);
                      } catch (t) {
                        return n.call(this, e, 0);
                      }
                    }
                  }
                  !(function () {
                    try {
                      n = 'function' == typeof setTimeout ? setTimeout : a;
                    } catch (e) {
                      n = a;
                    }
                    try {
                      r = 'function' == typeof clearTimeout ? clearTimeout : o;
                    } catch (e) {
                      r = o;
                    }
                  })();
                  var l,
                    u = [],
                    c = !1,
                    d = -1;
                  function f() {
                    c && l && ((c = !1), l.length ? (u = l.concat(u)) : (d = -1), u.length && h());
                  }
                  function h() {
                    if (!c) {
                      var e = s(f);
                      c = !0;
                      for (var t = u.length; t; ) {
                        for (l = u, u = []; ++d < t; ) l && l[d].run();
                        (d = -1), (t = u.length);
                      }
                      (l = null),
                        (c = !1),
                        (function (e) {
                          if (r === clearTimeout) return clearTimeout(e);
                          if ((r === o || !r) && clearTimeout) return (r = clearTimeout), clearTimeout(e);
                          try {
                            r(e);
                          } catch (t) {
                            try {
                              return r.call(null, e);
                            } catch (t) {
                              return r.call(this, e);
                            }
                          }
                        })(e);
                    }
                  }
                  function p(e, t) {
                    (this.fun = e), (this.array = t);
                  }
                  function v() {}
                  (i.nextTick = function (e) {
                    var t = new Array(arguments.length - 1);
                    if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                    u.push(new p(e, t)), 1 !== u.length || c || s(h);
                  }),
                    (p.prototype.run = function () {
                      this.fun.apply(null, this.array);
                    }),
                    (i.title = 'browser'),
                    (i.browser = !0),
                    (i.env = {}),
                    (i.argv = []),
                    (i.version = ''),
                    (i.versions = {}),
                    (i.on = v),
                    (i.addListener = v),
                    (i.once = v),
                    (i.off = v),
                    (i.removeListener = v),
                    (i.removeAllListeners = v),
                    (i.emit = v),
                    (i.prependListener = v),
                    (i.prependOnceListener = v),
                    (i.listeners = function (e) {
                      return [];
                    }),
                    (i.binding = function (e) {
                      throw new Error('process.binding is not supported');
                    }),
                    (i.cwd = function () {
                      return '/';
                    }),
                    (i.chdir = function (e) {
                      throw new Error('process.chdir is not supported');
                    }),
                    (i.umask = function () {
                      return 0;
                    });
                },
                function (e, t) {
                  var n;
                  n = (function () {
                    return this;
                  })();
                  try {
                    n = n || new Function('return this')();
                  } catch (e) {
                    'object' == ('undefined' == typeof window ? 'undefined' : s(window)) && (n = window);
                  }
                  e.exports = n;
                },
                function (e, t, n) {
                  'use strict';
                  n.r(t);
                  var r = n(9),
                    i = n(12),
                    a = n(10),
                    o = n(1);
                  t.default = function (e) {
                    var t = null,
                      n = function (t, n) {
                        e.postMessage({ msg: 'logcat_callback', data: { type: t, logcat: n } });
                      }.bind(this);
                    function s(t, n) {
                      var r = { msg: o.a.INIT_SEGMENT, data: { type: t, data: n } };
                      e.postMessage(r, [n.data]);
                    }
                    function l(t, n) {
                      var r = { msg: o.a.MEDIA_SEGMENT, data: { type: t, data: n } };
                      e.postMessage(r, [n.data]);
                    }
                    function u() {
                      var t = { msg: o.a.LOADING_COMPLETE };
                      e.postMessage(t);
                    }
                    function c() {
                      var t = { msg: o.a.RECOVERED_EARLY_EOF };
                      e.postMessage(t);
                    }
                    function d(t) {
                      var n = { msg: o.a.MEDIA_INFO, data: t };
                      e.postMessage(n);
                    }
                    function f(t) {
                      var n = { msg: o.a.METADATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function h(t) {
                      var n = { msg: o.a.SCRIPTDATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function p(t) {
                      var n = { msg: o.a.TIMED_ID3_METADATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function v(t) {
                      var n = { msg: o.a.SMPTE2038_METADATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function m(t) {
                      var n = { msg: o.a.SCTE35_METADATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function g(t) {
                      var n = { msg: o.a.PES_PRIVATE_DATA_DESCRIPTOR, data: t };
                      e.postMessage(n);
                    }
                    function y(t) {
                      var n = { msg: o.a.PES_PRIVATE_DATA_ARRIVED, data: t };
                      e.postMessage(n);
                    }
                    function _(t) {
                      var n = { msg: o.a.STATISTICS_INFO, data: t };
                      e.postMessage(n);
                    }
                    function b(t, n) {
                      e.postMessage({ msg: o.a.IO_ERROR, data: { type: t, info: n } });
                    }
                    function E(t, n) {
                      e.postMessage({ msg: o.a.DEMUX_ERROR, data: { type: t, info: n } });
                    }
                    function S(t) {
                      e.postMessage({ msg: o.a.RECOMMEND_SEEKPOINT, data: t });
                    }
                    i.a.install(),
                      e.addEventListener('message', function (i) {
                        switch (i.data.cmd) {
                          case 'init':
                            (t = new a.a(i.data.param[0], i.data.param[1])).on(o.a.IO_ERROR, b.bind(this)),
                              t.on(o.a.DEMUX_ERROR, E.bind(this)),
                              t.on(o.a.INIT_SEGMENT, s.bind(this)),
                              t.on(o.a.MEDIA_SEGMENT, l.bind(this)),
                              t.on(o.a.LOADING_COMPLETE, u.bind(this)),
                              t.on(o.a.RECOVERED_EARLY_EOF, c.bind(this)),
                              t.on(o.a.MEDIA_INFO, d.bind(this)),
                              t.on(o.a.METADATA_ARRIVED, f.bind(this)),
                              t.on(o.a.SCRIPTDATA_ARRIVED, h.bind(this)),
                              t.on(o.a.TIMED_ID3_METADATA_ARRIVED, p.bind(this)),
                              t.on(o.a.SMPTE2038_METADATA_ARRIVED, v.bind(this)),
                              t.on(o.a.SCTE35_METADATA_ARRIVED, m.bind(this)),
                              t.on(o.a.PES_PRIVATE_DATA_DESCRIPTOR, g.bind(this)),
                              t.on(o.a.PES_PRIVATE_DATA_ARRIVED, y.bind(this)),
                              t.on(o.a.STATISTICS_INFO, _.bind(this)),
                              t.on(o.a.RECOMMEND_SEEKPOINT, S.bind(this));
                            break;
                          case 'destroy':
                            t && (t.destroy(), (t = null)), e.postMessage({ msg: 'destroyed' });
                            break;
                          case 'start':
                            t.start();
                            break;
                          case 'stop':
                            t.stop();
                            break;
                          case 'seek':
                            t.seek(i.data.param);
                            break;
                          case 'pause':
                            t.pause();
                            break;
                          case 'resume':
                            t.resume();
                            break;
                          case 'logging_config':
                            var k = i.data.param;
                            r.a.applyConfig(k), !0 === k.enableCallback ? r.a.addLogListener(n) : r.a.removeLogListener(n);
                        }
                      });
                  };
                },
                function (e, t, n) {
                  'use strict';
                  n.r(t);
                  var r = n(12),
                    i = n(11),
                    a = {
                      enableWorker: !1,
                      enableStashBuffer: !0,
                      stashInitialSize: void 0,
                      isLive: !1,
                      liveBufferLatencyChasing: !1,
                      liveBufferLatencyMaxLatency: 1.5,
                      liveBufferLatencyMinRemain: 0.5,
                      lazyLoad: !0,
                      lazyLoadMaxDuration: 180,
                      lazyLoadRecoverDuration: 30,
                      deferLoadAfterSourceOpen: !0,
                      autoCleanupMaxBackwardDuration: 180,
                      autoCleanupMinBackwardDuration: 120,
                      statisticsInfoReportInterval: 600,
                      fixAudioTimestampGap: !0,
                      accurateSeek: !1,
                      seekType: 'range',
                      seekParamStart: 'bstart',
                      seekParamEnd: 'bend',
                      rangeLoadZeroStart: !1,
                      customSeekHandler: void 0,
                      reuseRedirectedURL: !1,
                      headers: void 0,
                      customLoader: void 0,
                    };
                  function o() {
                    return Object.assign({}, a);
                  }
                  var l = (function () {
                      function e() {}
                      return (
                        (e.supportMSEH264Playback = function () {
                          return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"');
                        }),
                        (e.supportMSEH265Playback = function () {
                          return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="hvc1.1.6.L93.B0"');
                        }),
                        (e.supportNetworkStreamIO = function () {
                          var e = new i.a({}, o()),
                            t = e.loaderType;
                          return e.destroy(), 'fetch-stream-loader' == t || 'xhr-moz-chunked-loader' == t;
                        }),
                        (e.getNetworkLoaderTypeName = function () {
                          var e = new i.a({}, o()),
                            t = e.loaderType;
                          return e.destroy(), t;
                        }),
                        (e.supportNativeMediaPlayback = function (t) {
                          null == e.videoElement && (e.videoElement = window.document.createElement('video'));
                          var n = e.videoElement.canPlayType(t);
                          return 'probably' === n || 'maybe' == n;
                        }),
                        (e.getFeatureList = function () {
                          var t = {
                            msePlayback: !1,
                            mseLivePlayback: !1,
                            mseH265Playback: !1,
                            networkStreamIO: !1,
                            networkLoaderName: '',
                            nativeMP4H264Playback: !1,
                            nativeMP4H265Playback: !1,
                            nativeWebmVP8Playback: !1,
                            nativeWebmVP9Playback: !1,
                          };
                          return (
                            (t.msePlayback = e.supportMSEH264Playback()),
                            (t.networkStreamIO = e.supportNetworkStreamIO()),
                            (t.networkLoaderName = e.getNetworkLoaderTypeName()),
                            (t.mseLivePlayback = t.msePlayback && t.networkStreamIO),
                            (t.mseH265Playback = e.supportMSEH265Playback()),
                            (t.nativeMP4H264Playback = e.supportNativeMediaPlayback('video/mp4; codecs="avc1.42001E, mp4a.40.2"')),
                            (t.nativeMP4H265Playback = e.supportNativeMediaPlayback('video/mp4; codecs="hvc1.1.6.L93.B0"')),
                            (t.nativeWebmVP8Playback = e.supportNativeMediaPlayback('video/webm; codecs="vp8.0, vorbis"')),
                            (t.nativeWebmVP9Playback = e.supportNativeMediaPlayback('video/webm; codecs="vp9"')),
                            t
                          );
                        }),
                        e
                      );
                    })(),
                    u = n(2),
                    c = n(6),
                    d = n.n(c),
                    f = n(0),
                    h = n(4),
                    p = {
                      ERROR: 'error',
                      LOADING_COMPLETE: 'loading_complete',
                      RECOVERED_EARLY_EOF: 'recovered_early_eof',
                      MEDIA_INFO: 'media_info',
                      METADATA_ARRIVED: 'metadata_arrived',
                      SCRIPTDATA_ARRIVED: 'scriptdata_arrived',
                      TIMED_ID3_METADATA_ARRIVED: 'timed_id3_metadata_arrived',
                      SMPTE2038_METADATA_ARRIVED: 'smpte2038_metadata_arrived',
                      SCTE35_METADATA_ARRIVED: 'scte35_metadata_arrived',
                      PES_PRIVATE_DATA_DESCRIPTOR: 'pes_private_data_descriptor',
                      PES_PRIVATE_DATA_ARRIVED: 'pes_private_data_arrived',
                      STATISTICS_INFO: 'statistics_info',
                    },
                    v = n(13),
                    m = n.n(v),
                    g = n(9),
                    y = n(10),
                    _ = n(1),
                    b = n(8),
                    E = (function () {
                      function e(e, t) {
                        if (((this.TAG = 'Transmuxer'), (this._emitter = new d.a()), t.enableWorker && 'undefined' != typeof Worker))
                          try {
                            (this._worker = m()(19)),
                              (this._workerDestroying = !1),
                              this._worker.addEventListener('message', this._onWorkerMessage.bind(this)),
                              this._worker.postMessage({ cmd: 'init', param: [e, t] }),
                              (this.e = { onLoggingConfigChanged: this._onLoggingConfigChanged.bind(this) }),
                              g.a.registerListener(this.e.onLoggingConfigChanged),
                              this._worker.postMessage({ cmd: 'logging_config', param: g.a.getConfig() });
                          } catch (n) {
                            f.a.e(this.TAG, 'Error while initialize transmuxing worker, fallback to inline transmuxing'), (this._worker = null), (this._controller = new y.a(e, t));
                          }
                        else this._controller = new y.a(e, t);
                        if (this._controller) {
                          var n = this._controller;
                          n.on(_.a.IO_ERROR, this._onIOError.bind(this)),
                            n.on(_.a.DEMUX_ERROR, this._onDemuxError.bind(this)),
                            n.on(_.a.INIT_SEGMENT, this._onInitSegment.bind(this)),
                            n.on(_.a.MEDIA_SEGMENT, this._onMediaSegment.bind(this)),
                            n.on(_.a.LOADING_COMPLETE, this._onLoadingComplete.bind(this)),
                            n.on(_.a.RECOVERED_EARLY_EOF, this._onRecoveredEarlyEof.bind(this)),
                            n.on(_.a.MEDIA_INFO, this._onMediaInfo.bind(this)),
                            n.on(_.a.METADATA_ARRIVED, this._onMetaDataArrived.bind(this)),
                            n.on(_.a.SCRIPTDATA_ARRIVED, this._onScriptDataArrived.bind(this)),
                            n.on(_.a.TIMED_ID3_METADATA_ARRIVED, this._onTimedID3MetadataArrived.bind(this)),
                            n.on(_.a.SMPTE2038_METADATA_ARRIVED, this._onSMPTE2038MetadataArrived.bind(this)),
                            n.on(_.a.SCTE35_METADATA_ARRIVED, this._onSCTE35MetadataArrived.bind(this)),
                            n.on(_.a.PES_PRIVATE_DATA_DESCRIPTOR, this._onPESPrivateDataDescriptor.bind(this)),
                            n.on(_.a.PES_PRIVATE_DATA_ARRIVED, this._onPESPrivateDataArrived.bind(this)),
                            n.on(_.a.STATISTICS_INFO, this._onStatisticsInfo.bind(this)),
                            n.on(_.a.RECOMMEND_SEEKPOINT, this._onRecommendSeekpoint.bind(this));
                        }
                      }
                      return (
                        (e.prototype.destroy = function () {
                          this._worker
                            ? this._workerDestroying ||
                              ((this._workerDestroying = !0), this._worker.postMessage({ cmd: 'destroy' }), g.a.removeListener(this.e.onLoggingConfigChanged), (this.e = null))
                            : (this._controller.destroy(), (this._controller = null)),
                            this._emitter.removeAllListeners(),
                            (this._emitter = null);
                        }),
                        (e.prototype.on = function (e, t) {
                          this._emitter.addListener(e, t);
                        }),
                        (e.prototype.off = function (e, t) {
                          this._emitter.removeListener(e, t);
                        }),
                        (e.prototype.hasWorker = function () {
                          return null != this._worker;
                        }),
                        (e.prototype.open = function () {
                          this._worker ? this._worker.postMessage({ cmd: 'start' }) : this._controller.start();
                        }),
                        (e.prototype.close = function () {
                          this._worker ? this._worker.postMessage({ cmd: 'stop' }) : this._controller.stop();
                        }),
                        (e.prototype.seek = function (e) {
                          this._worker ? this._worker.postMessage({ cmd: 'seek', param: e }) : this._controller.seek(e);
                        }),
                        (e.prototype.pause = function () {
                          this._worker ? this._worker.postMessage({ cmd: 'pause' }) : this._controller.pause();
                        }),
                        (e.prototype.resume = function () {
                          this._worker ? this._worker.postMessage({ cmd: 'resume' }) : this._controller.resume();
                        }),
                        (e.prototype._onInitSegment = function (e, t) {
                          var n = this;
                          Promise.resolve().then(function () {
                            n._emitter.emit(_.a.INIT_SEGMENT, e, t);
                          });
                        }),
                        (e.prototype._onMediaSegment = function (e, t) {
                          var n = this;
                          Promise.resolve().then(function () {
                            n._emitter.emit(_.a.MEDIA_SEGMENT, e, t);
                          });
                        }),
                        (e.prototype._onLoadingComplete = function () {
                          var e = this;
                          Promise.resolve().then(function () {
                            e._emitter.emit(_.a.LOADING_COMPLETE);
                          });
                        }),
                        (e.prototype._onRecoveredEarlyEof = function () {
                          var e = this;
                          Promise.resolve().then(function () {
                            e._emitter.emit(_.a.RECOVERED_EARLY_EOF);
                          });
                        }),
                        (e.prototype._onMediaInfo = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.MEDIA_INFO, e);
                          });
                        }),
                        (e.prototype._onMetaDataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.METADATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onScriptDataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.SCRIPTDATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onTimedID3MetadataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.TIMED_ID3_METADATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onSMPTE2038MetadataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.SMPTE2038_METADATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onSCTE35MetadataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.SCTE35_METADATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onPESPrivateDataDescriptor = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.PES_PRIVATE_DATA_DESCRIPTOR, e);
                          });
                        }),
                        (e.prototype._onPESPrivateDataArrived = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.PES_PRIVATE_DATA_ARRIVED, e);
                          });
                        }),
                        (e.prototype._onStatisticsInfo = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.STATISTICS_INFO, e);
                          });
                        }),
                        (e.prototype._onIOError = function (e, t) {
                          var n = this;
                          Promise.resolve().then(function () {
                            n._emitter.emit(_.a.IO_ERROR, e, t);
                          });
                        }),
                        (e.prototype._onDemuxError = function (e, t) {
                          var n = this;
                          Promise.resolve().then(function () {
                            n._emitter.emit(_.a.DEMUX_ERROR, e, t);
                          });
                        }),
                        (e.prototype._onRecommendSeekpoint = function (e) {
                          var t = this;
                          Promise.resolve().then(function () {
                            t._emitter.emit(_.a.RECOMMEND_SEEKPOINT, e);
                          });
                        }),
                        (e.prototype._onLoggingConfigChanged = function (e) {
                          this._worker && this._worker.postMessage({ cmd: 'logging_config', param: e });
                        }),
                        (e.prototype._onWorkerMessage = function (e) {
                          var t = e.data,
                            n = t.data;
                          if ('destroyed' === t.msg || this._workerDestroying) return (this._workerDestroying = !1), this._worker.terminate(), void (this._worker = null);
                          switch (t.msg) {
                            case _.a.INIT_SEGMENT:
                            case _.a.MEDIA_SEGMENT:
                              this._emitter.emit(t.msg, n.type, n.data);
                              break;
                            case _.a.LOADING_COMPLETE:
                            case _.a.RECOVERED_EARLY_EOF:
                              this._emitter.emit(t.msg);
                              break;
                            case _.a.MEDIA_INFO:
                              Object.setPrototypeOf(n, b.a.prototype), this._emitter.emit(t.msg, n);
                              break;
                            case _.a.METADATA_ARRIVED:
                            case _.a.SCRIPTDATA_ARRIVED:
                            case _.a.TIMED_ID3_METADATA_ARRIVED:
                            case _.a.SMPTE2038_METADATA_ARRIVED:
                            case _.a.SCTE35_METADATA_ARRIVED:
                            case _.a.PES_PRIVATE_DATA_DESCRIPTOR:
                            case _.a.PES_PRIVATE_DATA_ARRIVED:
                            case _.a.STATISTICS_INFO:
                              this._emitter.emit(t.msg, n);
                              break;
                            case _.a.IO_ERROR:
                            case _.a.DEMUX_ERROR:
                              this._emitter.emit(t.msg, n.type, n.info);
                              break;
                            case _.a.RECOMMEND_SEEKPOINT:
                              this._emitter.emit(t.msg, n);
                              break;
                            case 'logcat_callback':
                              f.a.emitter.emit('log', n.type, n.logcat);
                          }
                        }),
                        e
                      );
                    })(),
                    S = 'error',
                    k = 'source_open',
                    T = 'update_end',
                    w = 'buffer_full',
                    A = n(7),
                    L = n(3),
                    R = (function () {
                      function e(e) {
                        (this.TAG = 'MSEController'),
                          (this._config = e),
                          (this._emitter = new d.a()),
                          this._config.isLive && null == this._config.autoCleanupSourceBuffer && (this._config.autoCleanupSourceBuffer = !0),
                          (this.e = {
                            onSourceOpen: this._onSourceOpen.bind(this),
                            onSourceEnded: this._onSourceEnded.bind(this),
                            onSourceClose: this._onSourceClose.bind(this),
                            onSourceBufferError: this._onSourceBufferError.bind(this),
                            onSourceBufferUpdateEnd: this._onSourceBufferUpdateEnd.bind(this),
                          }),
                          (this._mediaSource = null),
                          (this._mediaSourceObjectURL = null),
                          (this._mediaElement = null),
                          (this._isBufferFull = !1),
                          (this._hasPendingEos = !1),
                          (this._requireSetMediaDuration = !1),
                          (this._pendingMediaDuration = 0),
                          (this._pendingSourceBufferInit = []),
                          (this._mimeTypes = { video: null, audio: null }),
                          (this._sourceBuffers = { video: null, audio: null }),
                          (this._lastInitSegments = { video: null, audio: null }),
                          (this._pendingSegments = { video: [], audio: [] }),
                          (this._pendingRemoveRanges = { video: [], audio: [] }),
                          (this._idrList = new A.a());
                      }
                      return (
                        (e.prototype.destroy = function () {
                          (this._mediaElement || this._mediaSource) && this.detachMediaElement(), (this.e = null), this._emitter.removeAllListeners(), (this._emitter = null);
                        }),
                        (e.prototype.on = function (e, t) {
                          this._emitter.addListener(e, t);
                        }),
                        (e.prototype.off = function (e, t) {
                          this._emitter.removeListener(e, t);
                        }),
                        (e.prototype.attachMediaElement = function (e) {
                          if (this._mediaSource) throw new L.a('MediaSource has been attached to an HTMLMediaElement!');
                          var t = (this._mediaSource = new window.MediaSource());
                          t.addEventListener('sourceopen', this.e.onSourceOpen),
                            t.addEventListener('sourceended', this.e.onSourceEnded),
                            t.addEventListener('sourceclose', this.e.onSourceClose),
                            (this._mediaElement = e),
                            (this._mediaSourceObjectURL = window.URL.createObjectURL(this._mediaSource)),
                            (e.src = this._mediaSourceObjectURL);
                        }),
                        (e.prototype.detachMediaElement = function () {
                          if (this._mediaSource) {
                            var e = this._mediaSource;
                            for (var t in this._sourceBuffers) {
                              var n = this._pendingSegments[t];
                              n.splice(0, n.length), (this._pendingSegments[t] = null), (this._pendingRemoveRanges[t] = null), (this._lastInitSegments[t] = null);
                              var r = this._sourceBuffers[t];
                              if (r) {
                                if ('closed' !== e.readyState) {
                                  try {
                                    e.removeSourceBuffer(r);
                                  } catch (e) {
                                    f.a.e(this.TAG, e.message);
                                  }
                                  r.removeEventListener('error', this.e.onSourceBufferError), r.removeEventListener('updateend', this.e.onSourceBufferUpdateEnd);
                                }
                                (this._mimeTypes[t] = null), (this._sourceBuffers[t] = null);
                              }
                            }
                            if ('open' === e.readyState)
                              try {
                                e.endOfStream();
                              } catch (e) {
                                f.a.e(this.TAG, e.message);
                              }
                            e.removeEventListener('sourceopen', this.e.onSourceOpen),
                              e.removeEventListener('sourceended', this.e.onSourceEnded),
                              e.removeEventListener('sourceclose', this.e.onSourceClose),
                              (this._pendingSourceBufferInit = []),
                              (this._isBufferFull = !1),
                              this._idrList.clear(),
                              (this._mediaSource = null);
                          }
                          this._mediaElement && ((this._mediaElement.src = ''), this._mediaElement.removeAttribute('src'), (this._mediaElement = null)),
                            this._mediaSourceObjectURL && (window.URL.revokeObjectURL(this._mediaSourceObjectURL), (this._mediaSourceObjectURL = null));
                        }),
                        (e.prototype.appendInitSegment = function (e, t) {
                          if (!this._mediaSource || 'open' !== this._mediaSource.readyState) return this._pendingSourceBufferInit.push(e), void this._pendingSegments[e.type].push(e);
                          var n = e,
                            r = '' + n.container;
                          n.codec && n.codec.length > 0 && (r += ';codecs=' + n.codec);
                          var i = !1;
                          if ((f.a.v(this.TAG, 'Received Initialization Segment, mimeType: ' + r), (this._lastInitSegments[n.type] = n), r !== this._mimeTypes[n.type])) {
                            if (this._mimeTypes[n.type]) f.a.v(this.TAG, 'Notice: ' + n.type + ' mimeType changed, origin: ' + this._mimeTypes[n.type] + ', target: ' + r);
                            else {
                              i = !0;
                              try {
                                var a = (this._sourceBuffers[n.type] = this._mediaSource.addSourceBuffer(r));
                                a.addEventListener('error', this.e.onSourceBufferError), a.addEventListener('updateend', this.e.onSourceBufferUpdateEnd);
                              } catch (e) {
                                return f.a.e(this.TAG, e.message), void this._emitter.emit(S, { code: e.code, msg: e.message });
                              }
                            }
                            this._mimeTypes[n.type] = r;
                          }
                          t || this._pendingSegments[n.type].push(n),
                            i || (this._sourceBuffers[n.type] && !this._sourceBuffers[n.type].updating && this._doAppendSegments()),
                            h.a.safari &&
                              'audio/mpeg' === n.container &&
                              n.mediaDuration > 0 &&
                              ((this._requireSetMediaDuration = !0), (this._pendingMediaDuration = n.mediaDuration / 1e3), this._updateMediaSourceDuration());
                        }),
                        (e.prototype.appendMediaSegment = function (e) {
                          var t = e;
                          this._pendingSegments[t.type].push(t), this._config.autoCleanupSourceBuffer && this._needCleanupSourceBuffer() && this._doCleanupSourceBuffer();
                          var n = this._sourceBuffers[t.type];
                          !n || n.updating || this._hasPendingRemoveRanges() || this._doAppendSegments();
                        }),
                        (e.prototype.seek = function (e) {
                          for (var t in this._sourceBuffers)
                            if (this._sourceBuffers[t]) {
                              var n = this._sourceBuffers[t];
                              if ('open' === this._mediaSource.readyState)
                                try {
                                  n.abort();
                                } catch (e) {
                                  f.a.e(this.TAG, e.message);
                                }
                              this._idrList.clear();
                              var r = this._pendingSegments[t];
                              if ((r.splice(0, r.length), 'closed' !== this._mediaSource.readyState)) {
                                for (var i = 0; i < n.buffered.length; i++) {
                                  var a = n.buffered.start(i),
                                    o = n.buffered.end(i);
                                  this._pendingRemoveRanges[t].push({ start: a, end: o });
                                }
                                if ((n.updating || this._doRemoveRanges(), h.a.safari)) {
                                  var s = this._lastInitSegments[t];
                                  s && (this._pendingSegments[t].push(s), n.updating || this._doAppendSegments());
                                }
                              }
                            }
                        }),
                        (e.prototype.endOfStream = function () {
                          var e = this._mediaSource,
                            t = this._sourceBuffers;
                          e && 'open' === e.readyState
                            ? (t.video && t.video.updating) || (t.audio && t.audio.updating)
                              ? (this._hasPendingEos = !0)
                              : ((this._hasPendingEos = !1), e.endOfStream())
                            : e && 'closed' === e.readyState && this._hasPendingSegments() && (this._hasPendingEos = !0);
                        }),
                        (e.prototype.getNearestKeyframe = function (e) {
                          return this._idrList.getLastSyncPointBeforeDts(e);
                        }),
                        (e.prototype._needCleanupSourceBuffer = function () {
                          if (!this._config.autoCleanupSourceBuffer) return !1;
                          var e = this._mediaElement.currentTime;
                          for (var t in this._sourceBuffers) {
                            var n = this._sourceBuffers[t];
                            if (n) {
                              var r = n.buffered;
                              if (r.length >= 1 && e - r.start(0) >= this._config.autoCleanupMaxBackwardDuration) return !0;
                            }
                          }
                          return !1;
                        }),
                        (e.prototype._doCleanupSourceBuffer = function () {
                          var e = this._mediaElement.currentTime;
                          for (var t in this._sourceBuffers) {
                            var n = this._sourceBuffers[t];
                            if (n) {
                              for (var r = n.buffered, i = !1, a = 0; a < r.length; a++) {
                                var o = r.start(a),
                                  s = r.end(a);
                                if (o <= e && e < s + 3) {
                                  if (e - o >= this._config.autoCleanupMaxBackwardDuration) {
                                    i = !0;
                                    var l = e - this._config.autoCleanupMinBackwardDuration;
                                    this._pendingRemoveRanges[t].push({ start: o, end: l });
                                  }
                                } else s < e && ((i = !0), this._pendingRemoveRanges[t].push({ start: o, end: s }));
                              }
                              i && !n.updating && this._doRemoveRanges();
                            }
                          }
                        }),
                        (e.prototype._updateMediaSourceDuration = function () {
                          var e = this._sourceBuffers;
                          if (0 !== this._mediaElement.readyState && 'open' === this._mediaSource.readyState && !((e.video && e.video.updating) || (e.audio && e.audio.updating))) {
                            var t = this._mediaSource.duration,
                              n = this._pendingMediaDuration;
                            n > 0 && (isNaN(t) || n > t) && (f.a.v(this.TAG, 'Update MediaSource duration from ' + t + ' to ' + n), (this._mediaSource.duration = n)),
                              (this._requireSetMediaDuration = !1),
                              (this._pendingMediaDuration = 0);
                          }
                        }),
                        (e.prototype._doRemoveRanges = function () {
                          for (var e in this._pendingRemoveRanges)
                            if (this._sourceBuffers[e] && !this._sourceBuffers[e].updating)
                              for (var t = this._sourceBuffers[e], n = this._pendingRemoveRanges[e]; n.length && !t.updating; ) {
                                var r = n.shift();
                                t.remove(r.start, r.end);
                              }
                        }),
                        (e.prototype._doAppendSegments = function () {
                          var e = this._pendingSegments;
                          for (var t in e)
                            if (this._sourceBuffers[t] && !this._sourceBuffers[t].updating && e[t].length > 0) {
                              var n = e[t].shift();
                              if (n.timestampOffset) {
                                var r = this._sourceBuffers[t].timestampOffset,
                                  i = n.timestampOffset / 1e3;
                                Math.abs(r - i) > 0.1 && (f.a.v(this.TAG, 'Update MPEG audio timestampOffset from ' + r + ' to ' + i), (this._sourceBuffers[t].timestampOffset = i)),
                                  delete n.timestampOffset;
                              }
                              if (!n.data || 0 === n.data.byteLength) continue;
                              try {
                                this._sourceBuffers[t].appendBuffer(n.data), (this._isBufferFull = !1), 'video' === t && n.hasOwnProperty('info') && this._idrList.appendArray(n.info.syncPoints);
                              } catch (e) {
                                this._pendingSegments[t].unshift(n),
                                  22 === e.code
                                    ? (this._isBufferFull || this._emitter.emit(w), (this._isBufferFull = !0))
                                    : (f.a.e(this.TAG, e.message), this._emitter.emit(S, { code: e.code, msg: e.message }));
                              }
                            }
                        }),
                        (e.prototype._onSourceOpen = function () {
                          if ((f.a.v(this.TAG, 'MediaSource onSourceOpen'), this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen), this._pendingSourceBufferInit.length > 0))
                            for (var e = this._pendingSourceBufferInit; e.length; ) {
                              var t = e.shift();
                              this.appendInitSegment(t, !0);
                            }
                          this._hasPendingSegments() && this._doAppendSegments(), this._emitter.emit(k);
                        }),
                        (e.prototype._onSourceEnded = function () {
                          f.a.v(this.TAG, 'MediaSource onSourceEnded');
                        }),
                        (e.prototype._onSourceClose = function () {
                          f.a.v(this.TAG, 'MediaSource onSourceClose'),
                            this._mediaSource &&
                              null != this.e &&
                              (this._mediaSource.removeEventListener('sourceopen', this.e.onSourceOpen),
                              this._mediaSource.removeEventListener('sourceended', this.e.onSourceEnded),
                              this._mediaSource.removeEventListener('sourceclose', this.e.onSourceClose));
                        }),
                        (e.prototype._hasPendingSegments = function () {
                          var e = this._pendingSegments;
                          return e.video.length > 0 || e.audio.length > 0;
                        }),
                        (e.prototype._hasPendingRemoveRanges = function () {
                          var e = this._pendingRemoveRanges;
                          return e.video.length > 0 || e.audio.length > 0;
                        }),
                        (e.prototype._onSourceBufferUpdateEnd = function () {
                          this._requireSetMediaDuration
                            ? this._updateMediaSourceDuration()
                            : this._hasPendingRemoveRanges()
                            ? this._doRemoveRanges()
                            : this._hasPendingSegments()
                            ? this._doAppendSegments()
                            : this._hasPendingEos && this.endOfStream(),
                            this._emitter.emit(T);
                        }),
                        (e.prototype._onSourceBufferError = function (e) {
                          f.a.e(this.TAG, 'SourceBuffer Error: ' + e);
                        }),
                        e
                      );
                    })(),
                    C = n(5),
                    x = { NETWORK_ERROR: 'NetworkError', MEDIA_ERROR: 'MediaError', OTHER_ERROR: 'OtherError' },
                    D = {
                      NETWORK_EXCEPTION: u.b.EXCEPTION,
                      NETWORK_STATUS_CODE_INVALID: u.b.HTTP_STATUS_CODE_INVALID,
                      NETWORK_TIMEOUT: u.b.CONNECTING_TIMEOUT,
                      NETWORK_UNRECOVERABLE_EARLY_EOF: u.b.UNRECOVERABLE_EARLY_EOF,
                      MEDIA_MSE_ERROR: 'MediaMSEError',
                      MEDIA_FORMAT_ERROR: C.a.FORMAT_ERROR,
                      MEDIA_FORMAT_UNSUPPORTED: C.a.FORMAT_UNSUPPORTED,
                      MEDIA_CODEC_UNSUPPORTED: C.a.CODEC_UNSUPPORTED,
                    },
                    I = (function () {
                      function e(e, t) {
                        (this.TAG = 'MSEPlayer'), (this._type = 'MSEPlayer'), (this._emitter = new d.a()), (this._config = o()), 'object' == s(t) && Object.assign(this._config, t);
                        var n = e.type.toLowerCase();
                        if ('mse' !== n && 'mpegts' !== n && 'm2ts' !== n && 'flv' !== n) throw new L.b('MSEPlayer requires an mpegts/m2ts/flv MediaDataSource input!');
                        !0 === e.isLive && (this._config.isLive = !0),
                          (this.e = {
                            onvLoadedMetadata: this._onvLoadedMetadata.bind(this),
                            onvSeeking: this._onvSeeking.bind(this),
                            onvCanPlay: this._onvCanPlay.bind(this),
                            onvStalled: this._onvStalled.bind(this),
                            onvProgress: this._onvProgress.bind(this),
                          }),
                          self.performance && self.performance.now ? (this._now = self.performance.now.bind(self.performance)) : (this._now = Date.now),
                          (this._pendingSeekTime = null),
                          (this._requestSetTime = !1),
                          (this._seekpointRecord = null),
                          (this._progressChecker = null),
                          (this._mediaDataSource = e),
                          (this._mediaElement = null),
                          (this._msectl = null),
                          (this._transmuxer = null),
                          (this._mseSourceOpened = !1),
                          (this._hasPendingLoad = !1),
                          (this._receivedCanPlay = !1),
                          (this._mediaInfo = null),
                          (this._statisticsInfo = null);
                        var r = h.a.chrome && (h.a.version.major < 50 || (50 === h.a.version.major && h.a.version.build < 2661));
                        (this._alwaysSeekKeyframe = !!(r || h.a.msedge || h.a.msie)), this._alwaysSeekKeyframe && (this._config.accurateSeek = !1);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          null != this._progressChecker && (window.clearInterval(this._progressChecker), (this._progressChecker = null)),
                            this._transmuxer && this.unload(),
                            this._mediaElement && this.detachMediaElement(),
                            (this.e = null),
                            (this._mediaDataSource = null),
                            this._emitter.removeAllListeners(),
                            (this._emitter = null);
                        }),
                        (e.prototype.on = function (e, t) {
                          var n = this;
                          e === p.MEDIA_INFO
                            ? null != this._mediaInfo &&
                              Promise.resolve().then(function () {
                                n._emitter.emit(p.MEDIA_INFO, n.mediaInfo);
                              })
                            : e === p.STATISTICS_INFO &&
                              null != this._statisticsInfo &&
                              Promise.resolve().then(function () {
                                n._emitter.emit(p.STATISTICS_INFO, n.statisticsInfo);
                              }),
                            this._emitter.addListener(e, t);
                        }),
                        (e.prototype.off = function (e, t) {
                          this._emitter.removeListener(e, t);
                        }),
                        (e.prototype.attachMediaElement = function (e) {
                          var t = this;
                          if (
                            ((this._mediaElement = e),
                            e.addEventListener('loadedmetadata', this.e.onvLoadedMetadata),
                            e.addEventListener('seeking', this.e.onvSeeking),
                            e.addEventListener('canplay', this.e.onvCanPlay),
                            e.addEventListener('stalled', this.e.onvStalled),
                            e.addEventListener('progress', this.e.onvProgress),
                            (this._msectl = new R(this._config)),
                            this._msectl.on(T, this._onmseUpdateEnd.bind(this)),
                            this._msectl.on(w, this._onmseBufferFull.bind(this)),
                            this._msectl.on(k, function () {
                              (t._mseSourceOpened = !0), t._hasPendingLoad && ((t._hasPendingLoad = !1), t.load());
                            }),
                            this._msectl.on(S, function (e) {
                              t._emitter.emit(p.ERROR, x.MEDIA_ERROR, D.MEDIA_MSE_ERROR, e);
                            }),
                            this._msectl.attachMediaElement(e),
                            null != this._pendingSeekTime)
                          )
                            try {
                              (e.currentTime = this._pendingSeekTime), (this._pendingSeekTime = null);
                            } catch (e) {}
                        }),
                        (e.prototype.detachMediaElement = function () {
                          this._mediaElement &&
                            (this._msectl.detachMediaElement(),
                            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata),
                            this._mediaElement.removeEventListener('seeking', this.e.onvSeeking),
                            this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay),
                            this._mediaElement.removeEventListener('stalled', this.e.onvStalled),
                            this._mediaElement.removeEventListener('progress', this.e.onvProgress),
                            (this._mediaElement = null)),
                            this._msectl && (this._msectl.destroy(), (this._msectl = null));
                        }),
                        (e.prototype.load = function () {
                          var e = this;
                          if (!this._mediaElement) throw new L.a('HTMLMediaElement must be attached before load()!');
                          if (this._transmuxer) throw new L.a('MSEPlayer.load() has been called, please call unload() first!');
                          this._hasPendingLoad ||
                            (this._config.deferLoadAfterSourceOpen && !1 === this._mseSourceOpened
                              ? (this._hasPendingLoad = !0)
                              : (this._mediaElement.readyState > 0 && ((this._requestSetTime = !0), (this._mediaElement.currentTime = 0)),
                                (this._transmuxer = new E(this._mediaDataSource, this._config)),
                                this._transmuxer.on(_.a.INIT_SEGMENT, function (t, n) {
                                  e._msectl.appendInitSegment(n);
                                }),
                                this._transmuxer.on(_.a.MEDIA_SEGMENT, function (t, n) {
                                  if ((e._msectl.appendMediaSegment(n), e._config.lazyLoad && !e._config.isLive)) {
                                    var r = e._mediaElement.currentTime;
                                    n.info.endDts >= 1e3 * (r + e._config.lazyLoadMaxDuration) &&
                                      null == e._progressChecker &&
                                      (f.a.v(e.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task'), e._suspendTransmuxer());
                                  }
                                }),
                                this._transmuxer.on(_.a.LOADING_COMPLETE, function () {
                                  e._msectl.endOfStream(), e._emitter.emit(p.LOADING_COMPLETE);
                                }),
                                this._transmuxer.on(_.a.RECOVERED_EARLY_EOF, function () {
                                  e._emitter.emit(p.RECOVERED_EARLY_EOF);
                                }),
                                this._transmuxer.on(_.a.IO_ERROR, function (t, n) {
                                  e._emitter.emit(p.ERROR, x.NETWORK_ERROR, t, n);
                                }),
                                this._transmuxer.on(_.a.DEMUX_ERROR, function (t, n) {
                                  e._emitter.emit(p.ERROR, x.MEDIA_ERROR, t, { code: -1, msg: n });
                                }),
                                this._transmuxer.on(_.a.MEDIA_INFO, function (t) {
                                  (e._mediaInfo = t), e._emitter.emit(p.MEDIA_INFO, Object.assign({}, t));
                                }),
                                this._transmuxer.on(_.a.METADATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.METADATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.SCRIPTDATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.SCRIPTDATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.TIMED_ID3_METADATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.TIMED_ID3_METADATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.SMPTE2038_METADATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.SMPTE2038_METADATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.SCTE35_METADATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.SCTE35_METADATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.PES_PRIVATE_DATA_DESCRIPTOR, function (t) {
                                  e._emitter.emit(p.PES_PRIVATE_DATA_DESCRIPTOR, t);
                                }),
                                this._transmuxer.on(_.a.PES_PRIVATE_DATA_ARRIVED, function (t) {
                                  e._emitter.emit(p.PES_PRIVATE_DATA_ARRIVED, t);
                                }),
                                this._transmuxer.on(_.a.STATISTICS_INFO, function (t) {
                                  (e._statisticsInfo = e._fillStatisticsInfo(t)), e._emitter.emit(p.STATISTICS_INFO, Object.assign({}, e._statisticsInfo));
                                }),
                                this._transmuxer.on(_.a.RECOMMEND_SEEKPOINT, function (t) {
                                  e._mediaElement && !e._config.accurateSeek && ((e._requestSetTime = !0), (e._mediaElement.currentTime = t / 1e3));
                                }),
                                this._transmuxer.open()));
                        }),
                        (e.prototype.unload = function () {
                          this._mediaElement && this._mediaElement.pause(),
                            this._msectl && this._msectl.seek(0),
                            this._transmuxer && (this._transmuxer.close(), this._transmuxer.destroy(), (this._transmuxer = null));
                        }),
                        (e.prototype.play = function () {
                          return this._mediaElement.play();
                        }),
                        (e.prototype.pause = function () {
                          this._mediaElement.pause();
                        }),
                        Object.defineProperty(e.prototype, 'type', {
                          get: function () {
                            return this._type;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'buffered', {
                          get: function () {
                            return this._mediaElement.buffered;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'duration', {
                          get: function () {
                            return this._mediaElement.duration;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'volume', {
                          get: function () {
                            return this._mediaElement.volume;
                          },
                          set: function (e) {
                            this._mediaElement.volume = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'muted', {
                          get: function () {
                            return this._mediaElement.muted;
                          },
                          set: function (e) {
                            this._mediaElement.muted = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'currentTime', {
                          get: function () {
                            return this._mediaElement ? this._mediaElement.currentTime : 0;
                          },
                          set: function (e) {
                            this._mediaElement ? this._internalSeek(e) : (this._pendingSeekTime = e);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'mediaInfo', {
                          get: function () {
                            return Object.assign({}, this._mediaInfo);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'statisticsInfo', {
                          get: function () {
                            return (
                              null == this._statisticsInfo && (this._statisticsInfo = {}),
                              (this._statisticsInfo = this._fillStatisticsInfo(this._statisticsInfo)),
                              Object.assign({}, this._statisticsInfo)
                            );
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype._fillStatisticsInfo = function (e) {
                          if (((e.playerType = this._type), !(this._mediaElement instanceof HTMLVideoElement))) return e;
                          var t = !0,
                            n = 0,
                            r = 0;
                          if (this._mediaElement.getVideoPlaybackQuality) {
                            var i = this._mediaElement.getVideoPlaybackQuality();
                            (n = i.totalVideoFrames), (r = i.droppedVideoFrames);
                          } else null != this._mediaElement.webkitDecodedFrameCount ? ((n = this._mediaElement.webkitDecodedFrameCount), (r = this._mediaElement.webkitDroppedFrameCount)) : (t = !1);
                          return t && ((e.decodedFrames = n), (e.droppedFrames = r)), e;
                        }),
                        (e.prototype._onmseUpdateEnd = function () {
                          var e = this._mediaElement.buffered,
                            t = this._mediaElement.currentTime;
                          if (this._config.isLive && this._config.liveBufferLatencyChasing && e.length > 0 && !this._mediaElement.paused) {
                            var n = e.end(e.length - 1);
                            if (n > this._config.liveBufferLatencyMaxLatency && n - t > this._config.liveBufferLatencyMaxLatency) {
                              var r = n - this._config.liveBufferLatencyMinRemain;
                              this.currentTime = r;
                            }
                          }
                          if (this._config.lazyLoad && !this._config.isLive) {
                            for (var i = 0, a = 0; a < e.length; a++) {
                              var o = e.start(a),
                                s = e.end(a);
                              if (o <= t && t < s) {
                                i = s;
                                break;
                              }
                            }
                            i >= t + this._config.lazyLoadMaxDuration &&
                              null == this._progressChecker &&
                              (f.a.v(this.TAG, 'Maximum buffering duration exceeded, suspend transmuxing task'), this._suspendTransmuxer());
                          }
                        }),
                        (e.prototype._onmseBufferFull = function () {
                          f.a.v(this.TAG, 'MSE SourceBuffer is full, suspend transmuxing task'), null == this._progressChecker && this._suspendTransmuxer();
                        }),
                        (e.prototype._suspendTransmuxer = function () {
                          this._transmuxer && (this._transmuxer.pause(), null == this._progressChecker && (this._progressChecker = window.setInterval(this._checkProgressAndResume.bind(this), 1e3)));
                        }),
                        (e.prototype._checkProgressAndResume = function () {
                          for (var e = this._mediaElement.currentTime, t = this._mediaElement.buffered, n = !1, r = 0; r < t.length; r++) {
                            var i = t.start(r),
                              a = t.end(r);
                            if (e >= i && e < a) {
                              e >= a - this._config.lazyLoadRecoverDuration && (n = !0);
                              break;
                            }
                          }
                          n &&
                            (window.clearInterval(this._progressChecker), (this._progressChecker = null), n && (f.a.v(this.TAG, 'Continue loading from paused position'), this._transmuxer.resume()));
                        }),
                        (e.prototype._isTimepointBuffered = function (e) {
                          for (var t = this._mediaElement.buffered, n = 0; n < t.length; n++) {
                            var r = t.start(n),
                              i = t.end(n);
                            if (e >= r && e < i) return !0;
                          }
                          return !1;
                        }),
                        (e.prototype._internalSeek = function (e) {
                          var t = this._isTimepointBuffered(e),
                            n = !1,
                            r = 0;
                          if (e < 1 && this._mediaElement.buffered.length > 0) {
                            var i = this._mediaElement.buffered.start(0);
                            ((i < 1 && e < i) || h.a.safari) && ((n = !0), (r = h.a.safari ? 0.1 : i));
                          }
                          if (n) (this._requestSetTime = !0), (this._mediaElement.currentTime = r);
                          else if (t) {
                            if (this._alwaysSeekKeyframe) {
                              var a = this._msectl.getNearestKeyframe(Math.floor(1e3 * e));
                              (this._requestSetTime = !0), (this._mediaElement.currentTime = null != a ? a.dts / 1e3 : e);
                            } else (this._requestSetTime = !0), (this._mediaElement.currentTime = e);
                            null != this._progressChecker && this._checkProgressAndResume();
                          } else
                            null != this._progressChecker && (window.clearInterval(this._progressChecker), (this._progressChecker = null)),
                              this._msectl.seek(e),
                              this._transmuxer.seek(Math.floor(1e3 * e)),
                              this._config.accurateSeek && ((this._requestSetTime = !0), (this._mediaElement.currentTime = e));
                        }),
                        (e.prototype._checkAndApplyUnbufferedSeekpoint = function () {
                          if (this._seekpointRecord)
                            if (this._seekpointRecord.recordTime <= this._now() - 100) {
                              var e = this._mediaElement.currentTime;
                              (this._seekpointRecord = null),
                                this._isTimepointBuffered(e) ||
                                  (null != this._progressChecker && (window.clearTimeout(this._progressChecker), (this._progressChecker = null)),
                                  this._msectl.seek(e),
                                  this._transmuxer.seek(Math.floor(1e3 * e)),
                                  this._config.accurateSeek && ((this._requestSetTime = !0), (this._mediaElement.currentTime = e)));
                            } else window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);
                        }),
                        (e.prototype._checkAndResumeStuckPlayback = function (e) {
                          var t = this._mediaElement;
                          if (e || !this._receivedCanPlay || t.readyState < 2) {
                            var n = t.buffered;
                            n.length > 0 &&
                              t.currentTime < n.start(0) &&
                              (f.a.w(this.TAG, 'Playback seems stuck at ' + t.currentTime + ', seek to ' + n.start(0)),
                              (this._requestSetTime = !0),
                              (this._mediaElement.currentTime = n.start(0)),
                              this._mediaElement.removeEventListener('progress', this.e.onvProgress));
                          } else this._mediaElement.removeEventListener('progress', this.e.onvProgress);
                        }),
                        (e.prototype._onvLoadedMetadata = function (e) {
                          null != this._pendingSeekTime && ((this._mediaElement.currentTime = this._pendingSeekTime), (this._pendingSeekTime = null));
                        }),
                        (e.prototype._onvSeeking = function (e) {
                          var t = this._mediaElement.currentTime,
                            n = this._mediaElement.buffered;
                          if (this._requestSetTime) this._requestSetTime = !1;
                          else {
                            if (t < 1 && n.length > 0) {
                              var r = n.start(0);
                              if ((r < 1 && t < r) || h.a.safari) return (this._requestSetTime = !0), void (this._mediaElement.currentTime = h.a.safari ? 0.1 : r);
                            }
                            if (this._isTimepointBuffered(t)) {
                              if (this._alwaysSeekKeyframe) {
                                var i = this._msectl.getNearestKeyframe(Math.floor(1e3 * t));
                                null != i && ((this._requestSetTime = !0), (this._mediaElement.currentTime = i.dts / 1e3));
                              }
                              null != this._progressChecker && this._checkProgressAndResume();
                            } else (this._seekpointRecord = { seekPoint: t, recordTime: this._now() }), window.setTimeout(this._checkAndApplyUnbufferedSeekpoint.bind(this), 50);
                          }
                        }),
                        (e.prototype._onvCanPlay = function (e) {
                          (this._receivedCanPlay = !0), this._mediaElement.removeEventListener('canplay', this.e.onvCanPlay);
                        }),
                        (e.prototype._onvStalled = function (e) {
                          this._checkAndResumeStuckPlayback(!0);
                        }),
                        (e.prototype._onvProgress = function (e) {
                          this._checkAndResumeStuckPlayback();
                        }),
                        e
                      );
                    })(),
                    M = (function () {
                      function e(e, t) {
                        (this.TAG = 'NativePlayer'), (this._type = 'NativePlayer'), (this._emitter = new d.a()), (this._config = o()), 'object' == s(t) && Object.assign(this._config, t);
                        var n = e.type.toLowerCase();
                        if ('mse' === n || 'mpegts' === n || 'm2ts' === n || 'flv' === n) throw new L.b("NativePlayer does't support mse/mpegts/m2ts/flv MediaDataSource input!");
                        if (e.hasOwnProperty('segments')) throw new L.b('NativePlayer(' + e.type + ") doesn't support multipart playback!");
                        (this.e = { onvLoadedMetadata: this._onvLoadedMetadata.bind(this) }),
                          (this._pendingSeekTime = null),
                          (this._statisticsReporter = null),
                          (this._mediaDataSource = e),
                          (this._mediaElement = null);
                      }
                      return (
                        (e.prototype.destroy = function () {
                          this._mediaElement && (this.unload(), this.detachMediaElement()), (this.e = null), (this._mediaDataSource = null), this._emitter.removeAllListeners(), (this._emitter = null);
                        }),
                        (e.prototype.on = function (e, t) {
                          var n = this;
                          e === p.MEDIA_INFO
                            ? null != this._mediaElement &&
                              0 !== this._mediaElement.readyState &&
                              Promise.resolve().then(function () {
                                n._emitter.emit(p.MEDIA_INFO, n.mediaInfo);
                              })
                            : e === p.STATISTICS_INFO &&
                              null != this._mediaElement &&
                              0 !== this._mediaElement.readyState &&
                              Promise.resolve().then(function () {
                                n._emitter.emit(p.STATISTICS_INFO, n.statisticsInfo);
                              }),
                            this._emitter.addListener(e, t);
                        }),
                        (e.prototype.off = function (e, t) {
                          this._emitter.removeListener(e, t);
                        }),
                        (e.prototype.attachMediaElement = function (e) {
                          if (((this._mediaElement = e), e.addEventListener('loadedmetadata', this.e.onvLoadedMetadata), null != this._pendingSeekTime))
                            try {
                              (e.currentTime = this._pendingSeekTime), (this._pendingSeekTime = null);
                            } catch (e) {}
                        }),
                        (e.prototype.detachMediaElement = function () {
                          this._mediaElement &&
                            ((this._mediaElement.src = ''),
                            this._mediaElement.removeAttribute('src'),
                            this._mediaElement.removeEventListener('loadedmetadata', this.e.onvLoadedMetadata),
                            (this._mediaElement = null)),
                            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), (this._statisticsReporter = null));
                        }),
                        (e.prototype.load = function () {
                          if (!this._mediaElement) throw new L.a('HTMLMediaElement must be attached before load()!');
                          (this._mediaElement.src = this._mediaDataSource.url),
                            this._mediaElement.readyState > 0 && (this._mediaElement.currentTime = 0),
                            (this._mediaElement.preload = 'auto'),
                            this._mediaElement.load(),
                            (this._statisticsReporter = window.setInterval(this._reportStatisticsInfo.bind(this), this._config.statisticsInfoReportInterval));
                        }),
                        (e.prototype.unload = function () {
                          this._mediaElement && ((this._mediaElement.src = ''), this._mediaElement.removeAttribute('src')),
                            null != this._statisticsReporter && (window.clearInterval(this._statisticsReporter), (this._statisticsReporter = null));
                        }),
                        (e.prototype.play = function () {
                          return this._mediaElement.play();
                        }),
                        (e.prototype.pause = function () {
                          this._mediaElement.pause();
                        }),
                        Object.defineProperty(e.prototype, 'type', {
                          get: function () {
                            return this._type;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'buffered', {
                          get: function () {
                            return this._mediaElement.buffered;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'duration', {
                          get: function () {
                            return this._mediaElement.duration;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'volume', {
                          get: function () {
                            return this._mediaElement.volume;
                          },
                          set: function (e) {
                            this._mediaElement.volume = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'muted', {
                          get: function () {
                            return this._mediaElement.muted;
                          },
                          set: function (e) {
                            this._mediaElement.muted = e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'currentTime', {
                          get: function () {
                            return this._mediaElement ? this._mediaElement.currentTime : 0;
                          },
                          set: function (e) {
                            this._mediaElement ? (this._mediaElement.currentTime = e) : (this._pendingSeekTime = e);
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'mediaInfo', {
                          get: function () {
                            var e = { mimeType: (this._mediaElement instanceof HTMLAudioElement ? 'audio/' : 'video/') + this._mediaDataSource.type };
                            return (
                              this._mediaElement &&
                                ((e.duration = Math.floor(1e3 * this._mediaElement.duration)),
                                this._mediaElement instanceof HTMLVideoElement && ((e.width = this._mediaElement.videoWidth), (e.height = this._mediaElement.videoHeight))),
                              e
                            );
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'statisticsInfo', {
                          get: function () {
                            var e = { playerType: this._type, url: this._mediaDataSource.url };
                            if (!(this._mediaElement instanceof HTMLVideoElement)) return e;
                            var t = !0,
                              n = 0,
                              r = 0;
                            if (this._mediaElement.getVideoPlaybackQuality) {
                              var i = this._mediaElement.getVideoPlaybackQuality();
                              (n = i.totalVideoFrames), (r = i.droppedVideoFrames);
                            } else null != this._mediaElement.webkitDecodedFrameCount ? ((n = this._mediaElement.webkitDecodedFrameCount), (r = this._mediaElement.webkitDroppedFrameCount)) : (t = !1);
                            return t && ((e.decodedFrames = n), (e.droppedFrames = r)), e;
                          },
                          enumerable: !1,
                          configurable: !0,
                        }),
                        (e.prototype._onvLoadedMetadata = function (e) {
                          null != this._pendingSeekTime && ((this._mediaElement.currentTime = this._pendingSeekTime), (this._pendingSeekTime = null)), this._emitter.emit(p.MEDIA_INFO, this.mediaInfo);
                        }),
                        (e.prototype._reportStatisticsInfo = function () {
                          this._emitter.emit(p.STATISTICS_INFO, this.statisticsInfo);
                        }),
                        e
                      );
                    })();
                  r.a.install();
                  var P = {
                    createPlayer: function (e, t) {
                      var n = e;
                      if (null == n || 'object' != s(n)) throw new L.b('MediaDataSource must be an javascript object!');
                      if (!n.hasOwnProperty('type')) throw new L.b('MediaDataSource must has type field to indicate video file type!');
                      switch (n.type) {
                        case 'mse':
                        case 'mpegts':
                        case 'm2ts':
                        case 'flv':
                          return new I(n, t);
                        default:
                          return new M(n, t);
                      }
                    },
                    isSupported: function () {
                      return l.supportMSEH264Playback();
                    },
                    getFeatureList: function () {
                      return l.getFeatureList();
                    },
                  };
                  (P.BaseLoader = u.a),
                    (P.LoaderStatus = u.c),
                    (P.LoaderErrors = u.b),
                    (P.Events = p),
                    (P.ErrorTypes = x),
                    (P.ErrorDetails = D),
                    (P.MSEPlayer = I),
                    (P.NativePlayer = M),
                    (P.LoggingControl = g.a),
                    Object.defineProperty(P, 'version', {
                      enumerable: !0,
                      get: function () {
                        return '1.7.3';
                      },
                    }),
                    (t.default = P);
                },
              ]);
            }),
            'object' == s(t) && 'object' == s(e) ? (e.exports = o()) : ((i = []), void 0 === (a = 'function' == typeof (r = o) ? r.apply(t, i) : r) || (e.exports = a));
        },
        809: function (e, t, n) {
          var r,
            i = n(360).default;
          !(function () {
            'use strict';
            var a = {}.hasOwnProperty;
            function o() {
              for (var e = [], t = 0; t < arguments.length; t++) {
                var n = arguments[t];
                if (n) {
                  var r = i(n);
                  if ('string' === r || 'number' === r) e.push(n);
                  else if (Array.isArray(n)) {
                    if (n.length) {
                      var s = o.apply(null, n);
                      s && e.push(s);
                    }
                  } else if ('object' === r) {
                    if (n.toString !== Object.prototype.toString && !n.toString.toString().includes('[native code]')) {
                      e.push(n.toString());
                      continue;
                    }
                    for (var l in n) a.call(n, l) && n[l] && e.push(l);
                  }
                }
              }
              return e.join(' ');
            }
            e.exports
              ? ((o.default = o), (e.exports = o))
              : 'object' === i(n.amdO) && n.amdO
              ? void 0 ===
                  (r = function () {
                    return o;
                  }.apply(t, [])) || (e.exports = r)
              : (window.classNames = o);
          })();
        },
        413: function (e, t, n) {
          var r,
            i,
            a,
            o = n(360).default;
          (a = function () {
            'use strict';
            var e = 6e4,
              t = 36e5,
              n = 'millisecond',
              r = 'second',
              i = 'minute',
              a = 'hour',
              s = 'day',
              l = 'week',
              u = 'month',
              c = 'quarter',
              d = 'year',
              f = 'date',
              h = 'Invalid Date',
              p = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,
              v = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
              m = {
                name: 'en',
                weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
                months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
                ordinal: function (e) {
                  var t = ['th', 'st', 'nd', 'rd'],
                    n = e % 100;
                  return '[' + e + (t[(n - 20) % 10] || t[n] || t[0]) + ']';
                },
              },
              g = function (e, t, n) {
                var r = String(e);
                return !r || r.length >= t ? e : '' + Array(t + 1 - r.length).join(n) + e;
              },
              y = {
                s: g,
                z: function (e) {
                  var t = -e.utcOffset(),
                    n = Math.abs(t),
                    r = Math.floor(n / 60),
                    i = n % 60;
                  return (t <= 0 ? '+' : '-') + g(r, 2, '0') + ':' + g(i, 2, '0');
                },
                m: function e(t, n) {
                  if (t.date() < n.date()) return -e(n, t);
                  var r = 12 * (n.year() - t.year()) + (n.month() - t.month()),
                    i = t.clone().add(r, u),
                    a = n - i < 0,
                    o = t.clone().add(r + (a ? -1 : 1), u);
                  return +(-(r + (n - i) / (a ? i - o : o - i)) || 0);
                },
                a: function (e) {
                  return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
                },
                p: function (e) {
                  return (
                    { M: u, y: d, w: l, d: s, D: f, h: a, m: i, s: r, ms: n, Q: c }[e] ||
                    String(e || '')
                      .toLowerCase()
                      .replace(/s$/, '')
                  );
                },
                u: function (e) {
                  return void 0 === e;
                },
              },
              _ = 'en',
              b = {};
            b[_] = m;
            var E = function (e) {
                return e instanceof w;
              },
              S = function e(t, n, r) {
                var i;
                if (!t) return _;
                if ('string' == typeof t) {
                  var a = t.toLowerCase();
                  b[a] && (i = a), n && ((b[a] = n), (i = a));
                  var o = t.split('-');
                  if (!i && o.length > 1) return e(o[0]);
                } else {
                  var s = t.name;
                  (b[s] = t), (i = s);
                }
                return !r && i && (_ = i), i || (!r && _);
              },
              k = function (e, t) {
                if (E(e)) return e.clone();
                var n = 'object' == o(t) ? t : {};
                return (n.date = e), (n.args = arguments), new w(n);
              },
              T = y;
            (T.l = S),
              (T.i = E),
              (T.w = function (e, t) {
                return k(e, { locale: t.$L, utc: t.$u, x: t.$x, $offset: t.$offset });
              });
            var w = (function () {
                function o(e) {
                  (this.$L = S(e.locale, null, !0)), this.parse(e);
                }
                var m = o.prototype;
                return (
                  (m.parse = function (e) {
                    (this.$d = (function (e) {
                      var t = e.date,
                        n = e.utc;
                      if (null === t) return new Date(NaN);
                      if (T.u(t)) return new Date();
                      if (t instanceof Date) return new Date(t);
                      if ('string' == typeof t && !/Z$/i.test(t)) {
                        var r = t.match(p);
                        if (r) {
                          var i = r[2] - 1 || 0,
                            a = (r[7] || '0').substring(0, 3);
                          return n ? new Date(Date.UTC(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, a)) : new Date(r[1], i, r[3] || 1, r[4] || 0, r[5] || 0, r[6] || 0, a);
                        }
                      }
                      return new Date(t);
                    })(e)),
                      (this.$x = e.x || {}),
                      this.init();
                  }),
                  (m.init = function () {
                    var e = this.$d;
                    (this.$y = e.getFullYear()),
                      (this.$M = e.getMonth()),
                      (this.$D = e.getDate()),
                      (this.$W = e.getDay()),
                      (this.$H = e.getHours()),
                      (this.$m = e.getMinutes()),
                      (this.$s = e.getSeconds()),
                      (this.$ms = e.getMilliseconds());
                  }),
                  (m.$utils = function () {
                    return T;
                  }),
                  (m.isValid = function () {
                    return !(this.$d.toString() === h);
                  }),
                  (m.isSame = function (e, t) {
                    var n = k(e);
                    return this.startOf(t) <= n && n <= this.endOf(t);
                  }),
                  (m.isAfter = function (e, t) {
                    return k(e) < this.startOf(t);
                  }),
                  (m.isBefore = function (e, t) {
                    return this.endOf(t) < k(e);
                  }),
                  (m.$g = function (e, t, n) {
                    return T.u(e) ? this[t] : this.set(n, e);
                  }),
                  (m.unix = function () {
                    return Math.floor(this.valueOf() / 1e3);
                  }),
                  (m.valueOf = function () {
                    return this.$d.getTime();
                  }),
                  (m.startOf = function (e, t) {
                    var n = this,
                      o = !!T.u(t) || t,
                      c = T.p(e),
                      h = function (e, t) {
                        var r = T.w(n.$u ? Date.UTC(n.$y, t, e) : new Date(n.$y, t, e), n);
                        return o ? r : r.endOf(s);
                      },
                      p = function (e, t) {
                        return T.w(n.toDate()[e].apply(n.toDate('s'), (o ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(t)), n);
                      },
                      v = this.$W,
                      m = this.$M,
                      g = this.$D,
                      y = 'set' + (this.$u ? 'UTC' : '');
                    switch (c) {
                      case d:
                        return o ? h(1, 0) : h(31, 11);
                      case u:
                        return o ? h(1, m) : h(0, m + 1);
                      case l:
                        var _ = this.$locale().weekStart || 0,
                          b = (v < _ ? v + 7 : v) - _;
                        return h(o ? g - b : g + (6 - b), m);
                      case s:
                      case f:
                        return p(y + 'Hours', 0);
                      case a:
                        return p(y + 'Minutes', 1);
                      case i:
                        return p(y + 'Seconds', 2);
                      case r:
                        return p(y + 'Milliseconds', 3);
                      default:
                        return this.clone();
                    }
                  }),
                  (m.endOf = function (e) {
                    return this.startOf(e, !1);
                  }),
                  (m.$set = function (e, t) {
                    var o,
                      l = T.p(e),
                      c = 'set' + (this.$u ? 'UTC' : ''),
                      h = ((o = {}),
                      (o[s] = c + 'Date'),
                      (o[f] = c + 'Date'),
                      (o[u] = c + 'Month'),
                      (o[d] = c + 'FullYear'),
                      (o[a] = c + 'Hours'),
                      (o[i] = c + 'Minutes'),
                      (o[r] = c + 'Seconds'),
                      (o[n] = c + 'Milliseconds'),
                      o)[l],
                      p = l === s ? this.$D + (t - this.$W) : t;
                    if (l === u || l === d) {
                      var v = this.clone().set(f, 1);
                      v.$d[h](p), v.init(), (this.$d = v.set(f, Math.min(this.$D, v.daysInMonth())).$d);
                    } else h && this.$d[h](p);
                    return this.init(), this;
                  }),
                  (m.set = function (e, t) {
                    return this.clone().$set(e, t);
                  }),
                  (m.get = function (e) {
                    return this[T.p(e)]();
                  }),
                  (m.add = function (n, o) {
                    var c,
                      f = this;
                    n = Number(n);
                    var h = T.p(o),
                      p = function (e) {
                        var t = k(f);
                        return T.w(t.date(t.date() + Math.round(e * n)), f);
                      };
                    if (h === u) return this.set(u, this.$M + n);
                    if (h === d) return this.set(d, this.$y + n);
                    if (h === s) return p(1);
                    if (h === l) return p(7);
                    var v = ((c = {}), (c[i] = e), (c[a] = t), (c[r] = 1e3), c)[h] || 1,
                      m = this.$d.getTime() + n * v;
                    return T.w(m, this);
                  }),
                  (m.subtract = function (e, t) {
                    return this.add(-1 * e, t);
                  }),
                  (m.format = function (e) {
                    var t = this,
                      n = this.$locale();
                    if (!this.isValid()) return n.invalidDate || h;
                    var r = e || 'YYYY-MM-DDTHH:mm:ssZ',
                      i = T.z(this),
                      a = this.$H,
                      o = this.$m,
                      s = this.$M,
                      l = n.weekdays,
                      u = n.months,
                      c = function (e, n, i, a) {
                        return (e && (e[n] || e(t, r))) || i[n].slice(0, a);
                      },
                      d = function (e) {
                        return T.s(a % 12 || 12, e, '0');
                      },
                      f =
                        n.meridiem ||
                        function (e, t, n) {
                          var r = e < 12 ? 'AM' : 'PM';
                          return n ? r.toLowerCase() : r;
                        },
                      p = {
                        YY: String(this.$y).slice(-2),
                        YYYY: T.s(this.$y, 4, '0'),
                        M: s + 1,
                        MM: T.s(s + 1, 2, '0'),
                        MMM: c(n.monthsShort, s, u, 3),
                        MMMM: c(u, s),
                        D: this.$D,
                        DD: T.s(this.$D, 2, '0'),
                        d: String(this.$W),
                        dd: c(n.weekdaysMin, this.$W, l, 2),
                        ddd: c(n.weekdaysShort, this.$W, l, 3),
                        dddd: l[this.$W],
                        H: String(a),
                        HH: T.s(a, 2, '0'),
                        h: d(1),
                        hh: d(2),
                        a: f(a, o, !0),
                        A: f(a, o, !1),
                        m: String(o),
                        mm: T.s(o, 2, '0'),
                        s: String(this.$s),
                        ss: T.s(this.$s, 2, '0'),
                        SSS: T.s(this.$ms, 3, '0'),
                        Z: i,
                      };
                    return r.replace(v, function (e, t) {
                      return t || p[e] || i.replace(':', '');
                    });
                  }),
                  (m.utcOffset = function () {
                    return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
                  }),
                  (m.diff = function (n, o, f) {
                    var h,
                      p = T.p(o),
                      v = k(n),
                      m = (v.utcOffset() - this.utcOffset()) * e,
                      g = this - v,
                      y = T.m(this, v);
                    return (
                      (y = ((h = {}), (h[d] = y / 12), (h[u] = y), (h[c] = y / 3), (h[l] = (g - m) / 6048e5), (h[s] = (g - m) / 864e5), (h[a] = g / t), (h[i] = g / e), (h[r] = g / 1e3), h)[p] || g),
                      f ? y : T.a(y)
                    );
                  }),
                  (m.daysInMonth = function () {
                    return this.endOf(u).$D;
                  }),
                  (m.$locale = function () {
                    return b[this.$L];
                  }),
                  (m.locale = function (e, t) {
                    if (!e) return this.$L;
                    var n = this.clone(),
                      r = S(e, t, !0);
                    return r && (n.$L = r), n;
                  }),
                  (m.clone = function () {
                    return T.w(this.$d, this);
                  }),
                  (m.toDate = function () {
                    return new Date(this.valueOf());
                  }),
                  (m.toJSON = function () {
                    return this.isValid() ? this.toISOString() : null;
                  }),
                  (m.toISOString = function () {
                    return this.$d.toISOString();
                  }),
                  (m.toString = function () {
                    return this.$d.toUTCString();
                  }),
                  o
                );
              })(),
              A = w.prototype;
            return (
              (k.prototype = A),
              [
                ['$ms', n],
                ['$s', r],
                ['$m', i],
                ['$H', a],
                ['$W', s],
                ['$M', u],
                ['$y', d],
                ['$D', f],
              ].forEach(function (e) {
                A[e[1]] = function (t) {
                  return this.$g(t, e[0], e[1]);
                };
              }),
              (k.extend = function (e, t) {
                return e.$i || (e(t, w, k), (e.$i = !0)), k;
              }),
              (k.locale = S),
              (k.isDayjs = E),
              (k.unix = function (e) {
                return k(1e3 * e);
              }),
              (k.en = b[_]),
              (k.Ls = b),
              (k.p = {}),
              k
            );
          }),
            'object' == o(t) ? (e.exports = a()) : void 0 === (i = 'function' == typeof (r = a) ? r.call(t, n, t, e) : r) || (e.exports = i);
        },
        563: function (e, t, n) {
          'use strict';
          var r = n(360).default,
            i = n(304),
            a = n(516);
          function o(e) {
            for (var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, n = 1; n < arguments.length; n++) t += '&args[]=' + encodeURIComponent(arguments[n]);
            return 'Minified React error #' + e + '; visit ' + t + ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.';
          }
          var s = new Set(),
            l = {};
          function u(e, t) {
            c(e, t), c(e + 'Capture', t);
          }
          function c(e, t) {
            for (l[e] = t, e = 0; e < t.length; e++) s.add(t[e]);
          }
          var d = !('undefined' == typeof window || void 0 === window.document || void 0 === window.document.createElement),
            f = Object.prototype.hasOwnProperty,
            h =
              /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
            p = {},
            v = {};
          function m(e, t, n, i) {
            if (
              null == t ||
              (function (e, t, n, i) {
                if (null !== n && 0 === n.type) return !1;
                switch (r(t)) {
                  case 'function':
                  case 'symbol':
                    return !0;
                  case 'boolean':
                    return !i && (null !== n ? !n.acceptsBooleans : 'data-' !== (e = e.toLowerCase().slice(0, 5)) && 'aria-' !== e);
                  default:
                    return !1;
                }
              })(e, t, n, i)
            )
              return !0;
            if (i) return !1;
            if (null !== n)
              switch (n.type) {
                case 3:
                  return !t;
                case 4:
                  return !1 === t;
                case 5:
                  return isNaN(t);
                case 6:
                  return isNaN(t) || 1 > t;
              }
            return !1;
          }
          function g(e, t, n, r, i, a, o) {
            (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
              (this.attributeName = r),
              (this.attributeNamespace = i),
              (this.mustUseProperty = n),
              (this.propertyName = e),
              (this.type = t),
              (this.sanitizeURL = a),
              (this.removeEmptyString = o);
          }
          var y = {};
          'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'.split(' ').forEach(function (e) {
            y[e] = new g(e, 0, !1, e, null, !1, !1);
          }),
            [
              ['acceptCharset', 'accept-charset'],
              ['className', 'class'],
              ['htmlFor', 'for'],
              ['httpEquiv', 'http-equiv'],
            ].forEach(function (e) {
              var t = e[0];
              y[t] = new g(t, 1, !1, e[1], null, !1, !1);
            }),
            ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
              y[e] = new g(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }),
            ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (e) {
              y[e] = new g(e, 2, !1, e, null, !1, !1);
            }),
            'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
              .split(' ')
              .forEach(function (e) {
                y[e] = new g(e, 3, !1, e.toLowerCase(), null, !1, !1);
              }),
            ['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
              y[e] = new g(e, 3, !0, e, null, !1, !1);
            }),
            ['capture', 'download'].forEach(function (e) {
              y[e] = new g(e, 4, !1, e, null, !1, !1);
            }),
            ['cols', 'rows', 'size', 'span'].forEach(function (e) {
              y[e] = new g(e, 6, !1, e, null, !1, !1);
            }),
            ['rowSpan', 'start'].forEach(function (e) {
              y[e] = new g(e, 5, !1, e.toLowerCase(), null, !1, !1);
            });
          var _ = /[\-:]([a-z])/g;
          function b(e) {
            return e[1].toUpperCase();
          }
          function E(e, t, n, r) {
            var i = y.hasOwnProperty(t) ? y[t] : null;
            (null !== i ? 0 !== i.type : r || !(2 < t.length) || ('o' !== t[0] && 'O' !== t[0]) || ('n' !== t[1] && 'N' !== t[1])) &&
              (m(t, n, i, r) && (n = null),
              r || null === i
                ? (function (e) {
                    return !!f.call(v, e) || (!f.call(p, e) && (h.test(e) ? (v[e] = !0) : ((p[e] = !0), !1)));
                  })(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, '' + n))
                : i.mustUseProperty
                ? (e[i.propertyName] = null === n ? 3 !== i.type && '' : n)
                : ((t = i.attributeName),
                  (r = i.attributeNamespace),
                  null === n ? e.removeAttribute(t) : ((n = 3 === (i = i.type) || (4 === i && !0 === n) ? '' : '' + n), r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
          }
          'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
            .split(' ')
            .forEach(function (e) {
              var t = e.replace(_, b);
              y[t] = new g(t, 1, !1, e, null, !1, !1);
            }),
            'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'.split(' ').forEach(function (e) {
              var t = e.replace(_, b);
              y[t] = new g(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
            }),
            ['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
              var t = e.replace(_, b);
              y[t] = new g(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
            }),
            ['tabIndex', 'crossOrigin'].forEach(function (e) {
              y[e] = new g(e, 1, !1, e.toLowerCase(), null, !1, !1);
            }),
            (y.xlinkHref = new g('xlinkHref', 1, !1, 'xlink:href', 'http://www.w3.org/1999/xlink', !0, !1)),
            ['src', 'href', 'action', 'formAction'].forEach(function (e) {
              y[e] = new g(e, 1, !1, e.toLowerCase(), null, !0, !0);
            });
          var S = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            k = Symbol.for('react.element'),
            T = Symbol.for('react.portal'),
            w = Symbol.for('react.fragment'),
            A = Symbol.for('react.strict_mode'),
            L = Symbol.for('react.profiler'),
            R = Symbol.for('react.provider'),
            C = Symbol.for('react.context'),
            x = Symbol.for('react.forward_ref'),
            D = Symbol.for('react.suspense'),
            I = Symbol.for('react.suspense_list'),
            M = Symbol.for('react.memo'),
            P = Symbol.for('react.lazy');
          Symbol.for('react.scope'), Symbol.for('react.debug_trace_mode');
          var O = Symbol.for('react.offscreen');
          Symbol.for('react.legacy_hidden'), Symbol.for('react.cache'), Symbol.for('react.tracing_marker');
          var F = Symbol.iterator;
          function N(e) {
            return null === e || 'object' !== r(e) ? null : 'function' == typeof (e = (F && e[F]) || e['@@iterator']) ? e : null;
          }
          var B,
            U = Object.assign;
          function z(e) {
            if (void 0 === B)
              try {
                throw Error();
              } catch (e) {
                var t = e.stack.trim().match(/\n( *(at )?)/);
                B = (t && t[1]) || '';
              }
            return '\n' + B + e;
          }
          var H = !1;
          function V(e, t) {
            if (!e || H) return '';
            H = !0;
            var n = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
              if (t)
                if (
                  ((t = function () {
                    throw Error();
                  }),
                  Object.defineProperty(t.prototype, 'props', {
                    set: function () {
                      throw Error();
                    },
                  }),
                  'object' === ('undefined' == typeof Reflect ? 'undefined' : r(Reflect)) && Reflect.construct)
                ) {
                  try {
                    Reflect.construct(t, []);
                  } catch (e) {
                    var i = e;
                  }
                  Reflect.construct(e, [], t);
                } else {
                  try {
                    t.call();
                  } catch (e) {
                    i = e;
                  }
                  e.call(t.prototype);
                }
              else {
                try {
                  throw Error();
                } catch (e) {
                  i = e;
                }
                e();
              }
            } catch (t) {
              if (t && i && 'string' == typeof t.stack) {
                for (var a = t.stack.split('\n'), o = i.stack.split('\n'), s = a.length - 1, l = o.length - 1; 1 <= s && 0 <= l && a[s] !== o[l]; ) l--;
                for (; 1 <= s && 0 <= l; s--, l--)
                  if (a[s] !== o[l]) {
                    if (1 !== s || 1 !== l)
                      do {
                        if ((s--, 0 > --l || a[s] !== o[l])) {
                          var u = '\n' + a[s].replace(' at new ', ' at ');
                          return e.displayName && u.includes('<anonymous>') && (u = u.replace('<anonymous>', e.displayName)), u;
                        }
                      } while (1 <= s && 0 <= l);
                    break;
                  }
              }
            } finally {
              (H = !1), (Error.prepareStackTrace = n);
            }
            return (e = e ? e.displayName || e.name : '') ? z(e) : '';
          }
          function G(e) {
            switch (e.tag) {
              case 5:
                return z(e.type);
              case 16:
                return z('Lazy');
              case 13:
                return z('Suspense');
              case 19:
                return z('SuspenseList');
              case 0:
              case 2:
              case 15:
                return (e = V(e.type, !1));
              case 11:
                return (e = V(e.type.render, !1));
              case 1:
                return (e = V(e.type, !0));
              default:
                return '';
            }
          }
          function j(e) {
            if (null == e) return null;
            if ('function' == typeof e) return e.displayName || e.name || null;
            if ('string' == typeof e) return e;
            switch (e) {
              case w:
                return 'Fragment';
              case T:
                return 'Portal';
              case L:
                return 'Profiler';
              case A:
                return 'StrictMode';
              case D:
                return 'Suspense';
              case I:
                return 'SuspenseList';
            }
            if ('object' === r(e))
              switch (e.$$typeof) {
                case C:
                  return (e.displayName || 'Context') + '.Consumer';
                case R:
                  return (e._context.displayName || 'Context') + '.Provider';
                case x:
                  var t = e.render;
                  return (e = e.displayName) || (e = '' !== (e = t.displayName || t.name || '') ? 'ForwardRef(' + e + ')' : 'ForwardRef'), e;
                case M:
                  return null !== (t = e.displayName || null) ? t : j(e.type) || 'Memo';
                case P:
                  (t = e._payload), (e = e._init);
                  try {
                    return j(e(t));
                  } catch (e) {}
              }
            return null;
          }
          function K(e) {
            var t = e.type;
            switch (e.tag) {
              case 24:
                return 'Cache';
              case 9:
                return (t.displayName || 'Context') + '.Consumer';
              case 10:
                return (t._context.displayName || 'Context') + '.Provider';
              case 18:
                return 'DehydratedFragment';
              case 11:
                return (e = (e = t.render).displayName || e.name || ''), t.displayName || ('' !== e ? 'ForwardRef(' + e + ')' : 'ForwardRef');
              case 7:
                return 'Fragment';
              case 5:
                return t;
              case 4:
                return 'Portal';
              case 3:
                return 'Root';
              case 6:
                return 'Text';
              case 16:
                return j(t);
              case 8:
                return t === A ? 'StrictMode' : 'Mode';
              case 22:
                return 'Offscreen';
              case 12:
                return 'Profiler';
              case 21:
                return 'Scope';
              case 13:
                return 'Suspense';
              case 19:
                return 'SuspenseList';
              case 25:
                return 'TracingMarker';
              case 1:
              case 0:
              case 17:
              case 2:
              case 14:
              case 15:
                if ('function' == typeof t) return t.displayName || t.name || null;
                if ('string' == typeof t) return t;
            }
            return null;
          }
          function W(e) {
            switch (r(e)) {
              case 'boolean':
              case 'number':
              case 'string':
              case 'undefined':
              case 'object':
                return e;
              default:
                return '';
            }
          }
          function q(e) {
            var t = e.type;
            return (e = e.nodeName) && 'input' === e.toLowerCase() && ('checkbox' === t || 'radio' === t);
          }
          function Y(e) {
            e._valueTracker ||
              (e._valueTracker = (function (e) {
                var t = q(e) ? 'checked' : 'value',
                  n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                  r = '' + e[t];
                if (!e.hasOwnProperty(t) && void 0 !== n && 'function' == typeof n.get && 'function' == typeof n.set) {
                  var i = n.get,
                    a = n.set;
                  return (
                    Object.defineProperty(e, t, {
                      configurable: !0,
                      get: function () {
                        return i.call(this);
                      },
                      set: function (e) {
                        (r = '' + e), a.call(this, e);
                      },
                    }),
                    Object.defineProperty(e, t, { enumerable: n.enumerable }),
                    {
                      getValue: function () {
                        return r;
                      },
                      setValue: function (e) {
                        r = '' + e;
                      },
                      stopTracking: function () {
                        (e._valueTracker = null), delete e[t];
                      },
                    }
                  );
                }
              })(e));
          }
          function X(e) {
            if (!e) return !1;
            var t = e._valueTracker;
            if (!t) return !0;
            var n = t.getValue(),
              r = '';
            return e && (r = q(e) ? (e.checked ? 'true' : 'false') : e.value), (e = r) !== n && (t.setValue(e), !0);
          }
          function $(e) {
            if (void 0 === (e = e || ('undefined' != typeof document ? document : void 0))) return null;
            try {
              return e.activeElement || e.body;
            } catch (t) {
              return e.body;
            }
          }
          function Q(e, t) {
            var n = t.checked;
            return U({}, t, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != n ? n : e._wrapperState.initialChecked });
          }
          function Z(e, t) {
            var n = null == t.defaultValue ? '' : t.defaultValue,
              r = null != t.checked ? t.checked : t.defaultChecked;
            (n = W(null != t.value ? t.value : n)),
              (e._wrapperState = { initialChecked: r, initialValue: n, controlled: 'checkbox' === t.type || 'radio' === t.type ? null != t.checked : null != t.value });
          }
          function J(e, t) {
            null != (t = t.checked) && E(e, 'checked', t, !1);
          }
          function ee(e, t) {
            J(e, t);
            var n = W(t.value),
              r = t.type;
            if (null != n) 'number' === r ? ((0 === n && '' === e.value) || e.value != n) && (e.value = '' + n) : e.value !== '' + n && (e.value = '' + n);
            else if ('submit' === r || 'reset' === r) return void e.removeAttribute('value');
            t.hasOwnProperty('value') ? ne(e, t.type, n) : t.hasOwnProperty('defaultValue') && ne(e, t.type, W(t.defaultValue)),
              null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked);
          }
          function te(e, t, n) {
            if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
              var r = t.type;
              if (!(('submit' !== r && 'reset' !== r) || (void 0 !== t.value && null !== t.value))) return;
              (t = '' + e._wrapperState.initialValue), n || t === e.value || (e.value = t), (e.defaultValue = t);
            }
            '' !== (n = e.name) && (e.name = ''), (e.defaultChecked = !!e._wrapperState.initialChecked), '' !== n && (e.name = n);
          }
          function ne(e, t, n) {
            ('number' === t && $(e.ownerDocument) === e) || (null == n ? (e.defaultValue = '' + e._wrapperState.initialValue) : e.defaultValue !== '' + n && (e.defaultValue = '' + n));
          }
          var re = Array.isArray;
          function ie(e, t, n, r) {
            if (((e = e.options), t)) {
              t = {};
              for (var i = 0; i < n.length; i++) t['$' + n[i]] = !0;
              for (n = 0; n < e.length; n++) (i = t.hasOwnProperty('$' + e[n].value)), e[n].selected !== i && (e[n].selected = i), i && r && (e[n].defaultSelected = !0);
            } else {
              for (n = '' + W(n), t = null, i = 0; i < e.length; i++) {
                if (e[i].value === n) return (e[i].selected = !0), void (r && (e[i].defaultSelected = !0));
                null !== t || e[i].disabled || (t = e[i]);
              }
              null !== t && (t.selected = !0);
            }
          }
          function ae(e, t) {
            if (null != t.dangerouslySetInnerHTML) throw Error(o(91));
            return U({}, t, { value: void 0, defaultValue: void 0, children: '' + e._wrapperState.initialValue });
          }
          function oe(e, t) {
            var n = t.value;
            if (null == n) {
              if (((n = t.children), (t = t.defaultValue), null != n)) {
                if (null != t) throw Error(o(92));
                if (re(n)) {
                  if (1 < n.length) throw Error(o(93));
                  n = n[0];
                }
                t = n;
              }
              null == t && (t = ''), (n = t);
            }
            e._wrapperState = { initialValue: W(n) };
          }
          function se(e, t) {
            var n = W(t.value),
              r = W(t.defaultValue);
            null != n && ((n = '' + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)), null != r && (e.defaultValue = '' + r);
          }
          function le(e) {
            var t = e.textContent;
            t === e._wrapperState.initialValue && '' !== t && null !== t && (e.value = t);
          }
          function ue(e) {
            switch (e) {
              case 'svg':
                return 'http://www.w3.org/2000/svg';
              case 'math':
                return 'http://www.w3.org/1998/Math/MathML';
              default:
                return 'http://www.w3.org/1999/xhtml';
            }
          }
          function ce(e, t) {
            return null == e || 'http://www.w3.org/1999/xhtml' === e ? ue(t) : 'http://www.w3.org/2000/svg' === e && 'foreignObject' === t ? 'http://www.w3.org/1999/xhtml' : e;
          }
          var de,
            fe,
            he =
              ((fe = function (e, t) {
                if ('http://www.w3.org/2000/svg' !== e.namespaceURI || 'innerHTML' in e) e.innerHTML = t;
                else {
                  for ((de = de || document.createElement('div')).innerHTML = '<svg>' + t.valueOf().toString() + '</svg>', t = de.firstChild; e.firstChild; ) e.removeChild(e.firstChild);
                  for (; t.firstChild; ) e.appendChild(t.firstChild);
                }
              }),
              'undefined' != typeof MSApp && MSApp.execUnsafeLocalFunction
                ? function (e, t, n, r) {
                    MSApp.execUnsafeLocalFunction(function () {
                      return fe(e, t);
                    });
                  }
                : fe);
          function pe(e, t) {
            if (t) {
              var n = e.firstChild;
              if (n && n === e.lastChild && 3 === n.nodeType) return void (n.nodeValue = t);
            }
            e.textContent = t;
          }
          var ve = {
              animationIterationCount: !0,
              aspectRatio: !0,
              borderImageOutset: !0,
              borderImageSlice: !0,
              borderImageWidth: !0,
              boxFlex: !0,
              boxFlexGroup: !0,
              boxOrdinalGroup: !0,
              columnCount: !0,
              columns: !0,
              flex: !0,
              flexGrow: !0,
              flexPositive: !0,
              flexShrink: !0,
              flexNegative: !0,
              flexOrder: !0,
              gridArea: !0,
              gridRow: !0,
              gridRowEnd: !0,
              gridRowSpan: !0,
              gridRowStart: !0,
              gridColumn: !0,
              gridColumnEnd: !0,
              gridColumnSpan: !0,
              gridColumnStart: !0,
              fontWeight: !0,
              lineClamp: !0,
              lineHeight: !0,
              opacity: !0,
              order: !0,
              orphans: !0,
              tabSize: !0,
              widows: !0,
              zIndex: !0,
              zoom: !0,
              fillOpacity: !0,
              floodOpacity: !0,
              stopOpacity: !0,
              strokeDasharray: !0,
              strokeDashoffset: !0,
              strokeMiterlimit: !0,
              strokeOpacity: !0,
              strokeWidth: !0,
            },
            me = ['Webkit', 'ms', 'Moz', 'O'];
          function ge(e, t, n) {
            return null == t || 'boolean' == typeof t || '' === t ? '' : n || 'number' != typeof t || 0 === t || (ve.hasOwnProperty(e) && ve[e]) ? ('' + t).trim() : t + 'px';
          }
          function ye(e, t) {
            for (var n in ((e = e.style), t))
              if (t.hasOwnProperty(n)) {
                var r = 0 === n.indexOf('--'),
                  i = ge(n, t[n], r);
                'float' === n && (n = 'cssFloat'), r ? e.setProperty(n, i) : (e[n] = i);
              }
          }
          Object.keys(ve).forEach(function (e) {
            me.forEach(function (t) {
              (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (ve[t] = ve[e]);
            });
          });
          var _e = U({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
          function be(e, t) {
            if (t) {
              if (_e[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(o(137, e));
              if (null != t.dangerouslySetInnerHTML) {
                if (null != t.children) throw Error(o(60));
                if ('object' !== r(t.dangerouslySetInnerHTML) || !('__html' in t.dangerouslySetInnerHTML)) throw Error(o(61));
              }
              if (null != t.style && 'object' !== r(t.style)) throw Error(o(62));
            }
          }
          function Ee(e, t) {
            if (-1 === e.indexOf('-')) return 'string' == typeof t.is;
            switch (e) {
              case 'annotation-xml':
              case 'color-profile':
              case 'font-face':
              case 'font-face-src':
              case 'font-face-uri':
              case 'font-face-format':
              case 'font-face-name':
              case 'missing-glyph':
                return !1;
              default:
                return !0;
            }
          }
          var Se = null;
          function ke(e) {
            return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement), 3 === e.nodeType ? e.parentNode : e;
          }
          var Te = null,
            we = null,
            Ae = null;
          function Le(e) {
            if ((e = Ei(e))) {
              if ('function' != typeof Te) throw Error(o(280));
              var t = e.stateNode;
              t && ((t = ki(t)), Te(e.stateNode, e.type, t));
            }
          }
          function Re(e) {
            we ? (Ae ? Ae.push(e) : (Ae = [e])) : (we = e);
          }
          function Ce() {
            if (we) {
              var e = we,
                t = Ae;
              if (((Ae = we = null), Le(e), t)) for (e = 0; e < t.length; e++) Le(t[e]);
            }
          }
          function xe(e, t) {
            return e(t);
          }
          function De() {}
          var Ie = !1;
          function Me(e, t, n) {
            if (Ie) return e(t, n);
            Ie = !0;
            try {
              return xe(e, t, n);
            } finally {
              (Ie = !1), (null !== we || null !== Ae) && (De(), Ce());
            }
          }
          function Pe(e, t) {
            var n = e.stateNode;
            if (null === n) return null;
            var i = ki(n);
            if (null === i) return null;
            n = i[t];
            e: switch (t) {
              case 'onClick':
              case 'onClickCapture':
              case 'onDoubleClick':
              case 'onDoubleClickCapture':
              case 'onMouseDown':
              case 'onMouseDownCapture':
              case 'onMouseMove':
              case 'onMouseMoveCapture':
              case 'onMouseUp':
              case 'onMouseUpCapture':
              case 'onMouseEnter':
                (i = !i.disabled) || (i = !('button' === (e = e.type) || 'input' === e || 'select' === e || 'textarea' === e)), (e = !i);
                break e;
              default:
                e = !1;
            }
            if (e) return null;
            if (n && 'function' != typeof n) throw Error(o(231, t, r(n)));
            return n;
          }
          var Oe = !1;
          if (d)
            try {
              var Fe = {};
              Object.defineProperty(Fe, 'passive', {
                get: function () {
                  Oe = !0;
                },
              }),
                window.addEventListener('test', Fe, Fe),
                window.removeEventListener('test', Fe, Fe);
            } catch (fe) {
              Oe = !1;
            }
          function Ne(e, t, n, r, i, a, o, s, l) {
            var u = Array.prototype.slice.call(arguments, 3);
            try {
              t.apply(n, u);
            } catch (e) {
              this.onError(e);
            }
          }
          var Be = !1,
            Ue = null,
            ze = !1,
            He = null,
            Ve = {
              onError: function (e) {
                (Be = !0), (Ue = e);
              },
            };
          function Ge(e, t, n, r, i, a, o, s, l) {
            (Be = !1), (Ue = null), Ne.apply(Ve, arguments);
          }
          function je(e) {
            var t = e,
              n = e;
            if (e.alternate) for (; t.return; ) t = t.return;
            else {
              e = t;
              do {
                0 != (4098 & (t = e).flags) && (n = t.return), (e = t.return);
              } while (e);
            }
            return 3 === t.tag ? n : null;
          }
          function Ke(e) {
            if (13 === e.tag) {
              var t = e.memoizedState;
              if ((null === t && null !== (e = e.alternate) && (t = e.memoizedState), null !== t)) return t.dehydrated;
            }
            return null;
          }
          function We(e) {
            if (je(e) !== e) throw Error(o(188));
          }
          function qe(e) {
            return null !==
              (e = (function (e) {
                var t = e.alternate;
                if (!t) {
                  if (null === (t = je(e))) throw Error(o(188));
                  return t !== e ? null : e;
                }
                for (var n = e, r = t; ; ) {
                  var i = n.return;
                  if (null === i) break;
                  var a = i.alternate;
                  if (null === a) {
                    if (null !== (r = i.return)) {
                      n = r;
                      continue;
                    }
                    break;
                  }
                  if (i.child === a.child) {
                    for (a = i.child; a; ) {
                      if (a === n) return We(i), e;
                      if (a === r) return We(i), t;
                      a = a.sibling;
                    }
                    throw Error(o(188));
                  }
                  if (n.return !== r.return) (n = i), (r = a);
                  else {
                    for (var s = !1, l = i.child; l; ) {
                      if (l === n) {
                        (s = !0), (n = i), (r = a);
                        break;
                      }
                      if (l === r) {
                        (s = !0), (r = i), (n = a);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!s) {
                      for (l = a.child; l; ) {
                        if (l === n) {
                          (s = !0), (n = a), (r = i);
                          break;
                        }
                        if (l === r) {
                          (s = !0), (r = a), (n = i);
                          break;
                        }
                        l = l.sibling;
                      }
                      if (!s) throw Error(o(189));
                    }
                  }
                  if (n.alternate !== r) throw Error(o(190));
                }
                if (3 !== n.tag) throw Error(o(188));
                return n.stateNode.current === n ? e : t;
              })(e))
              ? Ye(e)
              : null;
          }
          function Ye(e) {
            if (5 === e.tag || 6 === e.tag) return e;
            for (e = e.child; null !== e; ) {
              var t = Ye(e);
              if (null !== t) return t;
              e = e.sibling;
            }
            return null;
          }
          var Xe = a.unstable_scheduleCallback,
            $e = a.unstable_cancelCallback,
            Qe = a.unstable_shouldYield,
            Ze = a.unstable_requestPaint,
            Je = a.unstable_now,
            et = a.unstable_getCurrentPriorityLevel,
            tt = a.unstable_ImmediatePriority,
            nt = a.unstable_UserBlockingPriority,
            rt = a.unstable_NormalPriority,
            it = a.unstable_LowPriority,
            at = a.unstable_IdlePriority,
            ot = null,
            st = null;
          var lt = Math.clz32
              ? Math.clz32
              : function (e) {
                  return (e >>>= 0), 0 === e ? 32 : (31 - ((ut(e) / ct) | 0)) | 0;
                },
            ut = Math.log,
            ct = Math.LN2;
          var dt = 64,
            ft = 4194304;
          function ht(e) {
            switch (e & -e) {
              case 1:
                return 1;
              case 2:
                return 2;
              case 4:
                return 4;
              case 8:
                return 8;
              case 16:
                return 16;
              case 32:
                return 32;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return 4194240 & e;
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                return 130023424 & e;
              case 134217728:
                return 134217728;
              case 268435456:
                return 268435456;
              case 536870912:
                return 536870912;
              case 1073741824:
                return 1073741824;
              default:
                return e;
            }
          }
          function pt(e, t) {
            var n = e.pendingLanes;
            if (0 === n) return 0;
            var r = 0,
              i = e.suspendedLanes,
              a = e.pingedLanes,
              o = 268435455 & n;
            if (0 !== o) {
              var s = o & ~i;
              0 !== s ? (r = ht(s)) : 0 !== (a &= o) && (r = ht(a));
            } else 0 !== (o = n & ~i) ? (r = ht(o)) : 0 !== a && (r = ht(a));
            if (0 === r) return 0;
            if (0 !== t && t !== r && 0 == (t & i) && ((i = r & -r) >= (a = t & -t) || (16 === i && 0 != (4194240 & a)))) return t;
            if ((0 != (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes))) for (e = e.entanglements, t &= r; 0 < t; ) (i = 1 << (n = 31 - lt(t))), (r |= e[n]), (t &= ~i);
            return r;
          }
          function vt(e, t) {
            switch (e) {
              case 1:
              case 2:
              case 4:
                return t + 250;
              case 8:
              case 16:
              case 32:
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
                return t + 5e3;
              default:
                return -1;
            }
          }
          function mt(e) {
            return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0;
          }
          function gt() {
            var e = dt;
            return 0 == (4194240 & (dt <<= 1)) && (dt = 64), e;
          }
          function yt(e) {
            for (var t = [], n = 0; 31 > n; n++) t.push(e);
            return t;
          }
          function _t(e, t, n) {
            (e.pendingLanes |= t), 536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)), ((e = e.eventTimes)[(t = 31 - lt(t))] = n);
          }
          function bt(e, t) {
            var n = (e.entangledLanes |= t);
            for (e = e.entanglements; n; ) {
              var r = 31 - lt(n),
                i = 1 << r;
              (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
            }
          }
          var Et = 0;
          function St(e) {
            return 1 < (e &= -e) ? (4 < e ? (0 != (268435455 & e) ? 16 : 536870912) : 4) : 1;
          }
          var kt,
            Tt,
            wt,
            At,
            Lt,
            Rt = !1,
            Ct = [],
            xt = null,
            Dt = null,
            It = null,
            Mt = new Map(),
            Pt = new Map(),
            Ot = [],
            Ft =
              'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
                ' ',
              );
          function Nt(e, t) {
            switch (e) {
              case 'focusin':
              case 'focusout':
                xt = null;
                break;
              case 'dragenter':
              case 'dragleave':
                Dt = null;
                break;
              case 'mouseover':
              case 'mouseout':
                It = null;
                break;
              case 'pointerover':
              case 'pointerout':
                Mt.delete(t.pointerId);
                break;
              case 'gotpointercapture':
              case 'lostpointercapture':
                Pt.delete(t.pointerId);
            }
          }
          function Bt(e, t, n, r, i, a) {
            return null === e || e.nativeEvent !== a
              ? ((e = { blockedOn: t, domEventName: n, eventSystemFlags: r, nativeEvent: a, targetContainers: [i] }), null !== t && null !== (t = Ei(t)) && Tt(t), e)
              : ((e.eventSystemFlags |= r), (t = e.targetContainers), null !== i && -1 === t.indexOf(i) && t.push(i), e);
          }
          function Ut(e) {
            var t = bi(e.target);
            if (null !== t) {
              var n = je(t);
              if (null !== n)
                if (13 === (t = n.tag)) {
                  if (null !== (t = Ke(n)))
                    return (
                      (e.blockedOn = t),
                      void Lt(e.priority, function () {
                        wt(n);
                      })
                    );
                } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated) return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null);
            }
            e.blockedOn = null;
          }
          function zt(e) {
            if (null !== e.blockedOn) return !1;
            for (var t = e.targetContainers; 0 < t.length; ) {
              var n = Qt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
              if (null !== n) return null !== (t = Ei(n)) && Tt(t), (e.blockedOn = n), !1;
              var r = new (n = e.nativeEvent).constructor(n.type, n);
              (Se = r), n.target.dispatchEvent(r), (Se = null), t.shift();
            }
            return !0;
          }
          function Ht(e, t, n) {
            zt(e) && n.delete(t);
          }
          function Vt() {
            (Rt = !1), null !== xt && zt(xt) && (xt = null), null !== Dt && zt(Dt) && (Dt = null), null !== It && zt(It) && (It = null), Mt.forEach(Ht), Pt.forEach(Ht);
          }
          function Gt(e, t) {
            e.blockedOn === t && ((e.blockedOn = null), Rt || ((Rt = !0), a.unstable_scheduleCallback(a.unstable_NormalPriority, Vt)));
          }
          function jt(e) {
            function t(t) {
              return Gt(t, e);
            }
            if (0 < Ct.length) {
              Gt(Ct[0], e);
              for (var n = 1; n < Ct.length; n++) {
                var r = Ct[n];
                r.blockedOn === e && (r.blockedOn = null);
              }
            }
            for (null !== xt && Gt(xt, e), null !== Dt && Gt(Dt, e), null !== It && Gt(It, e), Mt.forEach(t), Pt.forEach(t), n = 0; n < Ot.length; n++)
              (r = Ot[n]).blockedOn === e && (r.blockedOn = null);
            for (; 0 < Ot.length && null === (n = Ot[0]).blockedOn; ) Ut(n), null === n.blockedOn && Ot.shift();
          }
          var Kt = S.ReactCurrentBatchConfig,
            Wt = !0;
          function qt(e, t, n, r) {
            var i = Et,
              a = Kt.transition;
            Kt.transition = null;
            try {
              (Et = 1), Xt(e, t, n, r);
            } finally {
              (Et = i), (Kt.transition = a);
            }
          }
          function Yt(e, t, n, r) {
            var i = Et,
              a = Kt.transition;
            Kt.transition = null;
            try {
              (Et = 4), Xt(e, t, n, r);
            } finally {
              (Et = i), (Kt.transition = a);
            }
          }
          function Xt(e, t, n, r) {
            if (Wt) {
              var i = Qt(e, t, n, r);
              if (null === i) Wr(e, t, r, $t, n), Nt(e, r);
              else if (
                (function (e, t, n, r, i) {
                  switch (t) {
                    case 'focusin':
                      return (xt = Bt(xt, e, t, n, r, i)), !0;
                    case 'dragenter':
                      return (Dt = Bt(Dt, e, t, n, r, i)), !0;
                    case 'mouseover':
                      return (It = Bt(It, e, t, n, r, i)), !0;
                    case 'pointerover':
                      var a = i.pointerId;
                      return Mt.set(a, Bt(Mt.get(a) || null, e, t, n, r, i)), !0;
                    case 'gotpointercapture':
                      return (a = i.pointerId), Pt.set(a, Bt(Pt.get(a) || null, e, t, n, r, i)), !0;
                  }
                  return !1;
                })(i, e, t, n, r)
              )
                r.stopPropagation();
              else if ((Nt(e, r), 4 & t && -1 < Ft.indexOf(e))) {
                for (; null !== i; ) {
                  var a = Ei(i);
                  if ((null !== a && kt(a), null === (a = Qt(e, t, n, r)) && Wr(e, t, r, $t, n), a === i)) break;
                  i = a;
                }
                null !== i && r.stopPropagation();
              } else Wr(e, t, r, null, n);
            }
          }
          var $t = null;
          function Qt(e, t, n, r) {
            if ((($t = null), null !== (e = bi((e = ke(r))))))
              if (null === (t = je(e))) e = null;
              else if (13 === (n = t.tag)) {
                if (null !== (e = Ke(t))) return e;
                e = null;
              } else if (3 === n) {
                if (t.stateNode.current.memoizedState.isDehydrated) return 3 === t.tag ? t.stateNode.containerInfo : null;
                e = null;
              } else t !== e && (e = null);
            return ($t = e), null;
          }
          function Zt(e) {
            switch (e) {
              case 'cancel':
              case 'click':
              case 'close':
              case 'contextmenu':
              case 'copy':
              case 'cut':
              case 'auxclick':
              case 'dblclick':
              case 'dragend':
              case 'dragstart':
              case 'drop':
              case 'focusin':
              case 'focusout':
              case 'input':
              case 'invalid':
              case 'keydown':
              case 'keypress':
              case 'keyup':
              case 'mousedown':
              case 'mouseup':
              case 'paste':
              case 'pause':
              case 'play':
              case 'pointercancel':
              case 'pointerdown':
              case 'pointerup':
              case 'ratechange':
              case 'reset':
              case 'resize':
              case 'seeked':
              case 'submit':
              case 'touchcancel':
              case 'touchend':
              case 'touchstart':
              case 'volumechange':
              case 'change':
              case 'selectionchange':
              case 'textInput':
              case 'compositionstart':
              case 'compositionend':
              case 'compositionupdate':
              case 'beforeblur':
              case 'afterblur':
              case 'beforeinput':
              case 'blur':
              case 'fullscreenchange':
              case 'focus':
              case 'hashchange':
              case 'popstate':
              case 'select':
              case 'selectstart':
                return 1;
              case 'drag':
              case 'dragenter':
              case 'dragexit':
              case 'dragleave':
              case 'dragover':
              case 'mousemove':
              case 'mouseout':
              case 'mouseover':
              case 'pointermove':
              case 'pointerout':
              case 'pointerover':
              case 'scroll':
              case 'toggle':
              case 'touchmove':
              case 'wheel':
              case 'mouseenter':
              case 'mouseleave':
              case 'pointerenter':
              case 'pointerleave':
                return 4;
              case 'message':
                switch (et()) {
                  case tt:
                    return 1;
                  case nt:
                    return 4;
                  case rt:
                  case it:
                    return 16;
                  case at:
                    return 536870912;
                  default:
                    return 16;
                }
              default:
                return 16;
            }
          }
          var Jt = null,
            en = null,
            tn = null;
          function nn() {
            if (tn) return tn;
            var e,
              t,
              n = en,
              r = n.length,
              i = 'value' in Jt ? Jt.value : Jt.textContent,
              a = i.length;
            for (e = 0; e < r && n[e] === i[e]; e++);
            var o = r - e;
            for (t = 1; t <= o && n[r - t] === i[a - t]; t++);
            return (tn = i.slice(e, 1 < t ? 1 - t : void 0));
          }
          function rn(e) {
            var t = e.keyCode;
            return 'charCode' in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : (e = t), 10 === e && (e = 13), 32 <= e || 13 === e ? e : 0;
          }
          function an() {
            return !0;
          }
          function on() {
            return !1;
          }
          function sn(e) {
            function t(t, n, r, i, a) {
              for (var o in ((this._reactName = t), (this._targetInst = r), (this.type = n), (this.nativeEvent = i), (this.target = a), (this.currentTarget = null), e))
                e.hasOwnProperty(o) && ((t = e[o]), (this[o] = t ? t(i) : i[o]));
              return (this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? an : on), (this.isPropagationStopped = on), this;
            }
            return (
              U(t.prototype, {
                preventDefault: function () {
                  this.defaultPrevented = !0;
                  var e = this.nativeEvent;
                  e && (e.preventDefault ? e.preventDefault() : 'unknown' != typeof e.returnValue && (e.returnValue = !1), (this.isDefaultPrevented = an));
                },
                stopPropagation: function () {
                  var e = this.nativeEvent;
                  e && (e.stopPropagation ? e.stopPropagation() : 'unknown' != typeof e.cancelBubble && (e.cancelBubble = !0), (this.isPropagationStopped = an));
                },
                persist: function () {},
                isPersistent: an,
              }),
              t
            );
          }
          var ln,
            un,
            cn,
            dn = {
              eventPhase: 0,
              bubbles: 0,
              cancelable: 0,
              timeStamp: function (e) {
                return e.timeStamp || Date.now();
              },
              defaultPrevented: 0,
              isTrusted: 0,
            },
            fn = sn(dn),
            hn = U({}, dn, { view: 0, detail: 0 }),
            pn = sn(hn),
            vn = U({}, hn, {
              screenX: 0,
              screenY: 0,
              clientX: 0,
              clientY: 0,
              pageX: 0,
              pageY: 0,
              ctrlKey: 0,
              shiftKey: 0,
              altKey: 0,
              metaKey: 0,
              getModifierState: Ln,
              button: 0,
              buttons: 0,
              relatedTarget: function (e) {
                return void 0 === e.relatedTarget ? (e.fromElement === e.srcElement ? e.toElement : e.fromElement) : e.relatedTarget;
              },
              movementX: function (e) {
                return 'movementX' in e ? e.movementX : (e !== cn && (cn && 'mousemove' === e.type ? ((ln = e.screenX - cn.screenX), (un = e.screenY - cn.screenY)) : (un = ln = 0), (cn = e)), ln);
              },
              movementY: function (e) {
                return 'movementY' in e ? e.movementY : un;
              },
            }),
            mn = sn(vn),
            gn = sn(U({}, vn, { dataTransfer: 0 })),
            yn = sn(U({}, hn, { relatedTarget: 0 })),
            _n = sn(U({}, dn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })),
            bn = U({}, dn, {
              clipboardData: function (e) {
                return 'clipboardData' in e ? e.clipboardData : window.clipboardData;
              },
            }),
            En = sn(bn),
            Sn = sn(U({}, dn, { data: 0 })),
            kn = {
              Esc: 'Escape',
              Spacebar: ' ',
              Left: 'ArrowLeft',
              Up: 'ArrowUp',
              Right: 'ArrowRight',
              Down: 'ArrowDown',
              Del: 'Delete',
              Win: 'OS',
              Menu: 'ContextMenu',
              Apps: 'ContextMenu',
              Scroll: 'ScrollLock',
              MozPrintableKey: 'Unidentified',
            },
            Tn = {
              8: 'Backspace',
              9: 'Tab',
              12: 'Clear',
              13: 'Enter',
              16: 'Shift',
              17: 'Control',
              18: 'Alt',
              19: 'Pause',
              20: 'CapsLock',
              27: 'Escape',
              32: ' ',
              33: 'PageUp',
              34: 'PageDown',
              35: 'End',
              36: 'Home',
              37: 'ArrowLeft',
              38: 'ArrowUp',
              39: 'ArrowRight',
              40: 'ArrowDown',
              45: 'Insert',
              46: 'Delete',
              112: 'F1',
              113: 'F2',
              114: 'F3',
              115: 'F4',
              116: 'F5',
              117: 'F6',
              118: 'F7',
              119: 'F8',
              120: 'F9',
              121: 'F10',
              122: 'F11',
              123: 'F12',
              144: 'NumLock',
              145: 'ScrollLock',
              224: 'Meta',
            },
            wn = { Alt: 'altKey', Control: 'ctrlKey', Meta: 'metaKey', Shift: 'shiftKey' };
          function An(e) {
            var t = this.nativeEvent;
            return t.getModifierState ? t.getModifierState(e) : !!(e = wn[e]) && !!t[e];
          }
          function Ln() {
            return An;
          }
          var Rn = U({}, hn, {
              key: function (e) {
                if (e.key) {
                  var t = kn[e.key] || e.key;
                  if ('Unidentified' !== t) return t;
                }
                return 'keypress' === e.type ? (13 === (e = rn(e)) ? 'Enter' : String.fromCharCode(e)) : 'keydown' === e.type || 'keyup' === e.type ? Tn[e.keyCode] || 'Unidentified' : '';
              },
              code: 0,
              location: 0,
              ctrlKey: 0,
              shiftKey: 0,
              altKey: 0,
              metaKey: 0,
              repeat: 0,
              locale: 0,
              getModifierState: Ln,
              charCode: function (e) {
                return 'keypress' === e.type ? rn(e) : 0;
              },
              keyCode: function (e) {
                return 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0;
              },
              which: function (e) {
                return 'keypress' === e.type ? rn(e) : 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0;
              },
            }),
            Cn = sn(Rn),
            xn = sn(U({}, vn, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 })),
            Dn = sn(U({}, hn, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: Ln })),
            In = sn(U({}, dn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })),
            Mn = U({}, vn, {
              deltaX: function (e) {
                return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? -e.wheelDeltaX : 0;
              },
              deltaY: function (e) {
                return 'deltaY' in e ? e.deltaY : 'wheelDeltaY' in e ? -e.wheelDeltaY : 'wheelDelta' in e ? -e.wheelDelta : 0;
              },
              deltaZ: 0,
              deltaMode: 0,
            }),
            Pn = sn(Mn),
            On = [9, 13, 27, 32],
            Fn = d && 'CompositionEvent' in window,
            Nn = null;
          d && 'documentMode' in document && (Nn = document.documentMode);
          var Bn = d && 'TextEvent' in window && !Nn,
            Un = d && (!Fn || (Nn && 8 < Nn && 11 >= Nn)),
            zn = String.fromCharCode(32),
            Hn = !1;
          function Vn(e, t) {
            switch (e) {
              case 'keyup':
                return -1 !== On.indexOf(t.keyCode);
              case 'keydown':
                return 229 !== t.keyCode;
              case 'keypress':
              case 'mousedown':
              case 'focusout':
                return !0;
              default:
                return !1;
            }
          }
          function Gn(e) {
            return (e = e.detail), 'object' === r(e) && 'data' in e ? e.data : null;
          }
          var jn = !1;
          var Kn = { color: !0, date: !0, datetime: !0, 'datetime-local': !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
          function Wn(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return 'input' === t ? !!Kn[e.type] : 'textarea' === t;
          }
          function qn(e, t, n, r) {
            Re(r), 0 < (t = Yr(t, 'onChange')).length && ((n = new fn('onChange', 'change', null, n, r)), e.push({ event: n, listeners: t }));
          }
          var Yn = null,
            Xn = null;
          function $n(e) {
            zr(e, 0);
          }
          function Qn(e) {
            if (X(Si(e))) return e;
          }
          function Zn(e, t) {
            if ('change' === e) return t;
          }
          var Jn = !1;
          if (d) {
            var er;
            if (d) {
              var tr = 'oninput' in document;
              if (!tr) {
                var nr = document.createElement('div');
                nr.setAttribute('oninput', 'return;'), (tr = 'function' == typeof nr.oninput);
              }
              er = tr;
            } else er = !1;
            Jn = er && (!document.documentMode || 9 < document.documentMode);
          }
          function rr() {
            Yn && (Yn.detachEvent('onpropertychange', ir), (Xn = Yn = null));
          }
          function ir(e) {
            if ('value' === e.propertyName && Qn(Xn)) {
              var t = [];
              qn(t, Xn, e, ke(e)), Me($n, t);
            }
          }
          function ar(e, t, n) {
            'focusin' === e ? (rr(), (Xn = n), (Yn = t).attachEvent('onpropertychange', ir)) : 'focusout' === e && rr();
          }
          function or(e) {
            if ('selectionchange' === e || 'keyup' === e || 'keydown' === e) return Qn(Xn);
          }
          function sr(e, t) {
            if ('click' === e) return Qn(t);
          }
          function lr(e, t) {
            if ('input' === e || 'change' === e) return Qn(t);
          }
          var ur =
            'function' == typeof Object.is
              ? Object.is
              : function (e, t) {
                  return (e === t && (0 !== e || 1 / e == 1 / t)) || (e != e && t != t);
                };
          function cr(e, t) {
            if (ur(e, t)) return !0;
            if ('object' !== r(e) || null === e || 'object' !== r(t) || null === t) return !1;
            var n = Object.keys(e),
              i = Object.keys(t);
            if (n.length !== i.length) return !1;
            for (i = 0; i < n.length; i++) {
              var a = n[i];
              if (!f.call(t, a) || !ur(e[a], t[a])) return !1;
            }
            return !0;
          }
          function dr(e) {
            for (; e && e.firstChild; ) e = e.firstChild;
            return e;
          }
          function fr(e, t) {
            var n,
              r = dr(e);
            for (e = 0; r; ) {
              if (3 === r.nodeType) {
                if (((n = e + r.textContent.length), e <= t && n >= t)) return { node: r, offset: t - e };
                e = n;
              }
              e: {
                for (; r; ) {
                  if (r.nextSibling) {
                    r = r.nextSibling;
                    break e;
                  }
                  r = r.parentNode;
                }
                r = void 0;
              }
              r = dr(r);
            }
          }
          function hr(e, t) {
            return (
              !(!e || !t) &&
              (e === t ||
                ((!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? hr(e, t.parentNode) : 'contains' in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t)))))
            );
          }
          function pr() {
            for (var e = window, t = $(); t instanceof e.HTMLIFrameElement; ) {
              try {
                var n = 'string' == typeof t.contentWindow.location.href;
              } catch (e) {
                n = !1;
              }
              if (!n) break;
              t = $((e = t.contentWindow).document);
            }
            return t;
          }
          function vr(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return (
              t && (('input' === t && ('text' === e.type || 'search' === e.type || 'tel' === e.type || 'url' === e.type || 'password' === e.type)) || 'textarea' === t || 'true' === e.contentEditable)
            );
          }
          function mr(e) {
            var t = pr(),
              n = e.focusedElem,
              r = e.selectionRange;
            if (t !== n && n && n.ownerDocument && hr(n.ownerDocument.documentElement, n)) {
              if (null !== r && vr(n))
                if (((t = r.start), void 0 === (e = r.end) && (e = t), 'selectionStart' in n)) (n.selectionStart = t), (n.selectionEnd = Math.min(e, n.value.length));
                else if ((e = ((t = n.ownerDocument || document) && t.defaultView) || window).getSelection) {
                  e = e.getSelection();
                  var i = n.textContent.length,
                    a = Math.min(r.start, i);
                  (r = void 0 === r.end ? a : Math.min(r.end, i)), !e.extend && a > r && ((i = r), (r = a), (a = i)), (i = fr(n, a));
                  var o = fr(n, r);
                  i &&
                    o &&
                    (1 !== e.rangeCount || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) &&
                    ((t = t.createRange()).setStart(i.node, i.offset), e.removeAllRanges(), a > r ? (e.addRange(t), e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset), e.addRange(t)));
                }
              for (t = [], e = n; (e = e.parentNode); ) 1 === e.nodeType && t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
              for ('function' == typeof n.focus && n.focus(), n = 0; n < t.length; n++) ((e = t[n]).element.scrollLeft = e.left), (e.element.scrollTop = e.top);
            }
          }
          var gr = d && 'documentMode' in document && 11 >= document.documentMode,
            yr = null,
            _r = null,
            br = null,
            Er = !1;
          function Sr(e, t, n) {
            var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
            Er ||
              null == yr ||
              yr !== $(r) ||
              ('selectionStart' in (r = yr) && vr(r)
                ? (r = { start: r.selectionStart, end: r.selectionEnd })
                : (r = {
                    anchorNode: (r = ((r.ownerDocument && r.ownerDocument.defaultView) || window).getSelection()).anchorNode,
                    anchorOffset: r.anchorOffset,
                    focusNode: r.focusNode,
                    focusOffset: r.focusOffset,
                  }),
              (br && cr(br, r)) || ((br = r), 0 < (r = Yr(_r, 'onSelect')).length && ((t = new fn('onSelect', 'select', null, t, n)), e.push({ event: t, listeners: r }), (t.target = yr))));
          }
          function kr(e, t) {
            var n = {};
            return (n[e.toLowerCase()] = t.toLowerCase()), (n['Webkit' + e] = 'webkit' + t), (n['Moz' + e] = 'moz' + t), n;
          }
          var Tr = {
              animationend: kr('Animation', 'AnimationEnd'),
              animationiteration: kr('Animation', 'AnimationIteration'),
              animationstart: kr('Animation', 'AnimationStart'),
              transitionend: kr('Transition', 'TransitionEnd'),
            },
            wr = {},
            Ar = {};
          function Lr(e) {
            if (wr[e]) return wr[e];
            if (!Tr[e]) return e;
            var t,
              n = Tr[e];
            for (t in n) if (n.hasOwnProperty(t) && t in Ar) return (wr[e] = n[t]);
            return e;
          }
          d &&
            ((Ar = document.createElement('div').style),
            'AnimationEvent' in window || (delete Tr.animationend.animation, delete Tr.animationiteration.animation, delete Tr.animationstart.animation),
            'TransitionEvent' in window || delete Tr.transitionend.transition);
          var Rr = Lr('animationend'),
            Cr = Lr('animationiteration'),
            xr = Lr('animationstart'),
            Dr = Lr('transitionend'),
            Ir = new Map(),
            Mr =
              'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
                ' ',
              );
          function Pr(e, t) {
            Ir.set(e, t), u(t, [e]);
          }
          for (var Or = 0; Or < Mr.length; Or++) {
            var Fr = Mr[Or];
            Pr(Fr.toLowerCase(), 'on' + (Fr[0].toUpperCase() + Fr.slice(1)));
          }
          Pr(Rr, 'onAnimationEnd'),
            Pr(Cr, 'onAnimationIteration'),
            Pr(xr, 'onAnimationStart'),
            Pr('dblclick', 'onDoubleClick'),
            Pr('focusin', 'onFocus'),
            Pr('focusout', 'onBlur'),
            Pr(Dr, 'onTransitionEnd'),
            c('onMouseEnter', ['mouseout', 'mouseover']),
            c('onMouseLeave', ['mouseout', 'mouseover']),
            c('onPointerEnter', ['pointerout', 'pointerover']),
            c('onPointerLeave', ['pointerout', 'pointerover']),
            u('onChange', 'change click focusin focusout input keydown keyup selectionchange'.split(' ')),
            u('onSelect', 'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(' ')),
            u('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']),
            u('onCompositionEnd', 'compositionend focusout keydown keypress keyup mousedown'.split(' ')),
            u('onCompositionStart', 'compositionstart focusout keydown keypress keyup mousedown'.split(' ')),
            u('onCompositionUpdate', 'compositionupdate focusout keydown keypress keyup mousedown'.split(' '));
          var Nr =
              'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
                ' ',
              ),
            Br = new Set('cancel close invalid load scroll toggle'.split(' ').concat(Nr));
          function Ur(e, t, n) {
            var r = e.type || 'unknown-event';
            (e.currentTarget = n),
              (function (e, t, n, r, i, a, s, l, u) {
                if ((Ge.apply(this, arguments), Be)) {
                  if (!Be) throw Error(o(198));
                  var c = Ue;
                  (Be = !1), (Ue = null), ze || ((ze = !0), (He = c));
                }
              })(r, t, void 0, e),
              (e.currentTarget = null);
          }
          function zr(e, t) {
            t = 0 != (4 & t);
            for (var n = 0; n < e.length; n++) {
              var r = e[n],
                i = r.event;
              r = r.listeners;
              e: {
                var a = void 0;
                if (t)
                  for (var o = r.length - 1; 0 <= o; o--) {
                    var s = r[o],
                      l = s.instance,
                      u = s.currentTarget;
                    if (((s = s.listener), l !== a && i.isPropagationStopped())) break e;
                    Ur(i, s, u), (a = l);
                  }
                else
                  for (o = 0; o < r.length; o++) {
                    if (((l = (s = r[o]).instance), (u = s.currentTarget), (s = s.listener), l !== a && i.isPropagationStopped())) break e;
                    Ur(i, s, u), (a = l);
                  }
              }
            }
            if (ze) throw ((e = He), (ze = !1), (He = null), e);
          }
          function Hr(e, t) {
            var n = t[gi];
            void 0 === n && (n = t[gi] = new Set());
            var r = e + '__bubble';
            n.has(r) || (Kr(t, e, 2, !1), n.add(r));
          }
          function Vr(e, t, n) {
            var r = 0;
            t && (r |= 4), Kr(n, e, r, t);
          }
          var Gr = '_reactListening' + Math.random().toString(36).slice(2);
          function jr(e) {
            if (!e[Gr]) {
              (e[Gr] = !0),
                s.forEach(function (t) {
                  'selectionchange' !== t && (Br.has(t) || Vr(t, !1, e), Vr(t, !0, e));
                });
              var t = 9 === e.nodeType ? e : e.ownerDocument;
              null === t || t[Gr] || ((t[Gr] = !0), Vr('selectionchange', !1, t));
            }
          }
          function Kr(e, t, n, r) {
            switch (Zt(t)) {
              case 1:
                var i = qt;
                break;
              case 4:
                i = Yt;
                break;
              default:
                i = Xt;
            }
            (n = i.bind(null, t, n, e)),
              (i = void 0),
              !Oe || ('touchstart' !== t && 'touchmove' !== t && 'wheel' !== t) || (i = !0),
              r
                ? void 0 !== i
                  ? e.addEventListener(t, n, { capture: !0, passive: i })
                  : e.addEventListener(t, n, !0)
                : void 0 !== i
                ? e.addEventListener(t, n, { passive: i })
                : e.addEventListener(t, n, !1);
          }
          function Wr(e, t, n, r, i) {
            var a = r;
            if (0 == (1 & t) && 0 == (2 & t) && null !== r)
              e: for (;;) {
                if (null === r) return;
                var o = r.tag;
                if (3 === o || 4 === o) {
                  var s = r.stateNode.containerInfo;
                  if (s === i || (8 === s.nodeType && s.parentNode === i)) break;
                  if (4 === o)
                    for (o = r.return; null !== o; ) {
                      var l = o.tag;
                      if ((3 === l || 4 === l) && ((l = o.stateNode.containerInfo) === i || (8 === l.nodeType && l.parentNode === i))) return;
                      o = o.return;
                    }
                  for (; null !== s; ) {
                    if (null === (o = bi(s))) return;
                    if (5 === (l = o.tag) || 6 === l) {
                      r = a = o;
                      continue e;
                    }
                    s = s.parentNode;
                  }
                }
                r = r.return;
              }
            Me(function () {
              var r = a,
                i = ke(n),
                o = [];
              e: {
                var s = Ir.get(e);
                if (void 0 !== s) {
                  var l = fn,
                    u = e;
                  switch (e) {
                    case 'keypress':
                      if (0 === rn(n)) break e;
                    case 'keydown':
                    case 'keyup':
                      l = Cn;
                      break;
                    case 'focusin':
                      (u = 'focus'), (l = yn);
                      break;
                    case 'focusout':
                      (u = 'blur'), (l = yn);
                      break;
                    case 'beforeblur':
                    case 'afterblur':
                      l = yn;
                      break;
                    case 'click':
                      if (2 === n.button) break e;
                    case 'auxclick':
                    case 'dblclick':
                    case 'mousedown':
                    case 'mousemove':
                    case 'mouseup':
                    case 'mouseout':
                    case 'mouseover':
                    case 'contextmenu':
                      l = mn;
                      break;
                    case 'drag':
                    case 'dragend':
                    case 'dragenter':
                    case 'dragexit':
                    case 'dragleave':
                    case 'dragover':
                    case 'dragstart':
                    case 'drop':
                      l = gn;
                      break;
                    case 'touchcancel':
                    case 'touchend':
                    case 'touchmove':
                    case 'touchstart':
                      l = Dn;
                      break;
                    case Rr:
                    case Cr:
                    case xr:
                      l = _n;
                      break;
                    case Dr:
                      l = In;
                      break;
                    case 'scroll':
                      l = pn;
                      break;
                    case 'wheel':
                      l = Pn;
                      break;
                    case 'copy':
                    case 'cut':
                    case 'paste':
                      l = En;
                      break;
                    case 'gotpointercapture':
                    case 'lostpointercapture':
                    case 'pointercancel':
                    case 'pointerdown':
                    case 'pointermove':
                    case 'pointerout':
                    case 'pointerover':
                    case 'pointerup':
                      l = xn;
                  }
                  var c = 0 != (4 & t),
                    d = !c && 'scroll' === e,
                    f = c ? (null !== s ? s + 'Capture' : null) : s;
                  c = [];
                  for (var h, p = r; null !== p; ) {
                    var v = (h = p).stateNode;
                    if ((5 === h.tag && null !== v && ((h = v), null !== f && null != (v = Pe(p, f)) && c.push(qr(p, v, h))), d)) break;
                    p = p.return;
                  }
                  0 < c.length && ((s = new l(s, u, null, n, i)), o.push({ event: s, listeners: c }));
                }
              }
              if (0 == (7 & t)) {
                if (
                  ((l = 'mouseout' === e || 'pointerout' === e),
                  (!(s = 'mouseover' === e || 'pointerover' === e) || n === Se || !(u = n.relatedTarget || n.fromElement) || (!bi(u) && !u[mi])) &&
                    (l || s) &&
                    ((s = i.window === i ? i : (s = i.ownerDocument) ? s.defaultView || s.parentWindow : window),
                    l ? ((l = r), null !== (u = (u = n.relatedTarget || n.toElement) ? bi(u) : null) && (u !== (d = je(u)) || (5 !== u.tag && 6 !== u.tag)) && (u = null)) : ((l = null), (u = r)),
                    l !== u))
                ) {
                  if (
                    ((c = mn),
                    (v = 'onMouseLeave'),
                    (f = 'onMouseEnter'),
                    (p = 'mouse'),
                    ('pointerout' !== e && 'pointerover' !== e) || ((c = xn), (v = 'onPointerLeave'), (f = 'onPointerEnter'), (p = 'pointer')),
                    (d = null == l ? s : Si(l)),
                    (h = null == u ? s : Si(u)),
                    ((s = new c(v, p + 'leave', l, n, i)).target = d),
                    (s.relatedTarget = h),
                    (v = null),
                    bi(i) === r && (((c = new c(f, p + 'enter', u, n, i)).target = h), (c.relatedTarget = d), (v = c)),
                    (d = v),
                    l && u)
                  )
                    e: {
                      for (f = u, p = 0, h = c = l; h; h = Xr(h)) p++;
                      for (h = 0, v = f; v; v = Xr(v)) h++;
                      for (; 0 < p - h; ) (c = Xr(c)), p--;
                      for (; 0 < h - p; ) (f = Xr(f)), h--;
                      for (; p--; ) {
                        if (c === f || (null !== f && c === f.alternate)) break e;
                        (c = Xr(c)), (f = Xr(f));
                      }
                      c = null;
                    }
                  else c = null;
                  null !== l && $r(o, s, l, c, !1), null !== u && null !== d && $r(o, d, u, c, !0);
                }
                if ('select' === (l = (s = r ? Si(r) : window).nodeName && s.nodeName.toLowerCase()) || ('input' === l && 'file' === s.type)) var m = Zn;
                else if (Wn(s))
                  if (Jn) m = lr;
                  else {
                    m = or;
                    var g = ar;
                  }
                else (l = s.nodeName) && 'input' === l.toLowerCase() && ('checkbox' === s.type || 'radio' === s.type) && (m = sr);
                switch (
                  (m && (m = m(e, r)) ? qn(o, m, n, i) : (g && g(e, s, r), 'focusout' === e && (g = s._wrapperState) && g.controlled && 'number' === s.type && ne(s, 'number', s.value)),
                  (g = r ? Si(r) : window),
                  e)
                ) {
                  case 'focusin':
                    (Wn(g) || 'true' === g.contentEditable) && ((yr = g), (_r = r), (br = null));
                    break;
                  case 'focusout':
                    br = _r = yr = null;
                    break;
                  case 'mousedown':
                    Er = !0;
                    break;
                  case 'contextmenu':
                  case 'mouseup':
                  case 'dragend':
                    (Er = !1), Sr(o, n, i);
                    break;
                  case 'selectionchange':
                    if (gr) break;
                  case 'keydown':
                  case 'keyup':
                    Sr(o, n, i);
                }
                var y;
                if (Fn)
                  e: {
                    switch (e) {
                      case 'compositionstart':
                        var _ = 'onCompositionStart';
                        break e;
                      case 'compositionend':
                        _ = 'onCompositionEnd';
                        break e;
                      case 'compositionupdate':
                        _ = 'onCompositionUpdate';
                        break e;
                    }
                    _ = void 0;
                  }
                else jn ? Vn(e, n) && (_ = 'onCompositionEnd') : 'keydown' === e && 229 === n.keyCode && (_ = 'onCompositionStart');
                _ &&
                  (Un && 'ko' !== n.locale && (jn || 'onCompositionStart' !== _ ? 'onCompositionEnd' === _ && jn && (y = nn()) : ((en = 'value' in (Jt = i) ? Jt.value : Jt.textContent), (jn = !0))),
                  0 < (g = Yr(r, _)).length && ((_ = new Sn(_, e, null, n, i)), o.push({ event: _, listeners: g }), y ? (_.data = y) : null !== (y = Gn(n)) && (_.data = y))),
                  (y = Bn
                    ? (function (e, t) {
                        switch (e) {
                          case 'compositionend':
                            return Gn(t);
                          case 'keypress':
                            return 32 !== t.which ? null : ((Hn = !0), zn);
                          case 'textInput':
                            return (e = t.data) === zn && Hn ? null : e;
                          default:
                            return null;
                        }
                      })(e, n)
                    : (function (e, t) {
                        if (jn) return 'compositionend' === e || (!Fn && Vn(e, t)) ? ((e = nn()), (tn = en = Jt = null), (jn = !1), e) : null;
                        switch (e) {
                          case 'paste':
                          default:
                            return null;
                          case 'keypress':
                            if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
                              if (t.char && 1 < t.char.length) return t.char;
                              if (t.which) return String.fromCharCode(t.which);
                            }
                            return null;
                          case 'compositionend':
                            return Un && 'ko' !== t.locale ? null : t.data;
                        }
                      })(e, n)) &&
                    0 < (r = Yr(r, 'onBeforeInput')).length &&
                    ((i = new Sn('onBeforeInput', 'beforeinput', null, n, i)), o.push({ event: i, listeners: r }), (i.data = y));
              }
              zr(o, t);
            });
          }
          function qr(e, t, n) {
            return { instance: e, listener: t, currentTarget: n };
          }
          function Yr(e, t) {
            for (var n = t + 'Capture', r = []; null !== e; ) {
              var i = e,
                a = i.stateNode;
              5 === i.tag && null !== a && ((i = a), null != (a = Pe(e, n)) && r.unshift(qr(e, a, i)), null != (a = Pe(e, t)) && r.push(qr(e, a, i))), (e = e.return);
            }
            return r;
          }
          function Xr(e) {
            if (null === e) return null;
            do {
              e = e.return;
            } while (e && 5 !== e.tag);
            return e || null;
          }
          function $r(e, t, n, r, i) {
            for (var a = t._reactName, o = []; null !== n && n !== r; ) {
              var s = n,
                l = s.alternate,
                u = s.stateNode;
              if (null !== l && l === r) break;
              5 === s.tag && null !== u && ((s = u), i ? null != (l = Pe(n, a)) && o.unshift(qr(n, l, s)) : i || (null != (l = Pe(n, a)) && o.push(qr(n, l, s)))), (n = n.return);
            }
            0 !== o.length && e.push({ event: t, listeners: o });
          }
          var Qr = /\r\n?/g,
            Zr = /\u0000|\uFFFD/g;
          function Jr(e) {
            return ('string' == typeof e ? e : '' + e).replace(Qr, '\n').replace(Zr, '');
          }
          function ei(e, t, n) {
            if (((t = Jr(t)), Jr(e) !== t && n)) throw Error(o(425));
          }
          function ti() {}
          var ni = null,
            ri = null;
          function ii(e, t) {
            return (
              'textarea' === e ||
              'noscript' === e ||
              'string' == typeof t.children ||
              'number' == typeof t.children ||
              ('object' === r(t.dangerouslySetInnerHTML) && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html)
            );
          }
          var ai = 'function' == typeof setTimeout ? setTimeout : void 0,
            oi = 'function' == typeof clearTimeout ? clearTimeout : void 0,
            si = 'function' == typeof Promise ? Promise : void 0,
            li =
              'function' == typeof queueMicrotask
                ? queueMicrotask
                : void 0 !== si
                ? function (e) {
                    return si.resolve(null).then(e).catch(ui);
                  }
                : ai;
          function ui(e) {
            setTimeout(function () {
              throw e;
            });
          }
          function ci(e, t) {
            var n = t,
              r = 0;
            do {
              var i = n.nextSibling;
              if ((e.removeChild(n), i && 8 === i.nodeType))
                if ('/$' === (n = i.data)) {
                  if (0 === r) return e.removeChild(i), void jt(t);
                  r--;
                } else ('$' !== n && '$?' !== n && '$!' !== n) || r++;
              n = i;
            } while (n);
            jt(t);
          }
          function di(e) {
            for (; null != e; e = e.nextSibling) {
              var t = e.nodeType;
              if (1 === t || 3 === t) break;
              if (8 === t) {
                if ('$' === (t = e.data) || '$!' === t || '$?' === t) break;
                if ('/$' === t) return null;
              }
            }
            return e;
          }
          function fi(e) {
            e = e.previousSibling;
            for (var t = 0; e; ) {
              if (8 === e.nodeType) {
                var n = e.data;
                if ('$' === n || '$!' === n || '$?' === n) {
                  if (0 === t) return e;
                  t--;
                } else '/$' === n && t++;
              }
              e = e.previousSibling;
            }
            return null;
          }
          var hi = Math.random().toString(36).slice(2),
            pi = '__reactFiber$' + hi,
            vi = '__reactProps$' + hi,
            mi = '__reactContainer$' + hi,
            gi = '__reactEvents$' + hi,
            yi = '__reactListeners$' + hi,
            _i = '__reactHandles$' + hi;
          function bi(e) {
            var t = e[pi];
            if (t) return t;
            for (var n = e.parentNode; n; ) {
              if ((t = n[mi] || n[pi])) {
                if (((n = t.alternate), null !== t.child || (null !== n && null !== n.child)))
                  for (e = fi(e); null !== e; ) {
                    if ((n = e[pi])) return n;
                    e = fi(e);
                  }
                return t;
              }
              n = (e = n).parentNode;
            }
            return null;
          }
          function Ei(e) {
            return !(e = e[pi] || e[mi]) || (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag) ? null : e;
          }
          function Si(e) {
            if (5 === e.tag || 6 === e.tag) return e.stateNode;
            throw Error(o(33));
          }
          function ki(e) {
            return e[vi] || null;
          }
          var Ti = [],
            wi = -1;
          function Ai(e) {
            return { current: e };
          }
          function Li(e) {
            0 > wi || ((e.current = Ti[wi]), (Ti[wi] = null), wi--);
          }
          function Ri(e, t) {
            wi++, (Ti[wi] = e.current), (e.current = t);
          }
          var Ci = {},
            xi = Ai(Ci),
            Di = Ai(!1),
            Ii = Ci;
          function Mi(e, t) {
            var n = e.type.contextTypes;
            if (!n) return Ci;
            var r = e.stateNode;
            if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
            var i,
              a = {};
            for (i in n) a[i] = t[i];
            return r && (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t), (e.__reactInternalMemoizedMaskedChildContext = a)), a;
          }
          function Pi(e) {
            return null != (e = e.childContextTypes);
          }
          function Oi() {
            Li(Di), Li(xi);
          }
          function Fi(e, t, n) {
            if (xi.current !== Ci) throw Error(o(168));
            Ri(xi, t), Ri(Di, n);
          }
          function Ni(e, t, n) {
            var r = e.stateNode;
            if (((t = t.childContextTypes), 'function' != typeof r.getChildContext)) return n;
            for (var i in (r = r.getChildContext())) if (!(i in t)) throw Error(o(108, K(e) || 'Unknown', i));
            return U({}, n, r);
          }
          function Bi(e) {
            return (e = ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || Ci), (Ii = xi.current), Ri(xi, e), Ri(Di, Di.current), !0;
          }
          function Ui(e, t, n) {
            var r = e.stateNode;
            if (!r) throw Error(o(169));
            n ? ((e = Ni(e, t, Ii)), (r.__reactInternalMemoizedMergedChildContext = e), Li(Di), Li(xi), Ri(xi, e)) : Li(Di), Ri(Di, n);
          }
          var zi = null,
            Hi = !1,
            Vi = !1;
          function Gi(e) {
            null === zi ? (zi = [e]) : zi.push(e);
          }
          function ji() {
            if (!Vi && null !== zi) {
              Vi = !0;
              var e = 0,
                t = Et;
              try {
                var n = zi;
                for (Et = 1; e < n.length; e++) {
                  var r = n[e];
                  do {
                    r = r(!0);
                  } while (null !== r);
                }
                (zi = null), (Hi = !1);
              } catch (t) {
                throw (null !== zi && (zi = zi.slice(e + 1)), Xe(tt, ji), t);
              } finally {
                (Et = t), (Vi = !1);
              }
            }
            return null;
          }
          var Ki = [],
            Wi = 0,
            qi = null,
            Yi = 0,
            Xi = [],
            $i = 0,
            Qi = null,
            Zi = 1,
            Ji = '';
          function ea(e, t) {
            (Ki[Wi++] = Yi), (Ki[Wi++] = qi), (qi = e), (Yi = t);
          }
          function ta(e, t, n) {
            (Xi[$i++] = Zi), (Xi[$i++] = Ji), (Xi[$i++] = Qi), (Qi = e);
            var r = Zi;
            e = Ji;
            var i = 32 - lt(r) - 1;
            (r &= ~(1 << i)), (n += 1);
            var a = 32 - lt(t) + i;
            if (30 < a) {
              var o = i - (i % 5);
              (a = (r & ((1 << o) - 1)).toString(32)), (r >>= o), (i -= o), (Zi = (1 << (32 - lt(t) + i)) | (n << i) | r), (Ji = a + e);
            } else (Zi = (1 << a) | (n << i) | r), (Ji = e);
          }
          function na(e) {
            null !== e.return && (ea(e, 1), ta(e, 1, 0));
          }
          function ra(e) {
            for (; e === qi; ) (qi = Ki[--Wi]), (Ki[Wi] = null), (Yi = Ki[--Wi]), (Ki[Wi] = null);
            for (; e === Qi; ) (Qi = Xi[--$i]), (Xi[$i] = null), (Ji = Xi[--$i]), (Xi[$i] = null), (Zi = Xi[--$i]), (Xi[$i] = null);
          }
          var ia = null,
            aa = null,
            oa = !1,
            sa = null;
          function la(e, t) {
            var n = Mu(5, null, null, 0);
            (n.elementType = 'DELETED'), (n.stateNode = t), (n.return = e), null === (t = e.deletions) ? ((e.deletions = [n]), (e.flags |= 16)) : t.push(n);
          }
          function ua(e, t) {
            switch (e.tag) {
              case 5:
                var n = e.type;
                return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && ((e.stateNode = t), (ia = e), (aa = di(t.firstChild)), !0);
              case 6:
                return null !== (t = '' === e.pendingProps || 3 !== t.nodeType ? null : t) && ((e.stateNode = t), (ia = e), (aa = null), !0);
              case 13:
                return (
                  null !== (t = 8 !== t.nodeType ? null : t) &&
                  ((n = null !== Qi ? { id: Zi, overflow: Ji } : null),
                  (e.memoizedState = { dehydrated: t, treeContext: n, retryLane: 1073741824 }),
                  ((n = Mu(18, null, null, 0)).stateNode = t),
                  (n.return = e),
                  (e.child = n),
                  (ia = e),
                  (aa = null),
                  !0)
                );
              default:
                return !1;
            }
          }
          function ca(e) {
            return 0 != (1 & e.mode) && 0 == (128 & e.flags);
          }
          function da(e) {
            if (oa) {
              var t = aa;
              if (t) {
                var n = t;
                if (!ua(e, t)) {
                  if (ca(e)) throw Error(o(418));
                  t = di(n.nextSibling);
                  var r = ia;
                  t && ua(e, t) ? la(r, n) : ((e.flags = (-4097 & e.flags) | 2), (oa = !1), (ia = e));
                }
              } else {
                if (ca(e)) throw Error(o(418));
                (e.flags = (-4097 & e.flags) | 2), (oa = !1), (ia = e);
              }
            }
          }
          function fa(e) {
            for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; ) e = e.return;
            ia = e;
          }
          function ha(e) {
            if (e !== ia) return !1;
            if (!oa) return fa(e), (oa = !0), !1;
            var t;
            if (((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = 'head' !== (t = e.type) && 'body' !== t && !ii(e.type, e.memoizedProps)), t && (t = aa))) {
              if (ca(e)) throw (pa(), Error(o(418)));
              for (; t; ) la(e, t), (t = di(t.nextSibling));
            }
            if ((fa(e), 13 === e.tag)) {
              if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(o(317));
              e: {
                for (e = e.nextSibling, t = 0; e; ) {
                  if (8 === e.nodeType) {
                    var n = e.data;
                    if ('/$' === n) {
                      if (0 === t) {
                        aa = di(e.nextSibling);
                        break e;
                      }
                      t--;
                    } else ('$' !== n && '$!' !== n && '$?' !== n) || t++;
                  }
                  e = e.nextSibling;
                }
                aa = null;
              }
            } else aa = ia ? di(e.stateNode.nextSibling) : null;
            return !0;
          }
          function pa() {
            for (var e = aa; e; ) e = di(e.nextSibling);
          }
          function va() {
            (aa = ia = null), (oa = !1);
          }
          function ma(e) {
            null === sa ? (sa = [e]) : sa.push(e);
          }
          var ga = S.ReactCurrentBatchConfig;
          function ya(e, t) {
            if (e && e.defaultProps) {
              for (var n in ((t = U({}, t)), (e = e.defaultProps))) void 0 === t[n] && (t[n] = e[n]);
              return t;
            }
            return t;
          }
          var _a = Ai(null),
            ba = null,
            Ea = null,
            Sa = null;
          function ka() {
            Sa = Ea = ba = null;
          }
          function Ta(e) {
            var t = _a.current;
            Li(_a), (e._currentValue = t);
          }
          function wa(e, t, n) {
            for (; null !== e; ) {
              var r = e.alternate;
              if (((e.childLanes & t) !== t ? ((e.childLanes |= t), null !== r && (r.childLanes |= t)) : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t), e === n)) break;
              e = e.return;
            }
          }
          function Aa(e, t) {
            (ba = e), (Sa = Ea = null), null !== (e = e.dependencies) && null !== e.firstContext && (0 != (e.lanes & t) && (Ss = !0), (e.firstContext = null));
          }
          function La(e) {
            var t = e._currentValue;
            if (Sa !== e)
              if (((e = { context: e, memoizedValue: t, next: null }), null === Ea)) {
                if (null === ba) throw Error(o(308));
                (Ea = e), (ba.dependencies = { lanes: 0, firstContext: e });
              } else Ea = Ea.next = e;
            return t;
          }
          var Ra = null;
          function Ca(e) {
            null === Ra ? (Ra = [e]) : Ra.push(e);
          }
          function xa(e, t, n, r) {
            var i = t.interleaved;
            return null === i ? ((n.next = n), Ca(t)) : ((n.next = i.next), (i.next = n)), (t.interleaved = n), Da(e, r);
          }
          function Da(e, t) {
            e.lanes |= t;
            var n = e.alternate;
            for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; ) (e.childLanes |= t), null !== (n = e.alternate) && (n.childLanes |= t), (n = e), (e = e.return);
            return 3 === n.tag ? n.stateNode : null;
          }
          var Ia = !1;
          function Ma(e) {
            e.updateQueue = { baseState: e.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
          }
          function Pa(e, t) {
            (e = e.updateQueue),
              t.updateQueue === e && (t.updateQueue = { baseState: e.baseState, firstBaseUpdate: e.firstBaseUpdate, lastBaseUpdate: e.lastBaseUpdate, shared: e.shared, effects: e.effects });
          }
          function Oa(e, t) {
            return { eventTime: e, lane: t, tag: 0, payload: null, callback: null, next: null };
          }
          function Fa(e, t, n) {
            var r = e.updateQueue;
            if (null === r) return null;
            if (((r = r.shared), 0 != (2 & xl))) {
              var i = r.pending;
              return null === i ? (t.next = t) : ((t.next = i.next), (i.next = t)), (r.pending = t), Da(e, n);
            }
            return null === (i = r.interleaved) ? ((t.next = t), Ca(r)) : ((t.next = i.next), (i.next = t)), (r.interleaved = t), Da(e, n);
          }
          function Na(e, t, n) {
            if (null !== (t = t.updateQueue) && ((t = t.shared), 0 != (4194240 & n))) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), bt(e, n);
            }
          }
          function Ba(e, t) {
            var n = e.updateQueue,
              r = e.alternate;
            if (null !== r && n === (r = r.updateQueue)) {
              var i = null,
                a = null;
              if (null !== (n = n.firstBaseUpdate)) {
                do {
                  var o = { eventTime: n.eventTime, lane: n.lane, tag: n.tag, payload: n.payload, callback: n.callback, next: null };
                  null === a ? (i = a = o) : (a = a.next = o), (n = n.next);
                } while (null !== n);
                null === a ? (i = a = t) : (a = a.next = t);
              } else i = a = t;
              return (n = { baseState: r.baseState, firstBaseUpdate: i, lastBaseUpdate: a, shared: r.shared, effects: r.effects }), void (e.updateQueue = n);
            }
            null === (e = n.lastBaseUpdate) ? (n.firstBaseUpdate = t) : (e.next = t), (n.lastBaseUpdate = t);
          }
          function Ua(e, t, n, r) {
            var i = e.updateQueue;
            Ia = !1;
            var a = i.firstBaseUpdate,
              o = i.lastBaseUpdate,
              s = i.shared.pending;
            if (null !== s) {
              i.shared.pending = null;
              var l = s,
                u = l.next;
              (l.next = null), null === o ? (a = u) : (o.next = u), (o = l);
              var c = e.alternate;
              null !== c && (s = (c = c.updateQueue).lastBaseUpdate) !== o && (null === s ? (c.firstBaseUpdate = u) : (s.next = u), (c.lastBaseUpdate = l));
            }
            if (null !== a) {
              var d = i.baseState;
              for (o = 0, c = u = l = null, s = a; ; ) {
                var f = s.lane,
                  h = s.eventTime;
                if ((r & f) === f) {
                  null !== c && (c = c.next = { eventTime: h, lane: 0, tag: s.tag, payload: s.payload, callback: s.callback, next: null });
                  e: {
                    var p = e,
                      v = s;
                    switch (((f = t), (h = n), v.tag)) {
                      case 1:
                        if ('function' == typeof (p = v.payload)) {
                          d = p.call(h, d, f);
                          break e;
                        }
                        d = p;
                        break e;
                      case 3:
                        p.flags = (-65537 & p.flags) | 128;
                      case 0:
                        if (null == (f = 'function' == typeof (p = v.payload) ? p.call(h, d, f) : p)) break e;
                        d = U({}, d, f);
                        break e;
                      case 2:
                        Ia = !0;
                    }
                  }
                  null !== s.callback && 0 !== s.lane && ((e.flags |= 64), null === (f = i.effects) ? (i.effects = [s]) : f.push(s));
                } else (h = { eventTime: h, lane: f, tag: s.tag, payload: s.payload, callback: s.callback, next: null }), null === c ? ((u = c = h), (l = d)) : (c = c.next = h), (o |= f);
                if (null === (s = s.next)) {
                  if (null === (s = i.shared.pending)) break;
                  (s = (f = s).next), (f.next = null), (i.lastBaseUpdate = f), (i.shared.pending = null);
                }
              }
              if ((null === c && (l = d), (i.baseState = l), (i.firstBaseUpdate = u), (i.lastBaseUpdate = c), null !== (t = i.shared.interleaved))) {
                i = t;
                do {
                  (o |= i.lane), (i = i.next);
                } while (i !== t);
              } else null === a && (i.shared.lanes = 0);
              (Bl |= o), (e.lanes = o), (e.memoizedState = d);
            }
          }
          function za(e, t, n) {
            if (((e = t.effects), (t.effects = null), null !== e))
              for (t = 0; t < e.length; t++) {
                var r = e[t],
                  i = r.callback;
                if (null !== i) {
                  if (((r.callback = null), (r = n), 'function' != typeof i)) throw Error(o(191, i));
                  i.call(r);
                }
              }
          }
          var Ha = new i.Component().refs;
          function Va(e, t, n, r) {
            (n = null == (n = n(r, (t = e.memoizedState))) ? t : U({}, t, n)), (e.memoizedState = n), 0 === e.lanes && (e.updateQueue.baseState = n);
          }
          var Ga = {
            isMounted: function (e) {
              return !!(e = e._reactInternals) && je(e) === e;
            },
            enqueueSetState: function (e, t, n) {
              e = e._reactInternals;
              var r = nu(),
                i = ru(e),
                a = Oa(r, i);
              (a.payload = t), null != n && (a.callback = n), null !== (t = Fa(e, a, i)) && (iu(t, e, i, r), Na(t, e, i));
            },
            enqueueReplaceState: function (e, t, n) {
              e = e._reactInternals;
              var r = nu(),
                i = ru(e),
                a = Oa(r, i);
              (a.tag = 1), (a.payload = t), null != n && (a.callback = n), null !== (t = Fa(e, a, i)) && (iu(t, e, i, r), Na(t, e, i));
            },
            enqueueForceUpdate: function (e, t) {
              e = e._reactInternals;
              var n = nu(),
                r = ru(e),
                i = Oa(n, r);
              (i.tag = 2), null != t && (i.callback = t), null !== (t = Fa(e, i, r)) && (iu(t, e, r, n), Na(t, e, r));
            },
          };
          function ja(e, t, n, r, i, a, o) {
            return 'function' == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, a, o) : !t.prototype || !t.prototype.isPureReactComponent || !cr(n, r) || !cr(i, a);
          }
          function Ka(e, t, n) {
            var i = !1,
              a = Ci,
              o = t.contextType;
            return (
              'object' === r(o) && null !== o ? (o = La(o)) : ((a = Pi(t) ? Ii : xi.current), (o = (i = null != (i = t.contextTypes)) ? Mi(e, a) : Ci)),
              (t = new t(n, o)),
              (e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null),
              (t.updater = Ga),
              (e.stateNode = t),
              (t._reactInternals = e),
              i && (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = a), (e.__reactInternalMemoizedMaskedChildContext = o)),
              t
            );
          }
          function Wa(e, t, n, r) {
            (e = t.state),
              'function' == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
              'function' == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
              t.state !== e && Ga.enqueueReplaceState(t, t.state, null);
          }
          function qa(e, t, n, i) {
            var a = e.stateNode;
            (a.props = n), (a.state = e.memoizedState), (a.refs = Ha), Ma(e);
            var o = t.contextType;
            'object' === r(o) && null !== o ? (a.context = La(o)) : ((o = Pi(t) ? Ii : xi.current), (a.context = Mi(e, o))),
              (a.state = e.memoizedState),
              'function' == typeof (o = t.getDerivedStateFromProps) && (Va(e, t, o, n), (a.state = e.memoizedState)),
              'function' == typeof t.getDerivedStateFromProps ||
                'function' == typeof a.getSnapshotBeforeUpdate ||
                ('function' != typeof a.UNSAFE_componentWillMount && 'function' != typeof a.componentWillMount) ||
                ((t = a.state),
                'function' == typeof a.componentWillMount && a.componentWillMount(),
                'function' == typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount(),
                t !== a.state && Ga.enqueueReplaceState(a, a.state, null),
                Ua(e, n, a, i),
                (a.state = e.memoizedState)),
              'function' == typeof a.componentDidMount && (e.flags |= 4194308);
          }
          function Ya(e, t, n) {
            if (null !== (e = n.ref) && 'function' != typeof e && 'object' !== r(e)) {
              if (n._owner) {
                if ((n = n._owner)) {
                  if (1 !== n.tag) throw Error(o(309));
                  var i = n.stateNode;
                }
                if (!i) throw Error(o(147, e));
                var a = i,
                  s = '' + e;
                return null !== t && null !== t.ref && 'function' == typeof t.ref && t.ref._stringRef === s
                  ? t.ref
                  : ((t = function (e) {
                      var t = a.refs;
                      t === Ha && (t = a.refs = {}), null === e ? delete t[s] : (t[s] = e);
                    }),
                    (t._stringRef = s),
                    t);
              }
              if ('string' != typeof e) throw Error(o(284));
              if (!n._owner) throw Error(o(290, e));
            }
            return e;
          }
          function Xa(e, t) {
            throw ((e = Object.prototype.toString.call(t)), Error(o(31, '[object Object]' === e ? 'object with keys {' + Object.keys(t).join(', ') + '}' : e)));
          }
          function $a(e) {
            return (0, e._init)(e._payload);
          }
          function Qa(e) {
            function t(t, n) {
              if (e) {
                var r = t.deletions;
                null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
              }
            }
            function n(n, r) {
              if (!e) return null;
              for (; null !== r; ) t(n, r), (r = r.sibling);
              return null;
            }
            function i(e, t) {
              for (e = new Map(); null !== t; ) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), (t = t.sibling);
              return e;
            }
            function a(e, t) {
              return ((e = Ou(e, t)).index = 0), (e.sibling = null), e;
            }
            function s(t, n, r) {
              return (t.index = r), e ? (null !== (r = t.alternate) ? ((r = r.index) < n ? ((t.flags |= 2), n) : r) : ((t.flags |= 2), n)) : ((t.flags |= 1048576), n);
            }
            function l(t) {
              return e && null === t.alternate && (t.flags |= 2), t;
            }
            function u(e, t, n, r) {
              return null === t || 6 !== t.tag ? (((t = Uu(n, e.mode, r)).return = e), t) : (((t = a(t, n)).return = e), t);
            }
            function c(e, t, n, i) {
              var o = n.type;
              return o === w
                ? f(e, t, n.props.children, i, n.key)
                : null !== t && (t.elementType === o || ('object' === r(o) && null !== o && o.$$typeof === P && $a(o) === t.type))
                ? (((i = a(t, n.props)).ref = Ya(e, t, n)), (i.return = e), i)
                : (((i = Fu(n.type, n.key, n.props, null, e.mode, i)).ref = Ya(e, t, n)), (i.return = e), i);
            }
            function d(e, t, n, r) {
              return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation
                ? (((t = zu(n, e.mode, r)).return = e), t)
                : (((t = a(t, n.children || [])).return = e), t);
            }
            function f(e, t, n, r, i) {
              return null === t || 7 !== t.tag ? (((t = Nu(n, e.mode, r, i)).return = e), t) : (((t = a(t, n)).return = e), t);
            }
            function h(e, t, n) {
              if (('string' == typeof t && '' !== t) || 'number' == typeof t) return ((t = Uu('' + t, e.mode, n)).return = e), t;
              if ('object' === r(t) && null !== t) {
                switch (t.$$typeof) {
                  case k:
                    return ((n = Fu(t.type, t.key, t.props, null, e.mode, n)).ref = Ya(e, null, t)), (n.return = e), n;
                  case T:
                    return ((t = zu(t, e.mode, n)).return = e), t;
                  case P:
                    return h(e, (0, t._init)(t._payload), n);
                }
                if (re(t) || N(t)) return ((t = Nu(t, e.mode, n, null)).return = e), t;
                Xa(e, t);
              }
              return null;
            }
            function p(e, t, n, i) {
              var a = null !== t ? t.key : null;
              if (('string' == typeof n && '' !== n) || 'number' == typeof n) return null !== a ? null : u(e, t, '' + n, i);
              if ('object' === r(n) && null !== n) {
                switch (n.$$typeof) {
                  case k:
                    return n.key === a ? c(e, t, n, i) : null;
                  case T:
                    return n.key === a ? d(e, t, n, i) : null;
                  case P:
                    return p(e, t, (a = n._init)(n._payload), i);
                }
                if (re(n) || N(n)) return null !== a ? null : f(e, t, n, i, null);
                Xa(e, n);
              }
              return null;
            }
            function v(e, t, n, i, a) {
              if (('string' == typeof i && '' !== i) || 'number' == typeof i) return u(t, (e = e.get(n) || null), '' + i, a);
              if ('object' === r(i) && null !== i) {
                switch (i.$$typeof) {
                  case k:
                    return c(t, (e = e.get(null === i.key ? n : i.key) || null), i, a);
                  case T:
                    return d(t, (e = e.get(null === i.key ? n : i.key) || null), i, a);
                  case P:
                    return v(e, t, n, (0, i._init)(i._payload), a);
                }
                if (re(i) || N(i)) return f(t, (e = e.get(n) || null), i, a, null);
                Xa(t, i);
              }
              return null;
            }
            function m(r, a, o, l) {
              for (var u = null, c = null, d = a, f = (a = 0), m = null; null !== d && f < o.length; f++) {
                d.index > f ? ((m = d), (d = null)) : (m = d.sibling);
                var g = p(r, d, o[f], l);
                if (null === g) {
                  null === d && (d = m);
                  break;
                }
                e && d && null === g.alternate && t(r, d), (a = s(g, a, f)), null === c ? (u = g) : (c.sibling = g), (c = g), (d = m);
              }
              if (f === o.length) return n(r, d), oa && ea(r, f), u;
              if (null === d) {
                for (; f < o.length; f++) null !== (d = h(r, o[f], l)) && ((a = s(d, a, f)), null === c ? (u = d) : (c.sibling = d), (c = d));
                return oa && ea(r, f), u;
              }
              for (d = i(r, d); f < o.length; f++)
                null !== (m = v(d, r, f, o[f], l)) && (e && null !== m.alternate && d.delete(null === m.key ? f : m.key), (a = s(m, a, f)), null === c ? (u = m) : (c.sibling = m), (c = m));
              return (
                e &&
                  d.forEach(function (e) {
                    return t(r, e);
                  }),
                oa && ea(r, f),
                u
              );
            }
            function g(r, a, l, u) {
              var c = N(l);
              if ('function' != typeof c) throw Error(o(150));
              if (null == (l = c.call(l))) throw Error(o(151));
              for (var d = (c = null), f = a, m = (a = 0), g = null, y = l.next(); null !== f && !y.done; m++, y = l.next()) {
                f.index > m ? ((g = f), (f = null)) : (g = f.sibling);
                var _ = p(r, f, y.value, u);
                if (null === _) {
                  null === f && (f = g);
                  break;
                }
                e && f && null === _.alternate && t(r, f), (a = s(_, a, m)), null === d ? (c = _) : (d.sibling = _), (d = _), (f = g);
              }
              if (y.done) return n(r, f), oa && ea(r, m), c;
              if (null === f) {
                for (; !y.done; m++, y = l.next()) null !== (y = h(r, y.value, u)) && ((a = s(y, a, m)), null === d ? (c = y) : (d.sibling = y), (d = y));
                return oa && ea(r, m), c;
              }
              for (f = i(r, f); !y.done; m++, y = l.next())
                null !== (y = v(f, r, m, y.value, u)) && (e && null !== y.alternate && f.delete(null === y.key ? m : y.key), (a = s(y, a, m)), null === d ? (c = y) : (d.sibling = y), (d = y));
              return (
                e &&
                  f.forEach(function (e) {
                    return t(r, e);
                  }),
                oa && ea(r, m),
                c
              );
            }
            return function e(i, o, s, u) {
              if (('object' === r(s) && null !== s && s.type === w && null === s.key && (s = s.props.children), 'object' === r(s) && null !== s)) {
                switch (s.$$typeof) {
                  case k:
                    e: {
                      for (var c = s.key, d = o; null !== d; ) {
                        if (d.key === c) {
                          if ((c = s.type) === w) {
                            if (7 === d.tag) {
                              n(i, d.sibling), ((o = a(d, s.props.children)).return = i), (i = o);
                              break e;
                            }
                          } else if (d.elementType === c || ('object' === r(c) && null !== c && c.$$typeof === P && $a(c) === d.type)) {
                            n(i, d.sibling), ((o = a(d, s.props)).ref = Ya(i, d, s)), (o.return = i), (i = o);
                            break e;
                          }
                          n(i, d);
                          break;
                        }
                        t(i, d), (d = d.sibling);
                      }
                      s.type === w
                        ? (((o = Nu(s.props.children, i.mode, u, s.key)).return = i), (i = o))
                        : (((u = Fu(s.type, s.key, s.props, null, i.mode, u)).ref = Ya(i, o, s)), (u.return = i), (i = u));
                    }
                    return l(i);
                  case T:
                    e: {
                      for (d = s.key; null !== o; ) {
                        if (o.key === d) {
                          if (4 === o.tag && o.stateNode.containerInfo === s.containerInfo && o.stateNode.implementation === s.implementation) {
                            n(i, o.sibling), ((o = a(o, s.children || [])).return = i), (i = o);
                            break e;
                          }
                          n(i, o);
                          break;
                        }
                        t(i, o), (o = o.sibling);
                      }
                      ((o = zu(s, i.mode, u)).return = i), (i = o);
                    }
                    return l(i);
                  case P:
                    return e(i, o, (d = s._init)(s._payload), u);
                }
                if (re(s)) return m(i, o, s, u);
                if (N(s)) return g(i, o, s, u);
                Xa(i, s);
              }
              return ('string' == typeof s && '' !== s) || 'number' == typeof s
                ? ((s = '' + s), null !== o && 6 === o.tag ? (n(i, o.sibling), ((o = a(o, s)).return = i), (i = o)) : (n(i, o), ((o = Uu(s, i.mode, u)).return = i), (i = o)), l(i))
                : n(i, o);
            };
          }
          var Za = Qa(!0),
            Ja = Qa(!1),
            eo = {},
            to = Ai(eo),
            no = Ai(eo),
            ro = Ai(eo);
          function io(e) {
            if (e === eo) throw Error(o(174));
            return e;
          }
          function ao(e, t) {
            switch ((Ri(ro, t), Ri(no, e), Ri(to, eo), (e = t.nodeType))) {
              case 9:
              case 11:
                t = (t = t.documentElement) ? t.namespaceURI : ce(null, '');
                break;
              default:
                t = ce((t = (e = 8 === e ? t.parentNode : t).namespaceURI || null), (e = e.tagName));
            }
            Li(to), Ri(to, t);
          }
          function oo() {
            Li(to), Li(no), Li(ro);
          }
          function so(e) {
            io(ro.current);
            var t = io(to.current),
              n = ce(t, e.type);
            t !== n && (Ri(no, e), Ri(to, n));
          }
          function lo(e) {
            no.current === e && (Li(to), Li(no));
          }
          var uo = Ai(0);
          function co(e) {
            for (var t = e; null !== t; ) {
              if (13 === t.tag) {
                var n = t.memoizedState;
                if (null !== n && (null === (n = n.dehydrated) || '$?' === n.data || '$!' === n.data)) return t;
              } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                if (0 != (128 & t.flags)) return t;
              } else if (null !== t.child) {
                (t.child.return = t), (t = t.child);
                continue;
              }
              if (t === e) break;
              for (; null === t.sibling; ) {
                if (null === t.return || t.return === e) return null;
                t = t.return;
              }
              (t.sibling.return = t.return), (t = t.sibling);
            }
            return null;
          }
          var fo = [];
          function ho() {
            for (var e = 0; e < fo.length; e++) fo[e]._workInProgressVersionPrimary = null;
            fo.length = 0;
          }
          var po = S.ReactCurrentDispatcher,
            vo = S.ReactCurrentBatchConfig,
            mo = 0,
            go = null,
            yo = null,
            _o = null,
            bo = !1,
            Eo = !1,
            So = 0,
            ko = 0;
          function To() {
            throw Error(o(321));
          }
          function wo(e, t) {
            if (null === t) return !1;
            for (var n = 0; n < t.length && n < e.length; n++) if (!ur(e[n], t[n])) return !1;
            return !0;
          }
          function Ao(e, t, n, r, i, a) {
            if (((mo = a), (go = t), (t.memoizedState = null), (t.updateQueue = null), (t.lanes = 0), (po.current = null === e || null === e.memoizedState ? us : cs), (e = n(r, i)), Eo)) {
              a = 0;
              do {
                if (((Eo = !1), (So = 0), 25 <= a)) throw Error(o(301));
                (a += 1), (_o = yo = null), (t.updateQueue = null), (po.current = ds), (e = n(r, i));
              } while (Eo);
            }
            if (((po.current = ls), (t = null !== yo && null !== yo.next), (mo = 0), (_o = yo = go = null), (bo = !1), t)) throw Error(o(300));
            return e;
          }
          function Lo() {
            var e = 0 !== So;
            return (So = 0), e;
          }
          function Ro() {
            var e = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
            return null === _o ? (go.memoizedState = _o = e) : (_o = _o.next = e), _o;
          }
          function Co() {
            if (null === yo) {
              var e = go.alternate;
              e = null !== e ? e.memoizedState : null;
            } else e = yo.next;
            var t = null === _o ? go.memoizedState : _o.next;
            if (null !== t) (_o = t), (yo = e);
            else {
              if (null === e) throw Error(o(310));
              (e = { memoizedState: (yo = e).memoizedState, baseState: yo.baseState, baseQueue: yo.baseQueue, queue: yo.queue, next: null }),
                null === _o ? (go.memoizedState = _o = e) : (_o = _o.next = e);
            }
            return _o;
          }
          function xo(e, t) {
            return 'function' == typeof t ? t(e) : t;
          }
          function Do(e) {
            var t = Co(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = yo,
              i = r.baseQueue,
              a = n.pending;
            if (null !== a) {
              if (null !== i) {
                var s = i.next;
                (i.next = a.next), (a.next = s);
              }
              (r.baseQueue = i = a), (n.pending = null);
            }
            if (null !== i) {
              (a = i.next), (r = r.baseState);
              var l = (s = null),
                u = null,
                c = a;
              do {
                var d = c.lane;
                if ((mo & d) === d)
                  null !== u && (u = u.next = { lane: 0, action: c.action, hasEagerState: c.hasEagerState, eagerState: c.eagerState, next: null }),
                    (r = c.hasEagerState ? c.eagerState : e(r, c.action));
                else {
                  var f = { lane: d, action: c.action, hasEagerState: c.hasEagerState, eagerState: c.eagerState, next: null };
                  null === u ? ((l = u = f), (s = r)) : (u = u.next = f), (go.lanes |= d), (Bl |= d);
                }
                c = c.next;
              } while (null !== c && c !== a);
              null === u ? (s = r) : (u.next = l), ur(r, t.memoizedState) || (Ss = !0), (t.memoizedState = r), (t.baseState = s), (t.baseQueue = u), (n.lastRenderedState = r);
            }
            if (null !== (e = n.interleaved)) {
              i = e;
              do {
                (a = i.lane), (go.lanes |= a), (Bl |= a), (i = i.next);
              } while (i !== e);
            } else null === i && (n.lanes = 0);
            return [t.memoizedState, n.dispatch];
          }
          function Io(e) {
            var t = Co(),
              n = t.queue;
            if (null === n) throw Error(o(311));
            n.lastRenderedReducer = e;
            var r = n.dispatch,
              i = n.pending,
              a = t.memoizedState;
            if (null !== i) {
              n.pending = null;
              var s = (i = i.next);
              do {
                (a = e(a, s.action)), (s = s.next);
              } while (s !== i);
              ur(a, t.memoizedState) || (Ss = !0), (t.memoizedState = a), null === t.baseQueue && (t.baseState = a), (n.lastRenderedState = a);
            }
            return [a, r];
          }
          function Mo() {}
          function Po(e, t) {
            var n = go,
              r = Co(),
              i = t(),
              a = !ur(r.memoizedState, i);
            if ((a && ((r.memoizedState = i), (Ss = !0)), (r = r.queue), Wo(No.bind(null, n, r, e), [e]), r.getSnapshot !== t || a || (null !== _o && 1 & _o.memoizedState.tag))) {
              if (((n.flags |= 2048), Ho(9, Fo.bind(null, n, r, i, t), void 0, null), null === Dl)) throw Error(o(349));
              0 != (30 & mo) || Oo(n, t, i);
            }
            return i;
          }
          function Oo(e, t, n) {
            (e.flags |= 16384),
              (e = { getSnapshot: t, value: n }),
              null === (t = go.updateQueue) ? ((t = { lastEffect: null, stores: null }), (go.updateQueue = t), (t.stores = [e])) : null === (n = t.stores) ? (t.stores = [e]) : n.push(e);
          }
          function Fo(e, t, n, r) {
            (t.value = n), (t.getSnapshot = r), Bo(t) && Uo(e);
          }
          function No(e, t, n) {
            return n(function () {
              Bo(t) && Uo(e);
            });
          }
          function Bo(e) {
            var t = e.getSnapshot;
            e = e.value;
            try {
              var n = t();
              return !ur(e, n);
            } catch (e) {
              return !0;
            }
          }
          function Uo(e) {
            var t = Da(e, 1);
            null !== t && iu(t, e, 1, -1);
          }
          function zo(e) {
            var t = Ro();
            return (
              'function' == typeof e && (e = e()),
              (t.memoizedState = t.baseState = e),
              (e = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: xo, lastRenderedState: e }),
              (t.queue = e),
              (e = e.dispatch = is.bind(null, go, e)),
              [t.memoizedState, e]
            );
          }
          function Ho(e, t, n, r) {
            return (
              (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
              null === (t = go.updateQueue)
                ? ((t = { lastEffect: null, stores: null }), (go.updateQueue = t), (t.lastEffect = e.next = e))
                : null === (n = t.lastEffect)
                ? (t.lastEffect = e.next = e)
                : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
              e
            );
          }
          function Vo() {
            return Co().memoizedState;
          }
          function Go(e, t, n, r) {
            var i = Ro();
            (go.flags |= e), (i.memoizedState = Ho(1 | t, n, void 0, void 0 === r ? null : r));
          }
          function jo(e, t, n, r) {
            var i = Co();
            r = void 0 === r ? null : r;
            var a = void 0;
            if (null !== yo) {
              var o = yo.memoizedState;
              if (((a = o.destroy), null !== r && wo(r, o.deps))) return void (i.memoizedState = Ho(t, n, a, r));
            }
            (go.flags |= e), (i.memoizedState = Ho(1 | t, n, a, r));
          }
          function Ko(e, t) {
            return Go(8390656, 8, e, t);
          }
          function Wo(e, t) {
            return jo(2048, 8, e, t);
          }
          function qo(e, t) {
            return jo(4, 2, e, t);
          }
          function Yo(e, t) {
            return jo(4, 4, e, t);
          }
          function Xo(e, t) {
            return 'function' == typeof t
              ? ((e = e()),
                t(e),
                function () {
                  t(null);
                })
              : null != t
              ? ((e = e()),
                (t.current = e),
                function () {
                  t.current = null;
                })
              : void 0;
          }
          function $o(e, t, n) {
            return (n = null != n ? n.concat([e]) : null), jo(4, 4, Xo.bind(null, t, e), n);
          }
          function Qo() {}
          function Zo(e, t) {
            var n = Co();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && wo(t, r[1]) ? r[0] : ((n.memoizedState = [e, t]), e);
          }
          function Jo(e, t) {
            var n = Co();
            t = void 0 === t ? null : t;
            var r = n.memoizedState;
            return null !== r && null !== t && wo(t, r[1]) ? r[0] : ((e = e()), (n.memoizedState = [e, t]), e);
          }
          function es(e, t, n) {
            return 0 == (21 & mo) ? (e.baseState && ((e.baseState = !1), (Ss = !0)), (e.memoizedState = n)) : (ur(n, t) || ((n = gt()), (go.lanes |= n), (Bl |= n), (e.baseState = !0)), t);
          }
          function ts(e, t) {
            var n = Et;
            (Et = 0 !== n && 4 > n ? n : 4), e(!0);
            var r = vo.transition;
            vo.transition = {};
            try {
              e(!1), t();
            } finally {
              (Et = n), (vo.transition = r);
            }
          }
          function ns() {
            return Co().memoizedState;
          }
          function rs(e, t, n) {
            var r = ru(e);
            if (((n = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null }), as(e))) os(t, n);
            else if (null !== (n = xa(e, t, n, r))) {
              iu(n, e, r, nu()), ss(n, t, r);
            }
          }
          function is(e, t, n) {
            var r = ru(e),
              i = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
            if (as(e)) os(t, i);
            else {
              var a = e.alternate;
              if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = t.lastRenderedReducer))
                try {
                  var o = t.lastRenderedState,
                    s = a(o, n);
                  if (((i.hasEagerState = !0), (i.eagerState = s), ur(s, o))) {
                    var l = t.interleaved;
                    return null === l ? ((i.next = i), Ca(t)) : ((i.next = l.next), (l.next = i)), void (t.interleaved = i);
                  }
                } catch (e) {}
              null !== (n = xa(e, t, i, r)) && (iu(n, e, r, (i = nu())), ss(n, t, r));
            }
          }
          function as(e) {
            var t = e.alternate;
            return e === go || (null !== t && t === go);
          }
          function os(e, t) {
            Eo = bo = !0;
            var n = e.pending;
            null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)), (e.pending = t);
          }
          function ss(e, t, n) {
            if (0 != (4194240 & n)) {
              var r = t.lanes;
              (n |= r &= e.pendingLanes), (t.lanes = n), bt(e, n);
            }
          }
          var ls = {
              readContext: La,
              useCallback: To,
              useContext: To,
              useEffect: To,
              useImperativeHandle: To,
              useInsertionEffect: To,
              useLayoutEffect: To,
              useMemo: To,
              useReducer: To,
              useRef: To,
              useState: To,
              useDebugValue: To,
              useDeferredValue: To,
              useTransition: To,
              useMutableSource: To,
              useSyncExternalStore: To,
              useId: To,
              unstable_isNewReconciler: !1,
            },
            us = {
              readContext: La,
              useCallback: function (e, t) {
                return (Ro().memoizedState = [e, void 0 === t ? null : t]), e;
              },
              useContext: La,
              useEffect: Ko,
              useImperativeHandle: function (e, t, n) {
                return (n = null != n ? n.concat([e]) : null), Go(4194308, 4, Xo.bind(null, t, e), n);
              },
              useLayoutEffect: function (e, t) {
                return Go(4194308, 4, e, t);
              },
              useInsertionEffect: function (e, t) {
                return Go(4, 2, e, t);
              },
              useMemo: function (e, t) {
                var n = Ro();
                return (t = void 0 === t ? null : t), (e = e()), (n.memoizedState = [e, t]), e;
              },
              useReducer: function (e, t, n) {
                var r = Ro();
                return (
                  (t = void 0 !== n ? n(t) : t),
                  (r.memoizedState = r.baseState = t),
                  (e = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: e, lastRenderedState: t }),
                  (r.queue = e),
                  (e = e.dispatch = rs.bind(null, go, e)),
                  [r.memoizedState, e]
                );
              },
              useRef: function (e) {
                return (e = { current: e }), (Ro().memoizedState = e);
              },
              useState: zo,
              useDebugValue: Qo,
              useDeferredValue: function (e) {
                return (Ro().memoizedState = e);
              },
              useTransition: function () {
                var e = zo(!1),
                  t = e[0];
                return (e = ts.bind(null, e[1])), (Ro().memoizedState = e), [t, e];
              },
              useMutableSource: function () {},
              useSyncExternalStore: function (e, t, n) {
                var r = go,
                  i = Ro();
                if (oa) {
                  if (void 0 === n) throw Error(o(407));
                  n = n();
                } else {
                  if (((n = t()), null === Dl)) throw Error(o(349));
                  0 != (30 & mo) || Oo(r, t, n);
                }
                i.memoizedState = n;
                var a = { value: n, getSnapshot: t };
                return (i.queue = a), Ko(No.bind(null, r, a, e), [e]), (r.flags |= 2048), Ho(9, Fo.bind(null, r, a, n, t), void 0, null), n;
              },
              useId: function () {
                var e = Ro(),
                  t = Dl.identifierPrefix;
                if (oa) {
                  var n = Ji;
                  (t = ':' + t + 'R' + (n = (Zi & ~(1 << (32 - lt(Zi) - 1))).toString(32) + n)), 0 < (n = So++) && (t += 'H' + n.toString(32)), (t += ':');
                } else t = ':' + t + 'r' + (n = ko++).toString(32) + ':';
                return (e.memoizedState = t);
              },
              unstable_isNewReconciler: !1,
            },
            cs = {
              readContext: La,
              useCallback: Zo,
              useContext: La,
              useEffect: Wo,
              useImperativeHandle: $o,
              useInsertionEffect: qo,
              useLayoutEffect: Yo,
              useMemo: Jo,
              useReducer: Do,
              useRef: Vo,
              useState: function () {
                return Do(xo);
              },
              useDebugValue: Qo,
              useDeferredValue: function (e) {
                return es(Co(), yo.memoizedState, e);
              },
              useTransition: function () {
                return [Do(xo)[0], Co().memoizedState];
              },
              useMutableSource: Mo,
              useSyncExternalStore: Po,
              useId: ns,
              unstable_isNewReconciler: !1,
            },
            ds = {
              readContext: La,
              useCallback: Zo,
              useContext: La,
              useEffect: Wo,
              useImperativeHandle: $o,
              useInsertionEffect: qo,
              useLayoutEffect: Yo,
              useMemo: Jo,
              useReducer: Io,
              useRef: Vo,
              useState: function () {
                return Io(xo);
              },
              useDebugValue: Qo,
              useDeferredValue: function (e) {
                var t = Co();
                return null === yo ? (t.memoizedState = e) : es(t, yo.memoizedState, e);
              },
              useTransition: function () {
                return [Io(xo)[0], Co().memoizedState];
              },
              useMutableSource: Mo,
              useSyncExternalStore: Po,
              useId: ns,
              unstable_isNewReconciler: !1,
            };
          function fs(e, t) {
            try {
              var n = '',
                r = t;
              do {
                (n += G(r)), (r = r.return);
              } while (r);
              var i = n;
            } catch (e) {
              i = '\nError generating stack: ' + e.message + '\n' + e.stack;
            }
            return { value: e, source: t, stack: i, digest: null };
          }
          function hs(e, t, n) {
            return { value: e, source: null, stack: null != n ? n : null, digest: null != t ? t : null };
          }
          function ps(e, t) {
            try {
              console.error(t.value);
            } catch (e) {
              setTimeout(function () {
                throw e;
              });
            }
          }
          var vs = 'function' == typeof WeakMap ? WeakMap : Map;
          function ms(e, t, n) {
            ((n = Oa(-1, n)).tag = 3), (n.payload = { element: null });
            var r = t.value;
            return (
              (n.callback = function () {
                Wl || ((Wl = !0), (ql = r)), ps(0, t);
              }),
              n
            );
          }
          function gs(e, t, n) {
            (n = Oa(-1, n)).tag = 3;
            var r = e.type.getDerivedStateFromError;
            if ('function' == typeof r) {
              var i = t.value;
              (n.payload = function () {
                return r(i);
              }),
                (n.callback = function () {
                  ps(0, t);
                });
            }
            var a = e.stateNode;
            return (
              null !== a &&
                'function' == typeof a.componentDidCatch &&
                (n.callback = function () {
                  ps(0, t), 'function' != typeof r && (null === Yl ? (Yl = new Set([this])) : Yl.add(this));
                  var e = t.stack;
                  this.componentDidCatch(t.value, { componentStack: null !== e ? e : '' });
                }),
              n
            );
          }
          function ys(e, t, n) {
            var r = e.pingCache;
            if (null === r) {
              r = e.pingCache = new vs();
              var i = new Set();
              r.set(t, i);
            } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
            i.has(n) || (i.add(n), (e = Lu.bind(null, e, t, n)), t.then(e, e));
          }
          function _s(e) {
            do {
              var t;
              if (((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), t)) return e;
              e = e.return;
            } while (null !== e);
            return null;
          }
          function bs(e, t, n, r, i) {
            return 0 == (1 & e.mode)
              ? (e === t
                  ? (e.flags |= 65536)
                  : ((e.flags |= 128), (n.flags |= 131072), (n.flags &= -52805), 1 === n.tag && (null === n.alternate ? (n.tag = 17) : (((t = Oa(-1, 1)).tag = 2), Fa(n, t, 1))), (n.lanes |= 1)),
                e)
              : ((e.flags |= 65536), (e.lanes = i), e);
          }
          var Es = S.ReactCurrentOwner,
            Ss = !1;
          function ks(e, t, n, r) {
            t.child = null === e ? Ja(t, null, n, r) : Za(t, e.child, n, r);
          }
          function Ts(e, t, n, r, i) {
            n = n.render;
            var a = t.ref;
            return (
              Aa(t, i),
              (r = Ao(e, t, n, r, a, i)),
              (n = Lo()),
              null === e || Ss ? (oa && n && na(t), (t.flags |= 1), ks(e, t, r, i), t.child) : ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~i), Ws(e, t, i))
            );
          }
          function ws(e, t, n, r, i) {
            if (null === e) {
              var a = n.type;
              return 'function' != typeof a || Pu(a) || void 0 !== a.defaultProps || null !== n.compare || void 0 !== n.defaultProps
                ? (((e = Fu(n.type, null, r, t, t.mode, i)).ref = t.ref), (e.return = t), (t.child = e))
                : ((t.tag = 15), (t.type = a), As(e, t, a, r, i));
            }
            if (((a = e.child), 0 == (e.lanes & i))) {
              var o = a.memoizedProps;
              if ((n = null !== (n = n.compare) ? n : cr)(o, r) && e.ref === t.ref) return Ws(e, t, i);
            }
            return (t.flags |= 1), ((e = Ou(a, r)).ref = t.ref), (e.return = t), (t.child = e);
          }
          function As(e, t, n, r, i) {
            if (null !== e) {
              var a = e.memoizedProps;
              if (cr(a, r) && e.ref === t.ref) {
                if (((Ss = !1), (t.pendingProps = r = a), 0 == (e.lanes & i))) return (t.lanes = e.lanes), Ws(e, t, i);
                0 != (131072 & e.flags) && (Ss = !0);
              }
            }
            return Cs(e, t, n, r, i);
          }
          function Ls(e, t, n) {
            var r = t.pendingProps,
              i = r.children,
              a = null !== e ? e.memoizedState : null;
            if ('hidden' === r.mode)
              if (0 == (1 & t.mode)) (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), Ri(Ol, Pl), (Pl |= n);
              else {
                if (0 == (1073741824 & n))
                  return (
                    (e = null !== a ? a.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = { baseLanes: e, cachePool: null, transitions: null }),
                    (t.updateQueue = null),
                    Ri(Ol, Pl),
                    (Pl |= e),
                    null
                  );
                (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), (r = null !== a ? a.baseLanes : n), Ri(Ol, Pl), (Pl |= r);
              }
            else null !== a ? ((r = a.baseLanes | n), (t.memoizedState = null)) : (r = n), Ri(Ol, Pl), (Pl |= r);
            return ks(e, t, i, n), t.child;
          }
          function Rs(e, t) {
            var n = t.ref;
            ((null === e && null !== n) || (null !== e && e.ref !== n)) && ((t.flags |= 512), (t.flags |= 2097152));
          }
          function Cs(e, t, n, r, i) {
            var a = Pi(n) ? Ii : xi.current;
            return (
              (a = Mi(t, a)),
              Aa(t, i),
              (n = Ao(e, t, n, r, a, i)),
              (r = Lo()),
              null === e || Ss ? (oa && r && na(t), (t.flags |= 1), ks(e, t, n, i), t.child) : ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~i), Ws(e, t, i))
            );
          }
          function xs(e, t, n, i, a) {
            if (Pi(n)) {
              var o = !0;
              Bi(t);
            } else o = !1;
            if ((Aa(t, a), null === t.stateNode)) Ks(e, t), Ka(t, n, i), qa(t, n, i, a), (i = !0);
            else if (null === e) {
              var s = t.stateNode,
                l = t.memoizedProps;
              s.props = l;
              var u = s.context,
                c = n.contextType;
              'object' === r(c) && null !== c ? (c = La(c)) : (c = Mi(t, (c = Pi(n) ? Ii : xi.current)));
              var d = n.getDerivedStateFromProps,
                f = 'function' == typeof d || 'function' == typeof s.getSnapshotBeforeUpdate;
              f || ('function' != typeof s.UNSAFE_componentWillReceiveProps && 'function' != typeof s.componentWillReceiveProps) || ((l !== i || u !== c) && Wa(t, s, i, c)), (Ia = !1);
              var h = t.memoizedState;
              (s.state = h),
                Ua(t, i, s, a),
                (u = t.memoizedState),
                l !== i || h !== u || Di.current || Ia
                  ? ('function' == typeof d && (Va(t, n, d, i), (u = t.memoizedState)),
                    (l = Ia || ja(t, n, l, i, h, u, c))
                      ? (f ||
                          ('function' != typeof s.UNSAFE_componentWillMount && 'function' != typeof s.componentWillMount) ||
                          ('function' == typeof s.componentWillMount && s.componentWillMount(), 'function' == typeof s.UNSAFE_componentWillMount && s.UNSAFE_componentWillMount()),
                        'function' == typeof s.componentDidMount && (t.flags |= 4194308))
                      : ('function' == typeof s.componentDidMount && (t.flags |= 4194308), (t.memoizedProps = i), (t.memoizedState = u)),
                    (s.props = i),
                    (s.state = u),
                    (s.context = c),
                    (i = l))
                  : ('function' == typeof s.componentDidMount && (t.flags |= 4194308), (i = !1));
            } else {
              (s = t.stateNode),
                Pa(e, t),
                (l = t.memoizedProps),
                (c = t.type === t.elementType ? l : ya(t.type, l)),
                (s.props = c),
                (f = t.pendingProps),
                (h = s.context),
                (u = n.contextType),
                'object' === r(u) && null !== u ? (u = La(u)) : (u = Mi(t, (u = Pi(n) ? Ii : xi.current)));
              var p = n.getDerivedStateFromProps;
              (d = 'function' == typeof p || 'function' == typeof s.getSnapshotBeforeUpdate) ||
                ('function' != typeof s.UNSAFE_componentWillReceiveProps && 'function' != typeof s.componentWillReceiveProps) ||
                ((l !== f || h !== u) && Wa(t, s, i, u)),
                (Ia = !1),
                (h = t.memoizedState),
                (s.state = h),
                Ua(t, i, s, a);
              var v = t.memoizedState;
              l !== f || h !== v || Di.current || Ia
                ? ('function' == typeof p && (Va(t, n, p, i), (v = t.memoizedState)),
                  (c = Ia || ja(t, n, c, i, h, v, u) || !1)
                    ? (d ||
                        ('function' != typeof s.UNSAFE_componentWillUpdate && 'function' != typeof s.componentWillUpdate) ||
                        ('function' == typeof s.componentWillUpdate && s.componentWillUpdate(i, v, u), 'function' == typeof s.UNSAFE_componentWillUpdate && s.UNSAFE_componentWillUpdate(i, v, u)),
                      'function' == typeof s.componentDidUpdate && (t.flags |= 4),
                      'function' == typeof s.getSnapshotBeforeUpdate && (t.flags |= 1024))
                    : ('function' != typeof s.componentDidUpdate || (l === e.memoizedProps && h === e.memoizedState) || (t.flags |= 4),
                      'function' != typeof s.getSnapshotBeforeUpdate || (l === e.memoizedProps && h === e.memoizedState) || (t.flags |= 1024),
                      (t.memoizedProps = i),
                      (t.memoizedState = v)),
                  (s.props = i),
                  (s.state = v),
                  (s.context = u),
                  (i = c))
                : ('function' != typeof s.componentDidUpdate || (l === e.memoizedProps && h === e.memoizedState) || (t.flags |= 4),
                  'function' != typeof s.getSnapshotBeforeUpdate || (l === e.memoizedProps && h === e.memoizedState) || (t.flags |= 1024),
                  (i = !1));
            }
            return Ds(e, t, n, i, o, a);
          }
          function Ds(e, t, n, r, i, a) {
            Rs(e, t);
            var o = 0 != (128 & t.flags);
            if (!r && !o) return i && Ui(t, n, !1), Ws(e, t, a);
            (r = t.stateNode), (Es.current = t);
            var s = o && 'function' != typeof n.getDerivedStateFromError ? null : r.render();
            return (t.flags |= 1), null !== e && o ? ((t.child = Za(t, e.child, null, a)), (t.child = Za(t, null, s, a))) : ks(e, t, s, a), (t.memoizedState = r.state), i && Ui(t, n, !0), t.child;
          }
          function Is(e) {
            var t = e.stateNode;
            t.pendingContext ? Fi(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Fi(0, t.context, !1), ao(e, t.containerInfo);
          }
          function Ms(e, t, n, r, i) {
            return va(), ma(i), (t.flags |= 256), ks(e, t, n, r), t.child;
          }
          var Ps,
            Os,
            Fs,
            Ns = { dehydrated: null, treeContext: null, retryLane: 0 };
          function Bs(e) {
            return { baseLanes: e, cachePool: null, transitions: null };
          }
          function Us(e, t, n) {
            var r,
              i = t.pendingProps,
              a = uo.current,
              s = !1,
              l = 0 != (128 & t.flags);
            if (
              ((r = l) || (r = (null === e || null !== e.memoizedState) && 0 != (2 & a)),
              r ? ((s = !0), (t.flags &= -129)) : (null !== e && null === e.memoizedState) || (a |= 1),
              Ri(uo, 1 & a),
              null === e)
            )
              return (
                da(t),
                null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                  ? (0 == (1 & t.mode) ? (t.lanes = 1) : '$!' === e.data ? (t.lanes = 8) : (t.lanes = 1073741824), null)
                  : ((l = i.children),
                    (e = i.fallback),
                    s
                      ? ((i = t.mode),
                        (s = t.child),
                        (l = { mode: 'hidden', children: l }),
                        0 == (1 & i) && null !== s ? ((s.childLanes = 0), (s.pendingProps = l)) : (s = Bu(l, i, 0, null)),
                        (e = Nu(e, i, n, null)),
                        (s.return = t),
                        (e.return = t),
                        (s.sibling = e),
                        (t.child = s),
                        (t.child.memoizedState = Bs(n)),
                        (t.memoizedState = Ns),
                        e)
                      : zs(t, l))
              );
            if (null !== (a = e.memoizedState) && null !== (r = a.dehydrated))
              return (function (e, t, n, r, i, a, s) {
                if (n)
                  return 256 & t.flags
                    ? ((t.flags &= -257), Hs(e, t, s, (r = hs(Error(o(422))))))
                    : null !== t.memoizedState
                    ? ((t.child = e.child), (t.flags |= 128), null)
                    : ((a = r.fallback),
                      (i = t.mode),
                      (r = Bu({ mode: 'visible', children: r.children }, i, 0, null)),
                      ((a = Nu(a, i, s, null)).flags |= 2),
                      (r.return = t),
                      (a.return = t),
                      (r.sibling = a),
                      (t.child = r),
                      0 != (1 & t.mode) && Za(t, e.child, null, s),
                      (t.child.memoizedState = Bs(s)),
                      (t.memoizedState = Ns),
                      a);
                if (0 == (1 & t.mode)) return Hs(e, t, s, null);
                if ('$!' === i.data) {
                  if ((r = i.nextSibling && i.nextSibling.dataset)) var l = r.dgst;
                  return (r = l), Hs(e, t, s, (r = hs((a = Error(o(419))), r, void 0)));
                }
                if (((l = 0 != (s & e.childLanes)), Ss || l)) {
                  if (null !== (r = Dl)) {
                    switch (s & -s) {
                      case 4:
                        i = 2;
                        break;
                      case 16:
                        i = 8;
                        break;
                      case 64:
                      case 128:
                      case 256:
                      case 512:
                      case 1024:
                      case 2048:
                      case 4096:
                      case 8192:
                      case 16384:
                      case 32768:
                      case 65536:
                      case 131072:
                      case 262144:
                      case 524288:
                      case 1048576:
                      case 2097152:
                      case 4194304:
                      case 8388608:
                      case 16777216:
                      case 33554432:
                      case 67108864:
                        i = 32;
                        break;
                      case 536870912:
                        i = 268435456;
                        break;
                      default:
                        i = 0;
                    }
                    0 !== (i = 0 != (i & (r.suspendedLanes | s)) ? 0 : i) && i !== a.retryLane && ((a.retryLane = i), Da(e, i), iu(r, e, i, -1));
                  }
                  return gu(), Hs(e, t, s, (r = hs(Error(o(421)))));
                }
                return '$?' === i.data
                  ? ((t.flags |= 128), (t.child = e.child), (t = Cu.bind(null, e)), (i._reactRetry = t), null)
                  : ((e = a.treeContext),
                    (aa = di(i.nextSibling)),
                    (ia = t),
                    (oa = !0),
                    (sa = null),
                    null !== e && ((Xi[$i++] = Zi), (Xi[$i++] = Ji), (Xi[$i++] = Qi), (Zi = e.id), (Ji = e.overflow), (Qi = t)),
                    (t = zs(t, r.children)),
                    (t.flags |= 4096),
                    t);
              })(e, t, l, i, r, a, n);
            if (s) {
              (s = i.fallback), (l = t.mode), (r = (a = e.child).sibling);
              var u = { mode: 'hidden', children: i.children };
              return (
                0 == (1 & l) && t.child !== a ? (((i = t.child).childLanes = 0), (i.pendingProps = u), (t.deletions = null)) : ((i = Ou(a, u)).subtreeFlags = 14680064 & a.subtreeFlags),
                null !== r ? (s = Ou(r, s)) : ((s = Nu(s, l, n, null)).flags |= 2),
                (s.return = t),
                (i.return = t),
                (i.sibling = s),
                (t.child = i),
                (i = s),
                (s = t.child),
                (l = null === (l = e.child.memoizedState) ? Bs(n) : { baseLanes: l.baseLanes | n, cachePool: null, transitions: l.transitions }),
                (s.memoizedState = l),
                (s.childLanes = e.childLanes & ~n),
                (t.memoizedState = Ns),
                i
              );
            }
            return (
              (e = (s = e.child).sibling),
              (i = Ou(s, { mode: 'visible', children: i.children })),
              0 == (1 & t.mode) && (i.lanes = n),
              (i.return = t),
              (i.sibling = null),
              null !== e && (null === (n = t.deletions) ? ((t.deletions = [e]), (t.flags |= 16)) : n.push(e)),
              (t.child = i),
              (t.memoizedState = null),
              i
            );
          }
          function zs(e, t) {
            return ((t = Bu({ mode: 'visible', children: t }, e.mode, 0, null)).return = e), (e.child = t);
          }
          function Hs(e, t, n, r) {
            return null !== r && ma(r), Za(t, e.child, null, n), ((e = zs(t, t.pendingProps.children)).flags |= 2), (t.memoizedState = null), e;
          }
          function Vs(e, t, n) {
            e.lanes |= t;
            var r = e.alternate;
            null !== r && (r.lanes |= t), wa(e.return, t, n);
          }
          function Gs(e, t, n, r, i) {
            var a = e.memoizedState;
            null === a
              ? (e.memoizedState = { isBackwards: t, rendering: null, renderingStartTime: 0, last: r, tail: n, tailMode: i })
              : ((a.isBackwards = t), (a.rendering = null), (a.renderingStartTime = 0), (a.last = r), (a.tail = n), (a.tailMode = i));
          }
          function js(e, t, n) {
            var r = t.pendingProps,
              i = r.revealOrder,
              a = r.tail;
            if ((ks(e, t, r.children, n), 0 != (2 & (r = uo.current)))) (r = (1 & r) | 2), (t.flags |= 128);
            else {
              if (null !== e && 0 != (128 & e.flags))
                e: for (e = t.child; null !== e; ) {
                  if (13 === e.tag) null !== e.memoizedState && Vs(e, n, t);
                  else if (19 === e.tag) Vs(e, n, t);
                  else if (null !== e.child) {
                    (e.child.return = e), (e = e.child);
                    continue;
                  }
                  if (e === t) break e;
                  for (; null === e.sibling; ) {
                    if (null === e.return || e.return === t) break e;
                    e = e.return;
                  }
                  (e.sibling.return = e.return), (e = e.sibling);
                }
              r &= 1;
            }
            if ((Ri(uo, r), 0 == (1 & t.mode))) t.memoizedState = null;
            else
              switch (i) {
                case 'forwards':
                  for (n = t.child, i = null; null !== n; ) null !== (e = n.alternate) && null === co(e) && (i = n), (n = n.sibling);
                  null === (n = i) ? ((i = t.child), (t.child = null)) : ((i = n.sibling), (n.sibling = null)), Gs(t, !1, i, n, a);
                  break;
                case 'backwards':
                  for (n = null, i = t.child, t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === co(e)) {
                      t.child = i;
                      break;
                    }
                    (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                  }
                  Gs(t, !0, n, null, a);
                  break;
                case 'together':
                  Gs(t, !1, null, null, void 0);
                  break;
                default:
                  t.memoizedState = null;
              }
            return t.child;
          }
          function Ks(e, t) {
            0 == (1 & t.mode) && null !== e && ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
          }
          function Ws(e, t, n) {
            if ((null !== e && (t.dependencies = e.dependencies), (Bl |= t.lanes), 0 == (n & t.childLanes))) return null;
            if (null !== e && t.child !== e.child) throw Error(o(153));
            if (null !== t.child) {
              for (n = Ou((e = t.child), e.pendingProps), t.child = n, n.return = t; null !== e.sibling; ) (e = e.sibling), ((n = n.sibling = Ou(e, e.pendingProps)).return = t);
              n.sibling = null;
            }
            return t.child;
          }
          function qs(e, t) {
            if (!oa)
              switch (e.tailMode) {
                case 'hidden':
                  t = e.tail;
                  for (var n = null; null !== t; ) null !== t.alternate && (n = t), (t = t.sibling);
                  null === n ? (e.tail = null) : (n.sibling = null);
                  break;
                case 'collapsed':
                  n = e.tail;
                  for (var r = null; null !== n; ) null !== n.alternate && (r = n), (n = n.sibling);
                  null === r ? (t || null === e.tail ? (e.tail = null) : (e.tail.sibling = null)) : (r.sibling = null);
              }
          }
          function Ys(e) {
            var t = null !== e.alternate && e.alternate.child === e.child,
              n = 0,
              r = 0;
            if (t) for (var i = e.child; null !== i; ) (n |= i.lanes | i.childLanes), (r |= 14680064 & i.subtreeFlags), (r |= 14680064 & i.flags), (i.return = e), (i = i.sibling);
            else for (i = e.child; null !== i; ) (n |= i.lanes | i.childLanes), (r |= i.subtreeFlags), (r |= i.flags), (i.return = e), (i = i.sibling);
            return (e.subtreeFlags |= r), (e.childLanes = n), t;
          }
          function Xs(e, t, n) {
            var r = t.pendingProps;
            switch ((ra(t), t.tag)) {
              case 2:
              case 16:
              case 15:
              case 0:
              case 11:
              case 7:
              case 8:
              case 12:
              case 9:
              case 14:
                return Ys(t), null;
              case 1:
              case 17:
                return Pi(t.type) && Oi(), Ys(t), null;
              case 3:
                return (
                  (r = t.stateNode),
                  oo(),
                  Li(Di),
                  Li(xi),
                  ho(),
                  r.pendingContext && ((r.context = r.pendingContext), (r.pendingContext = null)),
                  (null !== e && null !== e.child) ||
                    (ha(t) ? (t.flags |= 4) : null === e || (e.memoizedState.isDehydrated && 0 == (256 & t.flags)) || ((t.flags |= 1024), null !== sa && (lu(sa), (sa = null)))),
                  Ys(t),
                  null
                );
              case 5:
                lo(t);
                var i = io(ro.current);
                if (((n = t.type), null !== e && null != t.stateNode)) Os(e, t, n, r), e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                else {
                  if (!r) {
                    if (null === t.stateNode) throw Error(o(166));
                    return Ys(t), null;
                  }
                  if (((e = io(to.current)), ha(t))) {
                    (r = t.stateNode), (n = t.type);
                    var a = t.memoizedProps;
                    switch (((r[pi] = t), (r[vi] = a), (e = 0 != (1 & t.mode)), n)) {
                      case 'dialog':
                        Hr('cancel', r), Hr('close', r);
                        break;
                      case 'iframe':
                      case 'object':
                      case 'embed':
                        Hr('load', r);
                        break;
                      case 'video':
                      case 'audio':
                        for (i = 0; i < Nr.length; i++) Hr(Nr[i], r);
                        break;
                      case 'source':
                        Hr('error', r);
                        break;
                      case 'img':
                      case 'image':
                      case 'link':
                        Hr('error', r), Hr('load', r);
                        break;
                      case 'details':
                        Hr('toggle', r);
                        break;
                      case 'input':
                        Z(r, a), Hr('invalid', r);
                        break;
                      case 'select':
                        (r._wrapperState = { wasMultiple: !!a.multiple }), Hr('invalid', r);
                        break;
                      case 'textarea':
                        oe(r, a), Hr('invalid', r);
                    }
                    for (var s in (be(n, a), (i = null), a))
                      if (a.hasOwnProperty(s)) {
                        var u = a[s];
                        'children' === s
                          ? 'string' == typeof u
                            ? r.textContent !== u && (!0 !== a.suppressHydrationWarning && ei(r.textContent, u, e), (i = ['children', u]))
                            : 'number' == typeof u && r.textContent !== '' + u && (!0 !== a.suppressHydrationWarning && ei(r.textContent, u, e), (i = ['children', '' + u]))
                          : l.hasOwnProperty(s) && null != u && 'onScroll' === s && Hr('scroll', r);
                      }
                    switch (n) {
                      case 'input':
                        Y(r), te(r, a, !0);
                        break;
                      case 'textarea':
                        Y(r), le(r);
                        break;
                      case 'select':
                      case 'option':
                        break;
                      default:
                        'function' == typeof a.onClick && (r.onclick = ti);
                    }
                    (r = i), (t.updateQueue = r), null !== r && (t.flags |= 4);
                  } else {
                    (s = 9 === i.nodeType ? i : i.ownerDocument),
                      'http://www.w3.org/1999/xhtml' === e && (e = ue(n)),
                      'http://www.w3.org/1999/xhtml' === e
                        ? 'script' === n
                          ? (((e = s.createElement('div')).innerHTML = '<script></script>'), (e = e.removeChild(e.firstChild)))
                          : 'string' == typeof r.is
                          ? (e = s.createElement(n, { is: r.is }))
                          : ((e = s.createElement(n)), 'select' === n && ((s = e), r.multiple ? (s.multiple = !0) : r.size && (s.size = r.size)))
                        : (e = s.createElementNS(e, n)),
                      (e[pi] = t),
                      (e[vi] = r),
                      Ps(e, t),
                      (t.stateNode = e);
                    e: {
                      switch (((s = Ee(n, r)), n)) {
                        case 'dialog':
                          Hr('cancel', e), Hr('close', e), (i = r);
                          break;
                        case 'iframe':
                        case 'object':
                        case 'embed':
                          Hr('load', e), (i = r);
                          break;
                        case 'video':
                        case 'audio':
                          for (i = 0; i < Nr.length; i++) Hr(Nr[i], e);
                          i = r;
                          break;
                        case 'source':
                          Hr('error', e), (i = r);
                          break;
                        case 'img':
                        case 'image':
                        case 'link':
                          Hr('error', e), Hr('load', e), (i = r);
                          break;
                        case 'details':
                          Hr('toggle', e), (i = r);
                          break;
                        case 'input':
                          Z(e, r), (i = Q(e, r)), Hr('invalid', e);
                          break;
                        case 'option':
                        default:
                          i = r;
                          break;
                        case 'select':
                          (e._wrapperState = { wasMultiple: !!r.multiple }), (i = U({}, r, { value: void 0 })), Hr('invalid', e);
                          break;
                        case 'textarea':
                          oe(e, r), (i = ae(e, r)), Hr('invalid', e);
                      }
                      for (a in (be(n, i), (u = i)))
                        if (u.hasOwnProperty(a)) {
                          var c = u[a];
                          'style' === a
                            ? ye(e, c)
                            : 'dangerouslySetInnerHTML' === a
                            ? null != (c = c ? c.__html : void 0) && he(e, c)
                            : 'children' === a
                            ? 'string' == typeof c
                              ? ('textarea' !== n || '' !== c) && pe(e, c)
                              : 'number' == typeof c && pe(e, '' + c)
                            : 'suppressContentEditableWarning' !== a &&
                              'suppressHydrationWarning' !== a &&
                              'autoFocus' !== a &&
                              (l.hasOwnProperty(a) ? null != c && 'onScroll' === a && Hr('scroll', e) : null != c && E(e, a, c, s));
                        }
                      switch (n) {
                        case 'input':
                          Y(e), te(e, r, !1);
                          break;
                        case 'textarea':
                          Y(e), le(e);
                          break;
                        case 'option':
                          null != r.value && e.setAttribute('value', '' + W(r.value));
                          break;
                        case 'select':
                          (e.multiple = !!r.multiple), null != (a = r.value) ? ie(e, !!r.multiple, a, !1) : null != r.defaultValue && ie(e, !!r.multiple, r.defaultValue, !0);
                          break;
                        default:
                          'function' == typeof i.onClick && (e.onclick = ti);
                      }
                      switch (n) {
                        case 'button':
                        case 'input':
                        case 'select':
                        case 'textarea':
                          r = !!r.autoFocus;
                          break e;
                        case 'img':
                          r = !0;
                          break e;
                        default:
                          r = !1;
                      }
                    }
                    r && (t.flags |= 4);
                  }
                  null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
                }
                return Ys(t), null;
              case 6:
                if (e && null != t.stateNode) Fs(0, t, e.memoizedProps, r);
                else {
                  if ('string' != typeof r && null === t.stateNode) throw Error(o(166));
                  if (((n = io(ro.current)), io(to.current), ha(t))) {
                    if (((r = t.stateNode), (n = t.memoizedProps), (r[pi] = t), (a = r.nodeValue !== n) && null !== (e = ia)))
                      switch (e.tag) {
                        case 3:
                          ei(r.nodeValue, n, 0 != (1 & e.mode));
                          break;
                        case 5:
                          !0 !== e.memoizedProps.suppressHydrationWarning && ei(r.nodeValue, n, 0 != (1 & e.mode));
                      }
                    a && (t.flags |= 4);
                  } else ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[pi] = t), (t.stateNode = r);
                }
                return Ys(t), null;
              case 13:
                if ((Li(uo), (r = t.memoizedState), null === e || (null !== e.memoizedState && null !== e.memoizedState.dehydrated))) {
                  if (oa && null !== aa && 0 != (1 & t.mode) && 0 == (128 & t.flags)) pa(), va(), (t.flags |= 98560), (a = !1);
                  else if (((a = ha(t)), null !== r && null !== r.dehydrated)) {
                    if (null === e) {
                      if (!a) throw Error(o(318));
                      if (!(a = null !== (a = t.memoizedState) ? a.dehydrated : null)) throw Error(o(317));
                      a[pi] = t;
                    } else va(), 0 == (128 & t.flags) && (t.memoizedState = null), (t.flags |= 4);
                    Ys(t), (a = !1);
                  } else null !== sa && (lu(sa), (sa = null)), (a = !0);
                  if (!a) return 65536 & t.flags ? t : null;
                }
                return 0 != (128 & t.flags)
                  ? ((t.lanes = n), t)
                  : ((r = null !== r) !== (null !== e && null !== e.memoizedState) &&
                      r &&
                      ((t.child.flags |= 8192), 0 != (1 & t.mode) && (null === e || 0 != (1 & uo.current) ? 0 === Fl && (Fl = 3) : gu())),
                    null !== t.updateQueue && (t.flags |= 4),
                    Ys(t),
                    null);
              case 4:
                return oo(), null === e && jr(t.stateNode.containerInfo), Ys(t), null;
              case 10:
                return Ta(t.type._context), Ys(t), null;
              case 19:
                if ((Li(uo), null === (a = t.memoizedState))) return Ys(t), null;
                if (((r = 0 != (128 & t.flags)), null === (s = a.rendering)))
                  if (r) qs(a, !1);
                  else {
                    if (0 !== Fl || (null !== e && 0 != (128 & e.flags)))
                      for (e = t.child; null !== e; ) {
                        if (null !== (s = co(e))) {
                          for (t.flags |= 128, qs(a, !1), null !== (r = s.updateQueue) && ((t.updateQueue = r), (t.flags |= 4)), t.subtreeFlags = 0, r = n, n = t.child; null !== n; )
                            (e = r),
                              ((a = n).flags &= 14680066),
                              null === (s = a.alternate)
                                ? ((a.childLanes = 0),
                                  (a.lanes = e),
                                  (a.child = null),
                                  (a.subtreeFlags = 0),
                                  (a.memoizedProps = null),
                                  (a.memoizedState = null),
                                  (a.updateQueue = null),
                                  (a.dependencies = null),
                                  (a.stateNode = null))
                                : ((a.childLanes = s.childLanes),
                                  (a.lanes = s.lanes),
                                  (a.child = s.child),
                                  (a.subtreeFlags = 0),
                                  (a.deletions = null),
                                  (a.memoizedProps = s.memoizedProps),
                                  (a.memoizedState = s.memoizedState),
                                  (a.updateQueue = s.updateQueue),
                                  (a.type = s.type),
                                  (e = s.dependencies),
                                  (a.dependencies = null === e ? null : { lanes: e.lanes, firstContext: e.firstContext })),
                              (n = n.sibling);
                          return Ri(uo, (1 & uo.current) | 2), t.child;
                        }
                        e = e.sibling;
                      }
                    null !== a.tail && Je() > jl && ((t.flags |= 128), (r = !0), qs(a, !1), (t.lanes = 4194304));
                  }
                else {
                  if (!r)
                    if (null !== (e = co(s))) {
                      if (
                        ((t.flags |= 128),
                        (r = !0),
                        null !== (n = e.updateQueue) && ((t.updateQueue = n), (t.flags |= 4)),
                        qs(a, !0),
                        null === a.tail && 'hidden' === a.tailMode && !s.alternate && !oa)
                      )
                        return Ys(t), null;
                    } else 2 * Je() - a.renderingStartTime > jl && 1073741824 !== n && ((t.flags |= 128), (r = !0), qs(a, !1), (t.lanes = 4194304));
                  a.isBackwards ? ((s.sibling = t.child), (t.child = s)) : (null !== (n = a.last) ? (n.sibling = s) : (t.child = s), (a.last = s));
                }
                return null !== a.tail
                  ? ((t = a.tail), (a.rendering = t), (a.tail = t.sibling), (a.renderingStartTime = Je()), (t.sibling = null), (n = uo.current), Ri(uo, r ? (1 & n) | 2 : 1 & n), t)
                  : (Ys(t), null);
              case 22:
              case 23:
                return (
                  hu(),
                  (r = null !== t.memoizedState),
                  null !== e && (null !== e.memoizedState) !== r && (t.flags |= 8192),
                  r && 0 != (1 & t.mode) ? 0 != (1073741824 & Pl) && (Ys(t), 6 & t.subtreeFlags && (t.flags |= 8192)) : Ys(t),
                  null
                );
              case 24:
              case 25:
                return null;
            }
            throw Error(o(156, t.tag));
          }
          function $s(e, t) {
            switch ((ra(t), t.tag)) {
              case 1:
                return Pi(t.type) && Oi(), 65536 & (e = t.flags) ? ((t.flags = (-65537 & e) | 128), t) : null;
              case 3:
                return oo(), Li(Di), Li(xi), ho(), 0 != (65536 & (e = t.flags)) && 0 == (128 & e) ? ((t.flags = (-65537 & e) | 128), t) : null;
              case 5:
                return lo(t), null;
              case 13:
                if ((Li(uo), null !== (e = t.memoizedState) && null !== e.dehydrated)) {
                  if (null === t.alternate) throw Error(o(340));
                  va();
                }
                return 65536 & (e = t.flags) ? ((t.flags = (-65537 & e) | 128), t) : null;
              case 19:
                return Li(uo), null;
              case 4:
                return oo(), null;
              case 10:
                return Ta(t.type._context), null;
              case 22:
              case 23:
                return hu(), null;
              default:
                return null;
            }
          }
          (Ps = function (e, t) {
            for (var n = t.child; null !== n; ) {
              if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
              else if (4 !== n.tag && null !== n.child) {
                (n.child.return = n), (n = n.child);
                continue;
              }
              if (n === t) break;
              for (; null === n.sibling; ) {
                if (null === n.return || n.return === t) return;
                n = n.return;
              }
              (n.sibling.return = n.return), (n = n.sibling);
            }
          }),
            (Os = function (e, t, n, r) {
              var i = e.memoizedProps;
              if (i !== r) {
                (e = t.stateNode), io(to.current);
                var a,
                  o = null;
                switch (n) {
                  case 'input':
                    (i = Q(e, i)), (r = Q(e, r)), (o = []);
                    break;
                  case 'select':
                    (i = U({}, i, { value: void 0 })), (r = U({}, r, { value: void 0 })), (o = []);
                    break;
                  case 'textarea':
                    (i = ae(e, i)), (r = ae(e, r)), (o = []);
                    break;
                  default:
                    'function' != typeof i.onClick && 'function' == typeof r.onClick && (e.onclick = ti);
                }
                for (c in (be(n, r), (n = null), i))
                  if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c])
                    if ('style' === c) {
                      var s = i[c];
                      for (a in s) s.hasOwnProperty(a) && (n || (n = {}), (n[a] = ''));
                    } else
                      'dangerouslySetInnerHTML' !== c &&
                        'children' !== c &&
                        'suppressContentEditableWarning' !== c &&
                        'suppressHydrationWarning' !== c &&
                        'autoFocus' !== c &&
                        (l.hasOwnProperty(c) ? o || (o = []) : (o = o || []).push(c, null));
                for (c in r) {
                  var u = r[c];
                  if (((s = null != i ? i[c] : void 0), r.hasOwnProperty(c) && u !== s && (null != u || null != s)))
                    if ('style' === c)
                      if (s) {
                        for (a in s) !s.hasOwnProperty(a) || (u && u.hasOwnProperty(a)) || (n || (n = {}), (n[a] = ''));
                        for (a in u) u.hasOwnProperty(a) && s[a] !== u[a] && (n || (n = {}), (n[a] = u[a]));
                      } else n || (o || (o = []), o.push(c, n)), (n = u);
                    else
                      'dangerouslySetInnerHTML' === c
                        ? ((u = u ? u.__html : void 0), (s = s ? s.__html : void 0), null != u && s !== u && (o = o || []).push(c, u))
                        : 'children' === c
                        ? ('string' != typeof u && 'number' != typeof u) || (o = o || []).push(c, '' + u)
                        : 'suppressContentEditableWarning' !== c &&
                          'suppressHydrationWarning' !== c &&
                          (l.hasOwnProperty(c) ? (null != u && 'onScroll' === c && Hr('scroll', e), o || s === u || (o = [])) : (o = o || []).push(c, u));
                }
                n && (o = o || []).push('style', n);
                var c = o;
                (t.updateQueue = c) && (t.flags |= 4);
              }
            }),
            (Fs = function (e, t, n, r) {
              n !== r && (t.flags |= 4);
            });
          var Qs = !1,
            Zs = !1,
            Js = 'function' == typeof WeakSet ? WeakSet : Set,
            el = null;
          function tl(e, t) {
            var n = e.ref;
            if (null !== n)
              if ('function' == typeof n)
                try {
                  n(null);
                } catch (n) {
                  Au(e, t, n);
                }
              else n.current = null;
          }
          function nl(e, t, n) {
            try {
              n();
            } catch (n) {
              Au(e, t, n);
            }
          }
          var rl = !1;
          function il(e, t, n) {
            var r = t.updateQueue;
            if (null !== (r = null !== r ? r.lastEffect : null)) {
              var i = (r = r.next);
              do {
                if ((i.tag & e) === e) {
                  var a = i.destroy;
                  (i.destroy = void 0), void 0 !== a && nl(t, n, a);
                }
                i = i.next;
              } while (i !== r);
            }
          }
          function al(e, t) {
            if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
              var n = (t = t.next);
              do {
                if ((n.tag & e) === e) {
                  var r = n.create;
                  n.destroy = r();
                }
                n = n.next;
              } while (n !== t);
            }
          }
          function ol(e) {
            var t = e.ref;
            if (null !== t) {
              var n = e.stateNode;
              e.tag, (e = n), 'function' == typeof t ? t(e) : (t.current = e);
            }
          }
          function sl(e) {
            var t = e.alternate;
            null !== t && ((e.alternate = null), sl(t)),
              (e.child = null),
              (e.deletions = null),
              (e.sibling = null),
              5 === e.tag && null !== (t = e.stateNode) && (delete t[pi], delete t[vi], delete t[gi], delete t[yi], delete t[_i]),
              (e.stateNode = null),
              (e.return = null),
              (e.dependencies = null),
              (e.memoizedProps = null),
              (e.memoizedState = null),
              (e.pendingProps = null),
              (e.stateNode = null),
              (e.updateQueue = null);
          }
          function ll(e) {
            return 5 === e.tag || 3 === e.tag || 4 === e.tag;
          }
          function ul(e) {
            e: for (;;) {
              for (; null === e.sibling; ) {
                if (null === e.return || ll(e.return)) return null;
                e = e.return;
              }
              for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag; ) {
                if (2 & e.flags) continue e;
                if (null === e.child || 4 === e.tag) continue e;
                (e.child.return = e), (e = e.child);
              }
              if (!(2 & e.flags)) return e.stateNode;
            }
          }
          function cl(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r)
              (e = e.stateNode),
                t
                  ? 8 === n.nodeType
                    ? n.parentNode.insertBefore(e, t)
                    : n.insertBefore(e, t)
                  : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e), null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = ti));
            else if (4 !== r && null !== (e = e.child)) for (cl(e, t, n), e = e.sibling; null !== e; ) cl(e, t, n), (e = e.sibling);
          }
          function dl(e, t, n) {
            var r = e.tag;
            if (5 === r || 6 === r) (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
            else if (4 !== r && null !== (e = e.child)) for (dl(e, t, n), e = e.sibling; null !== e; ) dl(e, t, n), (e = e.sibling);
          }
          var fl = null,
            hl = !1;
          function pl(e, t, n) {
            for (n = n.child; null !== n; ) vl(e, t, n), (n = n.sibling);
          }
          function vl(e, t, n) {
            if (st && 'function' == typeof st.onCommitFiberUnmount)
              try {
                st.onCommitFiberUnmount(ot, n);
              } catch (e) {}
            switch (n.tag) {
              case 5:
                Zs || tl(n, t);
              case 6:
                var r = fl,
                  i = hl;
                (fl = null),
                  pl(e, t, n),
                  (hl = i),
                  null !== (fl = r) && (hl ? ((e = fl), (n = n.stateNode), 8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : fl.removeChild(n.stateNode));
                break;
              case 18:
                null !== fl && (hl ? ((e = fl), (n = n.stateNode), 8 === e.nodeType ? ci(e.parentNode, n) : 1 === e.nodeType && ci(e, n), jt(e)) : ci(fl, n.stateNode));
                break;
              case 4:
                (r = fl), (i = hl), (fl = n.stateNode.containerInfo), (hl = !0), pl(e, t, n), (fl = r), (hl = i);
                break;
              case 0:
              case 11:
              case 14:
              case 15:
                if (!Zs && null !== (r = n.updateQueue) && null !== (r = r.lastEffect)) {
                  i = r = r.next;
                  do {
                    var a = i,
                      o = a.destroy;
                    (a = a.tag), void 0 !== o && (0 != (2 & a) || 0 != (4 & a)) && nl(n, t, o), (i = i.next);
                  } while (i !== r);
                }
                pl(e, t, n);
                break;
              case 1:
                if (!Zs && (tl(n, t), 'function' == typeof (r = n.stateNode).componentWillUnmount))
                  try {
                    (r.props = n.memoizedProps), (r.state = n.memoizedState), r.componentWillUnmount();
                  } catch (e) {
                    Au(n, t, e);
                  }
                pl(e, t, n);
                break;
              case 21:
                pl(e, t, n);
                break;
              case 22:
                1 & n.mode ? ((Zs = (r = Zs) || null !== n.memoizedState), pl(e, t, n), (Zs = r)) : pl(e, t, n);
                break;
              default:
                pl(e, t, n);
            }
          }
          function ml(e) {
            var t = e.updateQueue;
            if (null !== t) {
              e.updateQueue = null;
              var n = e.stateNode;
              null === n && (n = e.stateNode = new Js()),
                t.forEach(function (t) {
                  var r = xu.bind(null, e, t);
                  n.has(t) || (n.add(t), t.then(r, r));
                });
            }
          }
          function gl(e, t) {
            var n = t.deletions;
            if (null !== n)
              for (var r = 0; r < n.length; r++) {
                var i = n[r];
                try {
                  var a = e,
                    s = t,
                    l = s;
                  e: for (; null !== l; ) {
                    switch (l.tag) {
                      case 5:
                        (fl = l.stateNode), (hl = !1);
                        break e;
                      case 3:
                      case 4:
                        (fl = l.stateNode.containerInfo), (hl = !0);
                        break e;
                    }
                    l = l.return;
                  }
                  if (null === fl) throw Error(o(160));
                  vl(a, s, i), (fl = null), (hl = !1);
                  var u = i.alternate;
                  null !== u && (u.return = null), (i.return = null);
                } catch (e) {
                  Au(i, t, e);
                }
              }
            if (12854 & t.subtreeFlags) for (t = t.child; null !== t; ) yl(t, e), (t = t.sibling);
          }
          function yl(e, t) {
            var n = e.alternate,
              r = e.flags;
            switch (e.tag) {
              case 0:
              case 11:
              case 14:
              case 15:
                if ((gl(t, e), _l(e), 4 & r)) {
                  try {
                    il(3, e, e.return), al(3, e);
                  } catch (t) {
                    Au(e, e.return, t);
                  }
                  try {
                    il(5, e, e.return);
                  } catch (t) {
                    Au(e, e.return, t);
                  }
                }
                break;
              case 1:
                gl(t, e), _l(e), 512 & r && null !== n && tl(n, n.return);
                break;
              case 5:
                if ((gl(t, e), _l(e), 512 & r && null !== n && tl(n, n.return), 32 & e.flags)) {
                  var i = e.stateNode;
                  try {
                    pe(i, '');
                  } catch (t) {
                    Au(e, e.return, t);
                  }
                }
                if (4 & r && null != (i = e.stateNode)) {
                  var a = e.memoizedProps,
                    s = null !== n ? n.memoizedProps : a,
                    l = e.type,
                    u = e.updateQueue;
                  if (((e.updateQueue = null), null !== u))
                    try {
                      'input' === l && 'radio' === a.type && null != a.name && J(i, a), Ee(l, s);
                      var c = Ee(l, a);
                      for (s = 0; s < u.length; s += 2) {
                        var d = u[s],
                          f = u[s + 1];
                        'style' === d ? ye(i, f) : 'dangerouslySetInnerHTML' === d ? he(i, f) : 'children' === d ? pe(i, f) : E(i, d, f, c);
                      }
                      switch (l) {
                        case 'input':
                          ee(i, a);
                          break;
                        case 'textarea':
                          se(i, a);
                          break;
                        case 'select':
                          var h = i._wrapperState.wasMultiple;
                          i._wrapperState.wasMultiple = !!a.multiple;
                          var p = a.value;
                          null != p
                            ? ie(i, !!a.multiple, p, !1)
                            : h !== !!a.multiple && (null != a.defaultValue ? ie(i, !!a.multiple, a.defaultValue, !0) : ie(i, !!a.multiple, a.multiple ? [] : '', !1));
                      }
                      i[vi] = a;
                    } catch (t) {
                      Au(e, e.return, t);
                    }
                }
                break;
              case 6:
                if ((gl(t, e), _l(e), 4 & r)) {
                  if (null === e.stateNode) throw Error(o(162));
                  (i = e.stateNode), (a = e.memoizedProps);
                  try {
                    i.nodeValue = a;
                  } catch (t) {
                    Au(e, e.return, t);
                  }
                }
                break;
              case 3:
                if ((gl(t, e), _l(e), 4 & r && null !== n && n.memoizedState.isDehydrated))
                  try {
                    jt(t.containerInfo);
                  } catch (t) {
                    Au(e, e.return, t);
                  }
                break;
              case 4:
              default:
                gl(t, e), _l(e);
                break;
              case 13:
                gl(t, e),
                  _l(e),
                  8192 & (i = e.child).flags && ((a = null !== i.memoizedState), (i.stateNode.isHidden = a), !a || (null !== i.alternate && null !== i.alternate.memoizedState) || (Gl = Je())),
                  4 & r && ml(e);
                break;
              case 22:
                if (((d = null !== n && null !== n.memoizedState), 1 & e.mode ? ((Zs = (c = Zs) || d), gl(t, e), (Zs = c)) : gl(t, e), _l(e), 8192 & r)) {
                  if (((c = null !== e.memoizedState), (e.stateNode.isHidden = c) && !d && 0 != (1 & e.mode)))
                    for (el = e, d = e.child; null !== d; ) {
                      for (f = el = d; null !== el; ) {
                        switch (((p = (h = el).child), h.tag)) {
                          case 0:
                          case 11:
                          case 14:
                          case 15:
                            il(4, h, h.return);
                            break;
                          case 1:
                            tl(h, h.return);
                            var v = h.stateNode;
                            if ('function' == typeof v.componentWillUnmount) {
                              (r = h), (n = h.return);
                              try {
                                (t = r), (v.props = t.memoizedProps), (v.state = t.memoizedState), v.componentWillUnmount();
                              } catch (e) {
                                Au(r, n, e);
                              }
                            }
                            break;
                          case 5:
                            tl(h, h.return);
                            break;
                          case 22:
                            if (null !== h.memoizedState) {
                              kl(f);
                              continue;
                            }
                        }
                        null !== p ? ((p.return = h), (el = p)) : kl(f);
                      }
                      d = d.sibling;
                    }
                  e: for (d = null, f = e; ; ) {
                    if (5 === f.tag) {
                      if (null === d) {
                        d = f;
                        try {
                          (i = f.stateNode),
                            c
                              ? 'function' == typeof (a = i.style).setProperty
                                ? a.setProperty('display', 'none', 'important')
                                : (a.display = 'none')
                              : ((l = f.stateNode), (s = null != (u = f.memoizedProps.style) && u.hasOwnProperty('display') ? u.display : null), (l.style.display = ge('display', s)));
                        } catch (t) {
                          Au(e, e.return, t);
                        }
                      }
                    } else if (6 === f.tag) {
                      if (null === d)
                        try {
                          f.stateNode.nodeValue = c ? '' : f.memoizedProps;
                        } catch (t) {
                          Au(e, e.return, t);
                        }
                    } else if (((22 !== f.tag && 23 !== f.tag) || null === f.memoizedState || f === e) && null !== f.child) {
                      (f.child.return = f), (f = f.child);
                      continue;
                    }
                    if (f === e) break e;
                    for (; null === f.sibling; ) {
                      if (null === f.return || f.return === e) break e;
                      d === f && (d = null), (f = f.return);
                    }
                    d === f && (d = null), (f.sibling.return = f.return), (f = f.sibling);
                  }
                }
                break;
              case 19:
                gl(t, e), _l(e), 4 & r && ml(e);
              case 21:
            }
          }
          function _l(e) {
            var t = e.flags;
            if (2 & t) {
              try {
                e: {
                  for (var n = e.return; null !== n; ) {
                    if (ll(n)) {
                      var r = n;
                      break e;
                    }
                    n = n.return;
                  }
                  throw Error(o(160));
                }
                switch (r.tag) {
                  case 5:
                    var i = r.stateNode;
                    32 & r.flags && (pe(i, ''), (r.flags &= -33)), dl(e, ul(e), i);
                    break;
                  case 3:
                  case 4:
                    var a = r.stateNode.containerInfo;
                    cl(e, ul(e), a);
                    break;
                  default:
                    throw Error(o(161));
                }
              } catch (t) {
                Au(e, e.return, t);
              }
              e.flags &= -3;
            }
            4096 & t && (e.flags &= -4097);
          }
          function bl(e, t, n) {
            (el = e), El(e, t, n);
          }
          function El(e, t, n) {
            for (var r = 0 != (1 & e.mode); null !== el; ) {
              var i = el,
                a = i.child;
              if (22 === i.tag && r) {
                var o = null !== i.memoizedState || Qs;
                if (!o) {
                  var s = i.alternate,
                    l = (null !== s && null !== s.memoizedState) || Zs;
                  s = Qs;
                  var u = Zs;
                  if (((Qs = o), (Zs = l) && !u)) for (el = i; null !== el; ) (l = (o = el).child), 22 === o.tag && null !== o.memoizedState ? Tl(i) : null !== l ? ((l.return = o), (el = l)) : Tl(i);
                  for (; null !== a; ) (el = a), El(a, t, n), (a = a.sibling);
                  (el = i), (Qs = s), (Zs = u);
                }
                Sl(e);
              } else 0 != (8772 & i.subtreeFlags) && null !== a ? ((a.return = i), (el = a)) : Sl(e);
            }
          }
          function Sl(e) {
            for (; null !== el; ) {
              var t = el;
              if (0 != (8772 & t.flags)) {
                var n = t.alternate;
                try {
                  if (0 != (8772 & t.flags))
                    switch (t.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Zs || al(5, t);
                        break;
                      case 1:
                        var r = t.stateNode;
                        if (4 & t.flags && !Zs)
                          if (null === n) r.componentDidMount();
                          else {
                            var i = t.elementType === t.type ? n.memoizedProps : ya(t.type, n.memoizedProps);
                            r.componentDidUpdate(i, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate);
                          }
                        var a = t.updateQueue;
                        null !== a && za(t, a, r);
                        break;
                      case 3:
                        var s = t.updateQueue;
                        if (null !== s) {
                          if (((n = null), null !== t.child))
                            switch (t.child.tag) {
                              case 5:
                              case 1:
                                n = t.child.stateNode;
                            }
                          za(t, s, n);
                        }
                        break;
                      case 5:
                        var l = t.stateNode;
                        if (null === n && 4 & t.flags) {
                          n = l;
                          var u = t.memoizedProps;
                          switch (t.type) {
                            case 'button':
                            case 'input':
                            case 'select':
                            case 'textarea':
                              u.autoFocus && n.focus();
                              break;
                            case 'img':
                              u.src && (n.src = u.src);
                          }
                        }
                        break;
                      case 6:
                      case 4:
                      case 12:
                      case 19:
                      case 17:
                      case 21:
                      case 22:
                      case 23:
                      case 25:
                        break;
                      case 13:
                        if (null === t.memoizedState) {
                          var c = t.alternate;
                          if (null !== c) {
                            var d = c.memoizedState;
                            if (null !== d) {
                              var f = d.dehydrated;
                              null !== f && jt(f);
                            }
                          }
                        }
                        break;
                      default:
                        throw Error(o(163));
                    }
                  Zs || (512 & t.flags && ol(t));
                } catch (e) {
                  Au(t, t.return, e);
                }
              }
              if (t === e) {
                el = null;
                break;
              }
              if (null !== (n = t.sibling)) {
                (n.return = t.return), (el = n);
                break;
              }
              el = t.return;
            }
          }
          function kl(e) {
            for (; null !== el; ) {
              var t = el;
              if (t === e) {
                el = null;
                break;
              }
              var n = t.sibling;
              if (null !== n) {
                (n.return = t.return), (el = n);
                break;
              }
              el = t.return;
            }
          }
          function Tl(e) {
            for (; null !== el; ) {
              var t = el;
              try {
                switch (t.tag) {
                  case 0:
                  case 11:
                  case 15:
                    var n = t.return;
                    try {
                      al(4, t);
                    } catch (e) {
                      Au(t, n, e);
                    }
                    break;
                  case 1:
                    var r = t.stateNode;
                    if ('function' == typeof r.componentDidMount) {
                      var i = t.return;
                      try {
                        r.componentDidMount();
                      } catch (e) {
                        Au(t, i, e);
                      }
                    }
                    var a = t.return;
                    try {
                      ol(t);
                    } catch (e) {
                      Au(t, a, e);
                    }
                    break;
                  case 5:
                    var o = t.return;
                    try {
                      ol(t);
                    } catch (e) {
                      Au(t, o, e);
                    }
                }
              } catch (e) {
                Au(t, t.return, e);
              }
              if (t === e) {
                el = null;
                break;
              }
              var s = t.sibling;
              if (null !== s) {
                (s.return = t.return), (el = s);
                break;
              }
              el = t.return;
            }
          }
          var wl,
            Al = Math.ceil,
            Ll = S.ReactCurrentDispatcher,
            Rl = S.ReactCurrentOwner,
            Cl = S.ReactCurrentBatchConfig,
            xl = 0,
            Dl = null,
            Il = null,
            Ml = 0,
            Pl = 0,
            Ol = Ai(0),
            Fl = 0,
            Nl = null,
            Bl = 0,
            Ul = 0,
            zl = 0,
            Hl = null,
            Vl = null,
            Gl = 0,
            jl = 1 / 0,
            Kl = null,
            Wl = !1,
            ql = null,
            Yl = null,
            Xl = !1,
            $l = null,
            Ql = 0,
            Zl = 0,
            Jl = null,
            eu = -1,
            tu = 0;
          function nu() {
            return 0 != (6 & xl) ? Je() : -1 !== eu ? eu : (eu = Je());
          }
          function ru(e) {
            return 0 == (1 & e.mode)
              ? 1
              : 0 != (2 & xl) && 0 !== Ml
              ? Ml & -Ml
              : null !== ga.transition
              ? (0 === tu && (tu = gt()), tu)
              : 0 !== (e = Et)
              ? e
              : (e = void 0 === (e = window.event) ? 16 : Zt(e.type));
          }
          function iu(e, t, n, r) {
            if (50 < Zl) throw ((Zl = 0), (Jl = null), Error(o(185)));
            _t(e, n, r),
              (0 != (2 & xl) && e === Dl) || (e === Dl && (0 == (2 & xl) && (Ul |= n), 4 === Fl && uu(e, Ml)), au(e, r), 1 === n && 0 === xl && 0 == (1 & t.mode) && ((jl = Je() + 500), Hi && ji()));
          }
          function au(e, t) {
            var n = e.callbackNode;
            !(function (e, t) {
              for (var n = e.suspendedLanes, r = e.pingedLanes, i = e.expirationTimes, a = e.pendingLanes; 0 < a; ) {
                var o = 31 - lt(a),
                  s = 1 << o,
                  l = i[o];
                -1 === l ? (0 != (s & n) && 0 == (s & r)) || (i[o] = vt(s, t)) : l <= t && (e.expiredLanes |= s), (a &= ~s);
              }
            })(e, t);
            var r = pt(e, e === Dl ? Ml : 0);
            if (0 === r) null !== n && $e(n), (e.callbackNode = null), (e.callbackPriority = 0);
            else if (((t = r & -r), e.callbackPriority !== t)) {
              if ((null != n && $e(n), 1 === t))
                0 === e.tag
                  ? (function (e) {
                      (Hi = !0), Gi(e);
                    })(cu.bind(null, e))
                  : Gi(cu.bind(null, e)),
                  li(function () {
                    0 == (6 & xl) && ji();
                  }),
                  (n = null);
              else {
                switch (St(r)) {
                  case 1:
                    n = tt;
                    break;
                  case 4:
                    n = nt;
                    break;
                  case 16:
                  default:
                    n = rt;
                    break;
                  case 536870912:
                    n = at;
                }
                n = Du(n, ou.bind(null, e));
              }
              (e.callbackPriority = t), (e.callbackNode = n);
            }
          }
          function ou(e, t) {
            if (((eu = -1), (tu = 0), 0 != (6 & xl))) throw Error(o(327));
            var n = e.callbackNode;
            if (Tu() && e.callbackNode !== n) return null;
            var r = pt(e, e === Dl ? Ml : 0);
            if (0 === r) return null;
            if (0 != (30 & r) || 0 != (r & e.expiredLanes) || t) t = yu(e, r);
            else {
              t = r;
              var i = xl;
              xl |= 2;
              var a = mu();
              for ((Dl === e && Ml === t) || ((Kl = null), (jl = Je() + 500), pu(e, t)); ; )
                try {
                  bu();
                  break;
                } catch (t) {
                  vu(e, t);
                }
              ka(), (Ll.current = a), (xl = i), null !== Il ? (t = 0) : ((Dl = null), (Ml = 0), (t = Fl));
            }
            if (0 !== t) {
              if ((2 === t && 0 !== (i = mt(e)) && ((r = i), (t = su(e, i))), 1 === t)) throw ((n = Nl), pu(e, 0), uu(e, r), au(e, Je()), n);
              if (6 === t) uu(e, r);
              else {
                if (
                  ((i = e.current.alternate),
                  0 == (30 & r) &&
                    !(function (e) {
                      for (var t = e; ; ) {
                        if (16384 & t.flags) {
                          var n = t.updateQueue;
                          if (null !== n && null !== (n = n.stores))
                            for (var r = 0; r < n.length; r++) {
                              var i = n[r],
                                a = i.getSnapshot;
                              i = i.value;
                              try {
                                if (!ur(a(), i)) return !1;
                              } catch (e) {
                                return !1;
                              }
                            }
                        }
                        if (((n = t.child), 16384 & t.subtreeFlags && null !== n)) (n.return = t), (t = n);
                        else {
                          if (t === e) break;
                          for (; null === t.sibling; ) {
                            if (null === t.return || t.return === e) return !0;
                            t = t.return;
                          }
                          (t.sibling.return = t.return), (t = t.sibling);
                        }
                      }
                      return !0;
                    })(i) &&
                    (2 === (t = yu(e, r)) && 0 !== (a = mt(e)) && ((r = a), (t = su(e, a))), 1 === t))
                )
                  throw ((n = Nl), pu(e, 0), uu(e, r), au(e, Je()), n);
                switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                  case 0:
                  case 1:
                    throw Error(o(345));
                  case 2:
                  case 5:
                    ku(e, Vl, Kl);
                    break;
                  case 3:
                    if ((uu(e, r), (130023424 & r) === r && 10 < (t = Gl + 500 - Je()))) {
                      if (0 !== pt(e, 0)) break;
                      if (((i = e.suspendedLanes) & r) !== r) {
                        nu(), (e.pingedLanes |= e.suspendedLanes & i);
                        break;
                      }
                      e.timeoutHandle = ai(ku.bind(null, e, Vl, Kl), t);
                      break;
                    }
                    ku(e, Vl, Kl);
                    break;
                  case 4:
                    if ((uu(e, r), (4194240 & r) === r)) break;
                    for (t = e.eventTimes, i = -1; 0 < r; ) {
                      var s = 31 - lt(r);
                      (a = 1 << s), (s = t[s]) > i && (i = s), (r &= ~a);
                    }
                    if (((r = i), 10 < (r = (120 > (r = Je() - r) ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * Al(r / 1960)) - r))) {
                      e.timeoutHandle = ai(ku.bind(null, e, Vl, Kl), r);
                      break;
                    }
                    ku(e, Vl, Kl);
                    break;
                  default:
                    throw Error(o(329));
                }
              }
            }
            return au(e, Je()), e.callbackNode === n ? ou.bind(null, e) : null;
          }
          function su(e, t) {
            var n = Hl;
            return e.current.memoizedState.isDehydrated && (pu(e, t).flags |= 256), 2 !== (e = yu(e, t)) && ((t = Vl), (Vl = n), null !== t && lu(t)), e;
          }
          function lu(e) {
            null === Vl ? (Vl = e) : Vl.push.apply(Vl, e);
          }
          function uu(e, t) {
            for (t &= ~zl, t &= ~Ul, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t; ) {
              var n = 31 - lt(t),
                r = 1 << n;
              (e[n] = -1), (t &= ~r);
            }
          }
          function cu(e) {
            if (0 != (6 & xl)) throw Error(o(327));
            Tu();
            var t = pt(e, 0);
            if (0 == (1 & t)) return au(e, Je()), null;
            var n = yu(e, t);
            if (0 !== e.tag && 2 === n) {
              var r = mt(e);
              0 !== r && ((t = r), (n = su(e, r)));
            }
            if (1 === n) throw ((n = Nl), pu(e, 0), uu(e, t), au(e, Je()), n);
            if (6 === n) throw Error(o(345));
            return (e.finishedWork = e.current.alternate), (e.finishedLanes = t), ku(e, Vl, Kl), au(e, Je()), null;
          }
          function du(e, t) {
            var n = xl;
            xl |= 1;
            try {
              return e(t);
            } finally {
              0 === (xl = n) && ((jl = Je() + 500), Hi && ji());
            }
          }
          function fu(e) {
            null !== $l && 0 === $l.tag && 0 == (6 & xl) && Tu();
            var t = xl;
            xl |= 1;
            var n = Cl.transition,
              r = Et;
            try {
              if (((Cl.transition = null), (Et = 1), e)) return e();
            } finally {
              (Et = r), (Cl.transition = n), 0 == (6 & (xl = t)) && ji();
            }
          }
          function hu() {
            (Pl = Ol.current), Li(Ol);
          }
          function pu(e, t) {
            (e.finishedWork = null), (e.finishedLanes = 0);
            var n = e.timeoutHandle;
            if ((-1 !== n && ((e.timeoutHandle = -1), oi(n)), null !== Il))
              for (n = Il.return; null !== n; ) {
                var r = n;
                switch ((ra(r), r.tag)) {
                  case 1:
                    null != (r = r.type.childContextTypes) && Oi();
                    break;
                  case 3:
                    oo(), Li(Di), Li(xi), ho();
                    break;
                  case 5:
                    lo(r);
                    break;
                  case 4:
                    oo();
                    break;
                  case 13:
                  case 19:
                    Li(uo);
                    break;
                  case 10:
                    Ta(r.type._context);
                    break;
                  case 22:
                  case 23:
                    hu();
                }
                n = n.return;
              }
            if (((Dl = e), (Il = e = Ou(e.current, null)), (Ml = Pl = t), (Fl = 0), (Nl = null), (zl = Ul = Bl = 0), (Vl = Hl = null), null !== Ra)) {
              for (t = 0; t < Ra.length; t++)
                if (null !== (r = (n = Ra[t]).interleaved)) {
                  n.interleaved = null;
                  var i = r.next,
                    a = n.pending;
                  if (null !== a) {
                    var o = a.next;
                    (a.next = i), (r.next = o);
                  }
                  n.pending = r;
                }
              Ra = null;
            }
            return e;
          }
          function vu(e, t) {
            for (;;) {
              var n = Il;
              try {
                if ((ka(), (po.current = ls), bo)) {
                  for (var i = go.memoizedState; null !== i; ) {
                    var a = i.queue;
                    null !== a && (a.pending = null), (i = i.next);
                  }
                  bo = !1;
                }
                if (((mo = 0), (_o = yo = go = null), (Eo = !1), (So = 0), (Rl.current = null), null === n || null === n.return)) {
                  (Fl = 1), (Nl = t), (Il = null);
                  break;
                }
                e: {
                  var s = e,
                    l = n.return,
                    u = n,
                    c = t;
                  if (((t = Ml), (u.flags |= 32768), null !== c && 'object' === r(c) && 'function' == typeof c.then)) {
                    var d = c,
                      f = u,
                      h = f.tag;
                    if (0 == (1 & f.mode) && (0 === h || 11 === h || 15 === h)) {
                      var p = f.alternate;
                      p ? ((f.updateQueue = p.updateQueue), (f.memoizedState = p.memoizedState), (f.lanes = p.lanes)) : ((f.updateQueue = null), (f.memoizedState = null));
                    }
                    var v = _s(l);
                    if (null !== v) {
                      (v.flags &= -257), bs(v, l, u, 0, t), 1 & v.mode && ys(s, d, t), (c = d);
                      var m = (t = v).updateQueue;
                      if (null === m) {
                        var g = new Set();
                        g.add(c), (t.updateQueue = g);
                      } else m.add(c);
                      break e;
                    }
                    if (0 == (1 & t)) {
                      ys(s, d, t), gu();
                      break e;
                    }
                    c = Error(o(426));
                  } else if (oa && 1 & u.mode) {
                    var y = _s(l);
                    if (null !== y) {
                      0 == (65536 & y.flags) && (y.flags |= 256), bs(y, l, u, 0, t), ma(fs(c, u));
                      break e;
                    }
                  }
                  (s = c = fs(c, u)), 4 !== Fl && (Fl = 2), null === Hl ? (Hl = [s]) : Hl.push(s), (s = l);
                  do {
                    switch (s.tag) {
                      case 3:
                        (s.flags |= 65536), (t &= -t), (s.lanes |= t), Ba(s, ms(0, c, t));
                        break e;
                      case 1:
                        u = c;
                        var _ = s.type,
                          b = s.stateNode;
                        if (0 == (128 & s.flags) && ('function' == typeof _.getDerivedStateFromError || (null !== b && 'function' == typeof b.componentDidCatch && (null === Yl || !Yl.has(b))))) {
                          (s.flags |= 65536), (t &= -t), (s.lanes |= t), Ba(s, gs(s, u, t));
                          break e;
                        }
                    }
                    s = s.return;
                  } while (null !== s);
                }
                Su(n);
              } catch (e) {
                (t = e), Il === n && null !== n && (Il = n = n.return);
                continue;
              }
              break;
            }
          }
          function mu() {
            var e = Ll.current;
            return (Ll.current = ls), null === e ? ls : e;
          }
          function gu() {
            (0 !== Fl && 3 !== Fl && 2 !== Fl) || (Fl = 4), null === Dl || (0 == (268435455 & Bl) && 0 == (268435455 & Ul)) || uu(Dl, Ml);
          }
          function yu(e, t) {
            var n = xl;
            xl |= 2;
            var r = mu();
            for ((Dl === e && Ml === t) || ((Kl = null), pu(e, t)); ; )
              try {
                _u();
                break;
              } catch (t) {
                vu(e, t);
              }
            if ((ka(), (xl = n), (Ll.current = r), null !== Il)) throw Error(o(261));
            return (Dl = null), (Ml = 0), Fl;
          }
          function _u() {
            for (; null !== Il; ) Eu(Il);
          }
          function bu() {
            for (; null !== Il && !Qe(); ) Eu(Il);
          }
          function Eu(e) {
            var t = wl(e.alternate, e, Pl);
            (e.memoizedProps = e.pendingProps), null === t ? Su(e) : (Il = t), (Rl.current = null);
          }
          function Su(e) {
            var t = e;
            do {
              var n = t.alternate;
              if (((e = t.return), 0 == (32768 & t.flags))) {
                if (null !== (n = Xs(n, t, Pl))) return void (Il = n);
              } else {
                if (null !== (n = $s(n, t))) return (n.flags &= 32767), void (Il = n);
                if (null === e) return (Fl = 6), void (Il = null);
                (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
              }
              if (null !== (t = t.sibling)) return void (Il = t);
              Il = t = e;
            } while (null !== t);
            0 === Fl && (Fl = 5);
          }
          function ku(e, t, n) {
            var r = Et,
              i = Cl.transition;
            try {
              (Cl.transition = null),
                (Et = 1),
                (function (e, t, n, r) {
                  do {
                    Tu();
                  } while (null !== $l);
                  if (0 != (6 & xl)) throw Error(o(327));
                  n = e.finishedWork;
                  var i = e.finishedLanes;
                  if (null === n) return null;
                  if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current)) throw Error(o(177));
                  (e.callbackNode = null), (e.callbackPriority = 0);
                  var a = n.lanes | n.childLanes;
                  if (
                    ((function (e, t) {
                      var n = e.pendingLanes & ~t;
                      (e.pendingLanes = t), (e.suspendedLanes = 0), (e.pingedLanes = 0), (e.expiredLanes &= t), (e.mutableReadLanes &= t), (e.entangledLanes &= t), (t = e.entanglements);
                      var r = e.eventTimes;
                      for (e = e.expirationTimes; 0 < n; ) {
                        var i = 31 - lt(n),
                          a = 1 << i;
                        (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~a);
                      }
                    })(e, a),
                    e === Dl && ((Il = Dl = null), (Ml = 0)),
                    (0 == (2064 & n.subtreeFlags) && 0 == (2064 & n.flags)) ||
                      Xl ||
                      ((Xl = !0),
                      Du(rt, function () {
                        return Tu(), null;
                      })),
                    (a = 0 != (15990 & n.flags)),
                    0 != (15990 & n.subtreeFlags) || a)
                  ) {
                    (a = Cl.transition), (Cl.transition = null);
                    var s = Et;
                    Et = 1;
                    var l = xl;
                    (xl |= 4),
                      (Rl.current = null),
                      (function (e, t) {
                        if (((ni = Wt), vr((e = pr())))) {
                          if ('selectionStart' in e) var n = { start: e.selectionStart, end: e.selectionEnd };
                          else
                            e: {
                              var r = (n = ((n = e.ownerDocument) && n.defaultView) || window).getSelection && n.getSelection();
                              if (r && 0 !== r.rangeCount) {
                                n = r.anchorNode;
                                var i = r.anchorOffset,
                                  a = r.focusNode;
                                r = r.focusOffset;
                                try {
                                  n.nodeType, a.nodeType;
                                } catch (e) {
                                  n = null;
                                  break e;
                                }
                                var s = 0,
                                  l = -1,
                                  u = -1,
                                  c = 0,
                                  d = 0,
                                  f = e,
                                  h = null;
                                t: for (;;) {
                                  for (
                                    var p;
                                    f !== n || (0 !== i && 3 !== f.nodeType) || (l = s + i),
                                      f !== a || (0 !== r && 3 !== f.nodeType) || (u = s + r),
                                      3 === f.nodeType && (s += f.nodeValue.length),
                                      null !== (p = f.firstChild);

                                  )
                                    (h = f), (f = p);
                                  for (;;) {
                                    if (f === e) break t;
                                    if ((h === n && ++c === i && (l = s), h === a && ++d === r && (u = s), null !== (p = f.nextSibling))) break;
                                    h = (f = h).parentNode;
                                  }
                                  f = p;
                                }
                                n = -1 === l || -1 === u ? null : { start: l, end: u };
                              } else n = null;
                            }
                          n = n || { start: 0, end: 0 };
                        } else n = null;
                        for (ri = { focusedElem: e, selectionRange: n }, Wt = !1, el = t; null !== el; )
                          if (((e = (t = el).child), 0 != (1028 & t.subtreeFlags) && null !== e)) (e.return = t), (el = e);
                          else
                            for (; null !== el; ) {
                              t = el;
                              try {
                                var v = t.alternate;
                                if (0 != (1024 & t.flags))
                                  switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                      break;
                                    case 1:
                                      if (null !== v) {
                                        var m = v.memoizedProps,
                                          g = v.memoizedState,
                                          y = t.stateNode,
                                          _ = y.getSnapshotBeforeUpdate(t.elementType === t.type ? m : ya(t.type, m), g);
                                        y.__reactInternalSnapshotBeforeUpdate = _;
                                      }
                                      break;
                                    case 3:
                                      var b = t.stateNode.containerInfo;
                                      1 === b.nodeType ? (b.textContent = '') : 9 === b.nodeType && b.documentElement && b.removeChild(b.documentElement);
                                      break;
                                    default:
                                      throw Error(o(163));
                                  }
                              } catch (e) {
                                Au(t, t.return, e);
                              }
                              if (null !== (e = t.sibling)) {
                                (e.return = t.return), (el = e);
                                break;
                              }
                              el = t.return;
                            }
                        (v = rl), (rl = !1);
                      })(e, n),
                      yl(n, e),
                      mr(ri),
                      (Wt = !!ni),
                      (ri = ni = null),
                      (e.current = n),
                      bl(n, e, i),
                      Ze(),
                      (xl = l),
                      (Et = s),
                      (Cl.transition = a);
                  } else e.current = n;
                  if (
                    (Xl && ((Xl = !1), ($l = e), (Ql = i)),
                    (a = e.pendingLanes),
                    0 === a && (Yl = null),
                    (function (e) {
                      if (st && 'function' == typeof st.onCommitFiberRoot)
                        try {
                          st.onCommitFiberRoot(ot, e, void 0, 128 == (128 & e.current.flags));
                        } catch (e) {}
                    })(n.stateNode),
                    au(e, Je()),
                    null !== t)
                  )
                    for (r = e.onRecoverableError, n = 0; n < t.length; n++) (i = t[n]), r(i.value, { componentStack: i.stack, digest: i.digest });
                  if (Wl) throw ((Wl = !1), (e = ql), (ql = null), e);
                  0 != (1 & Ql) && 0 !== e.tag && Tu(), (a = e.pendingLanes), 0 != (1 & a) ? (e === Jl ? Zl++ : ((Zl = 0), (Jl = e))) : (Zl = 0), ji();
                })(e, t, n, r);
            } finally {
              (Cl.transition = i), (Et = r);
            }
            return null;
          }
          function Tu() {
            if (null !== $l) {
              var e = St(Ql),
                t = Cl.transition,
                n = Et;
              try {
                if (((Cl.transition = null), (Et = 16 > e ? 16 : e), null === $l)) var r = !1;
                else {
                  if (((e = $l), ($l = null), (Ql = 0), 0 != (6 & xl))) throw Error(o(331));
                  var i = xl;
                  for (xl |= 4, el = e.current; null !== el; ) {
                    var a = el,
                      s = a.child;
                    if (0 != (16 & el.flags)) {
                      var l = a.deletions;
                      if (null !== l) {
                        for (var u = 0; u < l.length; u++) {
                          var c = l[u];
                          for (el = c; null !== el; ) {
                            var d = el;
                            switch (d.tag) {
                              case 0:
                              case 11:
                              case 15:
                                il(8, d, a);
                            }
                            var f = d.child;
                            if (null !== f) (f.return = d), (el = f);
                            else
                              for (; null !== el; ) {
                                var h = (d = el).sibling,
                                  p = d.return;
                                if ((sl(d), d === c)) {
                                  el = null;
                                  break;
                                }
                                if (null !== h) {
                                  (h.return = p), (el = h);
                                  break;
                                }
                                el = p;
                              }
                          }
                        }
                        var v = a.alternate;
                        if (null !== v) {
                          var m = v.child;
                          if (null !== m) {
                            v.child = null;
                            do {
                              var g = m.sibling;
                              (m.sibling = null), (m = g);
                            } while (null !== m);
                          }
                        }
                        el = a;
                      }
                    }
                    if (0 != (2064 & a.subtreeFlags) && null !== s) (s.return = a), (el = s);
                    else
                      e: for (; null !== el; ) {
                        if (0 != (2048 & (a = el).flags))
                          switch (a.tag) {
                            case 0:
                            case 11:
                            case 15:
                              il(9, a, a.return);
                          }
                        var y = a.sibling;
                        if (null !== y) {
                          (y.return = a.return), (el = y);
                          break e;
                        }
                        el = a.return;
                      }
                  }
                  var _ = e.current;
                  for (el = _; null !== el; ) {
                    var b = (s = el).child;
                    if (0 != (2064 & s.subtreeFlags) && null !== b) (b.return = s), (el = b);
                    else
                      e: for (s = _; null !== el; ) {
                        if (0 != (2048 & (l = el).flags))
                          try {
                            switch (l.tag) {
                              case 0:
                              case 11:
                              case 15:
                                al(9, l);
                            }
                          } catch (e) {
                            Au(l, l.return, e);
                          }
                        if (l === s) {
                          el = null;
                          break e;
                        }
                        var E = l.sibling;
                        if (null !== E) {
                          (E.return = l.return), (el = E);
                          break e;
                        }
                        el = l.return;
                      }
                  }
                  if (((xl = i), ji(), st && 'function' == typeof st.onPostCommitFiberRoot))
                    try {
                      st.onPostCommitFiberRoot(ot, e);
                    } catch (e) {}
                  r = !0;
                }
                return r;
              } finally {
                (Et = n), (Cl.transition = t);
              }
            }
            return !1;
          }
          function wu(e, t, n) {
            (e = Fa(e, (t = ms(0, (t = fs(n, t)), 1)), 1)), (t = nu()), null !== e && (_t(e, 1, t), au(e, t));
          }
          function Au(e, t, n) {
            if (3 === e.tag) wu(e, e, n);
            else
              for (; null !== t; ) {
                if (3 === t.tag) {
                  wu(t, e, n);
                  break;
                }
                if (1 === t.tag) {
                  var r = t.stateNode;
                  if ('function' == typeof t.type.getDerivedStateFromError || ('function' == typeof r.componentDidCatch && (null === Yl || !Yl.has(r)))) {
                    (t = Fa(t, (e = gs(t, (e = fs(n, e)), 1)), 1)), (e = nu()), null !== t && (_t(t, 1, e), au(t, e));
                    break;
                  }
                }
                t = t.return;
              }
          }
          function Lu(e, t, n) {
            var r = e.pingCache;
            null !== r && r.delete(t),
              (t = nu()),
              (e.pingedLanes |= e.suspendedLanes & n),
              Dl === e && (Ml & n) === n && (4 === Fl || (3 === Fl && (130023424 & Ml) === Ml && 500 > Je() - Gl) ? pu(e, 0) : (zl |= n)),
              au(e, t);
          }
          function Ru(e, t) {
            0 === t && (0 == (1 & e.mode) ? (t = 1) : ((t = ft), 0 == (130023424 & (ft <<= 1)) && (ft = 4194304)));
            var n = nu();
            null !== (e = Da(e, t)) && (_t(e, t, n), au(e, n));
          }
          function Cu(e) {
            var t = e.memoizedState,
              n = 0;
            null !== t && (n = t.retryLane), Ru(e, n);
          }
          function xu(e, t) {
            var n = 0;
            switch (e.tag) {
              case 13:
                var r = e.stateNode,
                  i = e.memoizedState;
                null !== i && (n = i.retryLane);
                break;
              case 19:
                r = e.stateNode;
                break;
              default:
                throw Error(o(314));
            }
            null !== r && r.delete(t), Ru(e, n);
          }
          function Du(e, t) {
            return Xe(e, t);
          }
          function Iu(e, t, n, r) {
            (this.tag = e),
              (this.key = n),
              (this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null),
              (this.index = 0),
              (this.ref = null),
              (this.pendingProps = t),
              (this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null),
              (this.mode = r),
              (this.subtreeFlags = this.flags = 0),
              (this.deletions = null),
              (this.childLanes = this.lanes = 0),
              (this.alternate = null);
          }
          function Mu(e, t, n, r) {
            return new Iu(e, t, n, r);
          }
          function Pu(e) {
            return !(!(e = e.prototype) || !e.isReactComponent);
          }
          function Ou(e, t) {
            var n = e.alternate;
            return (
              null === n
                ? (((n = Mu(e.tag, t, e.key, e.mode)).elementType = e.elementType), (n.type = e.type), (n.stateNode = e.stateNode), (n.alternate = e), (e.alternate = n))
                : ((n.pendingProps = t), (n.type = e.type), (n.flags = 0), (n.subtreeFlags = 0), (n.deletions = null)),
              (n.flags = 14680064 & e.flags),
              (n.childLanes = e.childLanes),
              (n.lanes = e.lanes),
              (n.child = e.child),
              (n.memoizedProps = e.memoizedProps),
              (n.memoizedState = e.memoizedState),
              (n.updateQueue = e.updateQueue),
              (t = e.dependencies),
              (n.dependencies = null === t ? null : { lanes: t.lanes, firstContext: t.firstContext }),
              (n.sibling = e.sibling),
              (n.index = e.index),
              (n.ref = e.ref),
              n
            );
          }
          function Fu(e, t, n, i, a, s) {
            var l = 2;
            if (((i = e), 'function' == typeof e)) Pu(e) && (l = 1);
            else if ('string' == typeof e) l = 5;
            else
              e: switch (e) {
                case w:
                  return Nu(n.children, a, s, t);
                case A:
                  (l = 8), (a |= 8);
                  break;
                case L:
                  return ((e = Mu(12, n, t, 2 | a)).elementType = L), (e.lanes = s), e;
                case D:
                  return ((e = Mu(13, n, t, a)).elementType = D), (e.lanes = s), e;
                case I:
                  return ((e = Mu(19, n, t, a)).elementType = I), (e.lanes = s), e;
                case O:
                  return Bu(n, a, s, t);
                default:
                  if ('object' === r(e) && null !== e)
                    switch (e.$$typeof) {
                      case R:
                        l = 10;
                        break e;
                      case C:
                        l = 9;
                        break e;
                      case x:
                        l = 11;
                        break e;
                      case M:
                        l = 14;
                        break e;
                      case P:
                        (l = 16), (i = null);
                        break e;
                    }
                  throw Error(o(130, null == e ? e : r(e), ''));
              }
            return ((t = Mu(l, n, t, a)).elementType = e), (t.type = i), (t.lanes = s), t;
          }
          function Nu(e, t, n, r) {
            return ((e = Mu(7, e, r, t)).lanes = n), e;
          }
          function Bu(e, t, n, r) {
            return ((e = Mu(22, e, r, t)).elementType = O), (e.lanes = n), (e.stateNode = { isHidden: !1 }), e;
          }
          function Uu(e, t, n) {
            return ((e = Mu(6, e, null, t)).lanes = n), e;
          }
          function zu(e, t, n) {
            return (
              ((t = Mu(4, null !== e.children ? e.children : [], e.key, t)).lanes = n), (t.stateNode = { containerInfo: e.containerInfo, pendingChildren: null, implementation: e.implementation }), t
            );
          }
          function Hu(e, t, n, r, i) {
            (this.tag = t),
              (this.containerInfo = e),
              (this.finishedWork = this.pingCache = this.current = this.pendingChildren = null),
              (this.timeoutHandle = -1),
              (this.callbackNode = this.pendingContext = this.context = null),
              (this.callbackPriority = 0),
              (this.eventTimes = yt(0)),
              (this.expirationTimes = yt(-1)),
              (this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0),
              (this.entanglements = yt(0)),
              (this.identifierPrefix = r),
              (this.onRecoverableError = i),
              (this.mutableSourceEagerHydrationData = null);
          }
          function Vu(e, t, n, r, i, a, o, s, l) {
            return (
              (e = new Hu(e, t, n, s, l)),
              1 === t ? ((t = 1), !0 === a && (t |= 8)) : (t = 0),
              (a = Mu(3, null, null, t)),
              (e.current = a),
              (a.stateNode = e),
              (a.memoizedState = { element: r, isDehydrated: n, cache: null, transitions: null, pendingSuspenseBoundaries: null }),
              Ma(a),
              e
            );
          }
          function Gu(e, t, n) {
            var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
            return { $$typeof: T, key: null == r ? null : '' + r, children: e, containerInfo: t, implementation: n };
          }
          function ju(e) {
            if (!e) return Ci;
            e: {
              if (je((e = e._reactInternals)) !== e || 1 !== e.tag) throw Error(o(170));
              var t = e;
              do {
                switch (t.tag) {
                  case 3:
                    t = t.stateNode.context;
                    break e;
                  case 1:
                    if (Pi(t.type)) {
                      t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                      break e;
                    }
                }
                t = t.return;
              } while (null !== t);
              throw Error(o(171));
            }
            if (1 === e.tag) {
              var n = e.type;
              if (Pi(n)) return Ni(e, n, t);
            }
            return t;
          }
          function Ku(e, t, n, r, i, a, o, s, l) {
            return (
              ((e = Vu(n, r, !0, e, 0, a, 0, s, l)).context = ju(null)),
              (n = e.current),
              ((a = Oa((r = nu()), (i = ru(n)))).callback = null != t ? t : null),
              Fa(n, a, i),
              (e.current.lanes = i),
              _t(e, i, r),
              au(e, r),
              e
            );
          }
          function Wu(e, t, n, r) {
            var i = t.current,
              a = nu(),
              o = ru(i);
            return (
              (n = ju(n)),
              null === t.context ? (t.context = n) : (t.pendingContext = n),
              ((t = Oa(a, o)).payload = { element: e }),
              null !== (r = void 0 === r ? null : r) && (t.callback = r),
              null !== (e = Fa(i, t, o)) && (iu(e, i, o, a), Na(e, i, o)),
              o
            );
          }
          function qu(e) {
            return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null;
          }
          function Yu(e, t) {
            if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
              var n = e.retryLane;
              e.retryLane = 0 !== n && n < t ? n : t;
            }
          }
          function Xu(e, t) {
            Yu(e, t), (e = e.alternate) && Yu(e, t);
          }
          wl = function (e, t, n) {
            if (null !== e)
              if (e.memoizedProps !== t.pendingProps || Di.current) Ss = !0;
              else {
                if (0 == (e.lanes & n) && 0 == (128 & t.flags))
                  return (
                    (Ss = !1),
                    (function (e, t, n) {
                      switch (t.tag) {
                        case 3:
                          Is(t), va();
                          break;
                        case 5:
                          so(t);
                          break;
                        case 1:
                          Pi(t.type) && Bi(t);
                          break;
                        case 4:
                          ao(t, t.stateNode.containerInfo);
                          break;
                        case 10:
                          var r = t.type._context,
                            i = t.memoizedProps.value;
                          Ri(_a, r._currentValue), (r._currentValue = i);
                          break;
                        case 13:
                          if (null !== (r = t.memoizedState))
                            return null !== r.dehydrated
                              ? (Ri(uo, 1 & uo.current), (t.flags |= 128), null)
                              : 0 != (n & t.child.childLanes)
                              ? Us(e, t, n)
                              : (Ri(uo, 1 & uo.current), null !== (e = Ws(e, t, n)) ? e.sibling : null);
                          Ri(uo, 1 & uo.current);
                          break;
                        case 19:
                          if (((r = 0 != (n & t.childLanes)), 0 != (128 & e.flags))) {
                            if (r) return js(e, t, n);
                            t.flags |= 128;
                          }
                          if ((null !== (i = t.memoizedState) && ((i.rendering = null), (i.tail = null), (i.lastEffect = null)), Ri(uo, uo.current), r)) break;
                          return null;
                        case 22:
                        case 23:
                          return (t.lanes = 0), Ls(e, t, n);
                      }
                      return Ws(e, t, n);
                    })(e, t, n)
                  );
                Ss = 0 != (131072 & e.flags);
              }
            else (Ss = !1), oa && 0 != (1048576 & t.flags) && ta(t, Yi, t.index);
            switch (((t.lanes = 0), t.tag)) {
              case 2:
                var i = t.type;
                Ks(e, t), (e = t.pendingProps);
                var a = Mi(t, xi.current);
                Aa(t, n), (a = Ao(null, t, i, e, a, n));
                var s = Lo();
                return (
                  (t.flags |= 1),
                  'object' === r(a) && null !== a && 'function' == typeof a.render && void 0 === a.$$typeof
                    ? ((t.tag = 1),
                      (t.memoizedState = null),
                      (t.updateQueue = null),
                      Pi(i) ? ((s = !0), Bi(t)) : (s = !1),
                      (t.memoizedState = null !== a.state && void 0 !== a.state ? a.state : null),
                      Ma(t),
                      (a.updater = Ga),
                      (t.stateNode = a),
                      (a._reactInternals = t),
                      qa(t, i, e, n),
                      (t = Ds(null, t, i, !0, s, n)))
                    : ((t.tag = 0), oa && s && na(t), ks(null, t, a, n), (t = t.child)),
                  t
                );
              case 16:
                i = t.elementType;
                e: {
                  switch (
                    (Ks(e, t),
                    (e = t.pendingProps),
                    (i = (a = i._init)(i._payload)),
                    (t.type = i),
                    (a = t.tag =
                      (function (e) {
                        if ('function' == typeof e) return Pu(e) ? 1 : 0;
                        if (null != e) {
                          if ((e = e.$$typeof) === x) return 11;
                          if (e === M) return 14;
                        }
                        return 2;
                      })(i)),
                    (e = ya(i, e)),
                    a)
                  ) {
                    case 0:
                      t = Cs(null, t, i, e, n);
                      break e;
                    case 1:
                      t = xs(null, t, i, e, n);
                      break e;
                    case 11:
                      t = Ts(null, t, i, e, n);
                      break e;
                    case 14:
                      t = ws(null, t, i, ya(i.type, e), n);
                      break e;
                  }
                  throw Error(o(306, i, ''));
                }
                return t;
              case 0:
                return (i = t.type), (a = t.pendingProps), Cs(e, t, i, (a = t.elementType === i ? a : ya(i, a)), n);
              case 1:
                return (i = t.type), (a = t.pendingProps), xs(e, t, i, (a = t.elementType === i ? a : ya(i, a)), n);
              case 3:
                e: {
                  if ((Is(t), null === e)) throw Error(o(387));
                  (i = t.pendingProps), (a = (s = t.memoizedState).element), Pa(e, t), Ua(t, i, null, n);
                  var l = t.memoizedState;
                  if (((i = l.element), s.isDehydrated)) {
                    if (
                      ((s = { element: i, isDehydrated: !1, cache: l.cache, pendingSuspenseBoundaries: l.pendingSuspenseBoundaries, transitions: l.transitions }),
                      (t.updateQueue.baseState = s),
                      (t.memoizedState = s),
                      256 & t.flags)
                    ) {
                      t = Ms(e, t, i, n, (a = fs(Error(o(423)), t)));
                      break e;
                    }
                    if (i !== a) {
                      t = Ms(e, t, i, n, (a = fs(Error(o(424)), t)));
                      break e;
                    }
                    for (aa = di(t.stateNode.containerInfo.firstChild), ia = t, oa = !0, sa = null, n = Ja(t, null, i, n), t.child = n; n; ) (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                  } else {
                    if ((va(), i === a)) {
                      t = Ws(e, t, n);
                      break e;
                    }
                    ks(e, t, i, n);
                  }
                  t = t.child;
                }
                return t;
              case 5:
                return (
                  so(t),
                  null === e && da(t),
                  (i = t.type),
                  (a = t.pendingProps),
                  (s = null !== e ? e.memoizedProps : null),
                  (l = a.children),
                  ii(i, a) ? (l = null) : null !== s && ii(i, s) && (t.flags |= 32),
                  Rs(e, t),
                  ks(e, t, l, n),
                  t.child
                );
              case 6:
                return null === e && da(t), null;
              case 13:
                return Us(e, t, n);
              case 4:
                return ao(t, t.stateNode.containerInfo), (i = t.pendingProps), null === e ? (t.child = Za(t, null, i, n)) : ks(e, t, i, n), t.child;
              case 11:
                return (i = t.type), (a = t.pendingProps), Ts(e, t, i, (a = t.elementType === i ? a : ya(i, a)), n);
              case 7:
                return ks(e, t, t.pendingProps, n), t.child;
              case 8:
              case 12:
                return ks(e, t, t.pendingProps.children, n), t.child;
              case 10:
                e: {
                  if (((i = t.type._context), (a = t.pendingProps), (s = t.memoizedProps), (l = a.value), Ri(_a, i._currentValue), (i._currentValue = l), null !== s))
                    if (ur(s.value, l)) {
                      if (s.children === a.children && !Di.current) {
                        t = Ws(e, t, n);
                        break e;
                      }
                    } else
                      for (null !== (s = t.child) && (s.return = t); null !== s; ) {
                        var u = s.dependencies;
                        if (null !== u) {
                          l = s.child;
                          for (var c = u.firstContext; null !== c; ) {
                            if (c.context === i) {
                              if (1 === s.tag) {
                                (c = Oa(-1, n & -n)).tag = 2;
                                var d = s.updateQueue;
                                if (null !== d) {
                                  var f = (d = d.shared).pending;
                                  null === f ? (c.next = c) : ((c.next = f.next), (f.next = c)), (d.pending = c);
                                }
                              }
                              (s.lanes |= n), null !== (c = s.alternate) && (c.lanes |= n), wa(s.return, n, t), (u.lanes |= n);
                              break;
                            }
                            c = c.next;
                          }
                        } else if (10 === s.tag) l = s.type === t.type ? null : s.child;
                        else if (18 === s.tag) {
                          if (null === (l = s.return)) throw Error(o(341));
                          (l.lanes |= n), null !== (u = l.alternate) && (u.lanes |= n), wa(l, n, t), (l = s.sibling);
                        } else l = s.child;
                        if (null !== l) l.return = s;
                        else
                          for (l = s; null !== l; ) {
                            if (l === t) {
                              l = null;
                              break;
                            }
                            if (null !== (s = l.sibling)) {
                              (s.return = l.return), (l = s);
                              break;
                            }
                            l = l.return;
                          }
                        s = l;
                      }
                  ks(e, t, a.children, n), (t = t.child);
                }
                return t;
              case 9:
                return (a = t.type), (i = t.pendingProps.children), Aa(t, n), (i = i((a = La(a)))), (t.flags |= 1), ks(e, t, i, n), t.child;
              case 14:
                return (a = ya((i = t.type), t.pendingProps)), ws(e, t, i, (a = ya(i.type, a)), n);
              case 15:
                return As(e, t, t.type, t.pendingProps, n);
              case 17:
                return (
                  (i = t.type),
                  (a = t.pendingProps),
                  (a = t.elementType === i ? a : ya(i, a)),
                  Ks(e, t),
                  (t.tag = 1),
                  Pi(i) ? ((e = !0), Bi(t)) : (e = !1),
                  Aa(t, n),
                  Ka(t, i, a),
                  qa(t, i, a, n),
                  Ds(null, t, i, !0, e, n)
                );
              case 19:
                return js(e, t, n);
              case 22:
                return Ls(e, t, n);
            }
            throw Error(o(156, t.tag));
          };
          var $u =
            'function' == typeof reportError
              ? reportError
              : function (e) {
                  console.error(e);
                };
          function Qu(e) {
            this._internalRoot = e;
          }
          function Zu(e) {
            this._internalRoot = e;
          }
          function Ju(e) {
            return !(!e || (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType));
          }
          function ec(e) {
            return !(!e || (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || ' react-mount-point-unstable ' !== e.nodeValue)));
          }
          function tc() {}
          function nc(e, t, n, r, i) {
            var a = n._reactRootContainer;
            if (a) {
              var o = a;
              if ('function' == typeof i) {
                var s = i;
                i = function () {
                  var e = qu(o);
                  s.call(e);
                };
              }
              Wu(t, o, e, i);
            } else
              o = (function (e, t, n, r, i) {
                if (i) {
                  if ('function' == typeof r) {
                    var a = r;
                    r = function () {
                      var e = qu(o);
                      a.call(e);
                    };
                  }
                  var o = Ku(t, r, e, 0, null, !1, 0, '', tc);
                  return (e._reactRootContainer = o), (e[mi] = o.current), jr(8 === e.nodeType ? e.parentNode : e), fu(), o;
                }
                for (; (i = e.lastChild); ) e.removeChild(i);
                if ('function' == typeof r) {
                  var s = r;
                  r = function () {
                    var e = qu(l);
                    s.call(e);
                  };
                }
                var l = Vu(e, 0, !1, null, 0, !1, 0, '', tc);
                return (
                  (e._reactRootContainer = l),
                  (e[mi] = l.current),
                  jr(8 === e.nodeType ? e.parentNode : e),
                  fu(function () {
                    Wu(t, l, n, r);
                  }),
                  l
                );
              })(n, t, e, i, r);
            return qu(o);
          }
          (Zu.prototype.render = Qu.prototype.render =
            function (e) {
              var t = this._internalRoot;
              if (null === t) throw Error(o(409));
              Wu(e, t, null, null);
            }),
            (Zu.prototype.unmount = Qu.prototype.unmount =
              function () {
                var e = this._internalRoot;
                if (null !== e) {
                  this._internalRoot = null;
                  var t = e.containerInfo;
                  fu(function () {
                    Wu(null, e, null, null);
                  }),
                    (t[mi] = null);
                }
              }),
            (Zu.prototype.unstable_scheduleHydration = function (e) {
              if (e) {
                var t = At();
                e = { blockedOn: null, target: e, priority: t };
                for (var n = 0; n < Ot.length && 0 !== t && t < Ot[n].priority; n++);
                Ot.splice(n, 0, e), 0 === n && Ut(e);
              }
            }),
            (kt = function (e) {
              switch (e.tag) {
                case 3:
                  var t = e.stateNode;
                  if (t.current.memoizedState.isDehydrated) {
                    var n = ht(t.pendingLanes);
                    0 !== n && (bt(t, 1 | n), au(t, Je()), 0 == (6 & xl) && ((jl = Je() + 500), ji()));
                  }
                  break;
                case 13:
                  fu(function () {
                    var t = Da(e, 1);
                    if (null !== t) {
                      var n = nu();
                      iu(t, e, 1, n);
                    }
                  }),
                    Xu(e, 1);
              }
            }),
            (Tt = function (e) {
              if (13 === e.tag) {
                var t = Da(e, 134217728);
                if (null !== t) iu(t, e, 134217728, nu());
                Xu(e, 134217728);
              }
            }),
            (wt = function (e) {
              if (13 === e.tag) {
                var t = ru(e),
                  n = Da(e, t);
                if (null !== n) iu(n, e, t, nu());
                Xu(e, t);
              }
            }),
            (At = function () {
              return Et;
            }),
            (Lt = function (e, t) {
              var n = Et;
              try {
                return (Et = e), t();
              } finally {
                Et = n;
              }
            }),
            (Te = function (e, t, n) {
              switch (t) {
                case 'input':
                  if ((ee(e, n), (t = n.name), 'radio' === n.type && null != t)) {
                    for (n = e; n.parentNode; ) n = n.parentNode;
                    for (n = n.querySelectorAll('input[name=' + JSON.stringify('' + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                      var r = n[t];
                      if (r !== e && r.form === e.form) {
                        var i = ki(r);
                        if (!i) throw Error(o(90));
                        X(r), ee(r, i);
                      }
                    }
                  }
                  break;
                case 'textarea':
                  se(e, n);
                  break;
                case 'select':
                  null != (t = n.value) && ie(e, !!n.multiple, t, !1);
              }
            }),
            (xe = du),
            (De = fu);
          var rc = { usingClientEntryPoint: !1, Events: [Ei, Si, ki, Re, Ce, du] },
            ic = { findFiberByHostInstance: bi, bundleType: 0, version: '18.2.0', rendererPackageName: 'react-dom' },
            ac = {
              bundleType: ic.bundleType,
              version: ic.version,
              rendererPackageName: ic.rendererPackageName,
              rendererConfig: ic.rendererConfig,
              overrideHookState: null,
              overrideHookStateDeletePath: null,
              overrideHookStateRenamePath: null,
              overrideProps: null,
              overridePropsDeletePath: null,
              overridePropsRenamePath: null,
              setErrorHandler: null,
              setSuspenseHandler: null,
              scheduleUpdate: null,
              currentDispatcherRef: S.ReactCurrentDispatcher,
              findHostInstanceByFiber: function (e) {
                return null === (e = qe(e)) ? null : e.stateNode;
              },
              findFiberByHostInstance:
                ic.findFiberByHostInstance ||
                function () {
                  return null;
                },
              findHostInstancesForRefresh: null,
              scheduleRefresh: null,
              scheduleRoot: null,
              setRefreshHandler: null,
              getCurrentFiber: null,
              reconcilerVersion: '18.2.0-next-9e3b772b8-20220608',
            };
          if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
            var oc = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!oc.isDisabled && oc.supportsFiber)
              try {
                (ot = oc.inject(ac)), (st = oc);
              } catch (fe) {}
          }
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = rc),
            (t.createPortal = function (e, t) {
              var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
              if (!Ju(t)) throw Error(o(200));
              return Gu(e, t, null, n);
            }),
            (t.createRoot = function (e, t) {
              if (!Ju(e)) throw Error(o(299));
              var n = !1,
                r = '',
                i = $u;
              return (
                null != t && (!0 === t.unstable_strictMode && (n = !0), void 0 !== t.identifierPrefix && (r = t.identifierPrefix), void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
                (t = Vu(e, 1, !1, null, 0, n, 0, r, i)),
                (e[mi] = t.current),
                jr(8 === e.nodeType ? e.parentNode : e),
                new Qu(t)
              );
            }),
            (t.findDOMNode = function (e) {
              if (null == e) return null;
              if (1 === e.nodeType) return e;
              var t = e._reactInternals;
              if (void 0 === t) {
                if ('function' == typeof e.render) throw Error(o(188));
                throw ((e = Object.keys(e).join(',')), Error(o(268, e)));
              }
              return (e = null === (e = qe(t)) ? null : e.stateNode);
            }),
            (t.flushSync = function (e) {
              return fu(e);
            }),
            (t.hydrate = function (e, t, n) {
              if (!ec(t)) throw Error(o(200));
              return nc(null, e, t, !0, n);
            }),
            (t.hydrateRoot = function (e, t, n) {
              if (!Ju(e)) throw Error(o(405));
              var r = (null != n && n.hydratedSources) || null,
                i = !1,
                a = '',
                s = $u;
              if (
                (null != n && (!0 === n.unstable_strictMode && (i = !0), void 0 !== n.identifierPrefix && (a = n.identifierPrefix), void 0 !== n.onRecoverableError && (s = n.onRecoverableError)),
                (t = Ku(t, null, e, 1, null != n ? n : null, i, 0, a, s)),
                (e[mi] = t.current),
                jr(e),
                r)
              )
                for (e = 0; e < r.length; e++)
                  (i = (i = (n = r[e])._getVersion)(n._source)),
                    null == t.mutableSourceEagerHydrationData ? (t.mutableSourceEagerHydrationData = [n, i]) : t.mutableSourceEagerHydrationData.push(n, i);
              return new Zu(t);
            }),
            (t.render = function (e, t, n) {
              if (!ec(t)) throw Error(o(200));
              return nc(null, e, t, !1, n);
            }),
            (t.unmountComponentAtNode = function (e) {
              if (!ec(e)) throw Error(o(40));
              return (
                !!e._reactRootContainer &&
                (fu(function () {
                  nc(null, null, e, !1, function () {
                    (e._reactRootContainer = null), (e[mi] = null);
                  });
                }),
                !0)
              );
            }),
            (t.unstable_batchedUpdates = du),
            (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
              if (!ec(n)) throw Error(o(200));
              if (null == e || void 0 === e._reactInternals) throw Error(o(38));
              return nc(e, t, n, !1, r);
            }),
            (t.version = '18.2.0-next-9e3b772b8-20220608');
        },
        234: function (e, t, n) {
          'use strict';
          !(function e() {
            if ('undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && 'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)
              try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
              } catch (e) {
                console.error(e);
              }
          })(),
            (e.exports = n(563));
        },
        285: function (e, t, n) {
          'use strict';
          var r = n(360).default,
            i = 'function' == typeof Symbol && Symbol.for,
            a = i ? Symbol.for('react.element') : 60103,
            o = i ? Symbol.for('react.portal') : 60106,
            s = i ? Symbol.for('react.fragment') : 60107,
            l = i ? Symbol.for('react.strict_mode') : 60108,
            u = i ? Symbol.for('react.profiler') : 60114,
            c = i ? Symbol.for('react.provider') : 60109,
            d = i ? Symbol.for('react.context') : 60110,
            f = i ? Symbol.for('react.async_mode') : 60111,
            h = i ? Symbol.for('react.concurrent_mode') : 60111,
            p = i ? Symbol.for('react.forward_ref') : 60112,
            v = i ? Symbol.for('react.suspense') : 60113,
            m = i ? Symbol.for('react.suspense_list') : 60120,
            g = i ? Symbol.for('react.memo') : 60115,
            y = i ? Symbol.for('react.lazy') : 60116,
            _ = i ? Symbol.for('react.block') : 60121,
            b = i ? Symbol.for('react.fundamental') : 60117,
            E = i ? Symbol.for('react.responder') : 60118,
            S = i ? Symbol.for('react.scope') : 60119;
          function k(e) {
            if ('object' === r(e) && null !== e) {
              var t = e.$$typeof;
              switch (t) {
                case a:
                  switch ((e = e.type)) {
                    case f:
                    case h:
                    case s:
                    case u:
                    case l:
                    case v:
                      return e;
                    default:
                      switch ((e = e && e.$$typeof)) {
                        case d:
                        case p:
                        case y:
                        case g:
                        case c:
                          return e;
                        default:
                          return t;
                      }
                  }
                case o:
                  return t;
              }
            }
          }
          function T(e) {
            return k(e) === h;
          }
          (t.isFragment = function (e) {
            return k(e) === s;
          }),
            (t.isMemo = function (e) {
              return k(e) === g;
            });
        },
        53: function (e, t, n) {
          'use strict';
          e.exports = n(285);
        },
        352: function (e, t, n) {
          'use strict';
          var r = n(304),
            i = Symbol.for('react.element'),
            a = Symbol.for('react.fragment'),
            o = Object.prototype.hasOwnProperty,
            s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
            l = { key: !0, ref: !0, __self: !0, __source: !0 };
          function u(e, t, n) {
            var r,
              a = {},
              u = null,
              c = null;
            for (r in (void 0 !== n && (u = '' + n), void 0 !== t.key && (u = '' + t.key), void 0 !== t.ref && (c = t.ref), t)) o.call(t, r) && !l.hasOwnProperty(r) && (a[r] = t[r]);
            if (e && e.defaultProps) for (r in (t = e.defaultProps)) void 0 === a[r] && (a[r] = t[r]);
            return { $$typeof: i, type: e, key: u, ref: c, props: a, _owner: s.current };
          }
          (t.Fragment = a), (t.jsx = u), (t.jsxs = u);
        },
        521: function (e, t, n) {
          'use strict';
          var r = n(360).default,
            i = Symbol.for('react.element'),
            a = Symbol.for('react.portal'),
            o = Symbol.for('react.fragment'),
            s = Symbol.for('react.strict_mode'),
            l = Symbol.for('react.profiler'),
            u = Symbol.for('react.provider'),
            c = Symbol.for('react.context'),
            d = Symbol.for('react.forward_ref'),
            f = Symbol.for('react.suspense'),
            h = Symbol.for('react.memo'),
            p = Symbol.for('react.lazy'),
            v = Symbol.iterator;
          var m = {
              isMounted: function () {
                return !1;
              },
              enqueueForceUpdate: function () {},
              enqueueReplaceState: function () {},
              enqueueSetState: function () {},
            },
            g = Object.assign,
            y = {};
          function _(e, t, n) {
            (this.props = e), (this.context = t), (this.refs = y), (this.updater = n || m);
          }
          function b() {}
          function E(e, t, n) {
            (this.props = e), (this.context = t), (this.refs = y), (this.updater = n || m);
          }
          (_.prototype.isReactComponent = {}),
            (_.prototype.setState = function (e, t) {
              if ('object' !== r(e) && 'function' != typeof e && null != e)
                throw Error('setState(...): takes an object of state variables to update or a function which returns an object of state variables.');
              this.updater.enqueueSetState(this, e, t, 'setState');
            }),
            (_.prototype.forceUpdate = function (e) {
              this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
            }),
            (b.prototype = _.prototype);
          var S = (E.prototype = new b());
          (S.constructor = E), g(S, _.prototype), (S.isPureReactComponent = !0);
          var k = Array.isArray,
            T = Object.prototype.hasOwnProperty,
            w = { current: null },
            A = { key: !0, ref: !0, __self: !0, __source: !0 };
          function L(e, t, n) {
            var r,
              a = {},
              o = null,
              s = null;
            if (null != t) for (r in (void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (o = '' + t.key), t)) T.call(t, r) && !A.hasOwnProperty(r) && (a[r] = t[r]);
            var l = arguments.length - 2;
            if (1 === l) a.children = n;
            else if (1 < l) {
              for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
              a.children = u;
            }
            if (e && e.defaultProps) for (r in (l = e.defaultProps)) void 0 === a[r] && (a[r] = l[r]);
            return { $$typeof: i, type: e, key: o, ref: s, props: a, _owner: w.current };
          }
          function R(e) {
            return 'object' === r(e) && null !== e && e.$$typeof === i;
          }
          var C = /\/+/g;
          function x(e, t) {
            return 'object' === r(e) && null !== e && null != e.key
              ? (function (e) {
                  var t = { '=': '=0', ':': '=2' };
                  return (
                    '$' +
                    e.replace(/[=:]/g, function (e) {
                      return t[e];
                    })
                  );
                })('' + e.key)
              : t.toString(36);
          }
          function D(e, t, n, o, s) {
            var l = r(e);
            ('undefined' !== l && 'boolean' !== l) || (e = null);
            var u = !1;
            if (null === e) u = !0;
            else
              switch (l) {
                case 'string':
                case 'number':
                  u = !0;
                  break;
                case 'object':
                  switch (e.$$typeof) {
                    case i:
                    case a:
                      u = !0;
                  }
              }
            if (u)
              return (
                (s = s((u = e))),
                (e = '' === o ? '.' + x(u, 0) : o),
                k(s)
                  ? ((n = ''),
                    null != e && (n = e.replace(C, '$&/') + '/'),
                    D(s, t, n, '', function (e) {
                      return e;
                    }))
                  : null != s &&
                    (R(s) &&
                      (s = (function (e, t) {
                        return { $$typeof: i, type: e.type, key: t, ref: e.ref, props: e.props, _owner: e._owner };
                      })(s, n + (!s.key || (u && u.key === s.key) ? '' : ('' + s.key).replace(C, '$&/') + '/') + e)),
                    t.push(s)),
                1
              );
            if (((u = 0), (o = '' === o ? '.' : o + ':'), k(e)))
              for (var c = 0; c < e.length; c++) {
                var d = o + x((l = e[c]), c);
                u += D(l, t, n, d, s);
              }
            else if (
              ((d = (function (e) {
                return null === e || 'object' !== r(e) ? null : 'function' == typeof (e = (v && e[v]) || e['@@iterator']) ? e : null;
              })(e)),
              'function' == typeof d)
            )
              for (e = d.call(e), c = 0; !(l = e.next()).done; ) u += D((l = l.value), t, n, (d = o + x(l, c++)), s);
            else if ('object' === l)
              throw (
                ((t = String(e)),
                Error(
                  'Objects are not valid as a React child (found: ' +
                    ('[object Object]' === t ? 'object with keys {' + Object.keys(e).join(', ') + '}' : t) +
                    '). If you meant to render a collection of children, use an array instead.',
                ))
              );
            return u;
          }
          function I(e, t, n) {
            if (null == e) return e;
            var r = [],
              i = 0;
            return (
              D(e, r, '', '', function (e) {
                return t.call(n, e, i++);
              }),
              r
            );
          }
          function M(e) {
            if (-1 === e._status) {
              var t = e._result;
              (t = t()).then(
                function (t) {
                  (0 !== e._status && -1 !== e._status) || ((e._status = 1), (e._result = t));
                },
                function (t) {
                  (0 !== e._status && -1 !== e._status) || ((e._status = 2), (e._result = t));
                },
              ),
                -1 === e._status && ((e._status = 0), (e._result = t));
            }
            if (1 === e._status) return e._result.default;
            throw e._result;
          }
          var P = { current: null },
            O = { transition: null },
            F = { ReactCurrentDispatcher: P, ReactCurrentBatchConfig: O, ReactCurrentOwner: w };
          (t.Children = {
            map: I,
            forEach: function (e, t, n) {
              I(
                e,
                function () {
                  t.apply(this, arguments);
                },
                n,
              );
            },
            count: function (e) {
              var t = 0;
              return (
                I(e, function () {
                  t++;
                }),
                t
              );
            },
            toArray: function (e) {
              return (
                I(e, function (e) {
                  return e;
                }) || []
              );
            },
            only: function (e) {
              if (!R(e)) throw Error('React.Children.only expected to receive a single React element child.');
              return e;
            },
          }),
            (t.Component = _),
            (t.Fragment = o),
            (t.Profiler = l),
            (t.PureComponent = E),
            (t.StrictMode = s),
            (t.Suspense = f),
            (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = F),
            (t.cloneElement = function (e, t, n) {
              if (null == e) throw Error('React.cloneElement(...): The argument must be a React element, but you passed ' + e + '.');
              var r = g({}, e.props),
                a = e.key,
                o = e.ref,
                s = e._owner;
              if (null != t) {
                if ((void 0 !== t.ref && ((o = t.ref), (s = w.current)), void 0 !== t.key && (a = '' + t.key), e.type && e.type.defaultProps)) var l = e.type.defaultProps;
                for (u in t) T.call(t, u) && !A.hasOwnProperty(u) && (r[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u]);
              }
              var u = arguments.length - 2;
              if (1 === u) r.children = n;
              else if (1 < u) {
                l = Array(u);
                for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
                r.children = l;
              }
              return { $$typeof: i, type: e.type, key: a, ref: o, props: r, _owner: s };
            }),
            (t.createContext = function (e) {
              return (
                ((e = { $$typeof: c, _currentValue: e, _currentValue2: e, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }).Provider = {
                  $$typeof: u,
                  _context: e,
                }),
                (e.Consumer = e)
              );
            }),
            (t.createElement = L),
            (t.createFactory = function (e) {
              var t = L.bind(null, e);
              return (t.type = e), t;
            }),
            (t.createRef = function () {
              return { current: null };
            }),
            (t.forwardRef = function (e) {
              return { $$typeof: d, render: e };
            }),
            (t.isValidElement = R),
            (t.lazy = function (e) {
              return { $$typeof: p, _payload: { _status: -1, _result: e }, _init: M };
            }),
            (t.memo = function (e, t) {
              return { $$typeof: h, type: e, compare: void 0 === t ? null : t };
            }),
            (t.startTransition = function (e) {
              var t = O.transition;
              O.transition = {};
              try {
                e();
              } finally {
                O.transition = t;
              }
            }),
            (t.unstable_act = function () {
              throw Error('act(...) is not supported in production builds of React.');
            }),
            (t.useCallback = function (e, t) {
              return P.current.useCallback(e, t);
            }),
            (t.useContext = function (e) {
              return P.current.useContext(e);
            }),
            (t.useDebugValue = function () {}),
            (t.useDeferredValue = function (e) {
              return P.current.useDeferredValue(e);
            }),
            (t.useEffect = function (e, t) {
              return P.current.useEffect(e, t);
            }),
            (t.useId = function () {
              return P.current.useId();
            }),
            (t.useImperativeHandle = function (e, t, n) {
              return P.current.useImperativeHandle(e, t, n);
            }),
            (t.useInsertionEffect = function (e, t) {
              return P.current.useInsertionEffect(e, t);
            }),
            (t.useLayoutEffect = function (e, t) {
              return P.current.useLayoutEffect(e, t);
            }),
            (t.useMemo = function (e, t) {
              return P.current.useMemo(e, t);
            }),
            (t.useReducer = function (e, t, n) {
              return P.current.useReducer(e, t, n);
            }),
            (t.useRef = function (e) {
              return P.current.useRef(e);
            }),
            (t.useState = function (e) {
              return P.current.useState(e);
            }),
            (t.useSyncExternalStore = function (e, t, n) {
              return P.current.useSyncExternalStore(e, t, n);
            }),
            (t.useTransition = function () {
              return P.current.useTransition();
            }),
            (t.version = '18.2.0');
        },
        304: function (e, t, n) {
          'use strict';
          e.exports = n(521);
        },
        88: function (e, t, n) {
          'use strict';
          e.exports = n(352);
        },
        853: function (e, t, n) {
          'use strict';
          var r = n(360).default;
          function i(e, t) {
            var n = e.length;
            e.push(t);
            e: for (; 0 < n; ) {
              var r = (n - 1) >>> 1,
                i = e[r];
              if (!(0 < s(i, t))) break e;
              (e[r] = t), (e[n] = i), (n = r);
            }
          }
          function a(e) {
            return 0 === e.length ? null : e[0];
          }
          function o(e) {
            if (0 === e.length) return null;
            var t = e[0],
              n = e.pop();
            if (n !== t) {
              e[0] = n;
              e: for (var r = 0, i = e.length, a = i >>> 1; r < a; ) {
                var o = 2 * (r + 1) - 1,
                  l = e[o],
                  u = o + 1,
                  c = e[u];
                if (0 > s(l, n)) u < i && 0 > s(c, l) ? ((e[r] = c), (e[u] = n), (r = u)) : ((e[r] = l), (e[o] = n), (r = o));
                else {
                  if (!(u < i && 0 > s(c, n))) break e;
                  (e[r] = c), (e[u] = n), (r = u);
                }
              }
            }
            return t;
          }
          function s(e, t) {
            var n = e.sortIndex - t.sortIndex;
            return 0 !== n ? n : e.id - t.id;
          }
          if ('object' === ('undefined' == typeof performance ? 'undefined' : r(performance)) && 'function' == typeof performance.now) {
            var l = performance;
            t.unstable_now = function () {
              return l.now();
            };
          } else {
            var u = Date,
              c = u.now();
            t.unstable_now = function () {
              return u.now() - c;
            };
          }
          var d = [],
            f = [],
            h = 1,
            p = null,
            v = 3,
            m = !1,
            g = !1,
            y = !1,
            _ = 'function' == typeof setTimeout ? setTimeout : null,
            b = 'function' == typeof clearTimeout ? clearTimeout : null,
            E = 'undefined' != typeof setImmediate ? setImmediate : null;
          function S(e) {
            for (var t = a(f); null !== t; ) {
              if (null === t.callback) o(f);
              else {
                if (!(t.startTime <= e)) break;
                o(f), (t.sortIndex = t.expirationTime), i(d, t);
              }
              t = a(f);
            }
          }
          function k(e) {
            if (((y = !1), S(e), !g))
              if (null !== a(d)) (g = !0), O(T);
              else {
                var t = a(f);
                null !== t && F(k, t.startTime - e);
              }
          }
          function T(e, n) {
            (g = !1), y && ((y = !1), b(R), (R = -1)), (m = !0);
            var r = v;
            try {
              for (S(n), p = a(d); null !== p && (!(p.expirationTime > n) || (e && !D())); ) {
                var i = p.callback;
                if ('function' == typeof i) {
                  (p.callback = null), (v = p.priorityLevel);
                  var s = i(p.expirationTime <= n);
                  (n = t.unstable_now()), 'function' == typeof s ? (p.callback = s) : p === a(d) && o(d), S(n);
                } else o(d);
                p = a(d);
              }
              if (null !== p) var l = !0;
              else {
                var u = a(f);
                null !== u && F(k, u.startTime - n), (l = !1);
              }
              return l;
            } finally {
              (p = null), (v = r), (m = !1);
            }
          }
          'undefined' != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
          var w,
            A = !1,
            L = null,
            R = -1,
            C = 5,
            x = -1;
          function D() {
            return !(t.unstable_now() - x < C);
          }
          function I() {
            if (null !== L) {
              var e = t.unstable_now();
              x = e;
              var n = !0;
              try {
                n = L(!0, e);
              } finally {
                n ? w() : ((A = !1), (L = null));
              }
            } else A = !1;
          }
          if ('function' == typeof E)
            w = function () {
              E(I);
            };
          else if ('undefined' != typeof MessageChannel) {
            var M = new MessageChannel(),
              P = M.port2;
            (M.port1.onmessage = I),
              (w = function () {
                P.postMessage(null);
              });
          } else
            w = function () {
              _(I, 0);
            };
          function O(e) {
            (L = e), A || ((A = !0), w());
          }
          function F(e, n) {
            R = _(function () {
              e(t.unstable_now());
            }, n);
          }
          (t.unstable_IdlePriority = 5),
            (t.unstable_ImmediatePriority = 1),
            (t.unstable_LowPriority = 4),
            (t.unstable_NormalPriority = 3),
            (t.unstable_Profiling = null),
            (t.unstable_UserBlockingPriority = 2),
            (t.unstable_cancelCallback = function (e) {
              e.callback = null;
            }),
            (t.unstable_continueExecution = function () {
              g || m || ((g = !0), O(T));
            }),
            (t.unstable_forceFrameRate = function (e) {
              0 > e || 125 < e
                ? console.error('forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported')
                : (C = 0 < e ? Math.floor(1e3 / e) : 5);
            }),
            (t.unstable_getCurrentPriorityLevel = function () {
              return v;
            }),
            (t.unstable_getFirstCallbackNode = function () {
              return a(d);
            }),
            (t.unstable_next = function (e) {
              switch (v) {
                case 1:
                case 2:
                case 3:
                  var t = 3;
                  break;
                default:
                  t = v;
              }
              var n = v;
              v = t;
              try {
                return e();
              } finally {
                v = n;
              }
            }),
            (t.unstable_pauseExecution = function () {}),
            (t.unstable_requestPaint = function () {}),
            (t.unstable_runWithPriority = function (e, t) {
              switch (e) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                  break;
                default:
                  e = 3;
              }
              var n = v;
              v = e;
              try {
                return t();
              } finally {
                v = n;
              }
            }),
            (t.unstable_scheduleCallback = function (e, n, o) {
              var s = t.unstable_now();
              switch (('object' === r(o) && null !== o ? (o = 'number' == typeof (o = o.delay) && 0 < o ? s + o : s) : (o = s), e)) {
                case 1:
                  var l = -1;
                  break;
                case 2:
                  l = 250;
                  break;
                case 5:
                  l = 1073741823;
                  break;
                case 4:
                  l = 1e4;
                  break;
                default:
                  l = 5e3;
              }
              return (
                (e = { id: h++, callback: n, priorityLevel: e, startTime: o, expirationTime: (l = o + l), sortIndex: -1 }),
                o > s ? ((e.sortIndex = o), i(f, e), null === a(d) && e === a(f) && (y ? (b(R), (R = -1)) : (y = !0), F(k, o - s))) : ((e.sortIndex = l), i(d, e), g || m || ((g = !0), O(T))),
                e
              );
            }),
            (t.unstable_shouldYield = D),
            (t.unstable_wrapCallback = function (e) {
              var t = v;
              return function () {
                var n = v;
                v = t;
                try {
                  return e.apply(this, arguments);
                } finally {
                  v = n;
                }
              };
            });
        },
        516: function (e, t, n) {
          'use strict';
          e.exports = n(853);
        },
        121: function (e) {
          (e.exports = function (e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        89: function (e) {
          (e.exports = function (e) {
            if (Array.isArray(e)) return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        887: function (e, t, n) {
          var r = n(121);
          (e.exports = function (e) {
            if (Array.isArray(e)) return r(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        747: function (e) {
          (e.exports = function (e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        957: function (e) {
          function t(e, t, n, r, i, a, o) {
            try {
              var s = e[a](o),
                l = s.value;
            } catch (e) {
              return void n(e);
            }
            s.done ? t(l) : Promise.resolve(l).then(r, i);
          }
          (e.exports = function (e) {
            return function () {
              var n = this,
                r = arguments;
              return new Promise(function (i, a) {
                var o = e.apply(n, r);
                function s(e) {
                  t(o, i, a, s, l, 'next', e);
                }
                function l(e) {
                  t(o, i, a, s, l, 'throw', e);
                }
                s(void 0);
              });
            };
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        117: function (e) {
          (e.exports = function (e, t) {
            if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        491: function (e, t, n) {
          var r = n(23),
            i = n(778);
          function a(t, n, o) {
            return (
              i()
                ? ((e.exports = a = Reflect.construct.bind()), (e.exports.__esModule = !0), (e.exports.default = e.exports))
                : ((e.exports = a =
                    function (e, t, n) {
                      var i = [null];
                      i.push.apply(i, t);
                      var a = new (Function.bind.apply(e, i))();
                      return n && r(a, n.prototype), a;
                    }),
                  (e.exports.__esModule = !0),
                  (e.exports.default = e.exports)),
              a.apply(null, arguments)
            );
          }
          (e.exports = a), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        373: function (e, t, n) {
          var r = n(898);
          function i(e, t) {
            for (var n = 0; n < t.length; n++) {
              var i = t[n];
              (i.enumerable = i.enumerable || !1), (i.configurable = !0), 'value' in i && (i.writable = !0), Object.defineProperty(e, r(i.key), i);
            }
          }
          (e.exports = function (e, t, n) {
            return t && i(e.prototype, t), n && i(e, n), Object.defineProperty(e, 'prototype', { writable: !1 }), e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        254: function (e, t, n) {
          var r = n(340);
          (e.exports = function (e, t) {
            var n = ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
            if (!n) {
              if (Array.isArray(e) || (n = r(e)) || (t && e && 'number' == typeof e.length)) {
                n && (e = n);
                var i = 0,
                  a = function () {};
                return {
                  s: a,
                  n: function () {
                    return i >= e.length ? { done: !0 } : { done: !1, value: e[i++] };
                  },
                  e: function (e) {
                    throw e;
                  },
                  f: a,
                };
              }
              throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            }
            var o,
              s = !0,
              l = !1;
            return {
              s: function () {
                n = n.call(e);
              },
              n: function () {
                var e = n.next();
                return (s = e.done), e;
              },
              e: function (e) {
                (l = !0), (o = e);
              },
              f: function () {
                try {
                  s || null == n.return || n.return();
                } finally {
                  if (l) throw o;
                }
              },
            };
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        840: function (e, t, n) {
          var r = n(701),
            i = n(778),
            a = n(350);
          (e.exports = function (e) {
            var t = i();
            return function () {
              var n,
                i = r(e);
              if (t) {
                var o = r(this).constructor;
                n = Reflect.construct(i, arguments, o);
              } else n = i.apply(this, arguments);
              return a(this, n);
            };
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        824: function (e, t, n) {
          var r = n(898);
          (e.exports = function (e, t, n) {
            return (t = r(t)) in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n), e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        724: function (e, t, n) {
          var r = n(984);
          function i() {
            return (
              'undefined' != typeof Reflect && Reflect.get
                ? ((e.exports = i = Reflect.get.bind()), (e.exports.__esModule = !0), (e.exports.default = e.exports))
                : ((e.exports = i =
                    function (e, t, n) {
                      var i = r(e, t);
                      if (i) {
                        var a = Object.getOwnPropertyDescriptor(i, t);
                        return a.get ? a.get.call(arguments.length < 3 ? e : n) : a.value;
                      }
                    }),
                  (e.exports.__esModule = !0),
                  (e.exports.default = e.exports)),
              i.apply(this, arguments)
            );
          }
          (e.exports = i), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        701: function (e) {
          function t(n) {
            return (
              (e.exports = t =
                Object.setPrototypeOf
                  ? Object.getPrototypeOf.bind()
                  : function (e) {
                      return e.__proto__ || Object.getPrototypeOf(e);
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n)
            );
          }
          (e.exports = t), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        401: function (e, t, n) {
          var r = n(23);
          (e.exports = function (e, t) {
            if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function');
            (e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } })), Object.defineProperty(e, 'prototype', { writable: !1 }), t && r(e, t);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        519: function (e) {
          (e.exports = function (e) {
            return -1 !== Function.toString.call(e).indexOf('[native code]');
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        778: function (e) {
          (e.exports = function () {
            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ('function' == typeof Proxy) return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
            } catch (e) {
              return !1;
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        362: function (e) {
          (e.exports = function (e) {
            if (('undefined' != typeof Symbol && null != e[Symbol.iterator]) || null != e['@@iterator']) return Array.from(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        946: function (e) {
          (e.exports = function (e, t) {
            var n = null == e ? null : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
            if (null != n) {
              var r,
                i,
                a,
                o,
                s = [],
                l = !0,
                u = !1;
              try {
                if (((a = (n = n.call(e)).next), 0 === t)) {
                  if (Object(n) !== n) return;
                  l = !1;
                } else for (; !(l = (r = a.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
              } catch (e) {
                (u = !0), (i = e);
              } finally {
                try {
                  if (!l && null != n.return && ((o = n.return()), Object(o) !== o)) return;
                } finally {
                  if (u) throw i;
                }
              }
              return s;
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        589: function (e) {
          (e.exports = function () {
            throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        947: function (e) {
          (e.exports = function () {
            throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        510: function (e, t, n) {
          var r = n(824);
          function i(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
              var r = Object.getOwnPropertySymbols(e);
              t &&
                (r = r.filter(function (t) {
                  return Object.getOwnPropertyDescriptor(e, t).enumerable;
                })),
                n.push.apply(n, r);
            }
            return n;
          }
          (e.exports = function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = null != arguments[t] ? arguments[t] : {};
              t % 2
                ? i(Object(n), !0).forEach(function (t) {
                    r(e, t, n[t]);
                  })
                : Object.getOwnPropertyDescriptors
                ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
                : i(Object(n)).forEach(function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                  });
            }
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        44: function (e, t, n) {
          var r = n(409);
          (e.exports = function (e, t) {
            if (null == e) return {};
            var n,
              i,
              a = r(e, t);
            if (Object.getOwnPropertySymbols) {
              var o = Object.getOwnPropertySymbols(e);
              for (i = 0; i < o.length; i++) (n = o[i]), t.indexOf(n) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n]));
            }
            return a;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        409: function (e) {
          (e.exports = function (e, t) {
            if (null == e) return {};
            var n,
              r,
              i = {},
              a = Object.keys(e);
            for (r = 0; r < a.length; r++) (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
            return i;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        350: function (e, t, n) {
          var r = n(360).default,
            i = n(747);
          (e.exports = function (e, t) {
            if (t && ('object' === r(t) || 'function' == typeof t)) return t;
            if (void 0 !== t) throw new TypeError('Derived constructors may only return object or undefined');
            return i(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        469: function (e, t, n) {
          var r = n(360).default;
          function i() {
            'use strict';
            (e.exports = i =
              function () {
                return t;
              }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports);
            var t = {},
              n = Object.prototype,
              a = n.hasOwnProperty,
              o =
                Object.defineProperty ||
                function (e, t, n) {
                  e[t] = n.value;
                },
              s = 'function' == typeof Symbol ? Symbol : {},
              l = s.iterator || '@@iterator',
              u = s.asyncIterator || '@@asyncIterator',
              c = s.toStringTag || '@@toStringTag';
            function d(e, t, n) {
              return Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }), e[t];
            }
            try {
              d({}, '');
            } catch (e) {
              d = function (e, t, n) {
                return (e[t] = n);
              };
            }
            function f(e, t, n, r) {
              var i = t && t.prototype instanceof v ? t : v,
                a = Object.create(i.prototype),
                s = new R(r || []);
              return o(a, '_invoke', { value: T(e, n, s) }), a;
            }
            function h(e, t, n) {
              try {
                return { type: 'normal', arg: e.call(t, n) };
              } catch (e) {
                return { type: 'throw', arg: e };
              }
            }
            t.wrap = f;
            var p = {};
            function v() {}
            function m() {}
            function g() {}
            var y = {};
            d(y, l, function () {
              return this;
            });
            var _ = Object.getPrototypeOf,
              b = _ && _(_(C([])));
            b && b !== n && a.call(b, l) && (y = b);
            var E = (g.prototype = v.prototype = Object.create(y));
            function S(e) {
              ['next', 'throw', 'return'].forEach(function (t) {
                d(e, t, function (e) {
                  return this._invoke(t, e);
                });
              });
            }
            function k(e, t) {
              function n(i, o, s, l) {
                var u = h(e[i], e, o);
                if ('throw' !== u.type) {
                  var c = u.arg,
                    d = c.value;
                  return d && 'object' == r(d) && a.call(d, '__await')
                    ? t.resolve(d.__await).then(
                        function (e) {
                          n('next', e, s, l);
                        },
                        function (e) {
                          n('throw', e, s, l);
                        },
                      )
                    : t.resolve(d).then(
                        function (e) {
                          (c.value = e), s(c);
                        },
                        function (e) {
                          return n('throw', e, s, l);
                        },
                      );
                }
                l(u.arg);
              }
              var i;
              o(this, '_invoke', {
                value: function (e, r) {
                  function a() {
                    return new t(function (t, i) {
                      n(e, r, t, i);
                    });
                  }
                  return (i = i ? i.then(a, a) : a());
                },
              });
            }
            function T(e, t, n) {
              var r = 'suspendedStart';
              return function (i, a) {
                if ('executing' === r) throw new Error('Generator is already running');
                if ('completed' === r) {
                  if ('throw' === i) throw a;
                  return x();
                }
                for (n.method = i, n.arg = a; ; ) {
                  var o = n.delegate;
                  if (o) {
                    var s = w(o, n);
                    if (s) {
                      if (s === p) continue;
                      return s;
                    }
                  }
                  if ('next' === n.method) n.sent = n._sent = n.arg;
                  else if ('throw' === n.method) {
                    if ('suspendedStart' === r) throw ((r = 'completed'), n.arg);
                    n.dispatchException(n.arg);
                  } else 'return' === n.method && n.abrupt('return', n.arg);
                  r = 'executing';
                  var l = h(e, t, n);
                  if ('normal' === l.type) {
                    if (((r = n.done ? 'completed' : 'suspendedYield'), l.arg === p)) continue;
                    return { value: l.arg, done: n.done };
                  }
                  'throw' === l.type && ((r = 'completed'), (n.method = 'throw'), (n.arg = l.arg));
                }
              };
            }
            function w(e, t) {
              var n = t.method,
                r = e.iterator[n];
              if (void 0 === r)
                return (
                  (t.delegate = null),
                  ('throw' === n && e.iterator.return && ((t.method = 'return'), (t.arg = void 0), w(e, t), 'throw' === t.method)) ||
                    ('return' !== n && ((t.method = 'throw'), (t.arg = new TypeError("The iterator does not provide a '" + n + "' method")))),
                  p
                );
              var i = h(r, e.iterator, t.arg);
              if ('throw' === i.type) return (t.method = 'throw'), (t.arg = i.arg), (t.delegate = null), p;
              var a = i.arg;
              return a
                ? a.done
                  ? ((t[e.resultName] = a.value), (t.next = e.nextLoc), 'return' !== t.method && ((t.method = 'next'), (t.arg = void 0)), (t.delegate = null), p)
                  : a
                : ((t.method = 'throw'), (t.arg = new TypeError('iterator result is not an object')), (t.delegate = null), p);
            }
            function A(e) {
              var t = { tryLoc: e[0] };
              1 in e && (t.catchLoc = e[1]), 2 in e && ((t.finallyLoc = e[2]), (t.afterLoc = e[3])), this.tryEntries.push(t);
            }
            function L(e) {
              var t = e.completion || {};
              (t.type = 'normal'), delete t.arg, (e.completion = t);
            }
            function R(e) {
              (this.tryEntries = [{ tryLoc: 'root' }]), e.forEach(A, this), this.reset(!0);
            }
            function C(e) {
              if (e) {
                var t = e[l];
                if (t) return t.call(e);
                if ('function' == typeof e.next) return e;
                if (!isNaN(e.length)) {
                  var n = -1,
                    r = function t() {
                      for (; ++n < e.length; ) if (a.call(e, n)) return (t.value = e[n]), (t.done = !1), t;
                      return (t.value = void 0), (t.done = !0), t;
                    };
                  return (r.next = r);
                }
              }
              return { next: x };
            }
            function x() {
              return { value: void 0, done: !0 };
            }
            return (
              (m.prototype = g),
              o(E, 'constructor', { value: g, configurable: !0 }),
              o(g, 'constructor', { value: m, configurable: !0 }),
              (m.displayName = d(g, c, 'GeneratorFunction')),
              (t.isGeneratorFunction = function (e) {
                var t = 'function' == typeof e && e.constructor;
                return !!t && (t === m || 'GeneratorFunction' === (t.displayName || t.name));
              }),
              (t.mark = function (e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, g) : ((e.__proto__ = g), d(e, c, 'GeneratorFunction')), (e.prototype = Object.create(E)), e;
              }),
              (t.awrap = function (e) {
                return { __await: e };
              }),
              S(k.prototype),
              d(k.prototype, u, function () {
                return this;
              }),
              (t.AsyncIterator = k),
              (t.async = function (e, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new k(f(e, n, r, i), a);
                return t.isGeneratorFunction(n)
                  ? o
                  : o.next().then(function (e) {
                      return e.done ? e.value : o.next();
                    });
              }),
              S(E),
              d(E, c, 'Generator'),
              d(E, l, function () {
                return this;
              }),
              d(E, 'toString', function () {
                return '[object Generator]';
              }),
              (t.keys = function (e) {
                var t = Object(e),
                  n = [];
                for (var r in t) n.push(r);
                return (
                  n.reverse(),
                  function e() {
                    for (; n.length; ) {
                      var r = n.pop();
                      if (r in t) return (e.value = r), (e.done = !1), e;
                    }
                    return (e.done = !0), e;
                  }
                );
              }),
              (t.values = C),
              (R.prototype = {
                constructor: R,
                reset: function (e) {
                  if (
                    ((this.prev = 0),
                    (this.next = 0),
                    (this.sent = this._sent = void 0),
                    (this.done = !1),
                    (this.delegate = null),
                    (this.method = 'next'),
                    (this.arg = void 0),
                    this.tryEntries.forEach(L),
                    !e)
                  )
                    for (var t in this) 't' === t.charAt(0) && a.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0);
                },
                stop: function () {
                  this.done = !0;
                  var e = this.tryEntries[0].completion;
                  if ('throw' === e.type) throw e.arg;
                  return this.rval;
                },
                dispatchException: function (e) {
                  if (this.done) throw e;
                  var t = this;
                  function n(n, r) {
                    return (o.type = 'throw'), (o.arg = e), (t.next = n), r && ((t.method = 'next'), (t.arg = void 0)), !!r;
                  }
                  for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                    var i = this.tryEntries[r],
                      o = i.completion;
                    if ('root' === i.tryLoc) return n('end');
                    if (i.tryLoc <= this.prev) {
                      var s = a.call(i, 'catchLoc'),
                        l = a.call(i, 'finallyLoc');
                      if (s && l) {
                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                        if (this.prev < i.finallyLoc) return n(i.finallyLoc);
                      } else if (s) {
                        if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                      } else {
                        if (!l) throw new Error('try statement without catch or finally');
                        if (this.prev < i.finallyLoc) return n(i.finallyLoc);
                      }
                    }
                  }
                },
                abrupt: function (e, t) {
                  for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var r = this.tryEntries[n];
                    if (r.tryLoc <= this.prev && a.call(r, 'finallyLoc') && this.prev < r.finallyLoc) {
                      var i = r;
                      break;
                    }
                  }
                  i && ('break' === e || 'continue' === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                  var o = i ? i.completion : {};
                  return (o.type = e), (o.arg = t), i ? ((this.method = 'next'), (this.next = i.finallyLoc), p) : this.complete(o);
                },
                complete: function (e, t) {
                  if ('throw' === e.type) throw e.arg;
                  return (
                    'break' === e.type || 'continue' === e.type
                      ? (this.next = e.arg)
                      : 'return' === e.type
                      ? ((this.rval = this.arg = e.arg), (this.method = 'return'), (this.next = 'end'))
                      : 'normal' === e.type && t && (this.next = t),
                    p
                  );
                },
                finish: function (e) {
                  for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), L(n), p;
                  }
                },
                catch: function (e) {
                  for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.tryLoc === e) {
                      var r = n.completion;
                      if ('throw' === r.type) {
                        var i = r.arg;
                        L(n);
                      }
                      return i;
                    }
                  }
                  throw new Error('illegal catch attempt');
                },
                delegateYield: function (e, t, n) {
                  return (this.delegate = { iterator: C(e), resultName: t, nextLoc: n }), 'next' === this.method && (this.arg = void 0), p;
                },
              }),
              t
            );
          }
          (e.exports = i), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        23: function (e) {
          function t(n, r) {
            return (
              (e.exports = t =
                Object.setPrototypeOf
                  ? Object.setPrototypeOf.bind()
                  : function (e, t) {
                      return (e.__proto__ = t), e;
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n, r)
            );
          }
          (e.exports = t), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        74: function (e, t, n) {
          var r = n(89),
            i = n(946),
            a = n(340),
            o = n(589);
          (e.exports = function (e, t) {
            return r(e) || i(e, t) || a(e, t) || o();
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        984: function (e, t, n) {
          var r = n(701);
          (e.exports = function (e, t) {
            for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = r(e)); );
            return e;
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        807: function (e, t, n) {
          var r = n(887),
            i = n(362),
            a = n(340),
            o = n(947);
          (e.exports = function (e) {
            return r(e) || i(e) || a(e) || o();
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        550: function (e, t, n) {
          var r = n(360).default;
          (e.exports = function (e, t) {
            if ('object' !== r(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var i = n.call(e, t || 'default');
              if ('object' !== r(i)) return i;
              throw new TypeError('@@toPrimitive must return a primitive value.');
            }
            return ('string' === t ? String : Number)(e);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        898: function (e, t, n) {
          var r = n(360).default,
            i = n(550);
          (e.exports = function (e) {
            var t = i(e, 'string');
            return 'symbol' === r(t) ? t : String(t);
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        360: function (e) {
          function t(n) {
            return (
              (e.exports = t =
                'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                  ? function (e) {
                      return typeof e;
                    }
                  : function (e) {
                      return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
                    }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              t(n)
            );
          }
          (e.exports = t), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
        340: function (e, t, n) {
          var r = n(121);
          (e.exports = function (e, t) {
            if (e) {
              if ('string' == typeof e) return r(e, t);
              var n = Object.prototype.toString.call(e).slice(8, -1);
              return (
                'Object' === n && e.constructor && (n = e.constructor.name),
                'Map' === n || 'Set' === n ? Array.from(e) : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(e, t) : void 0
              );
            }
          }),
            (e.exports.__esModule = !0),
            (e.exports.default = e.exports);
        },
        307: function (e, t, n) {
          var r = n(701),
            i = n(23),
            a = n(519),
            o = n(491);
          function s(t) {
            var n = 'function' == typeof Map ? new Map() : void 0;
            return (
              (e.exports = s =
                function (e) {
                  if (null === e || !a(e)) return e;
                  if ('function' != typeof e) throw new TypeError('Super expression must either be null or a function');
                  if (void 0 !== n) {
                    if (n.has(e)) return n.get(e);
                    n.set(e, t);
                  }
                  function t() {
                    return o(e, arguments, r(this).constructor);
                  }
                  return (t.prototype = Object.create(e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } })), i(t, e);
                }),
              (e.exports.__esModule = !0),
              (e.exports.default = e.exports),
              s(t)
            );
          }
          (e.exports = s), (e.exports.__esModule = !0), (e.exports.default = e.exports);
        },
      },
      r = {};
    function i(e) {
      var t = r[e];
      if (void 0 !== t) return t.exports;
      var a = (r[e] = { id: e, loaded: !1, exports: {} });
      return n[e].call(a.exports, a, a.exports, i), (a.loaded = !0), a.exports;
    }
    (i.amdO = {}),
      (i.n = function (e) {
        var t =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return i.d(t, { a: t }), t;
      }),
      (t = Object.getPrototypeOf
        ? function (e) {
            return Object.getPrototypeOf(e);
          }
        : function (e) {
            return e.__proto__;
          }),
      (i.t = function (n, r) {
        if ((1 & r && (n = this(n)), 8 & r)) return n;
        if ('object' == typeof n && n) {
          if (4 & r && n.__esModule) return n;
          if (16 & r && 'function' == typeof n.then) return n;
        }
        var a = Object.create(null);
        i.r(a);
        var o = {};
        e = e || [null, t({}), t([]), t(t)];
        for (var s = 2 & r && n; 'object' == typeof s && !~e.indexOf(s); s = t(s))
          Object.getOwnPropertyNames(s).forEach(function (e) {
            o[e] = function () {
              return n[e];
            };
          });
        return (
          (o.default = function () {
            return n;
          }),
          i.d(a, o),
          a
        );
      }),
      (i.d = function (e, t) {
        for (var n in t) i.o(t, n) && !i.o(e, n) && Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
      }),
      (i.g = (function () {
        if ('object' == typeof globalThis) return globalThis;
        try {
          return this || new Function('return this')();
        } catch (e) {
          if ('object' == typeof window) return window;
        }
      })()),
      (i.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (i.r = function (e) {
        'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 });
      }),
      (i.nmd = function (e) {
        return (e.paths = []), e.children || (e.children = []), e;
      });
    var a = {};
    return (
      (function () {
        'use strict';
        i.r(a),
          i.d(a, {
            HistoryPlayer: function () {
              return Av;
            },
            Player: function () {
              return wv;
            },
            default: function () {
              return Lv;
            },
          });
        var e = i(510),
          t = i.n(e),
          n = i(74),
          r = i.n(n),
          o = i(44),
          s = i.n(o),
          l = i(360),
          u = i.n(l);
        Object.create;
        function c(e, t) {
          var n = 'function' == typeof Symbol && e[Symbol.iterator];
          if (!n) return e;
          var r,
            i,
            a = n.call(e),
            o = [];
          try {
            for (; (void 0 === t || t-- > 0) && !(r = a.next()).done; ) o.push(r.value);
          } catch (e) {
            i = { error: e };
          } finally {
            try {
              r && !r.done && (n = a.return) && n.call(a);
            } finally {
              if (i) throw i.error;
            }
          }
          return o;
        }
        Object.create;
        var d = i(304),
          f = i.t(d, 2);
        var h = function (e, t) {
          void 0 === e && (e = !1);
          var n = c((0, d.useState)(e), 2),
            r = n[0],
            i = n[1];
          return [
            r,
            (0, d.useMemo)(function () {
              var n = void 0 === t ? !e : t;
              return {
                toggle: function () {
                  return i(function (t) {
                    return t === e ? n : e;
                  });
                },
                set: function (e) {
                  return i(e);
                },
                setLeft: function () {
                  return i(e);
                },
                setRight: function () {
                  return i(n);
                },
              };
            }, []),
          ];
        };
        var p = function (e) {
            var t = (0, d.useRef)(e);
            return (t.current = e), t;
          },
          v = function (e) {
            return 'function' == typeof e;
          };
        var m = function (e) {
            var t = (0, d.useRef)(e);
            t.current = (0, d.useMemo)(
              function () {
                return e;
              },
              [e],
            );
            var n = (0, d.useRef)();
            return (
              n.current ||
                (n.current = function () {
                  for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
                  return t.current.apply(this, e);
                }),
              n.current
            );
          },
          g = function (e) {
            return function (t, n) {
              var r = (0, d.useRef)(!1);
              e(function () {
                return function () {
                  r.current = !1;
                };
              }, []),
                e(function () {
                  if (r.current) return t();
                  r.current = !0;
                }, n);
            };
          },
          y = g(d.useEffect),
          _ = i(469),
          b = i.n(_),
          E = i(957),
          S = i.n(E),
          k = i(117),
          T = i.n(k),
          w = i(373),
          A = i.n(w),
          L = i(824),
          R = i.n(L);
        function C() {
          return (C = S()(
            b()().mark(function e(t) {
              var n;
              return b()().wrap(function (e) {
                for (;;)
                  switch ((e.prev = e.next)) {
                    case 0:
                      return (
                        (n = []),
                        (e.next = 3),
                        t()
                          .then(function (e) {
                            n[0] = e;
                          })
                          .catch(function (e) {
                            n[1] = e;
                          })
                      );
                    case 3:
                      return e.abrupt('return', n);
                    case 4:
                    case 'end':
                      return e.stop();
                  }
              }, e);
            }),
          )).apply(this, arguments);
        }
        var x = function (e) {
          return C.apply(this, arguments);
        };
        function D(e) {
          setTimeout(e, 10);
        }
        var I = i(80),
          M = i.n(I),
          P = i(807),
          O = i.n(P),
          F = i(254),
          N = i(747),
          B = i(307),
          U = i(724),
          z = i(701),
          H = i(401),
          V = i(840);
        function G(e) {
          return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, 'default') ? e.default : e;
        }
        var j = { exports: {} };
        !(function (e, t) {
          var n, r, i, a, o;
          (n = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/),
            (r = /^(?=([^\/?#]*))\1([^]*)$/),
            (i = /(?:\/|^)\.(?=\/)/g),
            (a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g),
            (o = {
              buildAbsoluteURL: function (e, t, n) {
                if (((n = n || {}), (e = e.trim()), !(t = t.trim()))) {
                  if (!n.alwaysNormalize) return e;
                  var i = o.parseURL(e);
                  if (!i) throw new Error('Error trying to parse base URL.');
                  return (i.path = o.normalizePath(i.path)), o.buildURLFromParts(i);
                }
                var a = o.parseURL(t);
                if (!a) throw new Error('Error trying to parse relative URL.');
                if (a.scheme) return n.alwaysNormalize ? ((a.path = o.normalizePath(a.path)), o.buildURLFromParts(a)) : t;
                var s = o.parseURL(e);
                if (!s) throw new Error('Error trying to parse base URL.');
                if (!s.netLoc && s.path && '/' !== s.path[0]) {
                  var l = r.exec(s.path);
                  (s.netLoc = l[1]), (s.path = l[2]);
                }
                s.netLoc && !s.path && (s.path = '/');
                var u = { scheme: s.scheme, netLoc: a.netLoc, path: null, params: a.params, query: a.query, fragment: a.fragment };
                if (!a.netLoc && ((u.netLoc = s.netLoc), '/' !== a.path[0]))
                  if (a.path) {
                    var c = s.path,
                      d = c.substring(0, c.lastIndexOf('/') + 1) + a.path;
                    u.path = o.normalizePath(d);
                  } else (u.path = s.path), a.params || ((u.params = s.params), a.query || (u.query = s.query));
                return null === u.path && (u.path = n.alwaysNormalize ? o.normalizePath(a.path) : a.path), o.buildURLFromParts(u);
              },
              parseURL: function (e) {
                var t = n.exec(e);
                return t ? { scheme: t[1] || '', netLoc: t[2] || '', path: t[3] || '', params: t[4] || '', query: t[5] || '', fragment: t[6] || '' } : null;
              },
              normalizePath: function (e) {
                for (e = e.split('').reverse().join('').replace(i, ''); e.length !== (e = e.replace(a, '')).length; );
                return e.split('').reverse().join('');
              },
              buildURLFromParts: function (e) {
                return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment;
              },
            }),
            (e.exports = o);
        })(j);
        var K = j.exports;
        function W(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function q(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? W(Object(n), !0).forEach(function (t) {
                  Y(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : W(Object(n)).forEach(function (t) {
                  Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                });
          }
          return e;
        }
        function Y(e, t, n) {
          return (
            (t = (function (e) {
              var t = (function (e, t) {
                if ('object' !== l(e) || null === e) return e;
                var n = e[Symbol.toPrimitive];
                if (void 0 !== n) {
                  var r = n.call(e, t || 'default');
                  if ('object' !== l(r)) return r;
                  throw new TypeError('@@toPrimitive must return a primitive value.');
                }
                return ('string' === t ? String : Number)(e);
              })(e, 'string');
              return 'symbol' === l(t) ? t : String(t);
            })(t)) in e
              ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 })
              : (e[t] = n),
            e
          );
        }
        function X() {
          return (
            (X = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                  }
                  return e;
                }),
            X.apply(this, arguments)
          );
        }
        var $ =
            Number.isFinite ||
            function (e) {
              return 'number' == typeof e && isFinite(e);
            },
          Q = (function (e) {
            return (
              (e.MEDIA_ATTACHING = 'hlsMediaAttaching'),
              (e.MEDIA_ATTACHED = 'hlsMediaAttached'),
              (e.MEDIA_DETACHING = 'hlsMediaDetaching'),
              (e.MEDIA_DETACHED = 'hlsMediaDetached'),
              (e.BUFFER_RESET = 'hlsBufferReset'),
              (e.BUFFER_CODECS = 'hlsBufferCodecs'),
              (e.BUFFER_CREATED = 'hlsBufferCreated'),
              (e.BUFFER_APPENDING = 'hlsBufferAppending'),
              (e.BUFFER_APPENDED = 'hlsBufferAppended'),
              (e.BUFFER_EOS = 'hlsBufferEos'),
              (e.BUFFER_FLUSHING = 'hlsBufferFlushing'),
              (e.BUFFER_FLUSHED = 'hlsBufferFlushed'),
              (e.MANIFEST_LOADING = 'hlsManifestLoading'),
              (e.MANIFEST_LOADED = 'hlsManifestLoaded'),
              (e.MANIFEST_PARSED = 'hlsManifestParsed'),
              (e.LEVEL_SWITCHING = 'hlsLevelSwitching'),
              (e.LEVEL_SWITCHED = 'hlsLevelSwitched'),
              (e.LEVEL_LOADING = 'hlsLevelLoading'),
              (e.LEVEL_LOADED = 'hlsLevelLoaded'),
              (e.LEVEL_UPDATED = 'hlsLevelUpdated'),
              (e.LEVEL_PTS_UPDATED = 'hlsLevelPtsUpdated'),
              (e.LEVELS_UPDATED = 'hlsLevelsUpdated'),
              (e.AUDIO_TRACKS_UPDATED = 'hlsAudioTracksUpdated'),
              (e.AUDIO_TRACK_SWITCHING = 'hlsAudioTrackSwitching'),
              (e.AUDIO_TRACK_SWITCHED = 'hlsAudioTrackSwitched'),
              (e.AUDIO_TRACK_LOADING = 'hlsAudioTrackLoading'),
              (e.AUDIO_TRACK_LOADED = 'hlsAudioTrackLoaded'),
              (e.SUBTITLE_TRACKS_UPDATED = 'hlsSubtitleTracksUpdated'),
              (e.SUBTITLE_TRACKS_CLEARED = 'hlsSubtitleTracksCleared'),
              (e.SUBTITLE_TRACK_SWITCH = 'hlsSubtitleTrackSwitch'),
              (e.SUBTITLE_TRACK_LOADING = 'hlsSubtitleTrackLoading'),
              (e.SUBTITLE_TRACK_LOADED = 'hlsSubtitleTrackLoaded'),
              (e.SUBTITLE_FRAG_PROCESSED = 'hlsSubtitleFragProcessed'),
              (e.CUES_PARSED = 'hlsCuesParsed'),
              (e.NON_NATIVE_TEXT_TRACKS_FOUND = 'hlsNonNativeTextTracksFound'),
              (e.INIT_PTS_FOUND = 'hlsInitPtsFound'),
              (e.FRAG_LOADING = 'hlsFragLoading'),
              (e.FRAG_LOAD_EMERGENCY_ABORTED = 'hlsFragLoadEmergencyAborted'),
              (e.FRAG_LOADED = 'hlsFragLoaded'),
              (e.FRAG_DECRYPTED = 'hlsFragDecrypted'),
              (e.FRAG_PARSING_INIT_SEGMENT = 'hlsFragParsingInitSegment'),
              (e.FRAG_PARSING_USERDATA = 'hlsFragParsingUserdata'),
              (e.FRAG_PARSING_METADATA = 'hlsFragParsingMetadata'),
              (e.FRAG_PARSED = 'hlsFragParsed'),
              (e.FRAG_BUFFERED = 'hlsFragBuffered'),
              (e.FRAG_CHANGED = 'hlsFragChanged'),
              (e.FPS_DROP = 'hlsFpsDrop'),
              (e.FPS_DROP_LEVEL_CAPPING = 'hlsFpsDropLevelCapping'),
              (e.ERROR = 'hlsError'),
              (e.DESTROYING = 'hlsDestroying'),
              (e.KEY_LOADING = 'hlsKeyLoading'),
              (e.KEY_LOADED = 'hlsKeyLoaded'),
              (e.LIVE_BACK_BUFFER_REACHED = 'hlsLiveBackBufferReached'),
              (e.BACK_BUFFER_REACHED = 'hlsBackBufferReached'),
              e
            );
          })({}),
          Z = (function (e) {
            return (e.NETWORK_ERROR = 'networkError'), (e.MEDIA_ERROR = 'mediaError'), (e.KEY_SYSTEM_ERROR = 'keySystemError'), (e.MUX_ERROR = 'muxError'), (e.OTHER_ERROR = 'otherError'), e;
          })({}),
          J = (function (e) {
            return (
              (e.KEY_SYSTEM_NO_KEYS = 'keySystemNoKeys'),
              (e.KEY_SYSTEM_NO_ACCESS = 'keySystemNoAccess'),
              (e.KEY_SYSTEM_NO_SESSION = 'keySystemNoSession'),
              (e.KEY_SYSTEM_NO_CONFIGURED_LICENSE = 'keySystemNoConfiguredLicense'),
              (e.KEY_SYSTEM_LICENSE_REQUEST_FAILED = 'keySystemLicenseRequestFailed'),
              (e.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = 'keySystemServerCertificateRequestFailed'),
              (e.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = 'keySystemServerCertificateUpdateFailed'),
              (e.KEY_SYSTEM_SESSION_UPDATE_FAILED = 'keySystemSessionUpdateFailed'),
              (e.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = 'keySystemStatusOutputRestricted'),
              (e.KEY_SYSTEM_STATUS_INTERNAL_ERROR = 'keySystemStatusInternalError'),
              (e.MANIFEST_LOAD_ERROR = 'manifestLoadError'),
              (e.MANIFEST_LOAD_TIMEOUT = 'manifestLoadTimeOut'),
              (e.MANIFEST_PARSING_ERROR = 'manifestParsingError'),
              (e.MANIFEST_INCOMPATIBLE_CODECS_ERROR = 'manifestIncompatibleCodecsError'),
              (e.LEVEL_EMPTY_ERROR = 'levelEmptyError'),
              (e.LEVEL_LOAD_ERROR = 'levelLoadError'),
              (e.LEVEL_LOAD_TIMEOUT = 'levelLoadTimeOut'),
              (e.LEVEL_PARSING_ERROR = 'levelParsingError'),
              (e.LEVEL_SWITCH_ERROR = 'levelSwitchError'),
              (e.AUDIO_TRACK_LOAD_ERROR = 'audioTrackLoadError'),
              (e.AUDIO_TRACK_LOAD_TIMEOUT = 'audioTrackLoadTimeOut'),
              (e.SUBTITLE_LOAD_ERROR = 'subtitleTrackLoadError'),
              (e.SUBTITLE_TRACK_LOAD_TIMEOUT = 'subtitleTrackLoadTimeOut'),
              (e.FRAG_LOAD_ERROR = 'fragLoadError'),
              (e.FRAG_LOAD_TIMEOUT = 'fragLoadTimeOut'),
              (e.FRAG_DECRYPT_ERROR = 'fragDecryptError'),
              (e.FRAG_PARSING_ERROR = 'fragParsingError'),
              (e.FRAG_GAP = 'fragGap'),
              (e.REMUX_ALLOC_ERROR = 'remuxAllocError'),
              (e.KEY_LOAD_ERROR = 'keyLoadError'),
              (e.KEY_LOAD_TIMEOUT = 'keyLoadTimeOut'),
              (e.BUFFER_ADD_CODEC_ERROR = 'bufferAddCodecError'),
              (e.BUFFER_INCOMPATIBLE_CODECS_ERROR = 'bufferIncompatibleCodecsError'),
              (e.BUFFER_APPEND_ERROR = 'bufferAppendError'),
              (e.BUFFER_APPENDING_ERROR = 'bufferAppendingError'),
              (e.BUFFER_STALLED_ERROR = 'bufferStalledError'),
              (e.BUFFER_FULL_ERROR = 'bufferFullError'),
              (e.BUFFER_SEEK_OVER_HOLE = 'bufferSeekOverHole'),
              (e.BUFFER_NUDGE_ON_STALL = 'bufferNudgeOnStall'),
              (e.INTERNAL_EXCEPTION = 'internalException'),
              (e.INTERNAL_ABORTED = 'aborted'),
              (e.UNKNOWN = 'unknown'),
              e
            );
          })({}),
          ee = function () {},
          te = { trace: ee, debug: ee, log: ee, warn: ee, info: ee, error: ee },
          ne = te;
        function re(e) {
          var t = self.console[e];
          return t ? t.bind(self.console, '['.concat(e, '] >')) : ee;
        }
        function ie(e, t) {
          if ((self.console && !0 === e) || 'object' === l(e)) {
            !(function (e) {
              for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
              n.forEach(function (t) {
                ne[t] = e[t] ? e[t].bind(e) : re(t);
              });
            })(e, 'debug', 'log', 'info', 'warn', 'error');
            try {
              ne.log('Debug logs enabled for "'.concat(t, '" in hls.js version ', '1.4.8'));
            } catch (e) {
              ne = te;
            }
          } else ne = te;
        }
        var ae = ne,
          oe = /^(\d+)x(\d+)$/,
          se = /(.+?)=(".*?"|.*?)(?:,|$)/g,
          le = (function () {
            function e(t) {
              for (var n in (k(this, e), 'string' == typeof t && (t = e.parseAttrList(t)), t))
                t.hasOwnProperty(n) && ('X-' === n.substring(0, 2) && ((this.clientAttrs = this.clientAttrs || []), this.clientAttrs.push(n)), (this[n] = t[n]));
            }
            return (
              w(
                e,
                [
                  {
                    key: 'decimalInteger',
                    value: function (e) {
                      var t = parseInt(this[e], 10);
                      return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t;
                    },
                  },
                  {
                    key: 'hexadecimalInteger',
                    value: function (e) {
                      if (this[e]) {
                        var t = (this[e] || '0x').slice(2);
                        t = (1 & t.length ? '0' : '') + t;
                        for (var n = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; r++) n[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                        return n;
                      }
                      return null;
                    },
                  },
                  {
                    key: 'hexadecimalIntegerAsNumber',
                    value: function (e) {
                      var t = parseInt(this[e], 16);
                      return t > Number.MAX_SAFE_INTEGER ? 1 / 0 : t;
                    },
                  },
                  {
                    key: 'decimalFloatingPoint',
                    value: function (e) {
                      return parseFloat(this[e]);
                    },
                  },
                  {
                    key: 'optionalFloat',
                    value: function (e, t) {
                      var n = this[e];
                      return n ? parseFloat(n) : t;
                    },
                  },
                  {
                    key: 'enumeratedString',
                    value: function (e) {
                      return this[e];
                    },
                  },
                  {
                    key: 'bool',
                    value: function (e) {
                      return 'YES' === this[e];
                    },
                  },
                  {
                    key: 'decimalResolution',
                    value: function (e) {
                      var t = oe.exec(this[e]);
                      if (null !== t) return { width: parseInt(t[1], 10), height: parseInt(t[2], 10) };
                    },
                  },
                ],
                [
                  {
                    key: 'parseAttrList',
                    value: function (e) {
                      var t,
                        n = {};
                      for (se.lastIndex = 0; null !== (t = se.exec(e)); ) {
                        var r = t[2];
                        0 === r.indexOf('"') && r.lastIndexOf('"') === r.length - 1 && (r = r.slice(1, -1)), (n[t[1].trim()] = r);
                      }
                      return n;
                    },
                  },
                ],
              ),
              e
            );
          })();
        function ue(e) {
          return 'SCTE35-OUT' === e || 'SCTE35-IN' === e;
        }
        var ce = (function () {
            function e(t, n) {
              if ((k(this, e), (this.attr = void 0), (this._startDate = void 0), (this._endDate = void 0), (this._badValueForSameId = void 0), n)) {
                var r = n.attr;
                for (var i in r)
                  if (Object.prototype.hasOwnProperty.call(t, i) && t[i] !== r[i]) {
                    ae.warn('DATERANGE tag attribute: "'.concat(i, '" does not match for tags with ID: "').concat(t.ID, '"')), (this._badValueForSameId = i);
                    break;
                  }
                t = X(new le({}), r, t);
              }
              if (((this.attr = t), (this._startDate = new Date(t['START-DATE'])), 'END-DATE' in this.attr)) {
                var a = new Date(this.attr['END-DATE']);
                $(a.getTime()) && (this._endDate = a);
              }
            }
            return (
              w(e, [
                {
                  key: 'id',
                  get: function () {
                    return this.attr.ID;
                  },
                },
                {
                  key: 'class',
                  get: function () {
                    return this.attr.CLASS;
                  },
                },
                {
                  key: 'startDate',
                  get: function () {
                    return this._startDate;
                  },
                },
                {
                  key: 'endDate',
                  get: function () {
                    if (this._endDate) return this._endDate;
                    var e = this.duration;
                    return null !== e ? new Date(this._startDate.getTime() + 1e3 * e) : null;
                  },
                },
                {
                  key: 'duration',
                  get: function () {
                    if ('DURATION' in this.attr) {
                      var e = this.attr.decimalFloatingPoint('DURATION');
                      if ($(e)) return e;
                    } else if (this._endDate) return (this._endDate.getTime() - this._startDate.getTime()) / 1e3;
                    return null;
                  },
                },
                {
                  key: 'plannedDuration',
                  get: function () {
                    return 'PLANNED-DURATION' in this.attr ? this.attr.decimalFloatingPoint('PLANNED-DURATION') : null;
                  },
                },
                {
                  key: 'endOnNext',
                  get: function () {
                    return this.attr.bool('END-ON-NEXT');
                  },
                },
                {
                  key: 'isValid',
                  get: function () {
                    return !!this.id && !this._badValueForSameId && $(this.startDate.getTime()) && (null === this.duration || this.duration >= 0) && (!this.endOnNext || !!this.class);
                  },
                },
              ]),
              e
            );
          })(),
          de = w(function e() {
            k(this, e),
              (this.aborted = !1),
              (this.loaded = 0),
              (this.retry = 0),
              (this.total = 0),
              (this.chunkCount = 0),
              (this.bwEstimate = 0),
              (this.loading = { start: 0, first: 0, end: 0 }),
              (this.parsing = { start: 0, end: 0 }),
              (this.buffering = { start: 0, first: 0, end: 0 });
          }),
          fe = 'audio',
          he = 'video',
          pe = 'audiovideo',
          ve = (function () {
            function e(t) {
              var n;
              k(this, e),
                (this._byteRange = null),
                (this._url = null),
                (this.baseurl = void 0),
                (this.relurl = void 0),
                (this.elementaryStreams = (L((n = {}), fe, null), L(n, he, null), L(n, pe, null), n)),
                (this.baseurl = t);
            }
            return (
              w(e, [
                {
                  key: 'setByteRange',
                  value: function (e, t) {
                    var n = e.split('@', 2),
                      r = [];
                    1 === n.length ? (r[0] = t ? t.byteRangeEndOffset : 0) : (r[0] = parseInt(n[1])), (r[1] = parseInt(n[0]) + r[0]), (this._byteRange = r);
                  },
                },
                {
                  key: 'byteRange',
                  get: function () {
                    return this._byteRange ? this._byteRange : [];
                  },
                },
                {
                  key: 'byteRangeStartOffset',
                  get: function () {
                    return this.byteRange[0];
                  },
                },
                {
                  key: 'byteRangeEndOffset',
                  get: function () {
                    return this.byteRange[1];
                  },
                },
                {
                  key: 'url',
                  get: function () {
                    return !this._url && this.baseurl && this.relurl && (this._url = K.buildAbsoluteURL(this.baseurl, this.relurl, { alwaysNormalize: !0 })), this._url || '';
                  },
                  set: function (e) {
                    this._url = e;
                  },
                },
              ]),
              e
            );
          })(),
          me = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r) {
              var i;
              return (
                k(this, n),
                ((i = t.call(this, r))._decryptdata = null),
                (i.rawProgramDateTime = null),
                (i.programDateTime = null),
                (i.tagList = []),
                (i.duration = 0),
                (i.sn = 0),
                (i.levelkeys = void 0),
                (i.type = void 0),
                (i.loader = null),
                (i.keyLoader = null),
                (i.level = -1),
                (i.cc = 0),
                (i.startPTS = void 0),
                (i.endPTS = void 0),
                (i.startDTS = void 0),
                (i.endDTS = void 0),
                (i.start = 0),
                (i.deltaPTS = void 0),
                (i.maxStartPTS = void 0),
                (i.minEndPTS = void 0),
                (i.stats = new de()),
                (i.urlId = 0),
                (i.data = void 0),
                (i.bitrateTest = !1),
                (i.title = null),
                (i.initSegment = null),
                (i.endList = void 0),
                (i.gap = void 0),
                (i.type = e),
                i
              );
            }
            return (
              w(n, [
                {
                  key: 'decryptdata',
                  get: function () {
                    if (!this.levelkeys && !this._decryptdata) return null;
                    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {
                      var e = this.levelkeys.identity;
                      if (e) this._decryptdata = e.getDecryptData(this.sn);
                      else {
                        var t = Object.keys(this.levelkeys);
                        if (1 === t.length) return (this._decryptdata = this.levelkeys[t[0]].getDecryptData(this.sn));
                      }
                    }
                    return this._decryptdata;
                  },
                },
                {
                  key: 'end',
                  get: function () {
                    return this.start + this.duration;
                  },
                },
                {
                  key: 'endProgramDateTime',
                  get: function () {
                    if (null === this.programDateTime) return null;
                    if (!$(this.programDateTime)) return null;
                    var e = $(this.duration) ? this.duration : 0;
                    return this.programDateTime + 1e3 * e;
                  },
                },
                {
                  key: 'encrypted',
                  get: function () {
                    var e;
                    if (null != (e = this._decryptdata) && e.encrypted) return !0;
                    if (this.levelkeys) {
                      var t = Object.keys(this.levelkeys),
                        n = t.length;
                      if (n > 1 || (1 === n && this.levelkeys[t[0]].encrypted)) return !0;
                    }
                    return !1;
                  },
                },
                {
                  key: 'setKeyFormat',
                  value: function (e) {
                    if (this.levelkeys) {
                      var t = this.levelkeys[e];
                      t && !this._decryptdata && (this._decryptdata = t.getDecryptData(this.sn));
                    }
                  },
                },
                {
                  key: 'abortRequests',
                  value: function () {
                    var e, t;
                    null == (e = this.loader) || e.abort(), null == (t = this.keyLoader) || t.abort();
                  },
                },
                {
                  key: 'setElementaryStreamInfo',
                  value: function (e, t, n, r, i) {
                    var a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
                      o = this.elementaryStreams,
                      s = o[e];
                    s
                      ? ((s.startPTS = Math.min(s.startPTS, t)), (s.endPTS = Math.max(s.endPTS, n)), (s.startDTS = Math.min(s.startDTS, r)), (s.endDTS = Math.max(s.endDTS, i)))
                      : (o[e] = { startPTS: t, endPTS: n, startDTS: r, endDTS: i, partial: a });
                  },
                },
                {
                  key: 'clearElementaryStreamInfo',
                  value: function () {
                    var e = this.elementaryStreams;
                    (e[fe] = null), (e[he] = null), (e[pe] = null);
                  },
                },
              ]),
              n
            );
          })(ve),
          ge = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r, i, a, o) {
              var s;
              k(this, n),
                ((s = t.call(this, i)).fragOffset = 0),
                (s.duration = 0),
                (s.gap = !1),
                (s.independent = !1),
                (s.relurl = void 0),
                (s.fragment = void 0),
                (s.index = void 0),
                (s.stats = new de()),
                (s.duration = e.decimalFloatingPoint('DURATION')),
                (s.gap = e.bool('GAP')),
                (s.independent = e.bool('INDEPENDENT')),
                (s.relurl = e.enumeratedString('URI')),
                (s.fragment = r),
                (s.index = a);
              var l = e.enumeratedString('BYTERANGE');
              return l && s.setByteRange(l, o), o && (s.fragOffset = o.fragOffset + o.duration), s;
            }
            return (
              w(n, [
                {
                  key: 'start',
                  get: function () {
                    return this.fragment.start + this.fragOffset;
                  },
                },
                {
                  key: 'end',
                  get: function () {
                    return this.start + this.duration;
                  },
                },
                {
                  key: 'loaded',
                  get: function () {
                    var e = this.elementaryStreams;
                    return !!(e.audio || e.video || e.audiovideo);
                  },
                },
              ]),
              n
            );
          })(ve),
          ye = (function () {
            function e(t) {
              k(this, e),
                (this.PTSKnown = !1),
                (this.alignedSliding = !1),
                (this.averagetargetduration = void 0),
                (this.endCC = 0),
                (this.endSN = 0),
                (this.fragments = void 0),
                (this.fragmentHint = void 0),
                (this.partList = null),
                (this.dateRanges = void 0),
                (this.live = !0),
                (this.ageHeader = 0),
                (this.advancedDateTime = void 0),
                (this.updated = !0),
                (this.advanced = !0),
                (this.availabilityDelay = void 0),
                (this.misses = 0),
                (this.startCC = 0),
                (this.startSN = 0),
                (this.startTimeOffset = null),
                (this.targetduration = 0),
                (this.totalduration = 0),
                (this.type = null),
                (this.url = void 0),
                (this.m3u8 = ''),
                (this.version = null),
                (this.canBlockReload = !1),
                (this.canSkipUntil = 0),
                (this.canSkipDateRanges = !1),
                (this.skippedSegments = 0),
                (this.recentlyRemovedDateranges = void 0),
                (this.partHoldBack = 0),
                (this.holdBack = 0),
                (this.partTarget = 0),
                (this.preloadHint = void 0),
                (this.renditionReports = void 0),
                (this.tuneInGoal = 0),
                (this.deltaUpdateFailed = void 0),
                (this.driftStartTime = 0),
                (this.driftEndTime = 0),
                (this.driftStart = 0),
                (this.driftEnd = 0),
                (this.encryptedFragments = void 0),
                (this.playlistParsingError = null),
                (this.variableList = null),
                (this.hasVariableRefs = !1),
                (this.fragments = []),
                (this.encryptedFragments = []),
                (this.dateRanges = {}),
                (this.url = t);
            }
            return (
              w(e, [
                {
                  key: 'reloaded',
                  value: function (e) {
                    if (!e) return (this.advanced = !0), void (this.updated = !0);
                    var t = this.lastPartSn - e.lastPartSn,
                      n = this.lastPartIndex - e.lastPartIndex;
                    (this.updated = this.endSN !== e.endSN || !!n || !!t),
                      (this.advanced = this.endSN > e.endSN || t > 0 || (0 === t && n > 0)),
                      this.updated || this.advanced ? (this.misses = Math.floor(0.6 * e.misses)) : (this.misses = e.misses + 1),
                      (this.availabilityDelay = e.availabilityDelay);
                  },
                },
                {
                  key: 'hasProgramDateTime',
                  get: function () {
                    return !!this.fragments.length && $(this.fragments[this.fragments.length - 1].programDateTime);
                  },
                },
                {
                  key: 'levelTargetDuration',
                  get: function () {
                    return this.averagetargetduration || this.targetduration || 10;
                  },
                },
                {
                  key: 'drift',
                  get: function () {
                    var e = this.driftEndTime - this.driftStartTime;
                    return e > 0 ? (1e3 * (this.driftEnd - this.driftStart)) / e : 1;
                  },
                },
                {
                  key: 'edge',
                  get: function () {
                    return this.partEnd || this.fragmentEnd;
                  },
                },
                {
                  key: 'partEnd',
                  get: function () {
                    var e;
                    return null != (e = this.partList) && e.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd;
                  },
                },
                {
                  key: 'fragmentEnd',
                  get: function () {
                    var e;
                    return null != (e = this.fragments) && e.length ? this.fragments[this.fragments.length - 1].end : 0;
                  },
                },
                {
                  key: 'age',
                  get: function () {
                    return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0;
                  },
                },
                {
                  key: 'lastPartIndex',
                  get: function () {
                    var e;
                    return null != (e = this.partList) && e.length ? this.partList[this.partList.length - 1].index : -1;
                  },
                },
                {
                  key: 'lastPartSn',
                  get: function () {
                    var e;
                    return null != (e = this.partList) && e.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN;
                  },
                },
              ]),
              e
            );
          })();
        function _e(e) {
          return Uint8Array.from(atob(e), function (e) {
            return e.charCodeAt(0);
          });
        }
        function be(e) {
          var t,
            n,
            r = e.split(':'),
            i = null;
          if ('data' === r[0] && 2 === r.length) {
            var a = r[1].split(';'),
              o = a[a.length - 1].split(',');
            if (2 === o.length) {
              var s = 'base64' === o[0],
                l = o[1];
              s ? (a.splice(-1, 1), (i = _e(l))) : ((t = Ee(l).subarray(0, 16)), (n = new Uint8Array(16)).set(t, 16 - t.length), (i = n));
            }
          }
          return i;
        }
        function Ee(e) {
          return Uint8Array.from(unescape(encodeURIComponent(e)), function (e) {
            return e.charCodeAt(0);
          });
        }
        var Se = { CLEARKEY: 'org.w3.clearkey', FAIRPLAY: 'com.apple.fps', PLAYREADY: 'com.microsoft.playready', WIDEVINE: 'com.widevine.alpha' },
          ke = 'org.w3.clearkey',
          Te = 'com.apple.streamingkeydelivery',
          we = 'com.microsoft.playready',
          Ae = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';
        function Le(e) {
          switch (e) {
            case Te:
              return Se.FAIRPLAY;
            case we:
              return Se.PLAYREADY;
            case Ae:
              return Se.WIDEVINE;
            case ke:
              return Se.CLEARKEY;
          }
        }
        var Re = 'edef8ba979d64acea3c827dcd51d21ed';
        function Ce(e) {
          switch (e) {
            case Se.FAIRPLAY:
              return Te;
            case Se.PLAYREADY:
              return we;
            case Se.WIDEVINE:
              return Ae;
            case Se.CLEARKEY:
              return ke;
          }
        }
        function xe(e) {
          var t = e.drmSystems,
            n = e.widevineLicenseUrl,
            r = t
              ? [Se.FAIRPLAY, Se.WIDEVINE, Se.PLAYREADY, Se.CLEARKEY].filter(function (e) {
                  return !!t[e];
                })
              : [];
          return !r[Se.WIDEVINE] && n && r.push(Se.WIDEVINE), r;
        }
        var De = 'undefined' != typeof self && self.navigator && self.navigator.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null;
        function Ie(e, t, n) {
          return Uint8Array.prototype.slice ? e.slice(t, n) : new Uint8Array(Array.prototype.slice.call(e, t, n));
        }
        var Me,
          Pe = function (e, t) {
            return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128;
          },
          Oe = function (e, t) {
            return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128;
          },
          Fe = function (e, t) {
            for (var n = t, r = 0; Pe(e, t); ) {
              (r += 10), (r += Ne(e, t + 6)), Oe(e, t + 10) && (r += 10), (t += r);
            }
            if (r > 0) return e.subarray(n, n + r);
          },
          Ne = function (e, t) {
            var n = 0;
            return (n = (127 & e[t]) << 21), (n |= (127 & e[t + 1]) << 14), (n |= (127 & e[t + 2]) << 7), (n |= 127 & e[t + 3]);
          },
          Be = function (e, t) {
            return Pe(e, t) && Ne(e, t + 6) + 10 <= e.length - t;
          },
          Ue = function (e) {
            return e && 'PRIV' === e.key && 'com.apple.streaming.transportStreamTimestamp' === e.info;
          },
          ze = function (e) {
            var t = String.fromCharCode(e[0], e[1], e[2], e[3]),
              n = Ne(e, 4);
            return { type: t, size: n, data: e.subarray(10, 10 + n) };
          },
          He = function (e) {
            for (var t = 0, n = []; Pe(e, t); ) {
              for (var r = Ne(e, t + 6), i = (t += 10) + r; t + 8 < i; ) {
                var a = ze(e.subarray(t)),
                  o = Ve(a);
                o && n.push(o), (t += a.size + 10);
              }
              Oe(e, t) && (t += 10);
            }
            return n;
          },
          Ve = function (e) {
            return 'PRIV' === e.type ? Ge(e) : 'W' === e.type[0] ? Ke(e) : je(e);
          },
          Ge = function (e) {
            if (!(e.size < 2)) {
              var t = qe(e.data, !0),
                n = new Uint8Array(e.data.subarray(t.length + 1));
              return { key: e.type, info: t, data: n.buffer };
            }
          },
          je = function (e) {
            if (!(e.size < 2)) {
              if ('TXXX' === e.type) {
                var t = 1,
                  n = qe(e.data.subarray(t), !0);
                t += n.length + 1;
                var r = qe(e.data.subarray(t));
                return { key: e.type, info: n, data: r };
              }
              var i = qe(e.data.subarray(1));
              return { key: e.type, data: i };
            }
          },
          Ke = function (e) {
            if ('WXXX' === e.type) {
              if (e.size < 2) return;
              var t = 1,
                n = qe(e.data.subarray(t), !0);
              t += n.length + 1;
              var r = qe(e.data.subarray(t));
              return { key: e.type, info: n, data: r };
            }
            var i = qe(e.data);
            return { key: e.type, data: i };
          },
          We = function (e) {
            if (8 === e.data.byteLength) {
              var t = new Uint8Array(e.data),
                n = 1 & t[3],
                r = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
              return (r /= 45), n && (r += 47721858.84), Math.round(r);
            }
          },
          qe = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              n = Ye();
            if (n) {
              var r = n.decode(e);
              if (t) {
                var i = r.indexOf('\0');
                return -1 !== i ? r.substring(0, i) : r;
              }
              return r.replace(/\0/g, '');
            }
            for (var a, o, s, l = e.length, u = '', c = 0; c < l; ) {
              if (0 === (a = e[c++]) && t) return u;
              if (0 !== a && 3 !== a)
                switch (a >> 4) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                  case 4:
                  case 5:
                  case 6:
                  case 7:
                    u += String.fromCharCode(a);
                    break;
                  case 12:
                  case 13:
                    (o = e[c++]), (u += String.fromCharCode(((31 & a) << 6) | (63 & o)));
                    break;
                  case 14:
                    (o = e[c++]), (s = e[c++]), (u += String.fromCharCode(((15 & a) << 12) | ((63 & o) << 6) | ((63 & s) << 0)));
                }
            }
            return u;
          };
        function Ye() {
          return Me || void 0 === self.TextDecoder || (Me = new self.TextDecoder('utf-8')), Me;
        }
        var Xe = function (e) {
            for (var t = '', n = 0; n < e.length; n++) {
              var r = e[n].toString(16);
              r.length < 2 && (r = '0' + r), (t += r);
            }
            return t;
          },
          $e = Math.pow(2, 32) - 1,
          Qe = [].push,
          Ze = { video: 1, audio: 2, id3: 3, text: 4 };
        function Je(e) {
          return String.fromCharCode.apply(null, e);
        }
        function et(e, t) {
          var n = (e[t] << 8) | e[t + 1];
          return n < 0 ? 65536 + n : n;
        }
        function tt(e, t) {
          var n = nt(e, t);
          return n < 0 ? 4294967296 + n : n;
        }
        function nt(e, t) {
          return (e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3];
        }
        function rt(e, t, n) {
          (e[t] = n >> 24), (e[t + 1] = (n >> 16) & 255), (e[t + 2] = (n >> 8) & 255), (e[t + 3] = 255 & n);
        }
        function it(e, t) {
          var n = [];
          if (!t.length) return n;
          for (var r = e.byteLength, i = 0; i < r; ) {
            var a = tt(e, i),
              o = a > 1 ? i + a : r;
            if (Je(e.subarray(i + 4, i + 8)) === t[0])
              if (1 === t.length) n.push(e.subarray(i + 8, o));
              else {
                var s = it(e.subarray(i + 8, o), t.slice(1));
                s.length && Qe.apply(n, s);
              }
            i = o;
          }
          return n;
        }
        function at(e) {
          var t = [],
            n = e[0],
            r = 8,
            i = tt(e, r);
          r += 4;
          (r += 0 === n ? 8 : 16), (r += 2);
          var a = e.length + 0,
            o = et(e, r);
          r += 2;
          for (var s = 0; s < o; s++) {
            var l = r,
              u = tt(e, l);
            l += 4;
            var c = 2147483647 & u;
            if (1 === (2147483648 & u) >>> 31) return ae.warn('SIDX has hierarchical references (not supported)'), null;
            var d = tt(e, l);
            (l += 4), t.push({ referenceSize: c, subsegmentDuration: d, info: { duration: d / i, start: a, end: a + c - 1 } }), (a += c), (r = l += 4);
          }
          return { earliestPresentationTime: 0, timescale: i, version: n, referencesCount: o, references: t };
        }
        function ot(e) {
          for (var t = [], n = it(e, ['moov', 'trak']), r = 0; r < n.length; r++) {
            var i = n[r],
              a = it(i, ['tkhd'])[0];
            if (a) {
              var o = a[0],
                s = 0 === o ? 12 : 20,
                l = tt(a, s),
                u = it(i, ['mdia', 'mdhd'])[0];
              if (u) {
                var c = tt(u, (s = 0 === (o = u[0]) ? 12 : 20)),
                  d = it(i, ['mdia', 'hdlr'])[0];
                if (d) {
                  var f = Je(d.subarray(8, 12)),
                    h = { soun: fe, vide: he }[f];
                  if (h) {
                    var p = it(i, ['mdia', 'minf', 'stbl', 'stsd'])[0],
                      v = void 0;
                    p && (v = Je(p.subarray(12, 16))), (t[l] = { timescale: c, type: h }), (t[h] = { timescale: c, id: l, codec: v });
                  }
                }
              }
            }
          }
          return (
            it(e, ['moov', 'mvex', 'trex']).forEach(function (e) {
              var n = tt(e, 4),
                r = t[n];
              r && (r.default = { duration: tt(e, 12), flags: tt(e, 20) });
            }),
            t
          );
        }
        function st(e) {
          var t = it(e, ['schm'])[0];
          if (t) {
            var n = Je(t.subarray(4, 8));
            if ('cbcs' === n || 'cenc' === n) return it(e, ['schi', 'tenc'])[0];
          }
          return ae.error("[eme] missing 'schm' box"), null;
        }
        function lt(e) {
          var t = tt(e, 0),
            n = 8;
          1 & t && (n += 4), 4 & t && (n += 4);
          for (var r = 0, i = tt(e, 4), a = 0; a < i; a++) {
            if (256 & t) (r += tt(e, n)), (n += 4);
            512 & t && (n += 4), 1024 & t && (n += 4), 2048 & t && (n += 4);
          }
          return r;
        }
        function ut(e, t) {
          var n = new Uint8Array(e.length + t.length);
          return n.set(e), n.set(t, e.length), n;
        }
        function ct(e, t) {
          var n = [],
            r = t.samples,
            i = t.timescale,
            a = t.id,
            o = !1;
          return (
            it(r, ['moof']).map(function (s) {
              var l = s.byteOffset - 8;
              it(s, ['traf']).map(function (s) {
                var u = it(s, ['tfdt']).map(function (e) {
                  var t = e[0],
                    n = tt(e, 4);
                  return 1 === t && ((n *= Math.pow(2, 32)), (n += tt(e, 8))), n / i;
                })[0];
                return (
                  void 0 !== u && (e = u),
                  it(s, ['tfhd']).map(function (u) {
                    var c = tt(u, 4),
                      d = 16777215 & tt(u, 0),
                      f = 0,
                      h = 0 != (16 & d),
                      p = 0,
                      v = 0 != (32 & d),
                      m = 8;
                    c === a &&
                      (0 != (1 & d) && (m += 8),
                      0 != (2 & d) && (m += 4),
                      0 != (8 & d) && ((f = tt(u, m)), (m += 4)),
                      h && ((p = tt(u, m)), (m += 4)),
                      v && (m += 4),
                      'video' === t.type &&
                        (o = (function (e) {
                          if (!e) return !1;
                          var t = e.indexOf('.'),
                            n = t < 0 ? e : e.substring(0, t);
                          return 'hvc1' === n || 'hev1' === n || 'dvh1' === n || 'dvhe' === n;
                        })(t.codec)),
                      it(s, ['trun']).map(function (a) {
                        var s = a[0],
                          u = 16777215 & tt(a, 0),
                          c = 0 != (1 & u),
                          d = 0,
                          h = 0 != (4 & u),
                          v = 0 != (256 & u),
                          m = 0,
                          g = 0 != (512 & u),
                          y = 0,
                          _ = 0 != (1024 & u),
                          b = 0 != (2048 & u),
                          E = 0,
                          S = tt(a, 4),
                          k = 8;
                        c && ((d = tt(a, k)), (k += 4)), h && (k += 4);
                        for (var T = d + l, w = 0; w < S; w++) {
                          if ((v ? ((m = tt(a, k)), (k += 4)) : (m = f), g ? ((y = tt(a, k)), (k += 4)) : (y = p), _ && (k += 4), b && ((E = 0 === s ? tt(a, k) : nt(a, k)), (k += 4)), t.type === he))
                            for (var A = 0; A < y; ) {
                              var L = tt(r, T);
                              if (dt(o, r[(T += 4)])) ft(r.subarray(T, T + L), o ? 2 : 1, e + E / i, n);
                              (T += L), (A += L + 4);
                            }
                          e += m / i;
                        }
                      }));
                  })
                );
              });
            }),
            n
          );
        }
        function dt(e, t) {
          if (e) {
            var n = (t >> 1) & 63;
            return 39 === n || 40 === n;
          }
          return 6 === (31 & t);
        }
        function ft(e, t, n, r) {
          var i = ht(e),
            a = 0;
          a += t;
          for (var o = 0, s = 0, l = !1, u = 0; a < i.length; ) {
            o = 0;
            do {
              if (a >= i.length) break;
              o += u = i[a++];
            } while (255 === u);
            s = 0;
            do {
              if (a >= i.length) break;
              s += u = i[a++];
            } while (255 === u);
            var c = i.length - a;
            if (!l && 4 === o && a < i.length) {
              if (((l = !0), 181 === i[a++])) {
                var d = et(i, a);
                if (((a += 2), 49 === d)) {
                  var f = tt(i, a);
                  if (((a += 4), 1195456820 === f)) {
                    var h = i[a++];
                    if (3 === h) {
                      var p = i[a++],
                        v = 64 & p,
                        m = v ? 2 + 3 * (31 & p) : 0,
                        g = new Uint8Array(m);
                      if (v) {
                        g[0] = p;
                        for (var y = 1; y < m; y++) g[y] = i[a++];
                      }
                      r.push({ type: h, payloadType: o, pts: n, bytes: g });
                    }
                  }
                }
              }
            } else if (5 === o && s < c) {
              if (((l = !0), s > 16)) {
                for (var _ = [], b = 0; b < 16; b++) {
                  var E = i[a++].toString(16);
                  _.push(1 == E.length ? '0' + E : E), (3 !== b && 5 !== b && 7 !== b && 9 !== b) || _.push('-');
                }
                for (var S = s - 16, k = new Uint8Array(S), T = 0; T < S; T++) k[T] = i[a++];
                r.push({ payloadType: o, pts: n, uuid: _.join(''), userData: qe(k), userDataBytes: k });
              }
            } else if (s < c) a += s;
            else if (s > c) break;
          }
        }
        function ht(e) {
          for (var t = e.byteLength, n = [], r = 1; r < t - 2; ) 0 === e[r] && 0 === e[r + 1] && 3 === e[r + 2] ? (n.push(r + 2), (r += 2)) : r++;
          if (0 === n.length) return e;
          var i = t - n.length,
            a = new Uint8Array(i),
            o = 0;
          for (r = 0; r < i; o++, r++) o === n[0] && (o++, n.shift()), (a[r] = e[o]);
          return a;
        }
        function pt(e, t, n) {
          if (16 !== e.byteLength) throw new RangeError('Invalid system id');
          var r, i, a;
          if (t) {
            (r = 1), (i = new Uint8Array(16 * t.length));
            for (var o = 0; o < t.length; o++) {
              var s = t[o];
              if (16 !== s.byteLength) throw new RangeError('Invalid key');
              i.set(s, 16 * o);
            }
          } else (r = 0), (i = new Uint8Array());
          r > 0 ? ((a = new Uint8Array(4)), t.length > 0 && new DataView(a.buffer).setUint32(0, t.length, !1)) : (a = new Uint8Array());
          var l = new Uint8Array(4);
          return (
            n && n.byteLength > 0 && new DataView(l.buffer).setUint32(0, n.byteLength, !1),
            (function (e) {
              for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
              for (var i = n.length, a = 8, o = i; o--; ) a += n[o].byteLength;
              var s = new Uint8Array(a);
              for (s[0] = (a >> 24) & 255, s[1] = (a >> 16) & 255, s[2] = (a >> 8) & 255, s[3] = 255 & a, s.set(e, 4), o = 0, a = 8; o < i; o++) s.set(n[o], a), (a += n[o].byteLength);
              return s;
            })([112, 115, 115, 104], new Uint8Array([r, 0, 0, 0]), e, a, i, l, n || new Uint8Array())
          );
        }
        var vt = {},
          mt = (function () {
            function e(t, n, r) {
              var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [1],
                a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
              k(this, e),
                (this.uri = void 0),
                (this.method = void 0),
                (this.keyFormat = void 0),
                (this.keyFormatVersions = void 0),
                (this.encrypted = void 0),
                (this.isCommonEncryption = void 0),
                (this.iv = null),
                (this.key = null),
                (this.keyId = null),
                (this.pssh = null),
                (this.method = t),
                (this.uri = n),
                (this.keyFormat = r),
                (this.keyFormatVersions = i),
                (this.iv = a),
                (this.encrypted = !!t && 'NONE' !== t),
                (this.isCommonEncryption = this.encrypted && 'AES-128' !== t);
            }
            return (
              w(
                e,
                [
                  {
                    key: 'isSupported',
                    value: function () {
                      if (this.method) {
                        if ('AES-128' === this.method || 'NONE' === this.method) return !0;
                        if ('identity' === this.keyFormat) return 'SAMPLE-AES' === this.method;
                        switch (this.keyFormat) {
                          case Te:
                          case Ae:
                          case we:
                          case ke:
                            return -1 !== ['ISO-23001-7', 'SAMPLE-AES', 'SAMPLE-AES-CENC', 'SAMPLE-AES-CTR'].indexOf(this.method);
                        }
                      }
                      return !1;
                    },
                  },
                  {
                    key: 'getDecryptData',
                    value: function (t) {
                      if (!this.encrypted || !this.uri) return null;
                      if ('AES-128' === this.method && this.uri && !this.iv) {
                        'number' != typeof t &&
                          ('AES-128' !== this.method || this.iv || ae.warn('missing IV for initialization segment with method="'.concat(this.method, '" - compliance issue')), (t = 0));
                        var n = (function (e) {
                          for (var t = new Uint8Array(16), n = 12; n < 16; n++) t[n] = (e >> (8 * (15 - n))) & 255;
                          return t;
                        })(t);
                        return new e(this.method, this.uri, 'identity', this.keyFormatVersions, n);
                      }
                      var r = be(this.uri);
                      if (r)
                        switch (this.keyFormat) {
                          case Ae:
                            (this.pssh = r), r.length >= 22 && (this.keyId = r.subarray(r.length - 22, r.length - 6));
                            break;
                          case we:
                            var i = new Uint8Array([154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91, 224, 136, 95, 149]);
                            this.pssh = pt(i, null, r);
                            var a = new Uint16Array(r.buffer, r.byteOffset, r.byteLength / 2),
                              o = String.fromCharCode.apply(null, Array.from(a)),
                              s = o.substring(o.indexOf('<'), o.length),
                              l = new DOMParser().parseFromString(s, 'text/xml').getElementsByTagName('KID')[0];
                            if (l) {
                              var u = l.childNodes[0] ? l.childNodes[0].nodeValue : l.getAttribute('VALUE');
                              if (u) {
                                var c = _e(u).subarray(0, 16);
                                !(function (e) {
                                  var t = function (e, t, n) {
                                    var r = e[t];
                                    (e[t] = e[n]), (e[n] = r);
                                  };
                                  t(e, 0, 3), t(e, 1, 2), t(e, 4, 5), t(e, 6, 7);
                                })(c),
                                  (this.keyId = c);
                              }
                            }
                            break;
                          default:
                            var d = r.subarray(0, 16);
                            if (16 !== d.length) {
                              var f = new Uint8Array(16);
                              f.set(d, 16 - d.length), (d = f);
                            }
                            this.keyId = d;
                        }
                      if (!this.keyId || 16 !== this.keyId.byteLength) {
                        var h = vt[this.uri];
                        if (!h) {
                          var p = Object.keys(vt).length % Number.MAX_SAFE_INTEGER;
                          (h = new Uint8Array(16)), new DataView(h.buffer, 12, 4).setUint32(0, p), (vt[this.uri] = h);
                        }
                        this.keyId = h;
                      }
                      return this;
                    },
                  },
                ],
                [
                  {
                    key: 'clearKeyUriToKeyIdMap',
                    value: function () {
                      vt = {};
                    },
                  },
                ],
              ),
              e
            );
          })();
        var gt = /\{\$([a-zA-Z0-9-_]+)\}/g;
        function yt(e) {
          return gt.test(e);
        }
        function _t(e, t, n) {
          if (null !== e.variableList || e.hasVariableRefs)
            for (var r = n.length; r--; ) {
              var i = n[r],
                a = t[i];
              a && (t[i] = bt(e, a));
            }
        }
        function bt(e, t) {
          if (null !== e.variableList || e.hasVariableRefs) {
            var n = e.variableList;
            return t.replace(gt, function (t) {
              var r = t.substring(2, t.length - 1),
                i = null == n ? void 0 : n[r];
              return void 0 === i ? (e.playlistParsingError || (e.playlistParsingError = new Error('Missing preceding EXT-X-DEFINE tag for Variable Reference: "'.concat(r, '"'))), t) : i;
            });
          }
          return t;
        }
        function Et(e, t, n) {
          var r,
            i,
            a = e.variableList;
          if ((a || (e.variableList = a = {}), 'QUERYPARAM' in t)) {
            r = t.QUERYPARAM;
            try {
              var o = new self.URL(n).searchParams;
              if (!o.has(r)) throw new Error('"'.concat(r, '" does not match any query parameter in URI: "').concat(n, '"'));
              i = o.get(r);
            } catch (t) {
              e.playlistParsingError || (e.playlistParsingError = new Error('EXT-X-DEFINE QUERYPARAM: '.concat(t.message)));
            }
          } else (r = t.NAME), (i = t.VALUE);
          r in a ? e.playlistParsingError || (e.playlistParsingError = new Error('EXT-X-DEFINE duplicate Variable Name declarations: "'.concat(r, '"'))) : (a[r] = i || '');
        }
        function St(e, t, n) {
          var r = t.IMPORT;
          if (n && r in n) {
            var i = e.variableList;
            i || (e.variableList = i = {}), (i[r] = n[r]);
          } else e.playlistParsingError || (e.playlistParsingError = new Error('EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "'.concat(r, '"')));
        }
        function kt() {
          if ('undefined' != typeof self) return self.MediaSource || self.WebKitMediaSource;
        }
        var Tt = {
            audio: {
              a3ds: !0,
              'ac-3': !0,
              'ac-4': !0,
              alac: !0,
              alaw: !0,
              dra1: !0,
              'dts+': !0,
              'dts-': !0,
              dtsc: !0,
              dtse: !0,
              dtsh: !0,
              'ec-3': !0,
              enca: !0,
              g719: !0,
              g726: !0,
              m4ae: !0,
              mha1: !0,
              mha2: !0,
              mhm1: !0,
              mhm2: !0,
              mlpa: !0,
              mp4a: !0,
              'raw ': !0,
              Opus: !0,
              opus: !0,
              samr: !0,
              sawb: !0,
              sawp: !0,
              sevc: !0,
              sqcp: !0,
              ssmv: !0,
              twos: !0,
              ulaw: !0,
            },
            video: {
              avc1: !0,
              avc2: !0,
              avc3: !0,
              avc4: !0,
              avcp: !0,
              av01: !0,
              drac: !0,
              dva1: !0,
              dvav: !0,
              dvh1: !0,
              dvhe: !0,
              encv: !0,
              hev1: !0,
              hvc1: !0,
              mjp2: !0,
              mp4v: !0,
              mvc1: !0,
              mvc2: !0,
              mvc3: !0,
              mvc4: !0,
              resv: !0,
              rv60: !0,
              s263: !0,
              svc1: !0,
              svc2: !0,
              'vc-1': !0,
              vp08: !0,
              vp09: !0,
            },
            text: { stpp: !0, wvtt: !0 },
          },
          wt = kt();
        function At(e, t) {
          var n;
          return null != (n = null == wt ? void 0 : wt.isTypeSupported(''.concat(t || 'video', '/mp4;codecs="').concat(e, '"'))) && n;
        }
        var Lt = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,
          Rt = /#EXT-X-MEDIA:(.*)/g,
          Ct = /^#EXT(?:INF|-X-TARGETDURATION):/m,
          xt = new RegExp(
            [/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[\S ]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join('|'),
            'g',
          ),
          Dt = new RegExp(
            [
              /#(EXTM3U)/.source,
              /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source,
              /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source,
              /#EXT-X-(DISCONTINUITY|ENDLIST|GAP)/.source,
              /(#)([^:]*):(.*)/.source,
              /(#)(.*)(?:.*)\r?\n?/.source,
            ].join('|'),
          ),
          It = (function () {
            function e() {
              k(this, e);
            }
            return (
              w(e, null, [
                {
                  key: 'findGroup',
                  value: function (e, t) {
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n];
                      if (r.id === t) return r;
                    }
                  },
                },
                {
                  key: 'convertAVC1ToAVCOTI',
                  value: function (e) {
                    var t = e.split('.');
                    if (t.length > 2) {
                      var n = t.shift() + '.';
                      return (n += parseInt(t.shift()).toString(16)), (n += ('000' + parseInt(t.shift()).toString(16)).slice(-4));
                    }
                    return e;
                  },
                },
                {
                  key: 'resolve',
                  value: function (e, t) {
                    return K.buildAbsoluteURL(t, e, { alwaysNormalize: !0 });
                  },
                },
                {
                  key: 'isMediaPlaylist',
                  value: function (e) {
                    return Ct.test(e);
                  },
                },
                {
                  key: 'parseMasterPlaylist',
                  value: function (t, n) {
                    var r,
                      i = { contentSteering: null, levels: [], playlistParsingError: null, sessionData: null, sessionKeys: null, startTimeOffset: null, variableList: null, hasVariableRefs: yt(t) },
                      a = [];
                    for (Lt.lastIndex = 0; null != (r = Lt.exec(t)); )
                      if (r[1]) {
                        var o,
                          s = new le(r[1]);
                        _t(i, s, ['CODECS', 'SUPPLEMENTAL-CODECS', 'ALLOWED-CPC', 'PATHWAY-ID', 'STABLE-VARIANT-ID', 'AUDIO', 'VIDEO', 'SUBTITLES', 'CLOSED-CAPTIONS', 'NAME']);
                        var l = bt(i, r[2]),
                          u = { attrs: s, bitrate: s.decimalInteger('AVERAGE-BANDWIDTH') || s.decimalInteger('BANDWIDTH'), name: s.NAME, url: e.resolve(l, n) },
                          c = s.decimalResolution('RESOLUTION');
                        c && ((u.width = c.width), (u.height = c.height)),
                          Ot(
                            (s.CODECS || '').split(/[ ,]+/).filter(function (e) {
                              return e;
                            }),
                            u,
                          ),
                          u.videoCodec && -1 !== u.videoCodec.indexOf('avc1') && (u.videoCodec = e.convertAVC1ToAVCOTI(u.videoCodec)),
                          (null != (o = u.unknownCodecs) && o.length) || a.push(u),
                          i.levels.push(u);
                      } else if (r[3]) {
                        var d = r[3],
                          f = r[4];
                        switch (d) {
                          case 'SESSION-DATA':
                            var h = new le(f);
                            _t(i, h, ['DATA-ID', 'LANGUAGE', 'VALUE', 'URI']);
                            var p = h['DATA-ID'];
                            p && (null === i.sessionData && (i.sessionData = {}), (i.sessionData[p] = h));
                            break;
                          case 'SESSION-KEY':
                            var v = Mt(f, n, i);
                            v.encrypted && v.isSupported()
                              ? (null === i.sessionKeys && (i.sessionKeys = []), i.sessionKeys.push(v))
                              : ae.warn('[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "'.concat(f, '"'));
                            break;
                          case 'DEFINE':
                            var m = new le(f);
                            _t(i, m, ['NAME', 'VALUE', 'QUERYPARAM']), Et(i, m, n);
                            break;
                          case 'CONTENT-STEERING':
                            var g = new le(f);
                            _t(i, g, ['SERVER-URI', 'PATHWAY-ID']), (i.contentSteering = { uri: e.resolve(g['SERVER-URI'], n), pathwayId: g['PATHWAY-ID'] || '.' });
                            break;
                          case 'START':
                            i.startTimeOffset = Pt(f);
                        }
                      }
                    var y = a.length > 0 && a.length < i.levels.length;
                    return (i.levels = y ? a : i.levels), 0 === i.levels.length && (i.playlistParsingError = new Error('no levels found in manifest')), i;
                  },
                },
                {
                  key: 'parseMasterPlaylistMedia',
                  value: function (t, n, r) {
                    var i,
                      a = {},
                      o = r.levels,
                      s = {
                        AUDIO: o.map(function (e) {
                          return { id: e.attrs.AUDIO, audioCodec: e.audioCodec };
                        }),
                        SUBTITLES: o.map(function (e) {
                          return { id: e.attrs.SUBTITLES, textCodec: e.textCodec };
                        }),
                        'CLOSED-CAPTIONS': [],
                      },
                      l = 0;
                    for (Rt.lastIndex = 0; null !== (i = Rt.exec(t)); ) {
                      var u = new le(i[1]),
                        c = u.TYPE;
                      if (c) {
                        var d = s[c],
                          f = a[c] || [];
                        (a[c] = f), _t(r, u, ['URI', 'GROUP-ID', 'LANGUAGE', 'ASSOC-LANGUAGE', 'STABLE-RENDITION-ID', 'NAME', 'INSTREAM-ID', 'CHARACTERISTICS', 'CHANNELS']);
                        var h = {
                          attrs: u,
                          bitrate: 0,
                          id: l++,
                          groupId: u['GROUP-ID'] || '',
                          instreamId: u['INSTREAM-ID'],
                          name: u.NAME || u.LANGUAGE || '',
                          type: c,
                          default: u.bool('DEFAULT'),
                          autoselect: u.bool('AUTOSELECT'),
                          forced: u.bool('FORCED'),
                          lang: u.LANGUAGE,
                          url: u.URI ? e.resolve(u.URI, n) : '',
                        };
                        if (null != d && d.length) {
                          var p = e.findGroup(d, h.groupId) || d[0];
                          Ft(h, p, 'audioCodec'), Ft(h, p, 'textCodec');
                        }
                        f.push(h);
                      }
                    }
                    return a;
                  },
                },
                {
                  key: 'parseLevelPlaylist',
                  value: function (e, t, n, r, i, a) {
                    var o,
                      s,
                      l,
                      u = new ye(t),
                      c = u.fragments,
                      d = null,
                      f = 0,
                      h = 0,
                      p = 0,
                      v = 0,
                      m = null,
                      g = new me(r, t),
                      y = -1,
                      _ = !1;
                    for (xt.lastIndex = 0, u.m3u8 = e, u.hasVariableRefs = yt(e); null !== (o = xt.exec(e)); ) {
                      _ &&
                        ((_ = !1),
                        ((g = new me(r, t)).start = p),
                        (g.sn = f),
                        (g.cc = v),
                        (g.level = n),
                        d && ((g.initSegment = d), (g.rawProgramDateTime = d.rawProgramDateTime), (d.rawProgramDateTime = null)));
                      var b = o[1];
                      if (b) {
                        g.duration = parseFloat(b);
                        var E = (' ' + o[2]).slice(1);
                        (g.title = E || null), g.tagList.push(E ? ['INF', b, E] : ['INF', b]);
                      } else if (o[3]) {
                        if ($(g.duration)) {
                          (g.start = p), l && Ut(g, l, u), (g.sn = f), (g.level = n), (g.cc = v), (g.urlId = i), c.push(g);
                          var S = (' ' + o[3]).slice(1);
                          (g.relurl = bt(u, S)), Nt(g, m), (m = g), (p += g.duration), f++, (h = 0), (_ = !0);
                        }
                      } else if (o[4]) {
                        var k = (' ' + o[4]).slice(1);
                        m ? g.setByteRange(k, m) : g.setByteRange(k);
                      } else if (o[5]) (g.rawProgramDateTime = (' ' + o[5]).slice(1)), g.tagList.push(['PROGRAM-DATE-TIME', g.rawProgramDateTime]), -1 === y && (y = c.length);
                      else {
                        if (!(o = o[0].match(Dt))) {
                          ae.warn('No matches on slow regex match for level playlist!');
                          continue;
                        }
                        for (s = 1; s < o.length && void 0 === o[s]; s++);
                        var T = (' ' + o[s]).slice(1),
                          w = (' ' + o[s + 1]).slice(1),
                          A = o[s + 2] ? (' ' + o[s + 2]).slice(1) : '';
                        switch (T) {
                          case 'PLAYLIST-TYPE':
                            u.type = w.toUpperCase();
                            break;
                          case 'MEDIA-SEQUENCE':
                            f = u.startSN = parseInt(w);
                            break;
                          case 'SKIP':
                            var L = new le(w);
                            _t(u, L, ['RECENTLY-REMOVED-DATERANGES']);
                            var R = L.decimalInteger('SKIPPED-SEGMENTS');
                            if ($(R)) {
                              u.skippedSegments = R;
                              for (var C = R; C--; ) c.unshift(null);
                              f += R;
                            }
                            var x = L.enumeratedString('RECENTLY-REMOVED-DATERANGES');
                            x && (u.recentlyRemovedDateranges = x.split('\t'));
                            break;
                          case 'TARGETDURATION':
                            u.targetduration = Math.max(parseInt(w), 1);
                            break;
                          case 'VERSION':
                            u.version = parseInt(w);
                            break;
                          case 'EXTM3U':
                            break;
                          case 'ENDLIST':
                            u.live = !1;
                            break;
                          case '#':
                            (w || A) && g.tagList.push(A ? [w, A] : [w]);
                            break;
                          case 'DISCONTINUITY':
                            v++, g.tagList.push(['DIS']);
                            break;
                          case 'GAP':
                            (g.gap = !0), g.tagList.push([T]);
                            break;
                          case 'BITRATE':
                            g.tagList.push([T, w]);
                            break;
                          case 'DATERANGE':
                            var D = new le(w);
                            _t(u, D, ['ID', 'CLASS', 'START-DATE', 'END-DATE', 'SCTE35-CMD', 'SCTE35-OUT', 'SCTE35-IN']), _t(u, D, D.clientAttrs);
                            var I = new ce(D, u.dateRanges[D.ID]);
                            I.isValid || u.skippedSegments ? (u.dateRanges[I.id] = I) : ae.warn('Ignoring invalid DATERANGE tag: "'.concat(w, '"')), g.tagList.push(['EXT-X-DATERANGE', w]);
                            break;
                          case 'DEFINE':
                            var M = new le(w);
                            _t(u, M, ['NAME', 'VALUE', 'IMPORT', 'QUERYPARAM']), 'IMPORT' in M ? St(u, M, a) : Et(u, M, t);
                            break;
                          case 'DISCONTINUITY-SEQUENCE':
                            v = parseInt(w);
                            break;
                          case 'KEY':
                            var P = Mt(w, t, u);
                            if (P.isSupported()) {
                              if ('NONE' === P.method) {
                                l = void 0;
                                break;
                              }
                              l || (l = {}), l[P.keyFormat] && (l = X({}, l)), (l[P.keyFormat] = P);
                            } else ae.warn('[Keys] Ignoring invalid EXT-X-KEY tag: "'.concat(w, '"'));
                            break;
                          case 'START':
                            u.startTimeOffset = Pt(w);
                            break;
                          case 'MAP':
                            var O = new le(w);
                            if ((_t(u, O, ['BYTERANGE', 'URI']), g.duration)) {
                              var F = new me(r, t);
                              Bt(F, O, n, l), (d = F), (g.initSegment = d), d.rawProgramDateTime && !g.rawProgramDateTime && (g.rawProgramDateTime = d.rawProgramDateTime);
                            } else Bt(g, O, n, l), (d = g), (_ = !0);
                            break;
                          case 'SERVER-CONTROL':
                            var N = new le(w);
                            (u.canBlockReload = N.bool('CAN-BLOCK-RELOAD')),
                              (u.canSkipUntil = N.optionalFloat('CAN-SKIP-UNTIL', 0)),
                              (u.canSkipDateRanges = u.canSkipUntil > 0 && N.bool('CAN-SKIP-DATERANGES')),
                              (u.partHoldBack = N.optionalFloat('PART-HOLD-BACK', 0)),
                              (u.holdBack = N.optionalFloat('HOLD-BACK', 0));
                            break;
                          case 'PART-INF':
                            var B = new le(w);
                            u.partTarget = B.decimalFloatingPoint('PART-TARGET');
                            break;
                          case 'PART':
                            var U = u.partList;
                            U || (U = u.partList = []);
                            var z = h > 0 ? U[U.length - 1] : void 0,
                              H = h++,
                              V = new le(w);
                            _t(u, V, ['BYTERANGE', 'URI']);
                            var G = new ge(V, g, t, H, z);
                            U.push(G), (g.duration += G.duration);
                            break;
                          case 'PRELOAD-HINT':
                            var j = new le(w);
                            _t(u, j, ['URI']), (u.preloadHint = j);
                            break;
                          case 'RENDITION-REPORT':
                            var K = new le(w);
                            _t(u, K, ['URI']), (u.renditionReports = u.renditionReports || []), u.renditionReports.push(K);
                            break;
                          default:
                            ae.warn('line parsed but not handled: '.concat(o));
                        }
                      }
                    }
                    m && !m.relurl ? (c.pop(), (p -= m.duration), u.partList && (u.fragmentHint = m)) : u.partList && (Nt(g, m), (g.cc = v), (u.fragmentHint = g), l && Ut(g, l, u));
                    var W = c.length,
                      q = c[0],
                      Y = c[W - 1];
                    if ((p += u.skippedSegments * u.targetduration) > 0 && W && Y) {
                      u.averagetargetduration = p / W;
                      var Q = Y.sn;
                      (u.endSN = 'initSegment' !== Q ? Q : 0), u.live || (Y.endList = !0), q && (u.startCC = q.cc);
                    } else (u.endSN = 0), (u.startCC = 0);
                    return (
                      u.fragmentHint && (p += u.fragmentHint.duration),
                      (u.totalduration = p),
                      (u.endCC = v),
                      y > 0 &&
                        (function (e, t) {
                          for (var n = e[t], r = t; r--; ) {
                            var i = e[r];
                            if (!i) return;
                            (i.programDateTime = n.programDateTime - 1e3 * i.duration), (n = i);
                          }
                        })(c, y),
                      u
                    );
                  },
                },
              ]),
              e
            );
          })();
        function Mt(e, t, n) {
          var r,
            i,
            a = new le(e);
          _t(n, a, ['KEYFORMAT', 'KEYFORMATVERSIONS', 'URI', 'IV', 'URI']);
          var o = null != (r = a.METHOD) ? r : '',
            s = a.URI,
            l = a.hexadecimalInteger('IV'),
            u = a.KEYFORMATVERSIONS,
            c = null != (i = a.KEYFORMAT) ? i : 'identity';
          s && a.IV && !l && ae.error('Invalid IV: '.concat(a.IV));
          var d = s ? It.resolve(s, t) : '',
            f = (u || '1').split('/').map(Number).filter(Number.isFinite);
          return new mt(o, d, c, f, l);
        }
        function Pt(e) {
          var t = new le(e).decimalFloatingPoint('TIME-OFFSET');
          return $(t) ? t : null;
        }
        function Ot(e, t) {
          ['video', 'audio', 'text'].forEach(function (n) {
            var r = e.filter(function (e) {
              return (function (e, t) {
                var n = Tt[t];
                return !!n && !0 === n[e.slice(0, 4)];
              })(e, n);
            });
            if (r.length) {
              var i = r.filter(function (e) {
                return 0 === e.lastIndexOf('avc1', 0) || 0 === e.lastIndexOf('mp4a', 0);
              });
              (t[''.concat(n, 'Codec')] = i.length > 0 ? i[0] : r[0]),
                (e = e.filter(function (e) {
                  return -1 === r.indexOf(e);
                }));
            }
          }),
            (t.unknownCodecs = e);
        }
        function Ft(e, t, n) {
          var r = t[n];
          r && (e[n] = r);
        }
        function Nt(e, t) {
          e.rawProgramDateTime ? (e.programDateTime = Date.parse(e.rawProgramDateTime)) : null != t && t.programDateTime && (e.programDateTime = t.endProgramDateTime),
            $(e.programDateTime) || ((e.programDateTime = null), (e.rawProgramDateTime = null));
        }
        function Bt(e, t, n, r) {
          (e.relurl = t.URI), t.BYTERANGE && e.setByteRange(t.BYTERANGE), (e.level = n), (e.sn = 'initSegment'), r && (e.levelkeys = r), (e.initSegment = null);
        }
        function Ut(e, t, n) {
          e.levelkeys = t;
          var r = n.encryptedFragments;
          (r.length && r[r.length - 1].levelkeys === t) ||
            !Object.keys(t).some(function (e) {
              return t[e].isCommonEncryption;
            }) ||
            r.push(e);
        }
        var zt = 'manifest',
          Ht = 'level',
          Vt = 'audioTrack',
          Gt = 'subtitleTrack',
          jt = 'main',
          Kt = 'audio',
          Wt = 'subtitle';
        function qt(e) {
          switch (e.type) {
            case Vt:
              return Kt;
            case Gt:
              return Wt;
            default:
              return jt;
          }
        }
        function Yt(e, t) {
          var n = e.url;
          return (void 0 !== n && 0 !== n.indexOf('data:')) || (n = t.url), n;
        }
        var Xt = (function () {
          function e(t) {
            k(this, e), (this.hls = void 0), (this.loaders = Object.create(null)), (this.variableList = null), (this.hls = t), this.registerListeners();
          }
          return (
            w(e, [
              { key: 'startLoad', value: function (e) {} },
              {
                key: 'stopLoad',
                value: function () {
                  this.destroyInternalLoaders();
                },
              },
              {
                key: 'registerListeners',
                value: function () {
                  var e = this.hls;
                  e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                    e.on(Q.LEVEL_LOADING, this.onLevelLoading, this),
                    e.on(Q.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                    e.on(Q.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);
                },
              },
              {
                key: 'unregisterListeners',
                value: function () {
                  var e = this.hls;
                  e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                    e.off(Q.LEVEL_LOADING, this.onLevelLoading, this),
                    e.off(Q.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                    e.off(Q.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this);
                },
              },
              {
                key: 'createInternalLoader',
                value: function (e) {
                  var t = this.hls.config,
                    n = t.pLoader,
                    r = t.loader,
                    i = new (n || r)(t);
                  return (this.loaders[e.type] = i), i;
                },
              },
              {
                key: 'getInternalLoader',
                value: function (e) {
                  return this.loaders[e.type];
                },
              },
              {
                key: 'resetInternalLoader',
                value: function (e) {
                  this.loaders[e] && delete this.loaders[e];
                },
              },
              {
                key: 'destroyInternalLoaders',
                value: function () {
                  for (var e in this.loaders) {
                    var t = this.loaders[e];
                    t && t.destroy(), this.resetInternalLoader(e);
                  }
                },
              },
              {
                key: 'destroy',
                value: function () {
                  (this.variableList = null), this.unregisterListeners(), this.destroyInternalLoaders();
                },
              },
              {
                key: 'onManifestLoading',
                value: function (e, t) {
                  var n = t.url;
                  (this.variableList = null), this.load({ id: null, level: 0, responseType: 'text', type: zt, url: n, deliveryDirectives: null });
                },
              },
              {
                key: 'onLevelLoading',
                value: function (e, t) {
                  var n = t.id,
                    r = t.level,
                    i = t.url,
                    a = t.deliveryDirectives;
                  this.load({ id: n, level: r, responseType: 'text', type: Ht, url: i, deliveryDirectives: a });
                },
              },
              {
                key: 'onAudioTrackLoading',
                value: function (e, t) {
                  var n = t.id,
                    r = t.groupId,
                    i = t.url,
                    a = t.deliveryDirectives;
                  this.load({ id: n, groupId: r, level: null, responseType: 'text', type: Vt, url: i, deliveryDirectives: a });
                },
              },
              {
                key: 'onSubtitleTrackLoading',
                value: function (e, t) {
                  var n = t.id,
                    r = t.groupId,
                    i = t.url,
                    a = t.deliveryDirectives;
                  this.load({ id: n, groupId: r, level: null, responseType: 'text', type: Gt, url: i, deliveryDirectives: a });
                },
              },
              {
                key: 'load',
                value: function (e) {
                  var t,
                    n,
                    r,
                    i = this,
                    a = this.hls.config,
                    o = this.getInternalLoader(e);
                  if (o) {
                    var s = o.context;
                    if (s && s.url === e.url) return void ae.trace('[playlist-loader]: playlist request ongoing');
                    ae.log('[playlist-loader]: aborting previous loader for type: '.concat(e.type)), o.abort();
                  }
                  if (
                    ((n = e.type === zt ? a.manifestLoadPolicy.default : X({}, a.playlistLoadPolicy.default, { timeoutRetry: null, errorRetry: null })),
                    (o = this.createInternalLoader(e)),
                    null != (t = e.deliveryDirectives) && t.part) &&
                    (e.type === Ht && null !== e.level
                      ? (r = this.hls.levels[e.level].details)
                      : e.type === Vt && null !== e.id
                      ? (r = this.hls.audioTracks[e.id].details)
                      : e.type === Gt && null !== e.id && (r = this.hls.subtitleTracks[e.id].details),
                    r)
                  ) {
                    var l = r.partTarget,
                      u = r.targetduration;
                    if (l && u) {
                      var c = 1e3 * Math.max(3 * l, 0.8 * u);
                      n = X({}, n, { maxTimeToFirstByteMs: Math.min(c, n.maxTimeToFirstByteMs), maxLoadTimeMs: Math.min(c, n.maxTimeToFirstByteMs) });
                    }
                  }
                  var d = n.errorRetry || n.timeoutRetry || {},
                    f = { loadPolicy: n, timeout: n.maxLoadTimeMs, maxRetry: d.maxNumRetry || 0, retryDelay: d.retryDelayMs || 0, maxRetryDelay: d.maxRetryDelayMs || 0 },
                    h = {
                      onSuccess: function (e, t, n, r) {
                        var a = i.getInternalLoader(n);
                        i.resetInternalLoader(n.type);
                        var o = e.data;
                        0 === o.indexOf('#EXTM3U')
                          ? ((t.parsing.start = performance.now()), It.isMediaPlaylist(o) ? i.handleTrackOrLevelPlaylist(e, t, n, r || null, a) : i.handleMasterPlaylist(e, t, n, r))
                          : i.handleManifestParsingError(e, n, new Error('no EXTM3U delimiter'), r || null, t);
                      },
                      onError: function (e, t, n, r) {
                        i.handleNetworkError(t, n, !1, e, r);
                      },
                      onTimeout: function (e, t, n) {
                        i.handleNetworkError(t, n, !0, void 0, e);
                      },
                    };
                  o.load(e, f, h);
                },
              },
              {
                key: 'handleMasterPlaylist',
                value: function (e, t, n, r) {
                  var i = this.hls,
                    a = e.data,
                    o = Yt(e, n),
                    s = It.parseMasterPlaylist(a, o);
                  if (s.playlistParsingError) this.handleManifestParsingError(e, n, s.playlistParsingError, r, t);
                  else {
                    var l = s.contentSteering,
                      u = s.levels,
                      c = s.sessionData,
                      d = s.sessionKeys,
                      f = s.startTimeOffset,
                      h = s.variableList;
                    this.variableList = h;
                    var p = It.parseMasterPlaylistMedia(a, o, s),
                      v = p.AUDIO,
                      m = void 0 === v ? [] : v,
                      g = p.SUBTITLES,
                      y = p['CLOSED-CAPTIONS'];
                    if (m.length)
                      m.some(function (e) {
                        return !e.url;
                      }) ||
                        !u[0].audioCodec ||
                        u[0].attrs.AUDIO ||
                        (ae.log('[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one'),
                        m.unshift({ type: 'main', name: 'main', groupId: 'main', default: !1, autoselect: !1, forced: !1, id: -1, attrs: new le({}), bitrate: 0, url: '' }));
                    i.trigger(Q.MANIFEST_LOADED, {
                      levels: u,
                      audioTracks: m,
                      subtitles: g,
                      captions: y,
                      contentSteering: l,
                      url: o,
                      stats: t,
                      networkDetails: r,
                      sessionData: c,
                      sessionKeys: d,
                      startTimeOffset: f,
                      variableList: h,
                    });
                  }
                },
              },
              {
                key: 'handleTrackOrLevelPlaylist',
                value: function (e, t, n, r, i) {
                  var a = this.hls,
                    o = n.id,
                    s = n.level,
                    l = n.type,
                    u = Yt(e, n),
                    c = $(o) ? o : 0,
                    d = $(s) ? s : c,
                    f = qt(n),
                    h = It.parseLevelPlaylist(e.data, u, d, f, c, this.variableList);
                  if (l === zt) {
                    var p = { attrs: new le({}), bitrate: 0, details: h, name: '', url: u };
                    a.trigger(Q.MANIFEST_LOADED, {
                      levels: [p],
                      audioTracks: [],
                      url: u,
                      stats: t,
                      networkDetails: r,
                      sessionData: null,
                      sessionKeys: null,
                      contentSteering: null,
                      startTimeOffset: null,
                      variableList: null,
                    });
                  }
                  (t.parsing.end = performance.now()), (n.levelDetails = h), this.handlePlaylistLoaded(h, e, t, n, r, i);
                },
              },
              {
                key: 'handleManifestParsingError',
                value: function (e, t, n, r, i) {
                  this.hls.trigger(Q.ERROR, {
                    type: Z.NETWORK_ERROR,
                    details: J.MANIFEST_PARSING_ERROR,
                    fatal: t.type === zt,
                    url: e.url,
                    err: n,
                    error: n,
                    reason: n.message,
                    response: e,
                    context: t,
                    networkDetails: r,
                    stats: i,
                  });
                },
              },
              {
                key: 'handleNetworkError',
                value: function (e, t) {
                  var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    r = arguments.length > 3 ? arguments[3] : void 0,
                    i = arguments.length > 4 ? arguments[4] : void 0,
                    a = 'A network '.concat(n ? 'timeout' : 'error' + (r ? ' (status ' + r.code + ')' : ''), ' occurred while loading ').concat(e.type);
                  e.type === Ht ? (a += ': '.concat(e.level, ' id: ').concat(e.id)) : (e.type !== Vt && e.type !== Gt) || (a += ' id: '.concat(e.id, ' group-id: "').concat(e.groupId, '"'));
                  var o = new Error(a);
                  ae.warn('[playlist-loader]: '.concat(a));
                  var s = J.UNKNOWN,
                    l = !1,
                    u = this.getInternalLoader(e);
                  switch (e.type) {
                    case zt:
                      (s = n ? J.MANIFEST_LOAD_TIMEOUT : J.MANIFEST_LOAD_ERROR), (l = !0);
                      break;
                    case Ht:
                      (s = n ? J.LEVEL_LOAD_TIMEOUT : J.LEVEL_LOAD_ERROR), (l = !1);
                      break;
                    case Vt:
                      (s = n ? J.AUDIO_TRACK_LOAD_TIMEOUT : J.AUDIO_TRACK_LOAD_ERROR), (l = !1);
                      break;
                    case Gt:
                      (s = n ? J.SUBTITLE_TRACK_LOAD_TIMEOUT : J.SUBTITLE_LOAD_ERROR), (l = !1);
                  }
                  u && this.resetInternalLoader(e.type);
                  var c = { type: Z.NETWORK_ERROR, details: s, fatal: l, url: e.url, loader: u, context: e, error: o, networkDetails: t, stats: i };
                  if (r) {
                    var d = (null == t ? void 0 : t.url) || e.url;
                    c.response = q({ url: d, data: void 0 }, r);
                  }
                  this.hls.trigger(Q.ERROR, c);
                },
              },
              {
                key: 'handlePlaylistLoaded',
                value: function (e, t, n, r, i, a) {
                  var o = this.hls,
                    s = r.type,
                    l = r.level,
                    u = r.id,
                    c = r.groupId,
                    d = r.deliveryDirectives,
                    f = Yt(t, r),
                    h = qt(r),
                    p = 'number' == typeof r.level && h === jt ? l : void 0;
                  if (e.fragments.length) {
                    e.targetduration || (e.playlistParsingError = new Error('Missing Target Duration'));
                    var v = e.playlistParsingError;
                    if (v)
                      o.trigger(Q.ERROR, {
                        type: Z.NETWORK_ERROR,
                        details: J.LEVEL_PARSING_ERROR,
                        fatal: !1,
                        url: f,
                        error: v,
                        reason: v.message,
                        response: t,
                        context: r,
                        level: p,
                        parent: h,
                        networkDetails: i,
                        stats: n,
                      });
                    else
                      switch ((e.live && a && (a.getCacheAge && (e.ageHeader = a.getCacheAge() || 0), (a.getCacheAge && !isNaN(e.ageHeader)) || (e.ageHeader = 0)), s)) {
                        case zt:
                        case Ht:
                          o.trigger(Q.LEVEL_LOADED, { details: e, level: p || 0, id: u || 0, stats: n, networkDetails: i, deliveryDirectives: d });
                          break;
                        case Vt:
                          o.trigger(Q.AUDIO_TRACK_LOADED, { details: e, id: u || 0, groupId: c || '', stats: n, networkDetails: i, deliveryDirectives: d });
                          break;
                        case Gt:
                          o.trigger(Q.SUBTITLE_TRACK_LOADED, { details: e, id: u || 0, groupId: c || '', stats: n, networkDetails: i, deliveryDirectives: d });
                      }
                  } else {
                    var m = new Error('No Segments found in Playlist');
                    o.trigger(Q.ERROR, {
                      type: Z.NETWORK_ERROR,
                      details: J.LEVEL_EMPTY_ERROR,
                      fatal: !1,
                      url: f,
                      error: m,
                      reason: m.message,
                      response: t,
                      context: r,
                      level: p,
                      parent: h,
                      networkDetails: i,
                      stats: n,
                    });
                  }
                },
              },
            ]),
            e
          );
        })();
        function $t(e, t) {
          var n;
          try {
            n = new Event('addtrack');
          } catch (e) {
            (n = document.createEvent('Event')).initEvent('addtrack', !1, !1);
          }
          (n.track = e), t.dispatchEvent(n);
        }
        function Qt(e, t) {
          var n = e.mode;
          if (('disabled' === n && (e.mode = 'hidden'), e.cues && !e.cues.getCueById(t.id)))
            try {
              if ((e.addCue(t), !e.cues.getCueById(t.id))) throw new Error('addCue is failed for: '.concat(t));
            } catch (n) {
              ae.debug('[texttrack-utils]: '.concat(n));
              var r = new self.TextTrackCue(t.startTime, t.endTime, t.text);
              (r.id = t.id), e.addCue(r);
            }
          'disabled' === n && (e.mode = n);
        }
        function Zt(e) {
          var t = e.mode;
          if (('disabled' === t && (e.mode = 'hidden'), e.cues)) for (var n = e.cues.length; n--; ) e.removeCue(e.cues[n]);
          'disabled' === t && (e.mode = t);
        }
        function Jt(e, t, n, r) {
          var i = e.mode;
          if (('disabled' === i && (e.mode = 'hidden'), e.cues && e.cues.length > 0))
            for (
              var a = (function (e, t, n) {
                  var r = [],
                    i = (function (e, t) {
                      if (t < e[0].startTime) return 0;
                      var n = e.length - 1;
                      if (t > e[n].endTime) return -1;
                      var r = 0,
                        i = n;
                      for (; r <= i; ) {
                        var a = Math.floor((i + r) / 2);
                        if (t < e[a].startTime) i = a - 1;
                        else {
                          if (!(t > e[a].startTime && r < n)) return a;
                          r = a + 1;
                        }
                      }
                      return e[r].startTime - t < t - e[i].startTime ? r : i;
                    })(e, t);
                  if (i > -1)
                    for (var a = i, o = e.length; a < o; a++) {
                      var s = e[a];
                      if (s.startTime >= t && s.endTime <= n) r.push(s);
                      else if (s.startTime > n) return r;
                    }
                  return r;
                })(e.cues, t, n),
                o = 0;
              o < a.length;
              o++
            )
              (r && !r(a[o])) || e.removeCue(a[o]);
          'disabled' === i && (e.mode = i);
        }
        var en = 'org.id3',
          tn = 'com.apple.quicktime.HLS',
          nn = 'https://aomedia.org/emsg/ID3';
        function rn() {
          if ('undefined' != typeof self) return self.WebKitDataCue || self.VTTCue || self.TextTrackCue;
        }
        var an = (function () {
          var e = rn();
          try {
            new e(0, Number.POSITIVE_INFINITY, '');
          } catch (e) {
            return Number.MAX_VALUE;
          }
          return Number.POSITIVE_INFINITY;
        })();
        function on(e, t) {
          return e.getTime() / 1e3 - t;
        }
        var sn = (function () {
            function e(t) {
              k(this, e), (this.hls = void 0), (this.id3Track = null), (this.media = null), (this.dateRangeCuesAppended = {}), (this.hls = t), this._registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    this._unregisterListeners(), (this.id3Track = null), (this.media = null), (this.dateRangeCuesAppended = {}), (this.hls = null);
                  },
                },
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                      e.on(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.on(Q.LEVEL_UPDATED, this.onLevelUpdated, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                      e.off(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.off(Q.LEVEL_UPDATED, this.onLevelUpdated, this);
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    this.media = t.media;
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    this.id3Track && (Zt(this.id3Track), (this.id3Track = null), (this.media = null), (this.dateRangeCuesAppended = {}));
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    this.dateRangeCuesAppended = {};
                  },
                },
                {
                  key: 'createTrack',
                  value: function (e) {
                    var t = this.getID3Track(e.textTracks);
                    return (t.mode = 'hidden'), t;
                  },
                },
                {
                  key: 'getID3Track',
                  value: function (e) {
                    if (this.media) {
                      for (var t = 0; t < e.length; t++) {
                        var n = e[t];
                        if ('metadata' === n.kind && 'id3' === n.label) return $t(n, this.media), n;
                      }
                      return this.media.addTextTrack('metadata', 'id3');
                    }
                  },
                },
                {
                  key: 'onFragParsingMetadata',
                  value: function (e, t) {
                    if (this.media) {
                      var n = this.hls.config,
                        r = n.enableEmsgMetadataCues,
                        i = n.enableID3MetadataCues;
                      if (r || i) {
                        var a = t.samples;
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        for (var o = rn(), s = 0; s < a.length; s++) {
                          var l = a[s].type;
                          if ((l !== nn || r) && i) {
                            var u = He(a[s].data);
                            if (u) {
                              var c = a[s].pts,
                                d = c + a[s].duration;
                              d > an && (d = an), d - c <= 0 && (d = c + 0.25);
                              for (var f = 0; f < u.length; f++) {
                                var h = u[f];
                                if (!Ue(h)) {
                                  this.updateId3CueEnds(c, l);
                                  var p = new o(c, d, '');
                                  (p.value = h), l && (p.type = l), this.id3Track.addCue(p);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                },
                {
                  key: 'updateId3CueEnds',
                  value: function (e, t) {
                    var n,
                      r = null == (n = this.id3Track) ? void 0 : n.cues;
                    if (r)
                      for (var i = r.length; i--; ) {
                        var a = r[i];
                        a.type === t && a.startTime < e && a.endTime === an && (a.endTime = e);
                      }
                  },
                },
                {
                  key: 'onBufferFlushing',
                  value: function (e, t) {
                    var n = t.startOffset,
                      r = t.endOffset,
                      i = t.type,
                      a = this.id3Track,
                      o = this.hls;
                    if (o) {
                      var s = o.config,
                        l = s.enableEmsgMetadataCues,
                        u = s.enableID3MetadataCues;
                      if (a && (l || u))
                        Jt(
                          a,
                          n,
                          r,
                          'audio' === i
                            ? function (e) {
                                return e.type === en && u;
                              }
                            : 'video' === i
                            ? function (e) {
                                return e.type === nn && l;
                              }
                            : function (e) {
                                return (e.type === en && u) || (e.type === nn && l);
                              },
                        );
                    }
                  },
                },
                {
                  key: 'onLevelUpdated',
                  value: function (e, t) {
                    var n = this,
                      r = t.details;
                    if (this.media && r.hasProgramDateTime && this.hls.config.enableDateRangeMetadataCues) {
                      var i = this.dateRangeCuesAppended,
                        a = this.id3Track,
                        o = r.dateRanges,
                        s = Object.keys(o);
                      if (a)
                        for (
                          var l = Object.keys(i).filter(function (e) {
                              return !s.includes(e);
                            }),
                            u = function () {
                              var e = l[c];
                              Object.keys(i[e].cues).forEach(function (t) {
                                a.removeCue(i[e].cues[t]);
                              }),
                                delete i[e];
                            },
                            c = l.length;
                          c--;

                        )
                          u();
                      var d = r.fragments[r.fragments.length - 1];
                      if (0 !== s.length && $(null == d ? void 0 : d.programDateTime)) {
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        for (
                          var f = d.programDateTime / 1e3 - d.start,
                            h = rn(),
                            p = function () {
                              var e = s[v],
                                t = o[e],
                                r = i[e],
                                a = (null == r ? void 0 : r.cues) || {},
                                l = (null == r ? void 0 : r.durationKnown) || !1,
                                u = on(t.startDate, f),
                                c = an,
                                d = t.endDate;
                              if (d) (c = on(d, f)), (l = !0);
                              else if (t.endOnNext && !l) {
                                var p = s
                                  .reduce(function (e, n) {
                                    var r = o[n];
                                    return r.class === t.class && r.id !== n && r.startDate > t.startDate && e.push(r), e;
                                  }, [])
                                  .sort(function (e, t) {
                                    return e.startDate.getTime() - t.startDate.getTime();
                                  })[0];
                                p && ((c = on(p.startDate, f)), (l = !0));
                              }
                              for (var m, g, y = Object.keys(t.attr), _ = 0; _ < y.length; _++) {
                                var b = y[_];
                                if ('ID' !== (g = b) && 'CLASS' !== g && 'START-DATE' !== g && 'DURATION' !== g && 'END-DATE' !== g && 'END-ON-NEXT' !== g) {
                                  var E = a[b];
                                  if (E) l && !r.durationKnown && (E.endTime = c);
                                  else {
                                    var S = t.attr[b];
                                    (E = new h(u, c, '')),
                                      ue(b) &&
                                        ((m = S),
                                        (S = Uint8Array.from(
                                          m
                                            .replace(/^0x/, '')
                                            .replace(/([\da-fA-F]{2}) ?/g, '0x$1 ')
                                            .replace(/ +$/, '')
                                            .split(' '),
                                        ).buffer)),
                                      (E.value = { key: b, data: S }),
                                      (E.type = tn),
                                      (E.id = e),
                                      n.id3Track.addCue(E),
                                      (a[b] = E);
                                  }
                                }
                              }
                              i[e] = { cues: a, dateRange: t, durationKnown: l };
                            },
                            v = 0;
                          v < s.length;
                          v++
                        )
                          p();
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          ln = (function () {
            function e(t) {
              var n = this;
              k(this, e),
                (this.hls = void 0),
                (this.config = void 0),
                (this.media = null),
                (this.levelDetails = null),
                (this.currentTime = 0),
                (this.stallCount = 0),
                (this._latency = null),
                (this.timeupdateHandler = function () {
                  return n.timeupdate();
                }),
                (this.hls = t),
                (this.config = t.config),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'latency',
                  get: function () {
                    return this._latency || 0;
                  },
                },
                {
                  key: 'maxLatency',
                  get: function () {
                    var e = this.config,
                      t = this.levelDetails;
                    return void 0 !== e.liveMaxLatencyDuration ? e.liveMaxLatencyDuration : t ? e.liveMaxLatencyDurationCount * t.targetduration : 0;
                  },
                },
                {
                  key: 'targetLatency',
                  get: function () {
                    var e = this.levelDetails;
                    if (null === e) return null;
                    var t = e.holdBack,
                      n = e.partHoldBack,
                      r = e.targetduration,
                      i = this.config,
                      a = i.liveSyncDuration,
                      o = i.liveSyncDurationCount,
                      s = i.lowLatencyMode,
                      l = this.hls.userConfig,
                      u = (s && n) || t;
                    (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) && (u = void 0 !== a ? a : o * r);
                    var c = r;
                    return u + Math.min(1 * this.stallCount, c);
                  },
                },
                {
                  key: 'liveSyncPosition',
                  get: function () {
                    var e = this.estimateLiveEdge(),
                      t = this.targetLatency,
                      n = this.levelDetails;
                    if (null === e || null === t || null === n) return null;
                    var r = n.edge,
                      i = e - t - this.edgeStalled,
                      a = r - n.totalduration,
                      o = r - ((this.config.lowLatencyMode && n.partTarget) || n.targetduration);
                    return Math.min(Math.max(a, i), o);
                  },
                },
                {
                  key: 'drift',
                  get: function () {
                    var e = this.levelDetails;
                    return null === e ? 1 : e.drift;
                  },
                },
                {
                  key: 'edgeStalled',
                  get: function () {
                    var e = this.levelDetails;
                    if (null === e) return 0;
                    var t = 3 * ((this.config.lowLatencyMode && e.partTarget) || e.targetduration);
                    return Math.max(e.age - t, 0);
                  },
                },
                {
                  key: 'forwardBufferLength',
                  get: function () {
                    var e = this.media,
                      t = this.levelDetails;
                    if (!e || !t) return 0;
                    var n = e.buffered.length;
                    return (n ? e.buffered.end(n - 1) : t.edge) - this.currentTime;
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), this.onMediaDetaching(), (this.levelDetails = null), (this.hls = this.timeupdateHandler = null);
                  },
                },
                {
                  key: 'registerListeners',
                  value: function () {
                    this.hls.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      this.hls.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      this.hls.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      this.hls.on(Q.LEVEL_UPDATED, this.onLevelUpdated, this),
                      this.hls.on(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    this.hls.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      this.hls.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      this.hls.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      this.hls.off(Q.LEVEL_UPDATED, this.onLevelUpdated, this),
                      this.hls.off(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    (this.media = t.media), this.media.addEventListener('timeupdate', this.timeupdateHandler);
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    this.media && (this.media.removeEventListener('timeupdate', this.timeupdateHandler), (this.media = null));
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.levelDetails = null), (this._latency = null), (this.stallCount = 0);
                  },
                },
                {
                  key: 'onLevelUpdated',
                  value: function (e, t) {
                    var n = t.details;
                    (this.levelDetails = n), n.advanced && this.timeupdate(), !n.live && this.media && this.media.removeEventListener('timeupdate', this.timeupdateHandler);
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var n;
                    t.details === J.BUFFER_STALLED_ERROR &&
                      (this.stallCount++, null != (n = this.levelDetails) && n.live && ae.warn('[playback-rate-controller]: Stall detected, adjusting target latency'));
                  },
                },
                {
                  key: 'timeupdate',
                  value: function () {
                    var e = this.media,
                      t = this.levelDetails;
                    if (e && t) {
                      this.currentTime = e.currentTime;
                      var n = this.computeLatency();
                      if (null !== n) {
                        this._latency = n;
                        var r = this.config,
                          i = r.lowLatencyMode,
                          a = r.maxLiveSyncPlaybackRate;
                        if (i && 1 !== a) {
                          var o = this.targetLatency;
                          if (null !== o) {
                            var s = n - o,
                              l = s < Math.min(this.maxLatency, o + t.targetduration);
                            if (t.live && l && s > 0.05 && this.forwardBufferLength > 1) {
                              var u = Math.min(2, Math.max(1, a)),
                                c = Math.round((2 / (1 + Math.exp(-0.75 * s - this.edgeStalled))) * 20) / 20;
                              e.playbackRate = Math.min(u, Math.max(1, c));
                            } else 1 !== e.playbackRate && 0 !== e.playbackRate && (e.playbackRate = 1);
                          }
                        }
                      }
                    }
                  },
                },
                {
                  key: 'estimateLiveEdge',
                  value: function () {
                    var e = this.levelDetails;
                    return null === e ? null : e.edge + e.age;
                  },
                },
                {
                  key: 'computeLatency',
                  value: function () {
                    var e = this.estimateLiveEdge();
                    return null === e ? null : e - this.currentTime;
                  },
                },
              ]),
              e
            );
          })(),
          un = ['NONE', 'TYPE-0', 'TYPE-1', null],
          cn = '',
          dn = 'YES',
          fn = 'v2';
        var hn = (function () {
            function e(t, n, r) {
              k(this, e), (this.msn = void 0), (this.part = void 0), (this.skip = void 0), (this.msn = t), (this.part = n), (this.skip = r);
            }
            return (
              w(e, [
                {
                  key: 'addDirectives',
                  value: function (e) {
                    var t = new self.URL(e);
                    return (
                      void 0 !== this.msn && t.searchParams.set('_HLS_msn', this.msn.toString()),
                      void 0 !== this.part && t.searchParams.set('_HLS_part', this.part.toString()),
                      this.skip && t.searchParams.set('_HLS_skip', this.skip),
                      t.href
                    );
                  },
                },
              ]),
              e
            );
          })(),
          pn = (function () {
            function e(t) {
              k(this, e),
                (this._attrs = void 0),
                (this.audioCodec = void 0),
                (this.bitrate = void 0),
                (this.codecSet = void 0),
                (this.height = void 0),
                (this.id = void 0),
                (this.name = void 0),
                (this.videoCodec = void 0),
                (this.width = void 0),
                (this.unknownCodecs = void 0),
                (this.audioGroupIds = void 0),
                (this.details = void 0),
                (this.fragmentError = 0),
                (this.loadError = 0),
                (this.loaded = void 0),
                (this.realBitrate = 0),
                (this.textGroupIds = void 0),
                (this.url = void 0),
                (this._urlId = 0),
                (this.url = [t.url]),
                (this._attrs = [t.attrs]),
                (this.bitrate = t.bitrate),
                t.details && (this.details = t.details),
                (this.id = t.id || 0),
                (this.name = t.name),
                (this.width = t.width || 0),
                (this.height = t.height || 0),
                (this.audioCodec = t.audioCodec),
                (this.videoCodec = t.videoCodec),
                (this.unknownCodecs = t.unknownCodecs),
                (this.codecSet = [t.videoCodec, t.audioCodec]
                  .filter(function (e) {
                    return e;
                  })
                  .join(',')
                  .replace(/\.[^.,]+/g, ''));
            }
            return (
              w(e, [
                {
                  key: 'maxBitrate',
                  get: function () {
                    return Math.max(this.realBitrate, this.bitrate);
                  },
                },
                {
                  key: 'attrs',
                  get: function () {
                    return this._attrs[this._urlId];
                  },
                },
                {
                  key: 'pathwayId',
                  get: function () {
                    return this.attrs['PATHWAY-ID'] || '.';
                  },
                },
                {
                  key: 'uri',
                  get: function () {
                    return this.url[this._urlId] || '';
                  },
                },
                {
                  key: 'urlId',
                  get: function () {
                    return this._urlId;
                  },
                  set: function (e) {
                    var t = e % this.url.length;
                    this._urlId !== t && ((this.fragmentError = 0), (this.loadError = 0), (this.details = void 0), (this._urlId = t));
                  },
                },
                {
                  key: 'audioGroupId',
                  get: function () {
                    var e;
                    return null == (e = this.audioGroupIds) ? void 0 : e[this.urlId];
                  },
                },
                {
                  key: 'textGroupId',
                  get: function () {
                    var e;
                    return null == (e = this.textGroupIds) ? void 0 : e[this.urlId];
                  },
                },
                {
                  key: 'addFallback',
                  value: function (e) {
                    this.url.push(e.url), this._attrs.push(e.attrs);
                  },
                },
              ]),
              e
            );
          })();
        function vn(e, t) {
          var n = t.startPTS;
          if ($(n)) {
            var r,
              i = 0;
            t.sn > e.sn ? ((i = n - e.start), (r = e)) : ((i = e.start - n), (r = t)), r.duration !== i && (r.duration = i);
          } else if (t.sn > e.sn) {
            e.cc === t.cc && e.minEndPTS ? (t.start = e.start + (e.minEndPTS - e.start)) : (t.start = e.start + e.duration);
          } else t.start = Math.max(e.start - t.duration, 0);
        }
        function mn(e, t, n, r, i, a) {
          r - n <= 0 && (ae.warn('Fragment should have a positive duration', t), (r = n + t.duration), (a = i + t.duration));
          var o = n,
            s = r,
            l = t.startPTS,
            u = t.endPTS;
          if ($(l)) {
            var c = Math.abs(l - n);
            $(t.deltaPTS) ? (t.deltaPTS = Math.max(c, t.deltaPTS)) : (t.deltaPTS = c),
              (o = Math.max(n, l)),
              (n = Math.min(n, l)),
              (i = Math.min(i, t.startDTS)),
              (s = Math.min(r, u)),
              (r = Math.max(r, u)),
              (a = Math.max(a, t.endDTS));
          }
          var d = n - t.start;
          0 !== t.start && (t.start = n), (t.duration = r - t.start), (t.startPTS = n), (t.maxStartPTS = o), (t.startDTS = i), (t.endPTS = r), (t.minEndPTS = s), (t.endDTS = a);
          var f,
            h = t.sn;
          if (!e || h < e.startSN || h > e.endSN) return 0;
          var p = h - e.startSN,
            v = e.fragments;
          for (v[p] = t, f = p; f > 0; f--) vn(v[f], v[f - 1]);
          for (f = p; f < v.length - 1; f++) vn(v[f], v[f + 1]);
          return e.fragmentHint && vn(v[v.length - 1], e.fragmentHint), (e.PTSKnown = e.alignedSliding = !0), d;
        }
        function gn(e, t) {
          for (var n = null, r = e.fragments, i = r.length - 1; i >= 0; i--) {
            var a = r[i].initSegment;
            if (a) {
              n = a;
              break;
            }
          }
          e.fragmentHint && delete e.fragmentHint.endPTS;
          var o,
            s = 0;
          ((function (e, t, n) {
            for (
              var r = t.skippedSegments,
                i = Math.max(e.startSN, t.startSN) - t.startSN,
                a = (e.fragmentHint ? 1 : 0) + (r ? t.endSN : Math.min(e.endSN, t.endSN)) - t.startSN,
                o = t.startSN - e.startSN,
                s = t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments,
                l = e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments,
                u = i;
              u <= a;
              u++
            ) {
              var c = l[o + u],
                d = s[u];
              r && !d && u < r && (d = t.fragments[u] = c), c && d && n(c, d);
            }
          })(e, t, function (e, r) {
            e.relurl && (s = e.cc - r.cc),
              $(e.startPTS) &&
                $(e.endPTS) &&
                ((r.start = r.startPTS = e.startPTS),
                (r.startDTS = e.startDTS),
                (r.maxStartPTS = e.maxStartPTS),
                (r.endPTS = e.endPTS),
                (r.endDTS = e.endDTS),
                (r.minEndPTS = e.minEndPTS),
                (r.duration = e.endPTS - e.startPTS),
                r.duration && (o = r),
                (t.PTSKnown = t.alignedSliding = !0)),
              (r.elementaryStreams = e.elementaryStreams),
              (r.loader = e.loader),
              (r.stats = e.stats),
              (r.urlId = e.urlId),
              e.initSegment && ((r.initSegment = e.initSegment), (n = e.initSegment));
          }),
          n) &&
            (t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments).forEach(function (e) {
              var t;
              (e.initSegment && e.initSegment.relurl !== (null == (t = n) ? void 0 : t.relurl)) || (e.initSegment = n);
            });
          if (t.skippedSegments)
            if (
              ((t.deltaUpdateFailed = t.fragments.some(function (e) {
                return !e;
              })),
              t.deltaUpdateFailed)
            ) {
              ae.warn('[level-helper] Previous playlist missing segments skipped in delta playlist');
              for (var l = t.skippedSegments; l--; ) t.fragments.shift();
              (t.startSN = t.fragments[0].sn), (t.startCC = t.fragments[0].cc);
            } else
              t.canSkipDateRanges &&
                (t.dateRanges = (function (e, t, n) {
                  var r = X({}, e);
                  n &&
                    n.forEach(function (e) {
                      delete r[e];
                    });
                  return (
                    Object.keys(t).forEach(function (e) {
                      var n = new ce(t[e].attr, r[e]);
                      n.isValid ? (r[e] = n) : ae.warn('Ignoring invalid Playlist Delta Update DATERANGE tag: "'.concat(JSON.stringify(t[e].attr), '"'));
                    }),
                    r
                  );
                })(e.dateRanges, t.dateRanges, t.recentlyRemovedDateranges));
          var u = t.fragments;
          if (s) {
            ae.warn('discontinuity sliding from playlist, take drift into account');
            for (var c = 0; c < u.length; c++) u[c].cc += s;
          }
          t.skippedSegments && (t.startCC = t.fragments[0].cc),
            (function (e, t, n) {
              if (e && t)
                for (var r = 0, i = 0, a = e.length; i <= a; i++) {
                  var o = e[i],
                    s = t[i + r];
                  o && s && o.index === s.index && o.fragment.sn === s.fragment.sn ? n(o, s) : r--;
                }
            })(e.partList, t.partList, function (e, t) {
              (t.elementaryStreams = e.elementaryStreams), (t.stats = e.stats);
            }),
            o ? mn(t, o, o.startPTS, o.endPTS, o.startDTS, o.endDTS) : yn(e, t),
            u.length && (t.totalduration = t.edge - u[0].start),
            (t.driftStartTime = e.driftStartTime),
            (t.driftStart = e.driftStart);
          var d = t.advancedDateTime;
          if (t.advanced && d) {
            var f = t.edge;
            t.driftStart || ((t.driftStartTime = d), (t.driftStart = f)), (t.driftEndTime = d), (t.driftEnd = f);
          } else (t.driftEndTime = e.driftEndTime), (t.driftEnd = e.driftEnd), (t.advancedDateTime = e.advancedDateTime);
        }
        function yn(e, t) {
          var n = t.startSN + t.skippedSegments - e.startSN,
            r = e.fragments;
          n < 0 || n >= r.length || _n(t, r[n].start);
        }
        function _n(e, t) {
          if (t) {
            for (var n = e.fragments, r = e.skippedSegments; r < n.length; r++) n[r].start += t;
            e.fragmentHint && (e.fragmentHint.start += t);
          }
        }
        function bn(e, t, n) {
          var r;
          return null != e && e.details ? En(null == (r = e.details) ? void 0 : r.partList, t, n) : null;
        }
        function En(e, t, n) {
          if (e)
            for (var r = e.length; r--; ) {
              var i = e[r];
              if (i.index === n && i.fragment.sn === t) return i;
            }
          return null;
        }
        function Sn(e) {
          switch (e.details) {
            case J.FRAG_LOAD_TIMEOUT:
            case J.KEY_LOAD_TIMEOUT:
            case J.LEVEL_LOAD_TIMEOUT:
            case J.MANIFEST_LOAD_TIMEOUT:
              return !0;
          }
          return !1;
        }
        function kn(e, t) {
          var n = Sn(t);
          return e.default[''.concat(n ? 'timeout' : 'error', 'Retry')];
        }
        function Tn(e, t) {
          var n = 'linear' === e.backoff ? 1 : Math.pow(2, t);
          return Math.min(n * e.retryDelayMs, e.maxRetryDelayMs);
        }
        function wn(e) {
          return q(q({}, e), { errorRetry: null, timeoutRetry: null });
        }
        function An(e, t, n, r) {
          return (
            !!e &&
            t < e.maxNumRetry &&
            ((function (e) {
              return (0 === e && !1 === navigator.onLine) || (!!e && (e < 400 || e > 499));
            })(r) ||
              !!n)
          );
        }
        var Ln = function (e, t) {
          for (var n = 0, r = e.length - 1, i = null, a = null; n <= r; ) {
            var o = t((a = e[(i = ((n + r) / 2) | 0)]));
            if (o > 0) n = i + 1;
            else {
              if (!(o < 0)) return a;
              r = i - 1;
            }
          }
          return null;
        };
        function Rn(e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
            i = null;
          if ((e ? (i = t[e.sn - t[0].sn + 1] || null) : 0 === n && 0 === t[0].start && (i = t[0]), i && 0 === Cn(n, r, i))) return i;
          var a = Ln(t, Cn.bind(null, n, r));
          return !a || (a === e && i) ? i : a;
        }
        function Cn() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            n = arguments.length > 2 ? arguments[2] : void 0;
          if (n.start <= e && n.start + n.duration > e) return 0;
          var r = Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
          return n.start + n.duration - r <= e ? 1 : n.start - r > e && n.start ? -1 : 0;
        }
        function xn(e, t, n) {
          var r = 1e3 * Math.min(t, n.duration + (n.deltaPTS ? n.deltaPTS : 0));
          return (n.endProgramDateTime || 0) - r > e;
        }
        var Dn = 3e5,
          In = 0,
          Mn = 2,
          Pn = 5,
          On = 0,
          Fn = 1,
          Nn = 2,
          Bn = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.playlistError = 0),
                (this.penalizedRenditions = {}),
                (this.log = void 0),
                (this.warn = void 0),
                (this.error = void 0),
                (this.hls = t),
                (this.log = ae.log.bind(ae, '[info]:')),
                (this.warn = ae.warn.bind(ae, '[warning]:')),
                (this.error = ae.error.bind(ae, '[error]:')),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.ERROR, this.onError, this), e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this), e.on(Q.LEVEL_UPDATED, this.onLevelUpdated, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e &&
                      (e.off(Q.ERROR, this.onError, this),
                      e.off(Q.ERROR, this.onErrorOut, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.LEVEL_UPDATED, this.onLevelUpdated, this));
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), (this.hls = null), (this.penalizedRenditions = {});
                  },
                },
                {
                  key: 'startLoad',
                  value: function (e) {
                    this.playlistError = 0;
                  },
                },
                { key: 'stopLoad', value: function () {} },
                {
                  key: 'getVariantLevelIndex',
                  value: function (e) {
                    return (null == e ? void 0 : e.type) === jt ? e.level : this.hls.loadLevel;
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.playlistError = 0), (this.penalizedRenditions = {});
                  },
                },
                {
                  key: 'onLevelUpdated',
                  value: function () {
                    this.playlistError = 0;
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var n;
                    if (!t.fatal) {
                      var r = this.hls,
                        i = t.context;
                      switch (t.details) {
                        case J.FRAG_LOAD_ERROR:
                        case J.FRAG_LOAD_TIMEOUT:
                        case J.KEY_LOAD_ERROR:
                        case J.KEY_LOAD_TIMEOUT:
                          return void (t.errorAction = this.getFragRetryOrSwitchAction(t));
                        case J.FRAG_GAP:
                        case J.FRAG_PARSING_ERROR:
                        case J.FRAG_DECRYPT_ERROR:
                          return (t.errorAction = this.getFragRetryOrSwitchAction(t)), void (t.errorAction.action = Mn);
                        case J.LEVEL_EMPTY_ERROR:
                        case J.LEVEL_PARSING_ERROR:
                          var a,
                            o,
                            s = t.parent === jt ? t.level : r.loadLevel;
                          return void (t.details === J.LEVEL_EMPTY_ERROR && null != (a = t.context) && null != (o = a.levelDetails) && o.live
                            ? (t.errorAction = this.getPlaylistRetryOrSwitchAction(t, s))
                            : ((t.levelRetry = !1), (t.errorAction = this.getLevelSwitchAction(t, s))));
                        case J.LEVEL_LOAD_ERROR:
                        case J.LEVEL_LOAD_TIMEOUT:
                          return void ('number' == typeof (null == i ? void 0 : i.level) && (t.errorAction = this.getPlaylistRetryOrSwitchAction(t, i.level)));
                        case J.AUDIO_TRACK_LOAD_ERROR:
                        case J.AUDIO_TRACK_LOAD_TIMEOUT:
                        case J.SUBTITLE_LOAD_ERROR:
                        case J.SUBTITLE_TRACK_LOAD_TIMEOUT:
                          if (i) {
                            var l = r.levels[r.loadLevel];
                            if (l && ((i.type === Vt && i.groupId === l.audioGroupId) || (i.type === Gt && i.groupId === l.textGroupId)))
                              return (t.errorAction = this.getPlaylistRetryOrSwitchAction(t, r.loadLevel)), (t.errorAction.action = Mn), void (t.errorAction.flags = Fn);
                          }
                          return;
                        case J.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                          var u = r.levels[r.loadLevel],
                            c = null == u ? void 0 : u.attrs['HDCP-LEVEL'];
                          return void (c && (t.errorAction = { action: Mn, flags: Nn, hdcpLevel: c }));
                        case J.BUFFER_ADD_CODEC_ERROR:
                        case J.REMUX_ALLOC_ERROR:
                          return void (t.errorAction = this.getLevelSwitchAction(t, null != (n = t.level) ? n : r.loadLevel));
                        case J.INTERNAL_EXCEPTION:
                        case J.BUFFER_APPENDING_ERROR:
                        case J.BUFFER_APPEND_ERROR:
                        case J.BUFFER_FULL_ERROR:
                        case J.LEVEL_SWITCH_ERROR:
                        case J.BUFFER_STALLED_ERROR:
                        case J.BUFFER_SEEK_OVER_HOLE:
                        case J.BUFFER_NUDGE_ON_STALL:
                          return void (t.errorAction = { action: In, flags: On });
                      }
                      if (t.type === Z.KEY_SYSTEM_ERROR) {
                        var d = this.getVariantLevelIndex(t.frag);
                        return (t.levelRetry = !1), void (t.errorAction = this.getLevelSwitchAction(t, d));
                      }
                    }
                  },
                },
                {
                  key: 'getPlaylistRetryOrSwitchAction',
                  value: function (e, t) {
                    var n,
                      r = kn(this.hls.config.playlistLoadPolicy, e),
                      i = this.playlistError++,
                      a = null == (n = e.response) ? void 0 : n.code;
                    if (An(r, i, Sn(e), a)) return { action: Pn, flags: On, retryConfig: r, retryCount: i };
                    var o = this.getLevelSwitchAction(e, t);
                    return r && ((o.retryConfig = r), (o.retryCount = i)), o;
                  },
                },
                {
                  key: 'getFragRetryOrSwitchAction',
                  value: function (e) {
                    var t = this.hls,
                      n = this.getVariantLevelIndex(e.frag),
                      r = t.levels[n],
                      i = t.config,
                      a = i.fragLoadPolicy,
                      o = i.keyLoadPolicy,
                      s = kn(e.details.startsWith('key') ? o : a, e),
                      l = t.levels.reduce(function (e, t) {
                        return e + t.fragmentError;
                      }, 0);
                    if (r) {
                      var u;
                      e.details !== J.FRAG_GAP && r.fragmentError++;
                      var c = null == (u = e.response) ? void 0 : u.code;
                      if (An(s, l, Sn(e), c)) return { action: Pn, flags: On, retryConfig: s, retryCount: l };
                    }
                    var d = this.getLevelSwitchAction(e, n);
                    return s && ((d.retryConfig = s), (d.retryCount = l)), d;
                  },
                },
                {
                  key: 'getLevelSwitchAction',
                  value: function (e, t) {
                    var n = this.hls;
                    null == t && (t = n.loadLevel);
                    var r = this.hls.levels[t];
                    if (r && (r.loadError++, n.autoLevelEnabled)) {
                      for (
                        var i,
                          a,
                          o = -1,
                          s = n.levels,
                          l = n.loadLevel,
                          u = n.minAutoLevel,
                          c = n.maxAutoLevel,
                          d = null == (i = e.frag) ? void 0 : i.type,
                          f = null != (a = e.context) ? a : {},
                          h = f.type,
                          p = f.groupId,
                          v = s.length;
                        v--;

                      ) {
                        var m = (v + l) % s.length;
                        if (m !== l && m >= u && m <= c && 0 === s[m].loadError) {
                          var g = s[m];
                          if (e.details === J.FRAG_GAP && e.frag) {
                            var y = s[m].details;
                            if (y) {
                              var _ = Rn(e.frag, y.fragments, e.frag.start);
                              if (null != _ && _.gap) continue;
                            }
                          } else {
                            if ((h === Vt && p === g.audioGroupId) || (h === Gt && p === g.textGroupId)) continue;
                            if ((d === Kt && r.audioGroupId === g.audioGroupId) || (d === Wt && r.textGroupId === g.textGroupId)) continue;
                          }
                          o = m;
                          break;
                        }
                      }
                      if (o > -1 && n.loadLevel !== o) return (e.levelRetry = !0), (this.playlistError = 0), { action: Mn, flags: On, nextAutoLevel: o };
                    }
                    return { action: Mn, flags: Fn };
                  },
                },
                {
                  key: 'onErrorOut',
                  value: function (e, t) {
                    var n;
                    switch (null == (n = t.errorAction) ? void 0 : n.action) {
                      case In:
                        break;
                      case Mn:
                        this.sendAlternateToPenaltyBox(t), t.errorAction.resolved || t.details === J.FRAG_GAP || (t.fatal = !0);
                    }
                    t.fatal && this.hls.stopLoad();
                  },
                },
                {
                  key: 'sendAlternateToPenaltyBox',
                  value: function (e) {
                    var t = this.hls,
                      n = e.errorAction;
                    if (n) {
                      var r = n.flags,
                        i = n.hdcpLevel,
                        a = n.nextAutoLevel;
                      switch (r) {
                        case On:
                          this.switchLevel(e, a);
                          break;
                        case Fn:
                          n.resolved || (n.resolved = this.redundantFailover(e));
                          break;
                        case Nn:
                          i && ((t.maxHdcpLevel = un[un.indexOf(i) - 1]), (n.resolved = !0)), this.warn('Restricting playback to HDCP-LEVEL of "'.concat(t.maxHdcpLevel, '" or lower'));
                      }
                      n.resolved || this.switchLevel(e, a);
                    }
                  },
                },
                {
                  key: 'switchLevel',
                  value: function (e, t) {
                    void 0 !== t &&
                      e.errorAction &&
                      (this.warn('switching to level '.concat(t, ' after ').concat(e.details)),
                      (this.hls.nextAutoLevel = t),
                      (e.errorAction.resolved = !0),
                      (this.hls.nextLoadLevel = this.hls.nextAutoLevel));
                  },
                },
                {
                  key: 'redundantFailover',
                  value: function (e) {
                    var t = this,
                      n = this.hls,
                      r = this.penalizedRenditions,
                      i = e.parent === jt ? e.level : n.loadLevel,
                      a = n.levels[i],
                      o = a.url.length,
                      s = e.frag ? e.frag.urlId : a.urlId;
                    a.urlId !== s || (e.frag && !a.details) || this.penalizeRendition(a, e);
                    for (
                      var u = function () {
                          var l = (s + c) % o,
                            u = r[l];
                          if (
                            !u ||
                            (function (e, t, n) {
                              if (performance.now() - e.lastErrorPerfMs > Dn) return !0;
                              var r = e.details;
                              if (t.details === J.FRAG_GAP && r && t.frag) {
                                var i = t.frag.start,
                                  a = Rn(null, r.fragments, i);
                                if (a && !a.gap) return !0;
                              }
                              if (n && e.errors.length < n.errors.length) {
                                var o = e.errors[e.errors.length - 1];
                                if (r && o.frag && t.frag && Math.abs(o.frag.start - t.frag.start) > 3 * r.targetduration) return !0;
                              }
                              return !1;
                            })(u, e, r[s])
                          )
                            return (
                              t.warn(
                                'Switching to Redundant Stream '
                                  .concat(l + 1, '/')
                                  .concat(o, ': "')
                                  .concat(a.url[l], '" after ')
                                  .concat(e.details),
                              ),
                              (t.playlistError = 0),
                              n.levels.forEach(function (e) {
                                e.urlId = l;
                              }),
                              (n.nextLoadLevel = i),
                              { v: !0 }
                            );
                        },
                        c = 1;
                      c < o;
                      c++
                    ) {
                      var d = u();
                      if ('object' === l(d)) return d.v;
                    }
                    return !1;
                  },
                },
                {
                  key: 'penalizeRendition',
                  value: function (e, t) {
                    var n = this.penalizedRenditions,
                      r = n[e.urlId] || { lastErrorPerfMs: 0, errors: [], details: void 0 };
                    (r.lastErrorPerfMs = performance.now()), r.errors.push(t), (r.details = e.details), (n[e.urlId] = r);
                  },
                },
              ]),
              e
            );
          })();
        var Un,
          zn = (function () {
            function e(t, n) {
              k(this, e),
                (this.hls = void 0),
                (this.timer = -1),
                (this.requestScheduled = -1),
                (this.canLoad = !1),
                (this.log = void 0),
                (this.warn = void 0),
                (this.log = ae.log.bind(ae, ''.concat(n, ':'))),
                (this.warn = ae.warn.bind(ae, ''.concat(n, ':'))),
                (this.hls = t);
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    this.clearTimer(), (this.hls = this.log = this.warn = null);
                  },
                },
                {
                  key: 'clearTimer',
                  value: function () {
                    clearTimeout(this.timer), (this.timer = -1);
                  },
                },
                {
                  key: 'startLoad',
                  value: function () {
                    (this.canLoad = !0), (this.requestScheduled = -1), this.loadPlaylist();
                  },
                },
                {
                  key: 'stopLoad',
                  value: function () {
                    (this.canLoad = !1), this.clearTimer();
                  },
                },
                {
                  key: 'switchParams',
                  value: function (e, t) {
                    var n = null == t ? void 0 : t.renditionReports;
                    if (n) {
                      for (var r = -1, i = 0; i < n.length; i++) {
                        var a = n[i],
                          o = void 0;
                        try {
                          o = new self.URL(a.URI, t.url).href;
                        } catch (e) {
                          ae.warn('Could not construct new URL for Rendition Report: '.concat(e)), (o = a.URI || '');
                        }
                        if (o === e) {
                          r = i;
                          break;
                        }
                        o === e.substring(0, o.length) && (r = i);
                      }
                      if (-1 !== r) {
                        var s = n[r],
                          l = parseInt(s['LAST-MSN']) || (null == t ? void 0 : t.lastPartSn),
                          u = parseInt(s['LAST-PART']) || (null == t ? void 0 : t.lastPartIndex);
                        if (this.hls.config.lowLatencyMode) {
                          var c = Math.min(t.age - t.partTarget, t.targetduration);
                          u >= 0 && c > t.partTarget && (u += 1);
                        }
                        return new hn(l, u >= 0 ? u : void 0, cn);
                      }
                    }
                  },
                },
                {
                  key: 'loadPlaylist',
                  value: function (e) {
                    -1 === this.requestScheduled && (this.requestScheduled = self.performance.now());
                  },
                },
                {
                  key: 'shouldLoadPlaylist',
                  value: function (e) {
                    return this.canLoad && !!e && !!e.url && (!e.details || e.details.live);
                  },
                },
                {
                  key: 'shouldReloadPlaylist',
                  value: function (e) {
                    return -1 === this.timer && -1 === this.requestScheduled && this.shouldLoadPlaylist(e);
                  },
                },
                {
                  key: 'playlistLoaded',
                  value: function (e, t, n) {
                    var r = this,
                      i = t.details,
                      a = t.stats,
                      o = self.performance.now(),
                      s = a.loading.first ? Math.max(0, o - a.loading.first) : 0;
                    if (((i.advancedDateTime = Date.now() - s), i.live || (null != n && n.live))) {
                      if (
                        (i.reloaded(n),
                        n && this.log('live playlist '.concat(e, ' ').concat(i.advanced ? 'REFRESHED ' + i.lastPartSn + '-' + i.lastPartIndex : 'MISSED')),
                        n && i.fragments.length > 0 && gn(n, i),
                        !this.canLoad || !i.live)
                      )
                        return;
                      var l,
                        u = void 0,
                        c = void 0;
                      if (i.canBlockReload && i.endSN && i.advanced) {
                        var d = this.hls.config.lowLatencyMode,
                          f = i.lastPartSn,
                          h = i.endSN,
                          p = i.lastPartIndex,
                          v = f === h;
                        -1 !== p ? ((u = v ? h + 1 : f), (c = v ? (d ? 0 : p) : p + 1)) : (u = h + 1);
                        var m = i.age,
                          g = m + i.ageHeader,
                          y = Math.min(g - i.partTarget, 1.5 * i.targetduration);
                        if (y > 0) {
                          if (n && y > n.tuneInGoal) this.warn('CDN Tune-in goal increased from: '.concat(n.tuneInGoal, ' to: ').concat(y, ' with playlist age: ').concat(i.age)), (y = 0);
                          else {
                            var _ = Math.floor(y / i.targetduration);
                            if (((u += _), void 0 !== c)) c += Math.round((y % i.targetduration) / i.partTarget);
                            this.log('CDN Tune-in age: '.concat(i.ageHeader, 's last advanced ').concat(m.toFixed(2), 's goal: ').concat(y, ' skip sn ').concat(_, ' to part ').concat(c));
                          }
                          i.tuneInGoal = y;
                        }
                        if (((l = this.getDeliveryDirectives(i, t.deliveryDirectives, u, c)), d || !v)) return void this.loadPlaylist(l);
                      } else i.canBlockReload && (l = this.getDeliveryDirectives(i, t.deliveryDirectives, u, c));
                      var b = this.hls.mainForwardBufferInfo,
                        E = b ? b.end - b.len : 0,
                        S = (function (e) {
                          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1 / 0,
                            n = 1e3 * e.targetduration;
                          if (e.updated) {
                            var r = e.fragments,
                              i = 4;
                            if (r.length && n * i > t) {
                              var a = 1e3 * r[r.length - 1].duration;
                              a < n && (n = a);
                            }
                          } else n /= 2;
                          return Math.round(n);
                        })(i, 1e3 * (i.edge - E));
                      i.updated && o > this.requestScheduled + S && (this.requestScheduled = a.loading.start),
                        void 0 !== u && i.canBlockReload
                          ? (this.requestScheduled = a.loading.first + S - (1e3 * i.partTarget || 1e3))
                          : -1 === this.requestScheduled || this.requestScheduled + S < o
                          ? (this.requestScheduled = o)
                          : this.requestScheduled - o <= 0 && (this.requestScheduled += S);
                      var k = this.requestScheduled - o;
                      (k = Math.max(0, k)),
                        this.log('reload live playlist '.concat(e, ' in ').concat(Math.round(k), ' ms')),
                        (this.timer = self.setTimeout(function () {
                          return r.loadPlaylist(l);
                        }, k));
                    } else this.clearTimer();
                  },
                },
                {
                  key: 'getDeliveryDirectives',
                  value: function (e, t, n, r) {
                    var i = (function (e, t) {
                      var n = e.canSkipUntil,
                        r = e.canSkipDateRanges,
                        i = e.endSN;
                      return n && (void 0 !== t ? t - i : 0) < n ? (r ? fn : dn) : cn;
                    })(e, n);
                    return null != t && t.skip && e.deltaUpdateFailed && ((n = t.msn), (r = t.part), (i = cn)), new hn(n, r, i);
                  },
                },
                {
                  key: 'checkRetry',
                  value: function (e) {
                    var t = this,
                      n = e.details,
                      r = Sn(e),
                      i = e.errorAction,
                      a = i || {},
                      o = a.action,
                      s = a.retryCount,
                      l = void 0 === s ? 0 : s,
                      u = a.retryConfig,
                      c = !!i && !!u && (o === Pn || (!i.resolved && o === Mn));
                    if (c) {
                      var d;
                      if (((this.requestScheduled = -1), l >= u.maxNumRetry)) return !1;
                      if (r && null != (d = e.context) && d.deliveryDirectives)
                        this.warn(
                          'Retrying playlist loading '
                            .concat(l + 1, '/')
                            .concat(u.maxNumRetry, ' after "')
                            .concat(n, '" without delivery-directives'),
                        ),
                          this.loadPlaylist();
                      else {
                        var f = Tn(u, l);
                        (this.timer = self.setTimeout(function () {
                          return t.loadPlaylist();
                        }, f)),
                          this.warn(
                            'Retrying playlist loading '
                              .concat(l + 1, '/')
                              .concat(u.maxNumRetry, ' after "')
                              .concat(n, '" in ')
                              .concat(f, 'ms'),
                          );
                      }
                      (e.levelRetry = !0), (i.resolved = !0);
                    }
                    return c;
                  },
                },
              ]),
              e
            );
          })(),
          Hn = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r) {
              var i;
              return (
                k(this, n),
                ((i = t.call(this, e, '[level-controller]'))._levels = []),
                (i._firstLevel = -1),
                (i._startLevel = void 0),
                (i.currentLevel = null),
                (i.currentLevelIndex = -1),
                (i.manualLevelIndex = -1),
                (i.steering = void 0),
                (i.onParsedComplete = void 0),
                (i.steering = r),
                i._registerListeners(),
                i
              );
            }
            return (
              w(n, [
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
                      e.on(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.on(Q.LEVELS_UPDATED, this.onLevelsUpdated, this),
                      e.on(Q.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                      e.on(Q.FRAG_LOADED, this.onFragLoaded, this),
                      e.on(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
                      e.off(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.off(Q.LEVELS_UPDATED, this.onLevelsUpdated, this),
                      e.off(Q.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                      e.off(Q.FRAG_LOADED, this.onFragLoaded, this),
                      e.off(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this._unregisterListeners(), (this.steering = null), this.resetLevels(), U(z(n.prototype), 'destroy', this).call(this);
                  },
                },
                {
                  key: 'startLoad',
                  value: function () {
                    this._levels.forEach(function (e) {
                      (e.loadError = 0), (e.fragmentError = 0);
                    }),
                      U(z(n.prototype), 'startLoad', this).call(this);
                  },
                },
                {
                  key: 'resetLevels',
                  value: function () {
                    (this._startLevel = void 0), (this.manualLevelIndex = -1), (this.currentLevelIndex = -1), (this.currentLevel = null), (this._levels = []);
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function (e, t) {
                    this.resetLevels();
                  },
                },
                {
                  key: 'onManifestLoaded',
                  value: function (e, t) {
                    var n,
                      r = [],
                      i = {};
                    t.levels.forEach(function (e) {
                      var t,
                        a = e.attrs;
                      -1 !== (null == (t = e.audioCodec) ? void 0 : t.indexOf('mp4a.40.34')) && (Un || (Un = /chrome|firefox/i.test(navigator.userAgent)), Un && (e.audioCodec = void 0));
                      var o = a.AUDIO,
                        s = a.CODECS,
                        l = a['FRAME-RATE'],
                        u = a['PATHWAY-ID'],
                        c = a.RESOLUTION,
                        d = a.SUBTITLES,
                        f = ''.concat(u || '.', '-'),
                        h = ''.concat(f).concat(e.bitrate, '-').concat(c, '-').concat(l, '-').concat(s);
                      (n = i[h]) ? n.addFallback(e) : ((n = new pn(e)), (i[h] = n), r.push(n)), Vn(n, 'audio', o), Vn(n, 'text', d);
                    }),
                      this.filterAndSortMediaOptions(r, t);
                  },
                },
                {
                  key: 'filterAndSortMediaOptions',
                  value: function (e, t) {
                    var n = this,
                      r = [],
                      i = [],
                      a = !1,
                      o = !1,
                      s = !1,
                      l = e.filter(function (e) {
                        var t = e.audioCodec,
                          n = e.videoCodec,
                          r = e.width,
                          i = e.height,
                          l = e.unknownCodecs;
                        return a || (a = !(!r || !i)), o || (o = !!n), s || (s = !!t), !(null != l && l.length) && (!t || At(t, 'audio')) && (!n || At(n, 'video'));
                      });
                    if (
                      ((a || o) &&
                        s &&
                        (l = l.filter(function (e) {
                          var t = e.videoCodec,
                            n = e.width,
                            r = e.height;
                          return !!t || !(!n || !r);
                        })),
                      0 !== l.length)
                    ) {
                      t.audioTracks &&
                        Gn(
                          (r = t.audioTracks.filter(function (e) {
                            return !e.audioCodec || At(e.audioCodec, 'audio');
                          })),
                        ),
                        t.subtitles && Gn((i = t.subtitles));
                      var u = l.slice(0);
                      l.sort(function (e, t) {
                        return e.attrs['HDCP-LEVEL'] !== t.attrs['HDCP-LEVEL']
                          ? (e.attrs['HDCP-LEVEL'] || '') > (t.attrs['HDCP-LEVEL'] || '')
                            ? 1
                            : -1
                          : e.bitrate !== t.bitrate
                          ? e.bitrate - t.bitrate
                          : e.attrs['FRAME-RATE'] !== t.attrs['FRAME-RATE']
                          ? e.attrs.decimalFloatingPoint('FRAME-RATE') - t.attrs.decimalFloatingPoint('FRAME-RATE')
                          : e.attrs.SCORE !== t.attrs.SCORE
                          ? e.attrs.decimalFloatingPoint('SCORE') - t.attrs.decimalFloatingPoint('SCORE')
                          : a && e.height !== t.height
                          ? e.height - t.height
                          : 0;
                      });
                      var c = u[0];
                      if (this.steering && (l = this.steering.filterParsedLevels(l)).length !== u.length)
                        for (var d = 0; d < u.length; d++)
                          if (u[d].pathwayId === l[0].pathwayId) {
                            c = u[d];
                            break;
                          }
                      this._levels = l;
                      for (var f = 0; f < l.length; f++)
                        if (l[f] === c) {
                          (this._firstLevel = f), this.log('manifest loaded, '.concat(l.length, ' level(s) found, first bitrate: ').concat(c.bitrate));
                          break;
                        }
                      var h = s && !o,
                        p = {
                          levels: l,
                          audioTracks: r,
                          subtitleTracks: i,
                          sessionData: t.sessionData,
                          sessionKeys: t.sessionKeys,
                          firstLevel: this._firstLevel,
                          stats: t.stats,
                          audio: s,
                          video: o,
                          altAudio:
                            !h &&
                            r.some(function (e) {
                              return !!e.url;
                            }),
                        };
                      this.hls.trigger(Q.MANIFEST_PARSED, p), (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition);
                    } else
                      Promise.resolve().then(function () {
                        if (n.hls) {
                          var e = new Error('no level with compatible codecs found in manifest');
                          n.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: !0, url: t.url, error: e, reason: e.message });
                        }
                      });
                  },
                },
                {
                  key: 'levels',
                  get: function () {
                    return 0 === this._levels.length ? null : this._levels;
                  },
                },
                {
                  key: 'level',
                  get: function () {
                    return this.currentLevelIndex;
                  },
                  set: function (e) {
                    var t = this._levels;
                    if (0 !== t.length) {
                      if (e < 0 || e >= t.length) {
                        var n = new Error('invalid level idx'),
                          r = e < 0;
                        if ((this.hls.trigger(Q.ERROR, { type: Z.OTHER_ERROR, details: J.LEVEL_SWITCH_ERROR, level: e, fatal: r, error: n, reason: n.message }), r)) return;
                        e = Math.min(e, t.length - 1);
                      }
                      var i = this.currentLevelIndex,
                        a = this.currentLevel,
                        o = a ? a.attrs['PATHWAY-ID'] : void 0,
                        s = t[e],
                        l = s.attrs['PATHWAY-ID'];
                      if (((this.currentLevelIndex = e), (this.currentLevel = s), i !== e || !s.details || !a || o !== l)) {
                        this.log(
                          'Switching to level '
                            .concat(e)
                            .concat(l ? ' with Pathway ' + l : '', ' from level ')
                            .concat(i)
                            .concat(o ? ' with Pathway ' + o : ''),
                        );
                        var u = X({}, s, { level: e, maxBitrate: s.maxBitrate, attrs: s.attrs, uri: s.uri, urlId: s.urlId });
                        delete u._attrs, delete u._urlId, this.hls.trigger(Q.LEVEL_SWITCHING, u);
                        var c = s.details;
                        if (!c || c.live) {
                          var d = this.switchParams(s.uri, null == a ? void 0 : a.details);
                          this.loadPlaylist(d);
                        }
                      }
                    }
                  },
                },
                {
                  key: 'manualLevel',
                  get: function () {
                    return this.manualLevelIndex;
                  },
                  set: function (e) {
                    (this.manualLevelIndex = e), void 0 === this._startLevel && (this._startLevel = e), -1 !== e && (this.level = e);
                  },
                },
                {
                  key: 'firstLevel',
                  get: function () {
                    return this._firstLevel;
                  },
                  set: function (e) {
                    this._firstLevel = e;
                  },
                },
                {
                  key: 'startLevel',
                  get: function () {
                    if (void 0 === this._startLevel) {
                      var e = this.hls.config.startLevel;
                      return void 0 !== e ? e : this._firstLevel;
                    }
                    return this._startLevel;
                  },
                  set: function (e) {
                    this._startLevel = e;
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    !t.fatal && t.context && t.context.type === Ht && t.context.level === this.level && this.checkRetry(t);
                  },
                },
                {
                  key: 'onFragLoaded',
                  value: function (e, t) {
                    var n = t.frag;
                    if (void 0 !== n && n.type === jt) {
                      var r = this._levels[n.level];
                      void 0 !== r && (r.loadError = 0);
                    }
                  },
                },
                {
                  key: 'onLevelLoaded',
                  value: function (e, t) {
                    var n,
                      r,
                      i = t.level,
                      a = t.details,
                      o = this._levels[i];
                    if (!o) return this.warn('Invalid level index '.concat(i)), void (null != (r = t.deliveryDirectives) && r.skip && (a.deltaUpdateFailed = !0));
                    i === this.currentLevelIndex
                      ? (0 === o.fragmentError && (o.loadError = 0), this.playlistLoaded(i, t, o.details))
                      : null != (n = t.deliveryDirectives) && n.skip && (a.deltaUpdateFailed = !0);
                  },
                },
                {
                  key: 'onAudioTrackSwitched',
                  value: function (e, t) {
                    var n = this.currentLevel;
                    if (n) {
                      var r = this.hls.audioTracks[t.id].groupId;
                      if (n.audioGroupIds && n.audioGroupId !== r) {
                        for (var i = -1, a = 0; a < n.audioGroupIds.length; a++)
                          if (n.audioGroupIds[a] === r) {
                            i = a;
                            break;
                          }
                        -1 !== i && i !== n.urlId && ((n.urlId = i), this.canLoad && this.startLoad());
                      }
                    }
                  },
                },
                {
                  key: 'loadPlaylist',
                  value: function (e) {
                    U(z(n.prototype), 'loadPlaylist', this).call(this);
                    var t = this.currentLevelIndex,
                      r = this.currentLevel;
                    if (r && this.shouldLoadPlaylist(r)) {
                      var i = r.urlId,
                        a = r.uri;
                      if (e)
                        try {
                          a = e.addDirectives(a);
                        } catch (e) {
                          this.warn('Could not construct new URL with HLS Delivery Directives: '.concat(e));
                        }
                      var o = r.attrs['PATHWAY-ID'];
                      this.log(
                        'Loading level index '
                          .concat(t)
                          .concat(void 0 !== (null == e ? void 0 : e.msn) ? ' at sn ' + e.msn + ' part ' + e.part : '', ' with')
                          .concat(o ? ' Pathway ' + o : '', ' URI ')
                          .concat(i + 1, '/')
                          .concat(r.url.length, ' ')
                          .concat(a),
                      ),
                        this.clearTimer(),
                        this.hls.trigger(Q.LEVEL_LOADING, { url: a, level: t, id: i, deliveryDirectives: e || null });
                    }
                  },
                },
                {
                  key: 'nextLoadLevel',
                  get: function () {
                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel;
                  },
                  set: function (e) {
                    (this.level = e), -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e);
                  },
                },
                {
                  key: 'removeLevel',
                  value: function (e, t) {
                    var n = this,
                      r = function (e, n) {
                        return n !== t;
                      },
                      i = this._levels.filter(function (i, a) {
                        return (
                          a !== e ||
                          (i.url.length > 1 && void 0 !== t
                            ? ((i.url = i.url.filter(r)),
                              i.audioGroupIds && (i.audioGroupIds = i.audioGroupIds.filter(r)),
                              i.textGroupIds && (i.textGroupIds = i.textGroupIds.filter(r)),
                              (i.urlId = 0),
                              !0)
                            : (n.steering && n.steering.removeLevel(i), !1))
                        );
                      });
                    this.hls.trigger(Q.LEVELS_UPDATED, { levels: i });
                  },
                },
                {
                  key: 'onLevelsUpdated',
                  value: function (e, t) {
                    var n = t.levels;
                    n.forEach(function (e, t) {
                      var n = e.details;
                      null != n &&
                        n.fragments &&
                        n.fragments.forEach(function (e) {
                          e.level = t;
                        });
                    }),
                      (this._levels = n);
                  },
                },
              ]),
              n
            );
          })(zn);
        function Vn(e, t, n) {
          n &&
            ('audio' === t
              ? (e.audioGroupIds || (e.audioGroupIds = []), (e.audioGroupIds[e.url.length - 1] = n))
              : 'text' === t && (e.textGroupIds || (e.textGroupIds = []), (e.textGroupIds[e.url.length - 1] = n)));
        }
        function Gn(e) {
          var t = {};
          e.forEach(function (e) {
            var n = e.groupId || '';
            (e.id = t[n] = t[n] || 0), t[n]++;
          });
        }
        var jn = 'NOT_LOADED',
          Kn = 'APPENDING',
          Wn = 'PARTIAL',
          qn = 'OK',
          Yn = (function () {
            function e(t) {
              k(this, e),
                (this.activePartLists = Object.create(null)),
                (this.endListFragments = Object.create(null)),
                (this.fragments = Object.create(null)),
                (this.timeRanges = Object.create(null)),
                (this.bufferPadding = 0.2),
                (this.hls = void 0),
                (this.hasGaps = !1),
                (this.hls = t),
                this._registerListeners();
            }
            return (
              w(e, [
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.BUFFER_APPENDED, this.onBufferAppended, this), e.on(Q.FRAG_BUFFERED, this.onFragBuffered, this), e.on(Q.FRAG_LOADED, this.onFragLoaded, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.BUFFER_APPENDED, this.onBufferAppended, this), e.off(Q.FRAG_BUFFERED, this.onFragBuffered, this), e.off(Q.FRAG_LOADED, this.onFragLoaded, this);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this._unregisterListeners(), (this.fragments = this.activePartLists = this.endListFragments = this.timeRanges = null);
                  },
                },
                {
                  key: 'getAppendedFrag',
                  value: function (e, t) {
                    var n = this.activePartLists[t];
                    if (n)
                      for (var r = n.length; r--; ) {
                        var i = n[r];
                        if (!i) break;
                        var a = i.end;
                        if (i.start <= e && null !== a && e <= a) return i;
                      }
                    return this.getBufferedFrag(e, t);
                  },
                },
                {
                  key: 'getBufferedFrag',
                  value: function (e, t) {
                    for (var n = this.fragments, r = Object.keys(n), i = r.length; i--; ) {
                      var a = n[r[i]];
                      if ((null == a ? void 0 : a.body.type) === t && a.buffered) {
                        var o = a.body;
                        if (o.start <= e && e <= o.end) return o;
                      }
                    }
                    return null;
                  },
                },
                {
                  key: 'detectEvictedFragments',
                  value: function (e, t, n, r) {
                    var i = this;
                    this.timeRanges && (this.timeRanges[e] = t);
                    var a = (null == r ? void 0 : r.fragment.sn) || -1;
                    Object.keys(this.fragments).forEach(function (r) {
                      var o = i.fragments[r];
                      if (o && !(a >= o.body.sn))
                        if (o.buffered || o.loaded) {
                          var s = o.range[e];
                          s &&
                            s.time.some(function (e) {
                              var n = !i.isTimeBuffered(e.startPTS, e.endPTS, t);
                              return n && i.removeFragment(o.body), n;
                            });
                        } else o.body.type === n && i.removeFragment(o.body);
                    });
                  },
                },
                {
                  key: 'detectPartialFragments',
                  value: function (e) {
                    var t = this,
                      n = this.timeRanges,
                      r = e.frag,
                      i = e.part;
                    if (n && 'initSegment' !== r.sn) {
                      var a = $n(r),
                        o = this.fragments[a];
                      if (o) {
                        var s = !r.relurl;
                        Object.keys(n).forEach(function (e) {
                          var a = r.elementaryStreams[e];
                          if (a) {
                            var l = n[e],
                              u = s || !0 === a.partial;
                            o.range[e] = t.getBufferedTimes(r, i, u, l);
                          }
                        }),
                          (o.loaded = null),
                          Object.keys(o.range).length
                            ? ((o.buffered = !0), o.body.endList && (this.endListFragments[o.body.type] = o), Xn(o) || this.removeParts(r.sn - 1, r.type))
                            : this.removeFragment(o.body);
                      }
                    }
                  },
                },
                {
                  key: 'removeParts',
                  value: function (e, t) {
                    var n = this.activePartLists[t];
                    n &&
                      (this.activePartLists[t] = n.filter(function (t) {
                        return t.fragment.sn >= e;
                      }));
                  },
                },
                {
                  key: 'fragBuffered',
                  value: function (e, t) {
                    var n = $n(e),
                      r = this.fragments[n];
                    !r && t && ((r = this.fragments[n] = { body: e, appendedPTS: null, loaded: null, buffered: !1, range: Object.create(null) }), e.gap && (this.hasGaps = !0)),
                      r && ((r.loaded = null), (r.buffered = !0));
                  },
                },
                {
                  key: 'getBufferedTimes',
                  value: function (e, t, n, r) {
                    for (var i = { time: [], partial: n }, a = e.start, o = e.end, s = e.minEndPTS || o, l = e.maxStartPTS || a, u = 0; u < r.length; u++) {
                      var c = r.start(u) - this.bufferPadding,
                        d = r.end(u) + this.bufferPadding;
                      if (l >= c && s <= d) {
                        i.time.push({ startPTS: Math.max(a, r.start(u)), endPTS: Math.min(o, r.end(u)) });
                        break;
                      }
                      if (a < d && o > c) (i.partial = !0), i.time.push({ startPTS: Math.max(a, r.start(u)), endPTS: Math.min(o, r.end(u)) });
                      else if (o <= c) break;
                    }
                    return i;
                  },
                },
                {
                  key: 'getPartialFragment',
                  value: function (e) {
                    var t,
                      n,
                      r,
                      i = null,
                      a = 0,
                      o = this.bufferPadding,
                      s = this.fragments;
                    return (
                      Object.keys(s).forEach(function (l) {
                        var u = s[l];
                        u && Xn(u) && ((n = u.body.start - o), (r = u.body.end + o), e >= n && e <= r && ((t = Math.min(e - n, r - e)), a <= t && ((i = u.body), (a = t))));
                      }),
                      i
                    );
                  },
                },
                {
                  key: 'isEndListAppended',
                  value: function (e) {
                    var t = this.endListFragments[e];
                    return void 0 !== t && (t.buffered || Xn(t));
                  },
                },
                {
                  key: 'getState',
                  value: function (e) {
                    var t = $n(e),
                      n = this.fragments[t];
                    return n ? (n.buffered ? (Xn(n) ? Wn : qn) : Kn) : jn;
                  },
                },
                {
                  key: 'isTimeBuffered',
                  value: function (e, t, n) {
                    for (var r, i, a = 0; a < n.length; a++) {
                      if (((r = n.start(a) - this.bufferPadding), (i = n.end(a) + this.bufferPadding), e >= r && t <= i)) return !0;
                      if (t <= r) return !1;
                    }
                    return !1;
                  },
                },
                {
                  key: 'onFragLoaded',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.part;
                    if ('initSegment' !== n.sn && !n.bitrateTest) {
                      var i = r ? null : t,
                        a = $n(n);
                      this.fragments[a] = { body: n, appendedPTS: null, loaded: i, buffered: !1, range: Object.create(null) };
                    }
                  },
                },
                {
                  key: 'onBufferAppended',
                  value: function (e, t) {
                    var n = this,
                      r = t.frag,
                      i = t.part,
                      a = t.timeRanges;
                    if ('initSegment' !== r.sn) {
                      var o = r.type;
                      if (i) {
                        var s = this.activePartLists[o];
                        s || (this.activePartLists[o] = s = []), s.push(i);
                      }
                      (this.timeRanges = a),
                        Object.keys(a).forEach(function (e) {
                          var t = a[e];
                          n.detectEvictedFragments(e, t, o, i);
                        });
                    }
                  },
                },
                {
                  key: 'onFragBuffered',
                  value: function (e, t) {
                    this.detectPartialFragments(t);
                  },
                },
                {
                  key: 'hasFragment',
                  value: function (e) {
                    var t = $n(e);
                    return !!this.fragments[t];
                  },
                },
                {
                  key: 'hasParts',
                  value: function (e) {
                    var t;
                    return !(null == (t = this.activePartLists[e]) || !t.length);
                  },
                },
                {
                  key: 'removeFragmentsInRange',
                  value: function (e, t, n, r, i) {
                    var a = this;
                    (r && !this.hasGaps) ||
                      Object.keys(this.fragments).forEach(function (o) {
                        var s = a.fragments[o];
                        if (s) {
                          var l = s.body;
                          l.type !== n || (r && !l.gap) || (l.start < t && l.end > e && (s.buffered || i) && a.removeFragment(l));
                        }
                      });
                  },
                },
                {
                  key: 'removeFragment',
                  value: function (e) {
                    var t = $n(e);
                    (e.stats.loaded = 0), e.clearElementaryStreamInfo();
                    var n = this.activePartLists[e.type];
                    if (n) {
                      var r = e.sn;
                      this.activePartLists[e.type] = n.filter(function (e) {
                        return e.fragment.sn !== r;
                      });
                    }
                    delete this.fragments[t], e.endList && delete this.endListFragments[e.type];
                  },
                },
                {
                  key: 'removeAllFragments',
                  value: function () {
                    (this.fragments = Object.create(null)), (this.endListFragments = Object.create(null)), (this.activePartLists = Object.create(null)), (this.hasGaps = !1);
                  },
                },
              ]),
              e
            );
          })();
        function Xn(e) {
          var t, n, r;
          return (
            e.buffered &&
            (e.body.gap || (null == (t = e.range.video) ? void 0 : t.partial) || (null == (n = e.range.audio) ? void 0 : n.partial) || (null == (r = e.range.audiovideo) ? void 0 : r.partial))
          );
        }
        function $n(e) {
          return ''.concat(e.type, '_').concat(e.level, '_').concat(e.urlId, '_').concat(e.sn);
        }
        var Qn = Math.pow(2, 17),
          Zn = (function () {
            function e(t) {
              k(this, e), (this.config = void 0), (this.loader = null), (this.partLoadTimeout = -1), (this.config = t);
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    this.loader && (this.loader.destroy(), (this.loader = null));
                  },
                },
                {
                  key: 'abort',
                  value: function () {
                    this.loader && this.loader.abort();
                  },
                },
                {
                  key: 'load',
                  value: function (e, t) {
                    var n = this,
                      r = e.url;
                    if (!r)
                      return Promise.reject(
                        new tr({
                          type: Z.NETWORK_ERROR,
                          details: J.FRAG_LOAD_ERROR,
                          fatal: !1,
                          frag: e,
                          error: new Error('Fragment does not have a '.concat(r ? 'part list' : 'url')),
                          networkDetails: null,
                        }),
                      );
                    this.abort();
                    var i = this.config,
                      a = i.fLoader,
                      o = i.loader;
                    return new Promise(function (s, l) {
                      if ((n.loader && n.loader.destroy(), e.gap)) l(er(e));
                      else {
                        var u = (n.loader = e.loader = a ? new a(i) : new o(i)),
                          c = Jn(e),
                          d = wn(i.fragLoadPolicy.default),
                          f = { loadPolicy: d, timeout: d.maxLoadTimeMs, maxRetry: 0, retryDelay: 0, maxRetryDelay: 0, highWaterMark: 'initSegment' === e.sn ? 1 / 0 : Qn };
                        (e.stats = u.stats),
                          u.load(c, f, {
                            onSuccess: function (t, r, i, a) {
                              n.resetLoader(e, u);
                              var o = t.data;
                              i.resetIV && e.decryptdata && ((e.decryptdata.iv = new Uint8Array(o.slice(0, 16))), (o = o.slice(16))), s({ frag: e, part: null, payload: o, networkDetails: a });
                            },
                            onError: function (t, i, a, o) {
                              n.resetLoader(e, u),
                                l(
                                  new tr({
                                    type: Z.NETWORK_ERROR,
                                    details: J.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: e,
                                    response: q({ url: r, data: void 0 }, t),
                                    error: new Error('HTTP Error '.concat(t.code, ' ').concat(t.text)),
                                    networkDetails: a,
                                    stats: o,
                                  }),
                                );
                            },
                            onAbort: function (t, r, i) {
                              n.resetLoader(e, u), l(new tr({ type: Z.NETWORK_ERROR, details: J.INTERNAL_ABORTED, fatal: !1, frag: e, error: new Error('Aborted'), networkDetails: i, stats: t }));
                            },
                            onTimeout: function (t, r, i) {
                              n.resetLoader(e, u),
                                l(
                                  new tr({
                                    type: Z.NETWORK_ERROR,
                                    details: J.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: e,
                                    error: new Error('Timeout after '.concat(f.timeout, 'ms')),
                                    networkDetails: i,
                                    stats: t,
                                  }),
                                );
                            },
                            onProgress: function (n, r, i, a) {
                              t && t({ frag: e, part: null, payload: i, networkDetails: a });
                            },
                          });
                      }
                    });
                  },
                },
                {
                  key: 'loadPart',
                  value: function (e, t, n) {
                    var r = this;
                    this.abort();
                    var i = this.config,
                      a = i.fLoader,
                      o = i.loader;
                    return new Promise(function (s, l) {
                      if ((r.loader && r.loader.destroy(), e.gap || t.gap)) l(er(e, t));
                      else {
                        var u = (r.loader = e.loader = a ? new a(i) : new o(i)),
                          c = Jn(e, t),
                          d = wn(i.fragLoadPolicy.default),
                          f = { loadPolicy: d, timeout: d.maxLoadTimeMs, maxRetry: 0, retryDelay: 0, maxRetryDelay: 0, highWaterMark: Qn };
                        (t.stats = u.stats),
                          u.load(c, f, {
                            onSuccess: function (i, a, o, l) {
                              r.resetLoader(e, u), r.updateStatsFromPart(e, t);
                              var c = { frag: e, part: t, payload: i.data, networkDetails: l };
                              n(c), s(c);
                            },
                            onError: function (n, i, a, o) {
                              r.resetLoader(e, u),
                                l(
                                  new tr({
                                    type: Z.NETWORK_ERROR,
                                    details: J.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: e,
                                    part: t,
                                    response: q({ url: c.url, data: void 0 }, n),
                                    error: new Error('HTTP Error '.concat(n.code, ' ').concat(n.text)),
                                    networkDetails: a,
                                    stats: o,
                                  }),
                                );
                            },
                            onAbort: function (n, i, a) {
                              (e.stats.aborted = t.stats.aborted),
                                r.resetLoader(e, u),
                                l(new tr({ type: Z.NETWORK_ERROR, details: J.INTERNAL_ABORTED, fatal: !1, frag: e, part: t, error: new Error('Aborted'), networkDetails: a, stats: n }));
                            },
                            onTimeout: function (n, i, a) {
                              r.resetLoader(e, u),
                                l(
                                  new tr({
                                    type: Z.NETWORK_ERROR,
                                    details: J.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: e,
                                    part: t,
                                    error: new Error('Timeout after '.concat(f.timeout, 'ms')),
                                    networkDetails: a,
                                    stats: n,
                                  }),
                                );
                            },
                          });
                      }
                    });
                  },
                },
                {
                  key: 'updateStatsFromPart',
                  value: function (e, t) {
                    var n = e.stats,
                      r = t.stats,
                      i = r.total;
                    if (((n.loaded += r.loaded), i)) {
                      var a = Math.round(e.duration / t.duration),
                        o = Math.min(Math.round(n.loaded / i), a),
                        s = (a - o) * Math.round(n.loaded / o);
                      n.total = n.loaded + s;
                    } else n.total = Math.max(n.loaded, n.total);
                    var l = n.loading,
                      u = r.loading;
                    l.start ? (l.first += u.first - u.start) : ((l.start = u.start), (l.first = u.first)), (l.end = u.end);
                  },
                },
                {
                  key: 'resetLoader',
                  value: function (e, t) {
                    (e.loader = null), this.loader === t && (self.clearTimeout(this.partLoadTimeout), (this.loader = null)), t.destroy();
                  },
                },
              ]),
              e
            );
          })();
        function Jn(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
            n = t || e,
            r = { frag: e, part: t, responseType: 'arraybuffer', url: n.url, headers: {}, rangeStart: 0, rangeEnd: 0 },
            i = n.byteRangeStartOffset,
            a = n.byteRangeEndOffset;
          if ($(i) && $(a)) {
            var o,
              s = i,
              l = a;
            if ('initSegment' === e.sn && 'AES-128' === (null == (o = e.decryptdata) ? void 0 : o.method)) {
              var u = a - i;
              u % 16 && (l = a + (16 - (u % 16))), 0 !== i && ((r.resetIV = !0), (s = i - 16));
            }
            (r.rangeStart = s), (r.rangeEnd = l);
          }
          return r;
        }
        function er(e, t) {
          var n = new Error('GAP '.concat(e.gap ? 'tag' : 'attribute', ' found')),
            r = { type: Z.MEDIA_ERROR, details: J.FRAG_GAP, fatal: !1, frag: e, error: n, networkDetails: null };
          return t && (r.part = t), ((t || e).stats.aborted = !0), new tr(r);
        }
        var tr = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e) {
              var r;
              return k(this, n), ((r = t.call(this, e.error.message)).data = void 0), (r.data = e), r;
            }
            return w(n);
          })(B(Error)),
          nr = (function () {
            function e(t) {
              k(this, e), (this.config = void 0), (this.keyUriToKeyInfo = {}), (this.emeController = null), (this.config = t);
            }
            return (
              w(e, [
                {
                  key: 'abort',
                  value: function (e) {
                    for (var t in this.keyUriToKeyInfo) {
                      var n = this.keyUriToKeyInfo[t].loader;
                      if (n) {
                        if (e && e !== n.context.frag.type) return;
                        n.abort();
                      }
                    }
                  },
                },
                {
                  key: 'detach',
                  value: function () {
                    for (var e in this.keyUriToKeyInfo) {
                      var t = this.keyUriToKeyInfo[e];
                      (t.mediaKeySessionContext || t.decryptdata.isCommonEncryption) && delete this.keyUriToKeyInfo[e];
                    }
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    for (var e in (this.detach(), this.keyUriToKeyInfo)) {
                      var t = this.keyUriToKeyInfo[e].loader;
                      t && t.destroy();
                    }
                    this.keyUriToKeyInfo = {};
                  },
                },
                {
                  key: 'createKeyLoadError',
                  value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : J.KEY_LOAD_ERROR,
                      n = arguments.length > 2 ? arguments[2] : void 0,
                      r = arguments.length > 3 ? arguments[3] : void 0,
                      i = arguments.length > 4 ? arguments[4] : void 0;
                    return new tr({ type: Z.NETWORK_ERROR, details: t, fatal: !1, frag: e, response: i, error: n, networkDetails: r });
                  },
                },
                {
                  key: 'loadClear',
                  value: function (e, t) {
                    var n = this;
                    if (this.emeController && this.config.emeEnabled)
                      for (
                        var r = e.sn,
                          i = e.cc,
                          a = function () {
                            var e = t[o];
                            if (i <= e.cc && ('initSegment' === r || 'initSegment' === e.sn || r < e.sn))
                              return (
                                n.emeController.selectKeySystemFormat(e).then(function (t) {
                                  e.setKeyFormat(t);
                                }),
                                'break'
                              );
                          },
                          o = 0;
                        o < t.length;
                        o++
                      ) {
                        if ('break' === a()) break;
                      }
                  },
                },
                {
                  key: 'load',
                  value: function (e) {
                    var t = this;
                    return !e.decryptdata && e.encrypted && this.emeController
                      ? this.emeController.selectKeySystemFormat(e).then(function (n) {
                          return t.loadInternal(e, n);
                        })
                      : this.loadInternal(e);
                  },
                },
                {
                  key: 'loadInternal',
                  value: function (e, t) {
                    var n, r;
                    t && e.setKeyFormat(t);
                    var i = e.decryptdata;
                    if (!i) {
                      var a = new Error(t ? 'Expected frag.decryptdata to be defined after setting format '.concat(t) : 'Missing decryption data on fragment in onKeyLoading');
                      return Promise.reject(this.createKeyLoadError(e, J.KEY_LOAD_ERROR, a));
                    }
                    var o = i.uri;
                    if (!o) return Promise.reject(this.createKeyLoadError(e, J.KEY_LOAD_ERROR, new Error('Invalid key URI: "'.concat(o, '"'))));
                    var s,
                      l = this.keyUriToKeyInfo[o];
                    if (null != (n = l) && n.decryptdata.key) return (i.key = l.decryptdata.key), Promise.resolve({ frag: e, keyInfo: l });
                    if (null != (r = l) && r.keyLoadPromise)
                      switch (null == (s = l.mediaKeySessionContext) ? void 0 : s.keyStatus) {
                        case void 0:
                        case 'status-pending':
                        case 'usable':
                        case 'usable-in-future':
                          return l.keyLoadPromise.then(function (t) {
                            return (i.key = t.keyInfo.decryptdata.key), { frag: e, keyInfo: l };
                          });
                      }
                    switch (((l = this.keyUriToKeyInfo[o] = { decryptdata: i, keyLoadPromise: null, loader: null, mediaKeySessionContext: null }), i.method)) {
                      case 'ISO-23001-7':
                      case 'SAMPLE-AES':
                      case 'SAMPLE-AES-CENC':
                      case 'SAMPLE-AES-CTR':
                        return 'identity' === i.keyFormat ? this.loadKeyHTTP(l, e) : this.loadKeyEME(l, e);
                      case 'AES-128':
                        return this.loadKeyHTTP(l, e);
                      default:
                        return Promise.reject(this.createKeyLoadError(e, J.KEY_LOAD_ERROR, new Error('Key supplied with unsupported METHOD: "'.concat(i.method, '"'))));
                    }
                  },
                },
                {
                  key: 'loadKeyEME',
                  value: function (e, t) {
                    var n = { frag: t, keyInfo: e };
                    if (this.emeController && this.config.emeEnabled) {
                      var r = this.emeController.loadKey(n);
                      if (r)
                        return (e.keyLoadPromise = r.then(function (t) {
                          return (e.mediaKeySessionContext = t), n;
                        })).catch(function (t) {
                          throw ((e.keyLoadPromise = null), t);
                        });
                    }
                    return Promise.resolve(n);
                  },
                },
                {
                  key: 'loadKeyHTTP',
                  value: function (e, t) {
                    var n = this,
                      r = this.config,
                      i = new (0, r.loader)(r);
                    return (
                      (t.keyLoader = e.loader = i),
                      (e.keyLoadPromise = new Promise(function (a, o) {
                        var s = { keyInfo: e, frag: t, responseType: 'arraybuffer', url: e.decryptdata.uri },
                          l = r.keyLoadPolicy.default,
                          u = { loadPolicy: l, timeout: l.maxLoadTimeMs, maxRetry: 0, retryDelay: 0, maxRetryDelay: 0 },
                          c = {
                            onSuccess: function (e, t, r, i) {
                              var s = r.frag,
                                l = r.keyInfo,
                                u = r.url;
                              if (!s.decryptdata || l !== n.keyUriToKeyInfo[u]) return o(n.createKeyLoadError(s, J.KEY_LOAD_ERROR, new Error('after key load, decryptdata unset or changed'), i));
                              (l.decryptdata.key = s.decryptdata.key = new Uint8Array(e.data)), (s.keyLoader = null), (l.loader = null), a({ frag: s, keyInfo: l });
                            },
                            onError: function (e, r, i, a) {
                              n.resetLoader(r),
                                o(n.createKeyLoadError(t, J.KEY_LOAD_ERROR, new Error('HTTP Error '.concat(e.code, ' loading key ').concat(e.text)), i, q({ url: s.url, data: void 0 }, e)));
                            },
                            onTimeout: function (e, r, i) {
                              n.resetLoader(r), o(n.createKeyLoadError(t, J.KEY_LOAD_TIMEOUT, new Error('key loading timed out'), i));
                            },
                            onAbort: function (e, r, i) {
                              n.resetLoader(r), o(n.createKeyLoadError(t, J.INTERNAL_ABORTED, new Error('key loading aborted'), i));
                            },
                          };
                        i.load(s, u, c);
                      }))
                    );
                  },
                },
                {
                  key: 'resetLoader',
                  value: function (e) {
                    var t = e.frag,
                      n = e.keyInfo,
                      r = e.url,
                      i = n.loader;
                    t.keyLoader === i && ((t.keyLoader = null), (n.loader = null)), delete this.keyUriToKeyInfo[r], i && i.destroy();
                  },
                },
              ]),
              e
            );
          })(),
          rr = (function () {
            function e() {
              k(this, e), (this._boundTick = void 0), (this._tickTimer = null), (this._tickInterval = null), (this._tickCallCount = 0), (this._boundTick = this.tick.bind(this));
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    this.onHandlerDestroying(), this.onHandlerDestroyed();
                  },
                },
                {
                  key: 'onHandlerDestroying',
                  value: function () {
                    this.clearNextTick(), this.clearInterval();
                  },
                },
                { key: 'onHandlerDestroyed', value: function () {} },
                {
                  key: 'hasInterval',
                  value: function () {
                    return !!this._tickInterval;
                  },
                },
                {
                  key: 'hasNextTick',
                  value: function () {
                    return !!this._tickTimer;
                  },
                },
                {
                  key: 'setInterval',
                  value: function (e) {
                    return !this._tickInterval && ((this._tickCallCount = 0), (this._tickInterval = self.setInterval(this._boundTick, e)), !0);
                  },
                },
                {
                  key: 'clearInterval',
                  value: function () {
                    return !!this._tickInterval && (self.clearInterval(this._tickInterval), (this._tickInterval = null), !0);
                  },
                },
                {
                  key: 'clearNextTick',
                  value: function () {
                    return !!this._tickTimer && (self.clearTimeout(this._tickTimer), (this._tickTimer = null), !0);
                  },
                },
                {
                  key: 'tick',
                  value: function () {
                    this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && this.tickImmediate(), (this._tickCallCount = 0));
                  },
                },
                {
                  key: 'tickImmediate',
                  value: function () {
                    this.clearNextTick(), (this._tickTimer = self.setTimeout(this._boundTick, 0));
                  },
                },
                { key: 'doTick', value: function () {} },
              ]),
              e
            );
          })(),
          ir = {
            length: 0,
            start: function () {
              return 0;
            },
            end: function () {
              return 0;
            },
          },
          ar = (function () {
            function e() {
              k(this, e);
            }
            return (
              w(e, null, [
                {
                  key: 'isBuffered',
                  value: function (t, n) {
                    try {
                      if (t) for (var r = e.getBuffered(t), i = 0; i < r.length; i++) if (n >= r.start(i) && n <= r.end(i)) return !0;
                    } catch (e) {}
                    return !1;
                  },
                },
                {
                  key: 'bufferInfo',
                  value: function (t, n, r) {
                    try {
                      if (t) {
                        var i,
                          a = e.getBuffered(t),
                          o = [];
                        for (i = 0; i < a.length; i++) o.push({ start: a.start(i), end: a.end(i) });
                        return this.bufferedInfo(o, n, r);
                      }
                    } catch (e) {}
                    return { len: 0, start: n, end: n, nextStart: void 0 };
                  },
                },
                {
                  key: 'bufferedInfo',
                  value: function (e, t, n) {
                    (t = Math.max(0, t)),
                      e.sort(function (e, t) {
                        var n = e.start - t.start;
                        return n || t.end - e.end;
                      });
                    var r = [];
                    if (n)
                      for (var i = 0; i < e.length; i++) {
                        var a = r.length;
                        if (a) {
                          var o = r[a - 1].end;
                          e[i].start - o < n ? e[i].end > o && (r[a - 1].end = e[i].end) : r.push(e[i]);
                        } else r.push(e[i]);
                      }
                    else r = e;
                    for (var s, l = 0, u = t, c = t, d = 0; d < r.length; d++) {
                      var f = r[d].start,
                        h = r[d].end;
                      if (t + n >= f && t < h) (u = f), (l = (c = h) - t);
                      else if (t + n < f) {
                        s = f;
                        break;
                      }
                    }
                    return { len: l, start: u || 0, end: c || 0, nextStart: s };
                  },
                },
                {
                  key: 'getBuffered',
                  value: function (e) {
                    try {
                      return e.buffered;
                    } catch (e) {
                      return ae.log('failed to get media.buffered', e), ir;
                    }
                  },
                },
              ]),
              e
            );
          })(),
          or = w(function e(t, n, r) {
            var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
              a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : -1,
              o = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];
            k(this, e),
              (this.level = void 0),
              (this.sn = void 0),
              (this.part = void 0),
              (this.id = void 0),
              (this.size = void 0),
              (this.partial = void 0),
              (this.transmuxing = { start: 0, executeStart: 0, executeEnd: 0, end: 0 }),
              (this.buffering = {
                audio: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
                video: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
                audiovideo: { start: 0, executeStart: 0, executeEnd: 0, end: 0 },
              }),
              (this.level = t),
              (this.sn = n),
              (this.id = r),
              (this.size = i),
              (this.part = a),
              (this.partial = o);
          });
        function sr(e, t) {
          for (var n = null, r = 0, i = e.length; r < i; r++) {
            var a = e[r];
            if (a && a.cc === t) {
              n = a;
              break;
            }
          }
          return n;
        }
        function lr(e, t) {
          if (e) {
            var n = e.start + t;
            (e.start = e.startPTS = n), (e.endPTS = n + e.duration);
          }
        }
        function ur(e, t) {
          for (var n = t.fragments, r = 0, i = n.length; r < i; r++) lr(n[r], e);
          t.fragmentHint && lr(t.fragmentHint, e), (t.alignedSliding = !0);
        }
        function cr(e, t, n) {
          t &&
            (!(function (e, t, n) {
              if (
                (function (e, t, n) {
                  return !(!t.details || !(n.endCC > n.startCC || (e && e.cc < n.startCC)));
                })(e, n, t)
              ) {
                var r = (function (e, t) {
                  var n = e.fragments,
                    r = t.fragments;
                  if (r.length && n.length) {
                    var i = sr(n, r[0].cc);
                    if (i && (!i || i.startPTS)) return i;
                    ae.log('No frag in previous level to align on');
                  } else ae.log('No fragments to align');
                })(n.details, t);
                r && $(r.start) && (ae.log('Adjusting PTS using last level due to CC increase within current level '.concat(t.url)), ur(r.start, t));
              }
            })(e, n, t),
            !n.alignedSliding &&
              t.details &&
              (function (e, t) {
                if (!t.fragments.length || !e.hasProgramDateTime || !t.hasProgramDateTime) return;
                var n = t.fragments[0].programDateTime,
                  r = e.fragments[0].programDateTime,
                  i = (r - n) / 1e3 + t.fragments[0].start;
                i &&
                  $(i) &&
                  (ae.log(
                    'Adjusting PTS using programDateTime delta '
                      .concat(r - n, 'ms, sliding:')
                      .concat(i.toFixed(3), ' ')
                      .concat(e.url, ' '),
                  ),
                  ur(i, e));
              })(n, t.details),
            n.alignedSliding || !t.details || n.skippedSegments || yn(t.details, n));
        }
        function dr(e, t) {
          if (e.hasProgramDateTime && t.hasProgramDateTime) {
            var n = e.fragments,
              r = t.fragments;
            if (n.length && r.length) {
              var i = r[Math.round(r.length / 2) - 1],
                a = sr(n, i.cc) || n[Math.round(n.length / 2) - 1],
                o = i.programDateTime,
                s = a.programDateTime;
              if (null !== o && null !== s) ur((s - o) / 1e3 - (a.start - i.start), e);
            }
          }
        }
        var fr = (function () {
            function e(t, n) {
              k(this, e), (this.subtle = void 0), (this.aesIV = void 0), (this.subtle = t), (this.aesIV = n);
            }
            return (
              w(e, [
                {
                  key: 'decrypt',
                  value: function (e, t) {
                    return this.subtle.decrypt({ name: 'AES-CBC', iv: this.aesIV }, t, e);
                  },
                },
              ]),
              e
            );
          })(),
          hr = (function () {
            function e(t, n) {
              k(this, e), (this.subtle = void 0), (this.key = void 0), (this.subtle = t), (this.key = n);
            }
            return (
              w(e, [
                {
                  key: 'expandKey',
                  value: function () {
                    return this.subtle.importKey('raw', this.key, { name: 'AES-CBC' }, !1, ['encrypt', 'decrypt']);
                  },
                },
              ]),
              e
            );
          })();
        var pr = (function () {
            function e() {
              k(this, e),
                (this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54]),
                (this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)]),
                (this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)]),
                (this.sBox = new Uint32Array(256)),
                (this.invSBox = new Uint32Array(256)),
                (this.key = new Uint32Array(0)),
                (this.ksRows = 0),
                (this.keySize = 0),
                (this.keySchedule = void 0),
                (this.invKeySchedule = void 0),
                this.initTable();
            }
            return (
              w(e, [
                {
                  key: 'uint8ArrayToUint32Array_',
                  value: function (e) {
                    for (var t = new DataView(e), n = new Uint32Array(4), r = 0; r < 4; r++) n[r] = t.getUint32(4 * r);
                    return n;
                  },
                },
                {
                  key: 'initTable',
                  value: function () {
                    var e = this.sBox,
                      t = this.invSBox,
                      n = this.subMix,
                      r = n[0],
                      i = n[1],
                      a = n[2],
                      o = n[3],
                      s = this.invSubMix,
                      l = s[0],
                      u = s[1],
                      c = s[2],
                      d = s[3],
                      f = new Uint32Array(256),
                      h = 0,
                      p = 0,
                      v = 0;
                    for (v = 0; v < 256; v++) f[v] = v < 128 ? v << 1 : (v << 1) ^ 283;
                    for (v = 0; v < 256; v++) {
                      var m = p ^ (p << 1) ^ (p << 2) ^ (p << 3) ^ (p << 4);
                      (m = (m >>> 8) ^ (255 & m) ^ 99), (e[h] = m), (t[m] = h);
                      var g = f[h],
                        y = f[g],
                        _ = f[y],
                        b = (257 * f[m]) ^ (16843008 * m);
                      (r[h] = (b << 24) | (b >>> 8)),
                        (i[h] = (b << 16) | (b >>> 16)),
                        (a[h] = (b << 8) | (b >>> 24)),
                        (o[h] = b),
                        (b = (16843009 * _) ^ (65537 * y) ^ (257 * g) ^ (16843008 * h)),
                        (l[m] = (b << 24) | (b >>> 8)),
                        (u[m] = (b << 16) | (b >>> 16)),
                        (c[m] = (b << 8) | (b >>> 24)),
                        (d[m] = b),
                        h ? ((h = g ^ f[f[f[_ ^ g]]]), (p ^= f[f[p]])) : (h = p = 1);
                    }
                  },
                },
                {
                  key: 'expandKey',
                  value: function (e) {
                    for (var t = this.uint8ArrayToUint32Array_(e), n = !0, r = 0; r < t.length && n; ) (n = t[r] === this.key[r]), r++;
                    if (!n) {
                      this.key = t;
                      var i = (this.keySize = t.length);
                      if (4 !== i && 6 !== i && 8 !== i) throw new Error('Invalid aes key size=' + i);
                      var a,
                        o,
                        s,
                        l,
                        u = (this.ksRows = 4 * (i + 6 + 1)),
                        c = (this.keySchedule = new Uint32Array(u)),
                        d = (this.invKeySchedule = new Uint32Array(u)),
                        f = this.sBox,
                        h = this.rcon,
                        p = this.invSubMix,
                        v = p[0],
                        m = p[1],
                        g = p[2],
                        y = p[3];
                      for (a = 0; a < u; a++)
                        a < i
                          ? (s = c[a] = t[a])
                          : ((l = s),
                            a % i == 0
                              ? ((l = (f[(l = (l << 8) | (l >>> 24)) >>> 24] << 24) | (f[(l >>> 16) & 255] << 16) | (f[(l >>> 8) & 255] << 8) | f[255 & l]), (l ^= h[(a / i) | 0] << 24))
                              : i > 6 && a % i == 4 && (l = (f[l >>> 24] << 24) | (f[(l >>> 16) & 255] << 16) | (f[(l >>> 8) & 255] << 8) | f[255 & l]),
                            (c[a] = s = (c[a - i] ^ l) >>> 0));
                      for (o = 0; o < u; o++)
                        (a = u - o), (l = 3 & o ? c[a] : c[a - 4]), (d[o] = o < 4 || a <= 4 ? l : v[f[l >>> 24]] ^ m[f[(l >>> 16) & 255]] ^ g[f[(l >>> 8) & 255]] ^ y[f[255 & l]]), (d[o] = d[o] >>> 0);
                    }
                  },
                },
                {
                  key: 'networkToHostOrderSwap',
                  value: function (e) {
                    return (e << 24) | ((65280 & e) << 8) | ((16711680 & e) >> 8) | (e >>> 24);
                  },
                },
                {
                  key: 'decrypt',
                  value: function (e, t, n) {
                    for (
                      var r,
                        i,
                        a,
                        o,
                        s,
                        l,
                        u,
                        c,
                        d,
                        f,
                        h,
                        p,
                        v,
                        m,
                        g = this.keySize + 6,
                        y = this.invKeySchedule,
                        _ = this.invSBox,
                        b = this.invSubMix,
                        E = b[0],
                        S = b[1],
                        k = b[2],
                        T = b[3],
                        w = this.uint8ArrayToUint32Array_(n),
                        A = w[0],
                        L = w[1],
                        R = w[2],
                        C = w[3],
                        x = new Int32Array(e),
                        D = new Int32Array(x.length),
                        I = this.networkToHostOrderSwap;
                      t < x.length;

                    ) {
                      for (d = I(x[t]), f = I(x[t + 1]), h = I(x[t + 2]), p = I(x[t + 3]), s = d ^ y[0], l = p ^ y[1], u = h ^ y[2], c = f ^ y[3], v = 4, m = 1; m < g; m++)
                        (r = E[s >>> 24] ^ S[(l >> 16) & 255] ^ k[(u >> 8) & 255] ^ T[255 & c] ^ y[v]),
                          (i = E[l >>> 24] ^ S[(u >> 16) & 255] ^ k[(c >> 8) & 255] ^ T[255 & s] ^ y[v + 1]),
                          (a = E[u >>> 24] ^ S[(c >> 16) & 255] ^ k[(s >> 8) & 255] ^ T[255 & l] ^ y[v + 2]),
                          (o = E[c >>> 24] ^ S[(s >> 16) & 255] ^ k[(l >> 8) & 255] ^ T[255 & u] ^ y[v + 3]),
                          (s = r),
                          (l = i),
                          (u = a),
                          (c = o),
                          (v += 4);
                      (r = (_[s >>> 24] << 24) ^ (_[(l >> 16) & 255] << 16) ^ (_[(u >> 8) & 255] << 8) ^ _[255 & c] ^ y[v]),
                        (i = (_[l >>> 24] << 24) ^ (_[(u >> 16) & 255] << 16) ^ (_[(c >> 8) & 255] << 8) ^ _[255 & s] ^ y[v + 1]),
                        (a = (_[u >>> 24] << 24) ^ (_[(c >> 16) & 255] << 16) ^ (_[(s >> 8) & 255] << 8) ^ _[255 & l] ^ y[v + 2]),
                        (o = (_[c >>> 24] << 24) ^ (_[(s >> 16) & 255] << 16) ^ (_[(l >> 8) & 255] << 8) ^ _[255 & u] ^ y[v + 3]),
                        (D[t] = I(r ^ A)),
                        (D[t + 1] = I(o ^ L)),
                        (D[t + 2] = I(a ^ R)),
                        (D[t + 3] = I(i ^ C)),
                        (A = d),
                        (L = f),
                        (R = h),
                        (C = p),
                        (t += 4);
                    }
                    return D.buffer;
                  },
                },
              ]),
              e
            );
          })(),
          vr = (function () {
            function e(t) {
              var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                r = n.removePKCS7Padding,
                i = void 0 === r || r;
              if (
                (k(this, e),
                (this.logEnabled = !0),
                (this.removePKCS7Padding = void 0),
                (this.subtle = null),
                (this.softwareDecrypter = null),
                (this.key = null),
                (this.fastAesKey = null),
                (this.remainderData = null),
                (this.currentIV = null),
                (this.currentResult = null),
                (this.useSoftware = void 0),
                (this.useSoftware = t.enableSoftwareAES),
                (this.removePKCS7Padding = i),
                i)
              )
                try {
                  var a = self.crypto;
                  a && (this.subtle = a.subtle || a.webkitSubtle);
                } catch (e) {}
              null === this.subtle && (this.useSoftware = !0);
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    (this.subtle = null),
                      (this.softwareDecrypter = null),
                      (this.key = null),
                      (this.fastAesKey = null),
                      (this.remainderData = null),
                      (this.currentIV = null),
                      (this.currentResult = null);
                  },
                },
                {
                  key: 'isSync',
                  value: function () {
                    return this.useSoftware;
                  },
                },
                {
                  key: 'flush',
                  value: function () {
                    var e = this.currentResult,
                      t = this.remainderData;
                    if (!e || t) return this.reset(), null;
                    var n,
                      r,
                      i,
                      a = new Uint8Array(e);
                    return this.reset(), this.removePKCS7Padding ? ((r = (n = a).byteLength), (i = r && new DataView(n.buffer).getUint8(r - 1)) ? Ie(n, 0, r - i) : n) : a;
                  },
                },
                {
                  key: 'reset',
                  value: function () {
                    (this.currentResult = null), (this.currentIV = null), (this.remainderData = null), this.softwareDecrypter && (this.softwareDecrypter = null);
                  },
                },
                {
                  key: 'decrypt',
                  value: function (e, t, n) {
                    var r = this;
                    return this.useSoftware
                      ? new Promise(function (i, a) {
                          r.softwareDecrypt(new Uint8Array(e), t, n);
                          var o = r.flush();
                          o ? i(o.buffer) : a(new Error('[softwareDecrypt] Failed to decrypt data'));
                        })
                      : this.webCryptoDecrypt(new Uint8Array(e), t, n);
                  },
                },
                {
                  key: 'softwareDecrypt',
                  value: function (e, t, n) {
                    var r = this.currentIV,
                      i = this.currentResult,
                      a = this.remainderData;
                    this.logOnce('JS AES decrypt'), a && ((e = ut(a, e)), (this.remainderData = null));
                    var o = this.getValidChunk(e);
                    if (!o.length) return null;
                    r && (n = r);
                    var s = this.softwareDecrypter;
                    s || (s = this.softwareDecrypter = new pr()), s.expandKey(t);
                    var l = i;
                    return (this.currentResult = s.decrypt(o.buffer, 0, n)), (this.currentIV = Ie(o, -16).buffer), l || null;
                  },
                },
                {
                  key: 'webCryptoDecrypt',
                  value: function (e, t, n) {
                    var r = this,
                      i = this.subtle;
                    return (
                      (this.key === t && this.fastAesKey) || ((this.key = t), (this.fastAesKey = new hr(i, t))),
                      this.fastAesKey
                        .expandKey()
                        .then(function (t) {
                          return i ? (r.logOnce('WebCrypto AES decrypt'), new fr(i, new Uint8Array(n)).decrypt(e.buffer, t)) : Promise.reject(new Error('web crypto not initialized'));
                        })
                        .catch(function (i) {
                          return ae.warn('[decrypter]: WebCrypto Error, disable WebCrypto API, '.concat(i.name, ': ').concat(i.message)), r.onWebCryptoError(e, t, n);
                        })
                    );
                  },
                },
                {
                  key: 'onWebCryptoError',
                  value: function (e, t, n) {
                    (this.useSoftware = !0), (this.logEnabled = !0), this.softwareDecrypt(e, t, n);
                    var r = this.flush();
                    if (r) return r.buffer;
                    throw new Error('WebCrypto and softwareDecrypt: failed to decrypt data');
                  },
                },
                {
                  key: 'getValidChunk',
                  value: function (e) {
                    var t = e,
                      n = e.length - (e.length % 16);
                    return n !== e.length && ((t = Ie(e, 0, n)), (this.remainderData = Ie(e, n))), t;
                  },
                },
                {
                  key: 'logOnce',
                  value: function (e) {
                    this.logEnabled && (ae.log('[decrypter]: '.concat(e)), (this.logEnabled = !1));
                  },
                },
              ]),
              e
            );
          })(),
          mr = function (e) {
            for (var t = '', n = e.length, r = 0; r < n; r++) t += '['.concat(e.start(r).toFixed(3), '-').concat(e.end(r).toFixed(3), ']');
            return t;
          },
          gr = 'STOPPED',
          yr = 'IDLE',
          _r = 'KEY_LOADING',
          br = 'FRAG_LOADING',
          Er = 'FRAG_LOADING_WAITING_RETRY',
          Sr = 'WAITING_TRACK',
          kr = 'PARSING',
          Tr = 'PARSED',
          wr = 'ENDED',
          Ar = 'ERROR',
          Lr = 'WAITING_INIT_PTS',
          Rr = 'WAITING_LEVEL',
          Cr = (function (e) {
            H(r, e);
            var t = V(r);
            function r(e, n, i, a, o) {
              var s;
              return (
                k(this, r),
                ((s = t.call(this)).hls = void 0),
                (s.fragPrevious = null),
                (s.fragCurrent = null),
                (s.fragmentTracker = void 0),
                (s.transmuxer = null),
                (s._state = gr),
                (s.playlistType = void 0),
                (s.media = null),
                (s.mediaBuffer = null),
                (s.config = void 0),
                (s.bitrateTest = !1),
                (s.lastCurrentTime = 0),
                (s.nextLoadPosition = 0),
                (s.startPosition = 0),
                (s.startTimeOffset = null),
                (s.loadedmetadata = !1),
                (s.retryDate = 0),
                (s.levels = null),
                (s.fragmentLoader = void 0),
                (s.keyLoader = void 0),
                (s.levelLastLoaded = null),
                (s.startFragRequested = !1),
                (s.decrypter = void 0),
                (s.initPTS = []),
                (s.onvseeking = null),
                (s.onvended = null),
                (s.logPrefix = ''),
                (s.log = void 0),
                (s.warn = void 0),
                (s.playlistType = o),
                (s.logPrefix = a),
                (s.log = ae.log.bind(ae, ''.concat(a, ':'))),
                (s.warn = ae.warn.bind(ae, ''.concat(a, ':'))),
                (s.hls = e),
                (s.fragmentLoader = new Zn(e.config)),
                (s.keyLoader = i),
                (s.fragmentTracker = n),
                (s.config = e.config),
                (s.decrypter = new vr(e.config)),
                e.on(Q.MANIFEST_LOADED, s.onManifestLoaded, N(s)),
                s
              );
            }
            return (
              w(r, [
                {
                  key: 'doTick',
                  value: function () {
                    this.onTickEnd();
                  },
                },
                { key: 'onTickEnd', value: function () {} },
                { key: 'startLoad', value: function (e) {} },
                {
                  key: 'stopLoad',
                  value: function () {
                    this.fragmentLoader.abort(), this.keyLoader.abort(this.playlistType);
                    var e = this.fragCurrent;
                    null != e && e.loader && (e.abortRequests(), this.fragmentTracker.removeFragment(e)),
                      this.resetTransmuxer(),
                      (this.fragCurrent = null),
                      (this.fragPrevious = null),
                      this.clearInterval(),
                      this.clearNextTick(),
                      (this.state = gr);
                  },
                },
                {
                  key: '_streamEnded',
                  value: function (e, t) {
                    if (t.live || e.nextStart || !e.end || !this.media) return !1;
                    var n = t.partList;
                    if (null != n && n.length) {
                      var r = n[n.length - 1];
                      return ar.isBuffered(this.media, r.start + r.duration / 2);
                    }
                    var i = t.fragments[t.fragments.length - 1].type;
                    return this.fragmentTracker.isEndListAppended(i);
                  },
                },
                {
                  key: 'getLevelDetails',
                  value: function () {
                    var e;
                    if (this.levels && null !== this.levelLastLoaded) return null == (e = this.levels[this.levelLastLoaded]) ? void 0 : e.details;
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    var n = (this.media = this.mediaBuffer = t.media);
                    (this.onvseeking = this.onMediaSeeking.bind(this)),
                      (this.onvended = this.onMediaEnded.bind(this)),
                      n.addEventListener('seeking', this.onvseeking),
                      n.addEventListener('ended', this.onvended);
                    var r = this.config;
                    this.levels && r.autoStartLoad && this.state === gr && this.startLoad(r.startPosition);
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    var e = this.media;
                    null != e && e.ended && (this.log('MSE detaching and video ended, reset startPosition'), (this.startPosition = this.lastCurrentTime = 0)),
                      e &&
                        this.onvseeking &&
                        this.onvended &&
                        (e.removeEventListener('seeking', this.onvseeking), e.removeEventListener('ended', this.onvended), (this.onvseeking = this.onvended = null)),
                      this.keyLoader && this.keyLoader.detach(),
                      (this.media = this.mediaBuffer = null),
                      (this.loadedmetadata = !1),
                      this.fragmentTracker.removeAllFragments(),
                      this.stopLoad();
                  },
                },
                {
                  key: 'onMediaSeeking',
                  value: function () {
                    var e = this.config,
                      t = this.fragCurrent,
                      n = this.media,
                      r = this.mediaBuffer,
                      i = this.state,
                      a = n ? n.currentTime : 0,
                      o = ar.bufferInfo(r || n, a, e.maxBufferHole);
                    if ((this.log('media seeking to '.concat($(a) ? a.toFixed(3) : a, ', state: ').concat(i)), this.state === wr)) this.resetLoadingState();
                    else if (t) {
                      var s = e.maxFragLookUpTolerance,
                        l = t.start - s,
                        u = t.start + t.duration + s;
                      if (!o.len || u < o.start || l > o.end) {
                        var c = a > u;
                        (a < l || c) &&
                          (c && t.loader && (this.log('seeking outside of buffer while fragment load in progress, cancel fragment load'), t.abortRequests(), this.resetLoadingState()),
                          (this.fragPrevious = null));
                      }
                    }
                    n && (this.fragmentTracker.removeFragmentsInRange(a, 1 / 0, this.playlistType, !0), (this.lastCurrentTime = a)),
                      this.loadedmetadata || o.len || (this.nextLoadPosition = this.startPosition = a),
                      this.tickImmediate();
                  },
                },
                {
                  key: 'onMediaEnded',
                  value: function () {
                    this.startPosition = this.lastCurrentTime = 0;
                  },
                },
                {
                  key: 'onManifestLoaded',
                  value: function (e, t) {
                    (this.startTimeOffset = t.startTimeOffset), (this.initPTS = []);
                  },
                },
                {
                  key: 'onHandlerDestroying',
                  value: function () {
                    this.stopLoad(), U(z(r.prototype), 'onHandlerDestroying', this).call(this);
                  },
                },
                {
                  key: 'onHandlerDestroyed',
                  value: function () {
                    (this.state = gr),
                      this.fragmentLoader && this.fragmentLoader.destroy(),
                      this.keyLoader && this.keyLoader.destroy(),
                      this.decrypter && this.decrypter.destroy(),
                      (this.hls = this.log = this.warn = this.decrypter = this.keyLoader = this.fragmentLoader = this.fragmentTracker = null),
                      U(z(r.prototype), 'onHandlerDestroyed', this).call(this);
                  },
                },
                {
                  key: 'loadFragment',
                  value: function (e, t, n) {
                    this._loadFragForPlayback(e, t, n);
                  },
                },
                {
                  key: '_loadFragForPlayback',
                  value: function (e, t, n) {
                    var r = this;
                    this._doFragLoad(e, t, n, function (t) {
                      if (r.fragContextChanged(e))
                        return (
                          r.warn(
                            'Fragment '
                              .concat(e.sn)
                              .concat(t.part ? ' p: ' + t.part.index : '', ' of level ')
                              .concat(e.level, ' was dropped during download.'),
                          ),
                          void r.fragmentTracker.removeFragment(e)
                        );
                      e.stats.chunkCount++, r._handleFragmentLoadProgress(t);
                    })
                      .then(function (t) {
                        if (t) {
                          var n = r.state;
                          r.fragContextChanged(e)
                            ? (n === br || (!r.fragCurrent && n === kr)) && (r.fragmentTracker.removeFragment(e), (r.state = yr))
                            : ('payload' in t && (r.log('Loaded fragment '.concat(e.sn, ' of level ').concat(e.level)), r.hls.trigger(Q.FRAG_LOADED, t)), r._handleFragmentLoadComplete(t));
                        }
                      })
                      .catch(function (t) {
                        r.state !== gr && r.state !== Ar && (r.warn(t), r.resetFragmentLoading(e));
                      });
                  },
                },
                {
                  key: 'clearTrackerIfNeeded',
                  value: function (e) {
                    var t,
                      n = this.fragmentTracker;
                    if (n.getState(e) === Kn) {
                      var r = e.type,
                        i = this.getFwdBufferInfo(this.mediaBuffer, r),
                        a = Math.max(e.duration, i ? i.len : this.config.maxBufferLength);
                      this.reduceMaxBufferLength(a) && n.removeFragment(e);
                    } else
                      0 === (null == (t = this.mediaBuffer) ? void 0 : t.buffered.length)
                        ? n.removeAllFragments()
                        : n.hasParts(e.type) && (n.detectPartialFragments({ frag: e, part: null, stats: e.stats, id: e.type }), n.getState(e) === Wn && n.removeFragment(e));
                  },
                },
                {
                  key: 'flushMainBuffer',
                  value: function (e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    if (e - t) {
                      var r = { startOffset: e, endOffset: t, type: n };
                      this.hls.trigger(Q.BUFFER_FLUSHING, r);
                    }
                  },
                },
                {
                  key: '_loadInitSegment',
                  value: function (e, t) {
                    var n = this;
                    this._doFragLoad(e, t)
                      .then(function (t) {
                        if (!t || n.fragContextChanged(e) || !n.levels) throw new Error('init load aborted');
                        return t;
                      })
                      .then(function (t) {
                        var r = n.hls,
                          i = t.payload,
                          a = e.decryptdata;
                        if (i && i.byteLength > 0 && a && a.key && a.iv && 'AES-128' === a.method) {
                          var o = self.performance.now();
                          return n.decrypter
                            .decrypt(new Uint8Array(i), a.key.buffer, a.iv.buffer)
                            .catch(function (t) {
                              throw (r.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_DECRYPT_ERROR, fatal: !1, error: t, reason: t.message, frag: e }), t);
                            })
                            .then(function (n) {
                              var i = self.performance.now();
                              return r.trigger(Q.FRAG_DECRYPTED, { frag: e, payload: n, stats: { tstart: o, tdecrypt: i } }), (t.payload = n), t;
                            });
                        }
                        return t;
                      })
                      .then(function (r) {
                        var i = n.fragCurrent,
                          a = n.hls;
                        if (!n.levels) throw new Error('init load aborted, missing levels');
                        var o = e.stats;
                        (n.state = yr),
                          (t.fragmentError = 0),
                          (e.data = new Uint8Array(r.payload)),
                          (o.parsing.start = o.buffering.start = self.performance.now()),
                          (o.parsing.end = o.buffering.end = self.performance.now()),
                          r.frag === i && a.trigger(Q.FRAG_BUFFERED, { stats: o, frag: i, part: null, id: e.type }),
                          n.tick();
                      })
                      .catch(function (t) {
                        n.state !== gr && n.state !== Ar && (n.warn(t), n.resetFragmentLoading(e));
                      });
                  },
                },
                {
                  key: 'fragContextChanged',
                  value: function (e) {
                    var t = this.fragCurrent;
                    return !e || !t || e.level !== t.level || e.sn !== t.sn || e.urlId !== t.urlId;
                  },
                },
                {
                  key: 'fragBufferedComplete',
                  value: function (e, t) {
                    var n,
                      r,
                      i,
                      a,
                      o = this.mediaBuffer ? this.mediaBuffer : this.media;
                    this.log(
                      'Buffered '
                        .concat(e.type, ' sn: ')
                        .concat(e.sn)
                        .concat(t ? ' part: ' + t.index : '', ' of ')
                        .concat(this.playlistType === jt ? 'level' : 'track', ' ')
                        .concat(e.level, ' (frag:[')
                        .concat((null != (n = e.startPTS) ? n : NaN).toFixed(3), '-')
                        .concat((null != (r = e.endPTS) ? r : NaN).toFixed(3), '] > buffer:')
                        .concat(o ? mr(ar.getBuffered(o)) : '(detached)', ')'),
                    ),
                      (this.state = yr),
                      o &&
                        (!this.loadedmetadata &&
                          e.type == jt &&
                          o.buffered.length &&
                          (null == (i = this.fragCurrent) ? void 0 : i.sn) === (null == (a = this.fragPrevious) ? void 0 : a.sn) &&
                          ((this.loadedmetadata = !0), this.seekToStartPos()),
                        this.tick());
                  },
                },
                { key: 'seekToStartPos', value: function () {} },
                {
                  key: '_handleFragmentLoadComplete',
                  value: function (e) {
                    var t = this.transmuxer;
                    if (t) {
                      var n = e.frag,
                        r = e.part,
                        i = e.partsLoaded,
                        a =
                          !i ||
                          0 === i.length ||
                          i.some(function (e) {
                            return !e;
                          }),
                        o = new or(n.level, n.sn, n.stats.chunkCount + 1, 0, r ? r.index : -1, !a);
                      t.flush(o);
                    }
                  },
                },
                { key: '_handleFragmentLoadProgress', value: function (e) {} },
                {
                  key: '_doFragLoad',
                  value: function (e, t) {
                    var r,
                      i = this,
                      a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                      o = arguments.length > 3 ? arguments[3] : void 0,
                      s = null == t ? void 0 : t.details;
                    if (!this.levels || !s) throw new Error('frag load aborted, missing level'.concat(s ? '' : ' detail', 's'));
                    var l = null;
                    if (
                      (!e.encrypted || (null != (r = e.decryptdata) && r.key)
                        ? !e.encrypted && s.encryptedFragments.length && this.keyLoader.loadClear(e, s.encryptedFragments)
                        : (this.log(
                            'Loading key for '
                              .concat(e.sn, ' of [')
                              .concat(s.startSN, '-')
                              .concat(s.endSN, '], ')
                              .concat('[stream-controller]' === this.logPrefix ? 'level' : 'track', ' ')
                              .concat(e.level),
                          ),
                          (this.state = _r),
                          (this.fragCurrent = e),
                          (l = this.keyLoader.load(e).then(function (e) {
                            if (!i.fragContextChanged(e.frag)) return i.hls.trigger(Q.KEY_LOADED, e), i.state === _r && (i.state = yr), e;
                          })),
                          this.hls.trigger(Q.KEY_LOADING, { frag: e }),
                          null === this.fragCurrent && (l = Promise.reject(new Error('frag load aborted, context changed in KEY_LOADING')))),
                      (a = Math.max(e.start, a || 0)),
                      this.config.lowLatencyMode && 'initSegment' !== e.sn)
                    ) {
                      var u = s.partList;
                      if (u && o) {
                        a > e.end && s.fragmentHint && (e = s.fragmentHint);
                        var c = this.getNextPart(u, e, a);
                        if (c > -1) {
                          var d,
                            f = u[c];
                          return (
                            this.log(
                              'Loading part sn: '
                                .concat(e.sn, ' p: ')
                                .concat(f.index, ' cc: ')
                                .concat(e.cc, ' of playlist [')
                                .concat(s.startSN, '-')
                                .concat(s.endSN, '] parts [0-')
                                .concat(c, '-')
                                .concat(u.length - 1, '] ')
                                .concat('[stream-controller]' === this.logPrefix ? 'level' : 'track', ': ')
                                .concat(e.level, ', target: ')
                                .concat(parseFloat(a.toFixed(3))),
                            ),
                            (this.nextLoadPosition = f.start + f.duration),
                            (this.state = br),
                            (d = l
                              ? l
                                  .then(function (n) {
                                    return !n || i.fragContextChanged(n.frag) ? null : i.doFragPartsLoad(e, f, t, o);
                                  })
                                  .catch(function (e) {
                                    return i.handleFragLoadError(e);
                                  })
                              : this.doFragPartsLoad(e, f, t, o).catch(function (e) {
                                  return i.handleFragLoadError(e);
                                })),
                            this.hls.trigger(Q.FRAG_LOADING, { frag: e, part: f, targetBufferTime: a }),
                            null === this.fragCurrent ? Promise.reject(new Error('frag load aborted, context changed in FRAG_LOADING parts')) : d
                          );
                        }
                        if (!e.url || this.loadedEndOfParts(u, a)) return Promise.resolve(null);
                      }
                    }
                    this.log(
                      'Loading fragment '
                        .concat(e.sn, ' cc: ')
                        .concat(e.cc, ' ')
                        .concat(s ? 'of [' + s.startSN + '-' + s.endSN + '] ' : '')
                        .concat('[stream-controller]' === this.logPrefix ? 'level' : 'track', ': ')
                        .concat(e.level, ', target: ')
                        .concat(parseFloat(a.toFixed(3))),
                    ),
                      $(e.sn) && !this.bitrateTest && (this.nextLoadPosition = e.start + e.duration),
                      (this.state = br);
                    var h,
                      p = this.config.progressive;
                    return (
                      (h =
                        p && l
                          ? l
                              .then(function (t) {
                                return !t || i.fragContextChanged(null == t ? void 0 : t.frag) ? null : i.fragmentLoader.load(e, o);
                              })
                              .catch(function (e) {
                                return i.handleFragLoadError(e);
                              })
                          : Promise.all([this.fragmentLoader.load(e, p ? o : void 0), l])
                              .then(function (e) {
                                var t = n(e, 1)[0];
                                return !p && t && o && o(t), t;
                              })
                              .catch(function (e) {
                                return i.handleFragLoadError(e);
                              })),
                      this.hls.trigger(Q.FRAG_LOADING, { frag: e, targetBufferTime: a }),
                      null === this.fragCurrent ? Promise.reject(new Error('frag load aborted, context changed in FRAG_LOADING')) : h
                    );
                  },
                },
                {
                  key: 'doFragPartsLoad',
                  value: function (e, t, n, r) {
                    var i = this;
                    return new Promise(function (a, o) {
                      var s,
                        l = [],
                        u = null == (s = n.details) ? void 0 : s.partList;
                      !(function t(s) {
                        i.fragmentLoader
                          .loadPart(e, s, r)
                          .then(function (r) {
                            l[s.index] = r;
                            var o = r.part;
                            i.hls.trigger(Q.FRAG_LOADED, r);
                            var c = bn(n, e.sn, s.index + 1) || En(u, e.sn, s.index + 1);
                            if (!c) return a({ frag: e, part: o, partsLoaded: l });
                            t(c);
                          })
                          .catch(o);
                      })(t);
                    });
                  },
                },
                {
                  key: 'handleFragLoadError',
                  value: function (e) {
                    if ('data' in e) {
                      var t = e.data;
                      e.data && t.details === J.INTERNAL_ABORTED ? this.handleFragLoadAborted(t.frag, t.part) : this.hls.trigger(Q.ERROR, t);
                    } else this.hls.trigger(Q.ERROR, { type: Z.OTHER_ERROR, details: J.INTERNAL_EXCEPTION, err: e, error: e, fatal: !0 });
                    return null;
                  },
                },
                {
                  key: '_handleTransmuxerFlush',
                  value: function (e) {
                    var t = this.getCurrentContext(e);
                    if (t && this.state === kr) {
                      var n = t.frag,
                        r = t.part,
                        i = t.level,
                        a = self.performance.now();
                      (n.stats.parsing.end = a), r && (r.stats.parsing.end = a), this.updateLevelTiming(n, r, i, e.partial);
                    } else this.fragCurrent || this.state === gr || this.state === Ar || (this.state = yr);
                  },
                },
                {
                  key: 'getCurrentContext',
                  value: function (e) {
                    var t = this.levels,
                      n = this.fragCurrent,
                      r = e.level,
                      i = e.sn,
                      a = e.part;
                    if (null == t || !t[r]) return this.warn('Levels object was unset while buffering fragment '.concat(i, ' of level ').concat(r, '. The current chunk will not be buffered.')), null;
                    var o = t[r],
                      s = a > -1 ? bn(o, i, a) : null,
                      l = s
                        ? s.fragment
                        : (function (e, t, n) {
                            if (null == e || !e.details) return null;
                            var r = e.details,
                              i = r.fragments[t - r.startSN];
                            return i || ((i = r.fragmentHint) && i.sn === t ? i : t < r.startSN && n && n.sn === t ? n : null);
                          })(o, i, n);
                    return l ? (n && n !== l && (l.stats = n.stats), { frag: l, part: s, level: o }) : null;
                  },
                },
                {
                  key: 'bufferFragmentData',
                  value: function (e, t, n, r) {
                    var i;
                    if (e && this.state === kr) {
                      var a = e.data1,
                        o = e.data2,
                        s = a;
                      if ((a && o && (s = ut(a, o)), null != (i = s) && i.length)) {
                        var l = { type: e.type, frag: t, part: n, chunkMeta: r, parent: t.type, data: s };
                        this.hls.trigger(Q.BUFFER_APPENDING, l), e.dropped && e.independent && !n && this.flushBufferGap(t);
                      }
                    }
                  },
                },
                {
                  key: 'flushBufferGap',
                  value: function (e) {
                    var t = this.media;
                    if (t)
                      if (ar.isBuffered(t, t.currentTime)) {
                        var n = t.currentTime,
                          r = ar.bufferInfo(t, n, 0),
                          i = e.duration,
                          a = Math.min(2 * this.config.maxFragLookUpTolerance, 0.25 * i),
                          o = Math.max(Math.min(e.start - a, r.end - a), n + a);
                        e.start - o > a && this.flushMainBuffer(o, e.start);
                      } else this.flushMainBuffer(0, e.start);
                  },
                },
                {
                  key: 'getFwdBufferInfo',
                  value: function (e, t) {
                    var n = this.getLoadPosition();
                    return $(n) ? this.getFwdBufferInfoAtPos(e, n, t) : null;
                  },
                },
                {
                  key: 'getFwdBufferInfoAtPos',
                  value: function (e, t, n) {
                    var r = this.config.maxBufferHole,
                      i = ar.bufferInfo(e, t, r);
                    if (0 === i.len && void 0 !== i.nextStart) {
                      var a = this.fragmentTracker.getBufferedFrag(t, n);
                      if (a && i.nextStart < a.end) return ar.bufferInfo(e, t, Math.max(i.nextStart, r));
                    }
                    return i;
                  },
                },
                {
                  key: 'getMaxBufferLength',
                  value: function (e) {
                    var t,
                      n = this.config;
                    return (t = e ? Math.max((8 * n.maxBufferSize) / e, n.maxBufferLength) : n.maxBufferLength), Math.min(t, n.maxMaxBufferLength);
                  },
                },
                {
                  key: 'reduceMaxBufferLength',
                  value: function (e) {
                    var t = this.config,
                      n = e || t.maxBufferLength;
                    return t.maxMaxBufferLength >= n && ((t.maxMaxBufferLength /= 2), this.warn('Reduce max buffer length to '.concat(t.maxMaxBufferLength, 's')), !0);
                  },
                },
                {
                  key: 'getAppendedFrag',
                  value: function (e) {
                    var t = this.fragmentTracker.getAppendedFrag(e, jt);
                    return t && 'fragment' in t ? t.fragment : t;
                  },
                },
                {
                  key: 'getNextFragment',
                  value: function (e, t) {
                    var n = t.fragments,
                      r = n.length;
                    if (!r) return null;
                    var i,
                      a = this.config,
                      o = n[0].start;
                    if (t.live) {
                      var s = a.initialLiveManifestSize;
                      if (r < s) return this.warn('Not enough fragments to start playback (have: '.concat(r, ', need: ').concat(s, ')')), null;
                      t.PTSKnown ||
                        this.startFragRequested ||
                        -1 !== this.startPosition ||
                        ((i = this.getInitialLiveFragment(t, n)), (this.startPosition = i ? this.hls.liveSyncPosition || i.start : e));
                    } else e <= o && (i = n[0]);
                    if (!i) {
                      var l = a.lowLatencyMode ? t.partEnd : t.fragmentEnd;
                      i = this.getFragmentAtPosition(e, l, t);
                    }
                    return this.mapToInitFragWhenRequired(i);
                  },
                },
                {
                  key: 'isLoopLoading',
                  value: function (e, t) {
                    var n = this.fragmentTracker.getState(e);
                    return (n === qn || (n === Wn && !!e.gap)) && this.nextLoadPosition > t;
                  },
                },
                {
                  key: 'getNextFragmentLoopLoading',
                  value: function (e, t, n, r, i) {
                    var a = e.gap,
                      o = this.getNextFragment(this.nextLoadPosition, t);
                    if (null === o) return o;
                    if (((e = o), a && e && !e.gap && n.nextStart)) {
                      var s = this.getFwdBufferInfoAtPos(this.mediaBuffer ? this.mediaBuffer : this.media, n.nextStart, r);
                      if (null !== s && n.len + s.len >= i) return this.log('buffer full after gaps in "'.concat(r, '" playlist starting at sn: ').concat(e.sn)), null;
                    }
                    return e;
                  },
                },
                {
                  key: 'mapToInitFragWhenRequired',
                  value: function (e) {
                    return null == e || !e.initSegment || (null != e && e.initSegment.data) || this.bitrateTest ? e : e.initSegment;
                  },
                },
                {
                  key: 'getNextPart',
                  value: function (e, t, n) {
                    for (var r = -1, i = !1, a = !0, o = 0, s = e.length; o < s; o++) {
                      var l = e[o];
                      if (((a = a && !l.independent), r > -1 && n < l.start)) break;
                      var u = l.loaded;
                      u ? (r = -1) : (i || l.independent || a) && l.fragment === t && (r = o), (i = u);
                    }
                    return r;
                  },
                },
                {
                  key: 'loadedEndOfParts',
                  value: function (e, t) {
                    var n = e[e.length - 1];
                    return n && t > n.start && n.loaded;
                  },
                },
                {
                  key: 'getInitialLiveFragment',
                  value: function (e, t) {
                    var n = this.fragPrevious,
                      r = null;
                    if (n) {
                      if (
                        (e.hasProgramDateTime &&
                          (this.log('Live playlist, switching playlist, load frag with same PDT: '.concat(n.programDateTime)),
                          (r = (function (e, t, n) {
                            if (null === t || !Array.isArray(e) || !e.length || !$(t)) return null;
                            if (t < (e[0].programDateTime || 0)) return null;
                            if (t >= (e[e.length - 1].endProgramDateTime || 0)) return null;
                            n = n || 0;
                            for (var r = 0; r < e.length; ++r) {
                              var i = e[r];
                              if (xn(t, n, i)) return i;
                            }
                            return null;
                          })(t, n.endProgramDateTime, this.config.maxFragLookUpTolerance))),
                        !r)
                      ) {
                        var i = n.sn + 1;
                        if (i >= e.startSN && i <= e.endSN) {
                          var a = t[i - e.startSN];
                          n.cc === a.cc && ((r = a), this.log('Live playlist, switching playlist, load frag with next SN: '.concat(r.sn)));
                        }
                        r ||
                          ((r = (function (e, t) {
                            return Ln(e, function (e) {
                              return e.cc < t ? 1 : e.cc > t ? -1 : 0;
                            });
                          })(t, n.cc)),
                          r && this.log('Live playlist, switching playlist, load frag with same CC: '.concat(r.sn)));
                      }
                    } else {
                      var o = this.hls.liveSyncPosition;
                      null !== o && (r = this.getFragmentAtPosition(o, this.bitrateTest ? e.fragmentEnd : e.edge, e));
                    }
                    return r;
                  },
                },
                {
                  key: 'getFragmentAtPosition',
                  value: function (e, t, n) {
                    var r,
                      i = this.config,
                      a = this.fragPrevious,
                      o = n.fragments,
                      s = n.endSN,
                      l = n.fragmentHint,
                      u = i.maxFragLookUpTolerance,
                      c = n.partList,
                      d = !!(i.lowLatencyMode && null != c && c.length && l);
                    (d && l && !this.bitrateTest && ((o = o.concat(l)), (s = l.sn)), e < t) ? (r = Rn(a, o, e, e > t - u ? 0 : u)) : (r = o[o.length - 1]);
                    if (r) {
                      var f = r.sn - n.startSN,
                        h = this.fragmentTracker.getState(r);
                      if (((h === qn || (h === Wn && r.gap)) && (a = r), a && r.sn === a.sn && (!d || c[0].fragment.sn > r.sn)))
                        if (a && r.level === a.level) {
                          var p = o[f + 1];
                          r = r.sn < s && this.fragmentTracker.getState(p) !== qn ? p : null;
                        }
                    }
                    return r;
                  },
                },
                {
                  key: 'synchronizeToLiveEdge',
                  value: function (e) {
                    var t = this.config,
                      n = this.media;
                    if (n) {
                      var r = this.hls.liveSyncPosition,
                        i = n.currentTime,
                        a = e.fragments[0].start,
                        o = e.edge,
                        s = i >= a - t.maxFragLookUpTolerance && i <= o;
                      if (null !== r && n.duration > r && (i < r || !s)) {
                        var l = void 0 !== t.liveMaxLatencyDuration ? t.liveMaxLatencyDuration : t.liveMaxLatencyDurationCount * e.targetduration;
                        ((!s && n.readyState < 4) || i < o - l) &&
                          (this.loadedmetadata || (this.nextLoadPosition = r),
                          n.readyState &&
                            (this.warn('Playback: '.concat(i.toFixed(3), ' is located too far from the end of live sliding playlist: ').concat(o, ', reset currentTime to : ').concat(r.toFixed(3))),
                            (n.currentTime = r)));
                      }
                    }
                  },
                },
                {
                  key: 'alignPlaylists',
                  value: function (e, t) {
                    var n = this.levels,
                      r = this.levelLastLoaded,
                      i = this.fragPrevious,
                      a = null !== r ? n[r] : null,
                      o = e.fragments.length;
                    if (!o) return this.warn('No fragments in live playlist'), 0;
                    var s = e.fragments[0].start,
                      l = !t,
                      u = e.alignedSliding && $(s);
                    if (l || (!u && !s)) {
                      cr(i, a, e);
                      var c = e.fragments[0].start;
                      return (
                        this.log(
                          'Live playlist sliding: '
                            .concat(c.toFixed(2), ' start-sn: ')
                            .concat(t ? t.startSN : 'na', '->')
                            .concat(e.startSN, ' prev-sn: ')
                            .concat(i ? i.sn : 'na', ' fragments: ')
                            .concat(o),
                        ),
                        c
                      );
                    }
                    return s;
                  },
                },
                {
                  key: 'waitForCdnTuneIn',
                  value: function (e) {
                    return e.live && e.canBlockReload && e.partTarget && e.tuneInGoal > Math.max(e.partHoldBack, 3 * e.partTarget);
                  },
                },
                {
                  key: 'setStartPosition',
                  value: function (e, t) {
                    var n = this.startPosition;
                    if ((n < t && (n = -1), -1 === n || -1 === this.lastCurrentTime)) {
                      var r = null !== this.startTimeOffset,
                        i = r ? this.startTimeOffset : e.startTimeOffset;
                      null !== i && $(i)
                        ? ((n = t + i),
                          i < 0 && (n += e.totalduration),
                          (n = Math.min(Math.max(t, n), t + e.totalduration)),
                          this.log(
                            'Start time offset '
                              .concat(i, ' found in ')
                              .concat(r ? 'multivariant' : 'media', ' playlist, adjust startPosition to ')
                              .concat(n),
                          ),
                          (this.startPosition = n))
                        : e.live
                        ? (n = this.hls.liveSyncPosition || t)
                        : (this.startPosition = n = 0),
                        (this.lastCurrentTime = n);
                    }
                    this.nextLoadPosition = n;
                  },
                },
                {
                  key: 'getLoadPosition',
                  value: function () {
                    var e = this.media,
                      t = 0;
                    return this.loadedmetadata && e ? (t = e.currentTime) : this.nextLoadPosition && (t = this.nextLoadPosition), t;
                  },
                },
                {
                  key: 'handleFragLoadAborted',
                  value: function (e, t) {
                    this.transmuxer &&
                      'initSegment' !== e.sn &&
                      e.stats.aborted &&
                      (this.warn(
                        'Fragment '
                          .concat(e.sn)
                          .concat(t ? ' part ' + t.index : '', ' of level ')
                          .concat(e.level, ' was aborted'),
                      ),
                      this.resetFragmentLoading(e));
                  },
                },
                {
                  key: 'resetFragmentLoading',
                  value: function (e) {
                    (this.fragCurrent && (this.fragContextChanged(e) || this.state === Er)) || (this.state = yr);
                  },
                },
                {
                  key: 'onFragmentOrKeyLoadError',
                  value: function (e, t) {
                    if (t.chunkMeta && !t.frag) {
                      var n = this.getCurrentContext(t.chunkMeta);
                      n && (t.frag = n.frag);
                    }
                    var r = t.frag;
                    if (r && r.type === e && this.levels)
                      if (this.fragContextChanged(r)) {
                        var i;
                        this.warn('Frag load error must match current frag to retry '.concat(r.url, ' > ').concat(null == (i = this.fragCurrent) ? void 0 : i.url));
                      } else {
                        var a = t.details === J.FRAG_GAP;
                        a && this.fragmentTracker.fragBuffered(r, !0);
                        var o = t.errorAction,
                          s = o || {},
                          l = s.action,
                          u = s.retryCount,
                          c = void 0 === u ? 0 : u,
                          d = s.retryConfig;
                        if (o && l === Pn && d) {
                          var f;
                          this.resetStartWhenNotLoaded(null != (f = this.levelLastLoaded) ? f : r.level);
                          var h = Tn(d, c);
                          this.warn(
                            'Fragment '
                              .concat(r.sn, ' of ')
                              .concat(e, ' ')
                              .concat(r.level, ' errored with ')
                              .concat(t.details, ', retrying loading ')
                              .concat(c + 1, '/')
                              .concat(d.maxNumRetry, ' in ')
                              .concat(h, 'ms'),
                          ),
                            (o.resolved = !0),
                            (this.retryDate = self.performance.now() + h),
                            (this.state = Er);
                        } else
                          d && o
                            ? (this.resetFragmentErrors(e), c < d.maxNumRetry ? a || (o.resolved = !0) : ae.warn(''.concat(t.details, ' reached or exceeded max retry (').concat(c, ')')))
                            : (null == o ? void 0 : o.action) === Mn
                            ? (this.state = Rr)
                            : (this.state = Ar);
                        this.tickImmediate();
                      }
                  },
                },
                {
                  key: 'reduceLengthAndFlushBuffer',
                  value: function (e) {
                    if (this.state === kr || this.state === Tr) {
                      var t = e.parent,
                        n = this.getFwdBufferInfo(this.mediaBuffer, t),
                        r = n && n.len > 0.5;
                      r && this.reduceMaxBufferLength(n.len);
                      var i = !r;
                      return (
                        i && this.warn('Buffer full error while media.currentTime is not buffered, flush '.concat(t, ' buffer')),
                        e.frag && (this.fragmentTracker.removeFragment(e.frag), (this.nextLoadPosition = e.frag.start)),
                        this.resetLoadingState(),
                        i
                      );
                    }
                    return !1;
                  },
                },
                {
                  key: 'resetFragmentErrors',
                  value: function (e) {
                    e === Kt && (this.fragCurrent = null), this.loadedmetadata || (this.startFragRequested = !1), this.state !== gr && (this.state = yr);
                  },
                },
                {
                  key: 'afterBufferFlushed',
                  value: function (e, t, n) {
                    if (e) {
                      var r = ar.getBuffered(e);
                      this.fragmentTracker.detectEvictedFragments(t, r, n), this.state === wr && this.resetLoadingState();
                    }
                  },
                },
                {
                  key: 'resetLoadingState',
                  value: function () {
                    this.log('Reset loading state'), (this.fragCurrent = null), (this.fragPrevious = null), (this.state = yr);
                  },
                },
                {
                  key: 'resetStartWhenNotLoaded',
                  value: function (e) {
                    if (!this.loadedmetadata) {
                      this.startFragRequested = !1;
                      var t = this.levels ? this.levels[e].details : null;
                      null != t && t.live ? ((this.startPosition = -1), this.setStartPosition(t, 0), this.resetLoadingState()) : (this.nextLoadPosition = this.startPosition);
                    }
                  },
                },
                {
                  key: 'resetWhenMissingContext',
                  value: function (e) {
                    var t;
                    this.warn('The loading context changed while buffering fragment '.concat(e.sn, ' of level ').concat(e.level, '. This chunk will not be buffered.')),
                      this.removeUnbufferedFrags(),
                      this.resetStartWhenNotLoaded(null != (t = this.levelLastLoaded) ? t : e.level),
                      this.resetLoadingState();
                  },
                },
                {
                  key: 'removeUnbufferedFrags',
                  value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.fragmentTracker.removeFragmentsInRange(e, 1 / 0, this.playlistType, !1, !0);
                  },
                },
                {
                  key: 'updateLevelTiming',
                  value: function (e, t, n, r) {
                    var i,
                      a = this,
                      o = n.details;
                    if (o) {
                      if (
                        Object.keys(e.elementaryStreams).reduce(function (t, i) {
                          var s = e.elementaryStreams[i];
                          if (s) {
                            var l = s.endPTS - s.startPTS;
                            if (l <= 0) return a.warn('Could not parse fragment '.concat(e.sn, ' ').concat(i, ' duration reliably (').concat(l, ')')), t || !1;
                            var u = r ? 0 : mn(o, e, s.startPTS, s.endPTS, s.startDTS, s.endDTS);
                            return a.hls.trigger(Q.LEVEL_PTS_UPDATED, { details: o, level: n, drift: u, type: i, frag: e, start: s.startPTS, end: s.endPTS }), !0;
                          }
                          return t;
                        }, !1)
                      )
                        n.fragmentError = 0;
                      else if (null === (null == (i = this.transmuxer) ? void 0 : i.error)) {
                        var s = new Error('Found no media in fragment '.concat(e.sn, ' of level ').concat(n.id, ' resetting transmuxer to fallback to playlist timing'));
                        if (
                          (this.warn(s.message),
                          this.hls.trigger(Q.ERROR, {
                            type: Z.MEDIA_ERROR,
                            details: J.FRAG_PARSING_ERROR,
                            fatal: !1,
                            error: s,
                            frag: e,
                            reason: 'Found no media in msn '.concat(e.sn, ' of level "').concat(n.url, '"'),
                          }),
                          !this.hls)
                        )
                          return;
                        this.resetTransmuxer();
                      }
                      (this.state = Tr), this.hls.trigger(Q.FRAG_PARSED, { frag: e, part: t });
                    } else this.warn('level.details undefined');
                  },
                },
                {
                  key: 'resetTransmuxer',
                  value: function () {
                    this.transmuxer && (this.transmuxer.destroy(), (this.transmuxer = null));
                  },
                },
                {
                  key: 'recoverWorkerError',
                  value: function (e) {
                    var t, n, r;
                    'demuxerWorker' === e.event &&
                      (this.fragmentTracker.removeAllFragments(),
                      this.resetTransmuxer(),
                      this.resetStartWhenNotLoaded(null != (t = null != (n = this.levelLastLoaded) ? n : null == (r = this.fragCurrent) ? void 0 : r.level) ? t : 0),
                      this.resetLoadingState());
                  },
                },
                {
                  key: 'state',
                  get: function () {
                    return this._state;
                  },
                  set: function (e) {
                    var t = this._state;
                    t !== e && ((this._state = e), this.log(''.concat(t, '->').concat(e)));
                  },
                },
              ]),
              r
            );
          })(rr);
        function xr() {
          return self.SourceBuffer || self.WebKitSourceBuffer;
        }
        function Dr() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '',
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9e4;
          return { type: e, id: -1, pid: -1, inputTimeScale: t, sequenceNumber: -1, samples: [], dropped: 0 };
        }
        var Ir = (function () {
            function e() {
              k(this, e), (this._audioTrack = void 0), (this._id3Track = void 0), (this.frameIndex = 0), (this.cachedData = null), (this.basePTS = null), (this.initPTS = null), (this.lastPTS = null);
            }
            return (
              w(e, [
                {
                  key: 'resetInitSegment',
                  value: function (e, t, n, r) {
                    this._id3Track = { type: 'id3', id: 3, pid: -1, inputTimeScale: 9e4, sequenceNumber: 0, samples: [], dropped: 0 };
                  },
                },
                {
                  key: 'resetTimeStamp',
                  value: function (e) {
                    (this.initPTS = e), this.resetContiguity();
                  },
                },
                {
                  key: 'resetContiguity',
                  value: function () {
                    (this.basePTS = null), (this.lastPTS = null), (this.frameIndex = 0);
                  },
                },
                {
                  key: 'canParse',
                  value: function (e, t) {
                    return !1;
                  },
                },
                { key: 'appendFrame', value: function (e, t, n) {} },
                {
                  key: 'demux',
                  value: function (e, t) {
                    this.cachedData && ((e = ut(this.cachedData, e)), (this.cachedData = null));
                    var n,
                      r = Fe(e, 0),
                      i = r ? r.length : 0,
                      a = this._audioTrack,
                      o = this._id3Track,
                      s = r
                        ? (function (e) {
                            for (var t = He(e), n = 0; n < t.length; n++) {
                              var r = t[n];
                              if (Ue(r)) return We(r);
                            }
                          })(r)
                        : void 0,
                      l = e.length;
                    for (
                      (null === this.basePTS || (0 === this.frameIndex && $(s))) && ((this.basePTS = Mr(s, t, this.initPTS)), (this.lastPTS = this.basePTS)),
                        null === this.lastPTS && (this.lastPTS = this.basePTS),
                        r && r.length > 0 && o.samples.push({ pts: this.lastPTS, dts: this.lastPTS, data: r, type: en, duration: Number.POSITIVE_INFINITY });
                      i < l;

                    ) {
                      if (this.canParse(e, i)) {
                        var u = this.appendFrame(a, e, i);
                        u ? (this.frameIndex++, (this.lastPTS = u.sample.pts), (n = i += u.length)) : (i = l);
                      } else Be(e, i) ? ((r = Fe(e, i)), o.samples.push({ pts: this.lastPTS, dts: this.lastPTS, data: r, type: en, duration: Number.POSITIVE_INFINITY }), (n = i += r.length)) : i++;
                      if (i === l && n !== l) {
                        var c = Ie(e, n);
                        this.cachedData ? (this.cachedData = ut(this.cachedData, c)) : (this.cachedData = c);
                      }
                    }
                    return { audioTrack: a, videoTrack: Dr(), id3Track: o, textTrack: Dr() };
                  },
                },
                {
                  key: 'demuxSampleAes',
                  value: function (e, t, n) {
                    return Promise.reject(new Error('['.concat(this, '] This demuxer does not support Sample-AES decryption')));
                  },
                },
                {
                  key: 'flush',
                  value: function (e) {
                    var t = this.cachedData;
                    return t && ((this.cachedData = null), this.demux(t, 0)), { audioTrack: this._audioTrack, videoTrack: Dr(), id3Track: this._id3Track, textTrack: Dr() };
                  },
                },
                { key: 'destroy', value: function () {} },
              ]),
              e
            );
          })(),
          Mr = function (e, t, n) {
            return $(e) ? 90 * e : 9e4 * t + (n ? (9e4 * n.baseTime) / n.timescale : 0);
          };
        function Pr(e, t) {
          return 255 === e[t] && 240 == (246 & e[t + 1]);
        }
        function Or(e, t) {
          return 1 & e[t + 1] ? 7 : 9;
        }
        function Fr(e, t) {
          return ((3 & e[t + 3]) << 11) | (e[t + 4] << 3) | ((224 & e[t + 5]) >>> 5);
        }
        function Nr(e, t) {
          return t + 1 < e.length && Pr(e, t);
        }
        function Br(e, t) {
          if (Nr(e, t)) {
            var n = Or(e, t);
            if (t + n >= e.length) return !1;
            var r = Fr(e, t);
            if (r <= n) return !1;
            var i = t + r;
            return i === e.length || Nr(e, i);
          }
          return !1;
        }
        function Ur(e, t, n, r, i) {
          if (!e.samplerate) {
            var a = (function (e, t, n, r) {
              var i,
                a,
                o,
                s,
                l = navigator.userAgent.toLowerCase(),
                u = r,
                c = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
              i = 1 + ((192 & t[n + 2]) >>> 6);
              var d = (60 & t[n + 2]) >>> 2;
              if (!(d > c.length - 1))
                return (
                  (o = (1 & t[n + 2]) << 2),
                  (o |= (192 & t[n + 3]) >>> 6),
                  ae.log('manifest codec:'.concat(r, ', ADTS type:').concat(i, ', samplingIndex:').concat(d)),
                  /firefox/i.test(l)
                    ? d >= 6
                      ? ((i = 5), (s = new Array(4)), (a = d - 3))
                      : ((i = 2), (s = new Array(2)), (a = d))
                    : -1 !== l.indexOf('android')
                    ? ((i = 2), (s = new Array(2)), (a = d))
                    : ((i = 5),
                      (s = new Array(4)),
                      (r && (-1 !== r.indexOf('mp4a.40.29') || -1 !== r.indexOf('mp4a.40.5'))) || (!r && d >= 6)
                        ? (a = d - 3)
                        : (((r && -1 !== r.indexOf('mp4a.40.2') && ((d >= 6 && 1 === o) || /vivaldi/i.test(l))) || (!r && 1 === o)) && ((i = 2), (s = new Array(2))), (a = d))),
                  (s[0] = i << 3),
                  (s[0] |= (14 & d) >> 1),
                  (s[1] |= (1 & d) << 7),
                  (s[1] |= o << 3),
                  5 === i && ((s[1] |= (14 & a) >> 1), (s[2] = (1 & a) << 7), (s[2] |= 8), (s[3] = 0)),
                  { config: s, samplerate: c[d], channelCount: o, codec: 'mp4a.40.' + i, manifestCodec: u }
                );
              e.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_PARSING_ERROR, fatal: !0, reason: 'invalid ADTS sampling index:'.concat(d) });
            })(t, n, r, i);
            if (!a) return;
            (e.config = a.config),
              (e.samplerate = a.samplerate),
              (e.channelCount = a.channelCount),
              (e.codec = a.codec),
              (e.manifestCodec = a.manifestCodec),
              ae.log('parsed codec:'.concat(e.codec, ', rate:').concat(a.samplerate, ', channels:').concat(a.channelCount));
          }
        }
        function zr(e) {
          return 9216e4 / e;
        }
        function Hr(e, t, n, r, i) {
          var a,
            o = r + i * zr(e.samplerate),
            s = (function (e, t) {
              var n = Or(e, t);
              if (t + n <= e.length) {
                var r = Fr(e, t) - n;
                if (r > 0) return { headerLength: n, frameLength: r };
              }
            })(t, n);
          if (s) {
            var l = s.frameLength,
              u = s.headerLength,
              c = u + l,
              d = Math.max(0, n + c - t.length);
            d ? (a = new Uint8Array(c - u)).set(t.subarray(n + u, t.length), 0) : (a = t.subarray(n + u, n + c));
            var f = { unit: a, pts: o };
            return d || e.samples.push(f), { sample: f, length: c, missing: d };
          }
          var h = t.length - n;
          return (a = new Uint8Array(h)).set(t.subarray(n, t.length), 0), { sample: { unit: a, pts: o }, length: h, missing: -1 };
        }
        var Vr = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r) {
              var i;
              return k(this, n), ((i = t.call(this)).observer = void 0), (i.config = void 0), (i.observer = e), (i.config = r), i;
            }
            return (
              w(
                n,
                [
                  {
                    key: 'resetInitSegment',
                    value: function (e, t, r, i) {
                      U(z(n.prototype), 'resetInitSegment', this).call(this, e, t, r, i),
                        (this._audioTrack = {
                          container: 'audio/adts',
                          type: 'audio',
                          id: 2,
                          pid: -1,
                          sequenceNumber: 0,
                          segmentCodec: 'aac',
                          samples: [],
                          manifestCodec: t,
                          duration: i,
                          inputTimeScale: 9e4,
                          dropped: 0,
                        });
                    },
                  },
                  {
                    key: 'canParse',
                    value: function (e, t) {
                      return (function (e, t) {
                        return (
                          (function (e, t) {
                            return t + 5 < e.length;
                          })(e, t) &&
                          Pr(e, t) &&
                          Fr(e, t) <= e.length - t
                        );
                      })(e, t);
                    },
                  },
                  {
                    key: 'appendFrame',
                    value: function (e, t, n) {
                      Ur(e, this.observer, t, n, e.manifestCodec);
                      var r = Hr(e, t, n, this.basePTS, this.frameIndex);
                      if (r && 0 === r.missing) return r;
                    },
                  },
                ],
                [
                  {
                    key: 'probe',
                    value: function (e) {
                      if (!e) return !1;
                      for (var t = (Fe(e, 0) || []).length, n = e.length; t < n; t++) if (Br(e, t)) return ae.log('ADTS sync word found !'), !0;
                      return !1;
                    },
                  },
                ],
              ),
              n
            );
          })(Ir),
          Gr = /\/emsg[-/]ID3/i,
          jr = (function () {
            function e(t, n) {
              k(this, e),
                (this.remainderData = null),
                (this.timeOffset = 0),
                (this.config = void 0),
                (this.videoTrack = void 0),
                (this.audioTrack = void 0),
                (this.id3Track = void 0),
                (this.txtTrack = void 0),
                (this.config = n);
            }
            return (
              w(
                e,
                [
                  { key: 'resetTimeStamp', value: function () {} },
                  {
                    key: 'resetInitSegment',
                    value: function (e, t, n, r) {
                      var i = (this.videoTrack = Dr('video', 1)),
                        a = (this.audioTrack = Dr('audio', 1)),
                        o = (this.txtTrack = Dr('text', 1));
                      if (((this.id3Track = Dr('id3', 1)), (this.timeOffset = 0), null != e && e.byteLength)) {
                        var s = ot(e);
                        if (s.video) {
                          var l = s.video,
                            u = l.id,
                            c = l.timescale,
                            d = l.codec;
                          (i.id = u), (i.timescale = o.timescale = c), (i.codec = d);
                        }
                        if (s.audio) {
                          var f = s.audio,
                            h = f.id,
                            p = f.timescale,
                            v = f.codec;
                          (a.id = h), (a.timescale = p), (a.codec = v);
                        }
                        (o.id = Ze.text), (i.sampleDuration = 0), (i.duration = a.duration = r);
                      }
                    },
                  },
                  {
                    key: 'resetContiguity',
                    value: function () {
                      this.remainderData = null;
                    },
                  },
                  {
                    key: 'demux',
                    value: function (e, t) {
                      this.timeOffset = t;
                      var n = e,
                        r = this.videoTrack,
                        i = this.txtTrack;
                      if (this.config.progressive) {
                        this.remainderData && (n = ut(this.remainderData, e));
                        var a = (function (e) {
                          var t = { valid: null, remainder: null },
                            n = it(e, ['moof']);
                          if (!n) return t;
                          if (n.length < 2) return (t.remainder = e), t;
                          var r = n[n.length - 1];
                          return (t.valid = Ie(e, 0, r.byteOffset - 8)), (t.remainder = Ie(e, r.byteOffset - 8)), t;
                        })(n);
                        (this.remainderData = a.remainder), (r.samples = a.valid || new Uint8Array());
                      } else r.samples = n;
                      var o = this.extractID3Track(r, t);
                      return (i.samples = ct(t, r)), { videoTrack: r, audioTrack: this.audioTrack, id3Track: o, textTrack: this.txtTrack };
                    },
                  },
                  {
                    key: 'flush',
                    value: function () {
                      var e = this.timeOffset,
                        t = this.videoTrack,
                        n = this.txtTrack;
                      (t.samples = this.remainderData || new Uint8Array()), (this.remainderData = null);
                      var r = this.extractID3Track(t, this.timeOffset);
                      return (n.samples = ct(e, t)), { videoTrack: t, audioTrack: Dr(), id3Track: r, textTrack: Dr() };
                    },
                  },
                  {
                    key: 'extractID3Track',
                    value: function (e, t) {
                      var n = this.id3Track;
                      if (e.samples.length) {
                        var r = it(e.samples, ['emsg']);
                        r &&
                          r.forEach(function (e) {
                            var r = (function (e) {
                              var t = e[0],
                                n = '',
                                r = '',
                                i = 0,
                                a = 0,
                                o = 0,
                                s = 0,
                                l = 0,
                                u = 0;
                              if (0 === t) {
                                for (; '\0' !== Je(e.subarray(u, u + 1)); ) (n += Je(e.subarray(u, u + 1))), (u += 1);
                                for (n += Je(e.subarray(u, u + 1)), u += 1; '\0' !== Je(e.subarray(u, u + 1)); ) (r += Je(e.subarray(u, u + 1))), (u += 1);
                                (r += Je(e.subarray(u, u + 1))), (u += 1), (i = tt(e, 12)), (a = tt(e, 16)), (s = tt(e, 20)), (l = tt(e, 24)), (u = 28);
                              } else if (1 === t) {
                                i = tt(e, (u += 4));
                                var c = tt(e, (u += 4)),
                                  d = tt(e, (u += 4));
                                for (
                                  u += 4,
                                    o = Math.pow(2, 32) * c + d,
                                    Number.isSafeInteger(o) ||
                                      ((o = Number.MAX_SAFE_INTEGER), ae.warn('Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box')),
                                    s = tt(e, u),
                                    l = tt(e, (u += 4)),
                                    u += 4;
                                  '\0' !== Je(e.subarray(u, u + 1));

                                )
                                  (n += Je(e.subarray(u, u + 1))), (u += 1);
                                for (n += Je(e.subarray(u, u + 1)), u += 1; '\0' !== Je(e.subarray(u, u + 1)); ) (r += Je(e.subarray(u, u + 1))), (u += 1);
                                (r += Je(e.subarray(u, u + 1))), (u += 1);
                              }
                              return { schemeIdUri: n, value: r, timeScale: i, presentationTime: o, presentationTimeDelta: a, eventDuration: s, id: l, payload: e.subarray(u, e.byteLength) };
                            })(e);
                            if (Gr.test(r.schemeIdUri)) {
                              var i = $(r.presentationTime) ? r.presentationTime / r.timeScale : t + r.presentationTimeDelta / r.timeScale,
                                a = 4294967295 === r.eventDuration ? Number.POSITIVE_INFINITY : r.eventDuration / r.timeScale;
                              a <= 0.001 && (a = Number.POSITIVE_INFINITY);
                              var o = r.payload;
                              n.samples.push({ data: o, len: o.byteLength, dts: i, pts: i, type: nn, duration: a });
                            }
                          });
                      }
                      return n;
                    },
                  },
                  {
                    key: 'demuxSampleAes',
                    value: function (e, t, n) {
                      return Promise.reject(new Error('The MP4 demuxer does not support SAMPLE-AES decryption'));
                    },
                  },
                  { key: 'destroy', value: function () {} },
                ],
                [
                  {
                    key: 'probe',
                    value: function (e) {
                      return it((e = e.length > 16384 ? e.subarray(0, 16384) : e), ['moof']).length > 0;
                    },
                  },
                ],
              ),
              e
            );
          })(),
          Kr = null,
          Wr = [
            32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256,
            320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160,
          ],
          qr = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
          Yr = [
            [0, 72, 144, 12],
            [0, 0, 0, 0],
            [0, 72, 144, 12],
            [0, 144, 144, 12],
          ],
          Xr = [0, 1, 1, 4];
        function $r(e, t, n, r, i) {
          if (!(n + 24 > t.length)) {
            var a = Qr(t, n);
            if (a && n + a.frameLength <= t.length) {
              var o = r + i * ((9e4 * a.samplesPerFrame) / a.sampleRate),
                s = { unit: t.subarray(n, n + a.frameLength), pts: o, dts: o };
              return (e.config = []), (e.channelCount = a.channelCount), (e.samplerate = a.sampleRate), e.samples.push(s), { sample: s, length: a.frameLength, missing: 0 };
            }
          }
        }
        function Qr(e, t) {
          var n = (e[t + 1] >> 3) & 3,
            r = (e[t + 1] >> 1) & 3,
            i = (e[t + 2] >> 4) & 15,
            a = (e[t + 2] >> 2) & 3;
          if (1 !== n && 0 !== i && 15 !== i && 3 !== a) {
            var o = (e[t + 2] >> 1) & 1,
              s = e[t + 3] >> 6,
              l = 1e3 * Wr[14 * (3 === n ? 3 - r : 3 === r ? 3 : 4) + i - 1],
              u = qr[3 * (3 === n ? 0 : 2 === n ? 1 : 2) + a],
              c = 3 === s ? 1 : 2,
              d = Yr[n][r],
              f = Xr[r],
              h = 8 * d * f,
              p = Math.floor((d * l) / u + o) * f;
            if (null === Kr) {
              var v = (navigator.userAgent || '').match(/Chrome\/(\d+)/i);
              Kr = v ? parseInt(v[1]) : 0;
            }
            return !!Kr && Kr <= 87 && 2 === r && l >= 224e3 && 0 === s && (e[t + 3] = 128 | e[t + 3]), { sampleRate: u, channelCount: c, frameLength: p, samplesPerFrame: h };
          }
        }
        function Zr(e, t) {
          return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1]);
        }
        function Jr(e, t) {
          return t + 1 < e.length && Zr(e, t);
        }
        function ei(e, t) {
          if (t + 1 < e.length && Zr(e, t)) {
            var n = Qr(e, t),
              r = 4;
            null != n && n.frameLength && (r = n.frameLength);
            var i = t + r;
            return i === e.length || Jr(e, i);
          }
          return !1;
        }
        var ti = (function () {
            function e(t) {
              k(this, e),
                (this.data = void 0),
                (this.bytesAvailable = void 0),
                (this.word = void 0),
                (this.bitsAvailable = void 0),
                (this.data = t),
                (this.bytesAvailable = t.byteLength),
                (this.word = 0),
                (this.bitsAvailable = 0);
            }
            return (
              w(e, [
                {
                  key: 'loadWord',
                  value: function () {
                    var e = this.data,
                      t = this.bytesAvailable,
                      n = e.byteLength - t,
                      r = new Uint8Array(4),
                      i = Math.min(4, t);
                    if (0 === i) throw new Error('no bytes available');
                    r.set(e.subarray(n, n + i)), (this.word = new DataView(r.buffer).getUint32(0)), (this.bitsAvailable = 8 * i), (this.bytesAvailable -= i);
                  },
                },
                {
                  key: 'skipBits',
                  value: function (e) {
                    var t;
                    (e = Math.min(e, 8 * this.bytesAvailable + this.bitsAvailable)),
                      this.bitsAvailable > e
                        ? ((this.word <<= e), (this.bitsAvailable -= e))
                        : ((e -= this.bitsAvailable), (e -= (t = e >> 3) << 3), (this.bytesAvailable -= t), this.loadWord(), (this.word <<= e), (this.bitsAvailable -= e));
                  },
                },
                {
                  key: 'readBits',
                  value: function (e) {
                    var t = Math.min(this.bitsAvailable, e),
                      n = this.word >>> (32 - t);
                    if ((e > 32 && ae.error('Cannot read more than 32 bits at a time'), (this.bitsAvailable -= t), this.bitsAvailable > 0)) this.word <<= t;
                    else {
                      if (!(this.bytesAvailable > 0)) throw new Error('no bits available');
                      this.loadWord();
                    }
                    return (t = e - t) > 0 && this.bitsAvailable ? (n << t) | this.readBits(t) : n;
                  },
                },
                {
                  key: 'skipLZ',
                  value: function () {
                    var e;
                    for (e = 0; e < this.bitsAvailable; ++e) if (0 != (this.word & (2147483648 >>> e))) return (this.word <<= e), (this.bitsAvailable -= e), e;
                    return this.loadWord(), e + this.skipLZ();
                  },
                },
                {
                  key: 'skipUEG',
                  value: function () {
                    this.skipBits(1 + this.skipLZ());
                  },
                },
                {
                  key: 'skipEG',
                  value: function () {
                    this.skipBits(1 + this.skipLZ());
                  },
                },
                {
                  key: 'readUEG',
                  value: function () {
                    var e = this.skipLZ();
                    return this.readBits(e + 1) - 1;
                  },
                },
                {
                  key: 'readEG',
                  value: function () {
                    var e = this.readUEG();
                    return 1 & e ? (1 + e) >>> 1 : -1 * (e >>> 1);
                  },
                },
                {
                  key: 'readBoolean',
                  value: function () {
                    return 1 === this.readBits(1);
                  },
                },
                {
                  key: 'readUByte',
                  value: function () {
                    return this.readBits(8);
                  },
                },
                {
                  key: 'readUShort',
                  value: function () {
                    return this.readBits(16);
                  },
                },
                {
                  key: 'readUInt',
                  value: function () {
                    return this.readBits(32);
                  },
                },
                {
                  key: 'skipScalingList',
                  value: function (e) {
                    for (var t = 8, n = 8, r = 0; r < e; r++) 0 !== n && (n = (t + this.readEG() + 256) % 256), (t = 0 === n ? t : n);
                  },
                },
                {
                  key: 'readSPS',
                  value: function () {
                    var e,
                      t,
                      n,
                      r = 0,
                      i = 0,
                      a = 0,
                      o = 0,
                      s = this.readUByte.bind(this),
                      l = this.readBits.bind(this),
                      u = this.readUEG.bind(this),
                      c = this.readBoolean.bind(this),
                      d = this.skipBits.bind(this),
                      f = this.skipEG.bind(this),
                      h = this.skipUEG.bind(this),
                      p = this.skipScalingList.bind(this);
                    s();
                    var v = s();
                    if ((l(5), d(3), s(), h(), 100 === v || 110 === v || 122 === v || 244 === v || 44 === v || 83 === v || 86 === v || 118 === v || 128 === v)) {
                      var m = u();
                      if ((3 === m && d(1), h(), h(), d(1), c())) for (t = 3 !== m ? 8 : 12, n = 0; n < t; n++) c() && p(n < 6 ? 16 : 64);
                    }
                    h();
                    var g = u();
                    if (0 === g) u();
                    else if (1 === g) for (d(1), f(), f(), e = u(), n = 0; n < e; n++) f();
                    h(), d(1);
                    var y = u(),
                      _ = u(),
                      b = l(1);
                    0 === b && d(1), d(1), c() && ((r = u()), (i = u()), (a = u()), (o = u()));
                    var E = [1, 1];
                    if (c() && c())
                      switch (s()) {
                        case 1:
                          E = [1, 1];
                          break;
                        case 2:
                          E = [12, 11];
                          break;
                        case 3:
                          E = [10, 11];
                          break;
                        case 4:
                          E = [16, 11];
                          break;
                        case 5:
                          E = [40, 33];
                          break;
                        case 6:
                          E = [24, 11];
                          break;
                        case 7:
                          E = [20, 11];
                          break;
                        case 8:
                          E = [32, 11];
                          break;
                        case 9:
                          E = [80, 33];
                          break;
                        case 10:
                          E = [18, 11];
                          break;
                        case 11:
                          E = [15, 11];
                          break;
                        case 12:
                          E = [64, 33];
                          break;
                        case 13:
                          E = [160, 99];
                          break;
                        case 14:
                          E = [4, 3];
                          break;
                        case 15:
                          E = [3, 2];
                          break;
                        case 16:
                          E = [2, 1];
                          break;
                        case 255:
                          E = [(s() << 8) | s(), (s() << 8) | s()];
                      }
                    return { width: Math.ceil(16 * (y + 1) - 2 * r - 2 * i), height: (2 - b) * (_ + 1) * 16 - (b ? 2 : 4) * (a + o), pixelRatio: E };
                  },
                },
                {
                  key: 'readSliceType',
                  value: function () {
                    return this.readUByte(), this.readUEG(), this.readUEG();
                  },
                },
              ]),
              e
            );
          })(),
          ni = (function () {
            function e(t, n, r) {
              k(this, e), (this.keyData = void 0), (this.decrypter = void 0), (this.keyData = r), (this.decrypter = new vr(n, { removePKCS7Padding: !1 }));
            }
            return (
              w(e, [
                {
                  key: 'decryptBuffer',
                  value: function (e) {
                    return this.decrypter.decrypt(e, this.keyData.key.buffer, this.keyData.iv.buffer);
                  },
                },
                {
                  key: 'decryptAacSample',
                  value: function (e, t, n) {
                    var r = this,
                      i = e[t].unit;
                    if (!(i.length <= 16)) {
                      var a = i.subarray(16, i.length - (i.length % 16)),
                        o = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                      this.decryptBuffer(o).then(function (a) {
                        var o = new Uint8Array(a);
                        i.set(o, 16), r.decrypter.isSync() || r.decryptAacSamples(e, t + 1, n);
                      });
                    }
                  },
                },
                {
                  key: 'decryptAacSamples',
                  value: function (e, t, n) {
                    for (; ; t++) {
                      if (t >= e.length) return void n();
                      if (!(e[t].unit.length < 32) && (this.decryptAacSample(e, t, n), !this.decrypter.isSync())) return;
                    }
                  },
                },
                {
                  key: 'getAvcEncryptedData',
                  value: function (e) {
                    for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, n = new Int8Array(t), r = 0, i = 32; i < e.length - 16; i += 160, r += 16) n.set(e.subarray(i, i + 16), r);
                    return n;
                  },
                },
                {
                  key: 'getAvcDecryptedUnit',
                  value: function (e, t) {
                    for (var n = new Uint8Array(t), r = 0, i = 32; i < e.length - 16; i += 160, r += 16) e.set(n.subarray(r, r + 16), i);
                    return e;
                  },
                },
                {
                  key: 'decryptAvcSample',
                  value: function (e, t, n, r, i) {
                    var a = this,
                      o = ht(i.data),
                      s = this.getAvcEncryptedData(o);
                    this.decryptBuffer(s.buffer).then(function (s) {
                      (i.data = a.getAvcDecryptedUnit(o, s)), a.decrypter.isSync() || a.decryptAvcSamples(e, t, n + 1, r);
                    });
                  },
                },
                {
                  key: 'decryptAvcSamples',
                  value: function (e, t, n, r) {
                    if (e instanceof Uint8Array) throw new Error('Cannot decrypt samples of type Uint8Array');
                    for (; ; t++, n = 0) {
                      if (t >= e.length) return void r();
                      for (var i = e[t].units; !(n >= i.length); n++) {
                        var a = i[n];
                        if (!(a.data.length <= 48 || (1 !== a.type && 5 !== a.type) || (this.decryptAvcSample(e, t, n, r, a), this.decrypter.isSync()))) return;
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          ri = 188,
          ii = (function () {
            function e(t, n, r) {
              k(this, e),
                (this.observer = void 0),
                (this.config = void 0),
                (this.typeSupported = void 0),
                (this.sampleAes = null),
                (this.pmtParsed = !1),
                (this.audioCodec = void 0),
                (this.videoCodec = void 0),
                (this._duration = 0),
                (this._pmtId = -1),
                (this._avcTrack = void 0),
                (this._audioTrack = void 0),
                (this._id3Track = void 0),
                (this._txtTrack = void 0),
                (this.aacOverFlow = null),
                (this.avcSample = null),
                (this.remainderData = null),
                (this.observer = t),
                (this.config = n),
                (this.typeSupported = r);
            }
            return (
              w(
                e,
                [
                  {
                    key: 'resetInitSegment',
                    value: function (t, n, r, i) {
                      (this.pmtParsed = !1),
                        (this._pmtId = -1),
                        (this._avcTrack = e.createTrack('video')),
                        (this._audioTrack = e.createTrack('audio', i)),
                        (this._id3Track = e.createTrack('id3')),
                        (this._txtTrack = e.createTrack('text')),
                        (this._audioTrack.segmentCodec = 'aac'),
                        (this.aacOverFlow = null),
                        (this.avcSample = null),
                        (this.remainderData = null),
                        (this.audioCodec = n),
                        (this.videoCodec = r),
                        (this._duration = i);
                    },
                  },
                  { key: 'resetTimeStamp', value: function () {} },
                  {
                    key: 'resetContiguity',
                    value: function () {
                      var e = this._audioTrack,
                        t = this._avcTrack,
                        n = this._id3Track;
                      e && (e.pesData = null), t && (t.pesData = null), n && (n.pesData = null), (this.aacOverFlow = null), (this.avcSample = null), (this.remainderData = null);
                    },
                  },
                  {
                    key: 'demux',
                    value: function (t, n) {
                      var r,
                        i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                      i || (this.sampleAes = null);
                      var o = this._avcTrack,
                        s = this._audioTrack,
                        l = this._id3Track,
                        u = this._txtTrack,
                        c = o.pid,
                        d = o.pesData,
                        f = s.pid,
                        h = l.pid,
                        p = s.pesData,
                        v = l.pesData,
                        m = null,
                        g = this.pmtParsed,
                        y = this._pmtId,
                        _ = t.length;
                      if ((this.remainderData && ((_ = (t = ut(this.remainderData, t)).length), (this.remainderData = null)), _ < ri && !a))
                        return (this.remainderData = t), { audioTrack: s, videoTrack: o, id3Track: l, textTrack: u };
                      var b = Math.max(0, e.syncOffset(t));
                      (_ -= (_ - b) % ri) < t.byteLength && !a && (this.remainderData = new Uint8Array(t.buffer, _, t.buffer.byteLength - _));
                      for (var E = 0, S = b; S < _; S += ri)
                        if (71 === t[S]) {
                          var k = !!(64 & t[S + 1]),
                            T = oi(t, S),
                            w = (48 & t[S + 3]) >> 4,
                            A = void 0;
                          if (w > 1) {
                            if ((A = S + 5 + t[S + 4]) === S + ri) continue;
                          } else A = S + 4;
                          switch (T) {
                            case c:
                              k && (d && (r = ui(d)) && this.parseAVCPES(o, u, r, !1), (d = { data: [], size: 0 })), d && (d.data.push(t.subarray(A, S + ri)), (d.size += S + ri - A));
                              break;
                            case f:
                              if (k) {
                                if (p && (r = ui(p)))
                                  switch (s.segmentCodec) {
                                    case 'aac':
                                      this.parseAACPES(s, r);
                                      break;
                                    case 'mp3':
                                      this.parseMPEGPES(s, r);
                                  }
                                p = { data: [], size: 0 };
                              }
                              p && (p.data.push(t.subarray(A, S + ri)), (p.size += S + ri - A));
                              break;
                            case h:
                              k && (v && (r = ui(v)) && this.parseID3PES(l, r), (v = { data: [], size: 0 })), v && (v.data.push(t.subarray(A, S + ri)), (v.size += S + ri - A));
                              break;
                            case 0:
                              k && (A += t[A] + 1), (y = this._pmtId = si(t, A));
                              break;
                            case y:
                              k && (A += t[A] + 1);
                              var L = li(t, A, this.typeSupported, i);
                              (c = L.avc) > 0 && (o.pid = c),
                                (f = L.audio) > 0 && ((s.pid = f), (s.segmentCodec = L.segmentCodec)),
                                (h = L.id3) > 0 && (l.pid = h),
                                null === m ||
                                  g ||
                                  (ae.warn('MPEG-TS PMT found at '.concat(S, " after unknown PID '").concat(m, "'. Backtracking to sync byte @").concat(b, ' to parse all TS packets.')),
                                  (m = null),
                                  (S = b - 188)),
                                (g = this.pmtParsed = !0);
                              break;
                            case 17:
                            case 8191:
                              break;
                            default:
                              m = T;
                          }
                        } else E++;
                      if (E > 0) {
                        var R = new Error('Found '.concat(E, ' TS packet/s that do not start with 0x47'));
                        this.observer.emit(Q.ERROR, Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_PARSING_ERROR, fatal: !1, error: R, reason: R.message });
                      }
                      (o.pesData = d), (s.pesData = p), (l.pesData = v);
                      var C = { audioTrack: s, videoTrack: o, id3Track: l, textTrack: u };
                      return a && this.extractRemainingSamples(C), C;
                    },
                  },
                  {
                    key: 'flush',
                    value: function () {
                      var e,
                        t = this.remainderData;
                      return (
                        (this.remainderData = null),
                        (e = t ? this.demux(t, -1, !1, !0) : { videoTrack: this._avcTrack, audioTrack: this._audioTrack, id3Track: this._id3Track, textTrack: this._txtTrack }),
                        this.extractRemainingSamples(e),
                        this.sampleAes ? this.decrypt(e, this.sampleAes) : e
                      );
                    },
                  },
                  {
                    key: 'extractRemainingSamples',
                    value: function (e) {
                      var t,
                        n = e.audioTrack,
                        r = e.videoTrack,
                        i = e.id3Track,
                        a = e.textTrack,
                        o = r.pesData,
                        s = n.pesData,
                        l = i.pesData;
                      if ((o && (t = ui(o)) ? (this.parseAVCPES(r, a, t, !0), (r.pesData = null)) : (r.pesData = o), s && (t = ui(s)))) {
                        switch (n.segmentCodec) {
                          case 'aac':
                            this.parseAACPES(n, t);
                            break;
                          case 'mp3':
                            this.parseMPEGPES(n, t);
                        }
                        n.pesData = null;
                      } else null != s && s.size && ae.log('last AAC PES packet truncated,might overlap between fragments'), (n.pesData = s);
                      l && (t = ui(l)) ? (this.parseID3PES(i, t), (i.pesData = null)) : (i.pesData = l);
                    },
                  },
                  {
                    key: 'demuxSampleAes',
                    value: function (e, t, n) {
                      var r = this.demux(e, n, !0, !this.config.progressive),
                        i = (this.sampleAes = new ni(this.observer, this.config, t));
                      return this.decrypt(r, i);
                    },
                  },
                  {
                    key: 'decrypt',
                    value: function (e, t) {
                      return new Promise(function (n) {
                        var r = e.audioTrack,
                          i = e.videoTrack;
                        r.samples && 'aac' === r.segmentCodec
                          ? t.decryptAacSamples(r.samples, 0, function () {
                              i.samples
                                ? t.decryptAvcSamples(i.samples, 0, 0, function () {
                                    n(e);
                                  })
                                : n(e);
                            })
                          : i.samples &&
                            t.decryptAvcSamples(i.samples, 0, 0, function () {
                              n(e);
                            });
                      });
                    },
                  },
                  {
                    key: 'destroy',
                    value: function () {
                      this._duration = 0;
                    },
                  },
                  {
                    key: 'parseAVCPES',
                    value: function (e, t, n, r) {
                      var i,
                        a = this,
                        o = this.parseAVCNALu(e, n.data),
                        s = this.avcSample,
                        l = !1;
                      (n.data = null),
                        s && o.length && !e.audFound && (ci(s, e), (s = this.avcSample = ai(!1, n.pts, n.dts, ''))),
                        o.forEach(function (r) {
                          switch (r.type) {
                            case 1:
                              (i = !0), s || (s = a.avcSample = ai(!0, n.pts, n.dts, '')), (s.frame = !0);
                              var o = r.data;
                              if (l && o.length > 4) {
                                var u = new ti(o).readSliceType();
                                (2 !== u && 4 !== u && 7 !== u && 9 !== u) || (s.key = !0);
                              }
                              break;
                            case 5:
                              (i = !0), s || (s = a.avcSample = ai(!0, n.pts, n.dts, '')), (s.key = !0), (s.frame = !0);
                              break;
                            case 6:
                              (i = !0), ft(r.data, 1, n.pts, t.samples);
                              break;
                            case 7:
                              if (((i = !0), (l = !0), !e.sps)) {
                                var c = r.data,
                                  d = new ti(c).readSPS();
                                (e.width = d.width), (e.height = d.height), (e.pixelRatio = d.pixelRatio), (e.sps = [c]), (e.duration = a._duration);
                                for (var f = c.subarray(1, 4), h = 'avc1.', p = 0; p < 3; p++) {
                                  var v = f[p].toString(16);
                                  v.length < 2 && (v = '0' + v), (h += v);
                                }
                                e.codec = h;
                              }
                              break;
                            case 8:
                              (i = !0), e.pps || (e.pps = [r.data]);
                              break;
                            case 9:
                              (i = !1), (e.audFound = !0), s && ci(s, e), (s = a.avcSample = ai(!1, n.pts, n.dts, ''));
                              break;
                            case 12:
                              i = !0;
                              break;
                            default:
                              (i = !1), s && (s.debug += 'unknown NAL ' + r.type + ' ');
                          }
                          s && i && s.units.push(r);
                        }),
                        r && s && (ci(s, e), (this.avcSample = null));
                    },
                  },
                  {
                    key: 'getLastNalUnit',
                    value: function (e) {
                      var t,
                        n,
                        r = this.avcSample;
                      if (((r && 0 !== r.units.length) || (r = e[e.length - 1]), null != (t = r) && t.units)) {
                        var i = r.units;
                        n = i[i.length - 1];
                      }
                      return n;
                    },
                  },
                  {
                    key: 'parseAVCNALu',
                    value: function (e, t) {
                      var n,
                        r,
                        i = t.byteLength,
                        a = e.naluState || 0,
                        o = a,
                        s = [],
                        l = 0,
                        u = -1,
                        c = 0;
                      for (-1 === a && ((u = 0), (c = 31 & t[0]), (a = 0), (l = 1)); l < i; )
                        if (((n = t[l++]), a))
                          if (1 !== a)
                            if (n)
                              if (1 === n) {
                                if (u >= 0) {
                                  var d = { data: t.subarray(u, l - a - 1), type: c };
                                  s.push(d);
                                } else {
                                  var f = this.getLastNalUnit(e.samples);
                                  if (f && (o && l <= 4 - o && f.state && (f.data = f.data.subarray(0, f.data.byteLength - o)), (r = l - a - 1) > 0)) {
                                    var h = new Uint8Array(f.data.byteLength + r);
                                    h.set(f.data, 0), h.set(t.subarray(0, r), f.data.byteLength), (f.data = h), (f.state = 0);
                                  }
                                }
                                l < i ? ((u = l), (c = 31 & t[l]), (a = 0)) : (a = -1);
                              } else a = 0;
                            else a = 3;
                          else a = n ? 0 : 2;
                        else a = n ? 0 : 1;
                      if (u >= 0 && a >= 0) {
                        var p = { data: t.subarray(u, i), type: c, state: a };
                        s.push(p);
                      }
                      if (0 === s.length) {
                        var v = this.getLastNalUnit(e.samples);
                        if (v) {
                          var m = new Uint8Array(v.data.byteLength + t.byteLength);
                          m.set(v.data, 0), m.set(t, v.data.byteLength), (v.data = m);
                        }
                      }
                      return (e.naluState = a), s;
                    },
                  },
                  {
                    key: 'parseAACPES',
                    value: function (e, t) {
                      var n,
                        r,
                        i,
                        a = 0,
                        o = this.aacOverFlow,
                        s = t.data;
                      if (o) {
                        this.aacOverFlow = null;
                        var l = o.missing,
                          u = o.sample.unit.byteLength;
                        if (-1 === l) {
                          var c = new Uint8Array(u + s.byteLength);
                          c.set(o.sample.unit, 0), c.set(s, u), (s = c);
                        } else {
                          var d = u - l;
                          o.sample.unit.set(s.subarray(0, l), d), e.samples.push(o.sample), (a = o.missing);
                        }
                      }
                      for (n = a, r = s.length; n < r - 1 && !Nr(s, n); n++);
                      if (n !== a) {
                        var f,
                          h = n < r - 1;
                        f = h ? 'AAC PES did not start with ADTS header,offset:'.concat(n) : 'No ADTS header found in AAC PES';
                        var p = new Error(f);
                        if (
                          (ae.warn('parsing error: '.concat(f)),
                          this.observer.emit(Q.ERROR, Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_PARSING_ERROR, fatal: !1, levelRetry: h, error: p, reason: f }),
                          !h)
                        )
                          return;
                      }
                      if ((Ur(e, this.observer, s, n, this.audioCodec), void 0 !== t.pts)) i = t.pts;
                      else {
                        if (!o) return void ae.warn('[tsdemuxer]: AAC PES unknown PTS');
                        var v = zr(e.samplerate);
                        i = o.sample.pts + v;
                      }
                      for (var m, g = 0; n < r; ) {
                        if (((n += (m = Hr(e, s, n, i, g)).length), m.missing)) {
                          this.aacOverFlow = m;
                          break;
                        }
                        for (g++; n < r - 1 && !Nr(s, n); n++);
                      }
                    },
                  },
                  {
                    key: 'parseMPEGPES',
                    value: function (e, t) {
                      var n = t.data,
                        r = n.length,
                        i = 0,
                        a = 0,
                        o = t.pts;
                      if (void 0 !== o)
                        for (; a < r; )
                          if (Jr(n, a)) {
                            var s = $r(e, n, a, o, i);
                            if (!s) break;
                            (a += s.length), i++;
                          } else a++;
                      else ae.warn('[tsdemuxer]: MPEG PES unknown PTS');
                    },
                  },
                  {
                    key: 'parseID3PES',
                    value: function (e, t) {
                      if (void 0 !== t.pts) {
                        var n = X({}, t, { type: this._avcTrack ? nn : en, duration: Number.POSITIVE_INFINITY });
                        e.samples.push(n);
                      } else ae.warn('[tsdemuxer]: ID3 PES unknown PTS');
                    },
                  },
                ],
                [
                  {
                    key: 'probe',
                    value: function (t) {
                      var n = e.syncOffset(t);
                      return n > 0 && ae.warn('MPEG2-TS detected but first sync word found @ offset '.concat(n)), -1 !== n;
                    },
                  },
                  {
                    key: 'syncOffset',
                    value: function (e) {
                      for (var t = e.length, n = Math.min(940, e.length - ri) + 1, r = 0; r < n; ) {
                        for (var i = !1, a = -1, o = 0, s = r; s < t; s += ri) {
                          if (71 !== e[s]) {
                            if (o) return -1;
                            break;
                          }
                          if ((o++, -1 === a && 0 !== (a = s) && (n = Math.min(a + 18612, e.length - ri) + 1), i || (i = 0 === oi(e, s)), i && o > 1 && ((0 === a && o > 2) || s + ri > n))) return a;
                        }
                        r++;
                      }
                      return -1;
                    },
                  },
                  {
                    key: 'createTrack',
                    value: function (e, t) {
                      return {
                        container: 'video' === e || 'audio' === e ? 'video/mp2t' : void 0,
                        type: e,
                        id: Ze[e],
                        pid: -1,
                        inputTimeScale: 9e4,
                        sequenceNumber: 0,
                        samples: [],
                        dropped: 0,
                        duration: 'audio' === e ? t : void 0,
                      };
                    },
                  },
                ],
              ),
              e
            );
          })();
        function ai(e, t, n, r) {
          return { key: e, frame: !1, pts: t, dts: n, units: [], debug: r, length: 0 };
        }
        function oi(e, t) {
          return ((31 & e[t + 1]) << 8) + e[t + 2];
        }
        function si(e, t) {
          return ((31 & e[t + 10]) << 8) | e[t + 11];
        }
        function li(e, t, n, r) {
          var i = { audio: -1, avc: -1, id3: -1, segmentCodec: 'aac' },
            a = t + 3 + (((15 & e[t + 1]) << 8) | e[t + 2]) - 4;
          for (t += 12 + (((15 & e[t + 10]) << 8) | e[t + 11]); t < a; ) {
            var o = oi(e, t);
            switch (e[t]) {
              case 207:
                if (!r) {
                  ae.log('ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream');
                  break;
                }
              case 15:
                -1 === i.audio && (i.audio = o);
                break;
              case 21:
                -1 === i.id3 && (i.id3 = o);
                break;
              case 219:
                if (!r) {
                  ae.log('H.264 with AES-128-CBC slice encryption found in unencrypted stream');
                  break;
                }
              case 27:
                -1 === i.avc && (i.avc = o);
                break;
              case 3:
              case 4:
                !0 !== n.mpeg && !0 !== n.mp3 ? ae.log('MPEG audio found, not supported in this browser') : -1 === i.audio && ((i.audio = o), (i.segmentCodec = 'mp3'));
                break;
              case 36:
                ae.warn('Unsupported HEVC stream type found');
            }
            t += 5 + (((15 & e[t + 3]) << 8) | e[t + 4]);
          }
          return i;
        }
        function ui(e) {
          var t,
            n,
            r,
            i,
            a,
            o = 0,
            s = e.data;
          if (!e || 0 === e.size) return null;
          for (; s[0].length < 19 && s.length > 1; ) {
            var l = new Uint8Array(s[0].length + s[1].length);
            l.set(s[0]), l.set(s[1], s[0].length), (s[0] = l), s.splice(1, 1);
          }
          if (1 === ((t = s[0])[0] << 16) + (t[1] << 8) + t[2]) {
            if ((n = (t[4] << 8) + t[5]) && n > e.size - 6) return null;
            var u = t[7];
            192 & u &&
              ((i = 536870912 * (14 & t[9]) + 4194304 * (255 & t[10]) + 16384 * (254 & t[11]) + 128 * (255 & t[12]) + (254 & t[13]) / 2),
              64 & u
                ? i - (a = 536870912 * (14 & t[14]) + 4194304 * (255 & t[15]) + 16384 * (254 & t[16]) + 128 * (255 & t[17]) + (254 & t[18]) / 2) > 54e5 &&
                  (ae.warn(''.concat(Math.round((i - a) / 9e4), 's delta between PTS and DTS, align them')), (i = a))
                : (a = i));
            var c = (r = t[8]) + 9;
            if (e.size <= c) return null;
            e.size -= c;
            for (var d = new Uint8Array(e.size), f = 0, h = s.length; f < h; f++) {
              var p = (t = s[f]).byteLength;
              if (c) {
                if (c > p) {
                  c -= p;
                  continue;
                }
                (t = t.subarray(c)), (p -= c), (c = 0);
              }
              d.set(t, o), (o += p);
            }
            return n && (n -= r + 3), { data: d, pts: i, dts: a, len: n };
          }
          return null;
        }
        function ci(e, t) {
          if (e.units.length && e.frame) {
            if (void 0 === e.pts) {
              var n = t.samples,
                r = n.length;
              if (!r) return void t.dropped++;
              var i = n[r - 1];
              (e.pts = i.pts), (e.dts = i.dts);
            }
            t.samples.push(e);
          }
          e.debug.length && ae.log(e.pts + '/' + e.dts + ':' + e.debug);
        }
        var di = (function (e) {
            H(n, e);
            var t = V(n);
            function n() {
              return k(this, n), t.apply(this, arguments);
            }
            return (
              w(
                n,
                [
                  {
                    key: 'resetInitSegment',
                    value: function (e, t, r, i) {
                      U(z(n.prototype), 'resetInitSegment', this).call(this, e, t, r, i),
                        (this._audioTrack = {
                          container: 'audio/mpeg',
                          type: 'audio',
                          id: 2,
                          pid: -1,
                          sequenceNumber: 0,
                          segmentCodec: 'mp3',
                          samples: [],
                          manifestCodec: t,
                          duration: i,
                          inputTimeScale: 9e4,
                          dropped: 0,
                        });
                    },
                  },
                  {
                    key: 'canParse',
                    value: function (e, t) {
                      return (function (e, t) {
                        return Zr(e, t) && 4 <= e.length - t;
                      })(e, t);
                    },
                  },
                  {
                    key: 'appendFrame',
                    value: function (e, t, n) {
                      if (null !== this.basePTS) return $r(e, t, n, this.basePTS, this.frameIndex);
                    },
                  },
                ],
                [
                  {
                    key: 'probe',
                    value: function (e) {
                      if (!e) return !1;
                      for (var t = (Fe(e, 0) || []).length, n = e.length; t < n; t++) if (ei(e, t)) return ae.log('MPEG Audio sync word found !'), !0;
                      return !1;
                    },
                  },
                ],
              ),
              n
            );
          })(Ir),
          fi = (function () {
            function e() {
              k(this, e);
            }
            return (
              w(e, null, [
                {
                  key: 'getSilentFrame',
                  value: function (e, t) {
                    if ('mp4a.40.2' === e) {
                      if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                      if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                      if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                      if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                      if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                      if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                    } else {
                      if (1 === t)
                        return new Uint8Array([
                          1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                          90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                        ]);
                      if (2 === t)
                        return new Uint8Array([
                          1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                          90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                        ]);
                      if (3 === t)
                        return new Uint8Array([
                          1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
                          90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94,
                        ]);
                    }
                  },
                },
              ]),
              e
            );
          })(),
          hi = Math.pow(2, 32) - 1,
          pi = (function () {
            function e() {
              k(this, e);
            }
            return (
              w(e, null, [
                {
                  key: 'init',
                  value: function () {
                    var t;
                    for (t in ((e.types = {
                      avc1: [],
                      avcC: [],
                      btrt: [],
                      dinf: [],
                      dref: [],
                      esds: [],
                      ftyp: [],
                      hdlr: [],
                      mdat: [],
                      mdhd: [],
                      mdia: [],
                      mfhd: [],
                      minf: [],
                      moof: [],
                      moov: [],
                      mp4a: [],
                      '.mp3': [],
                      mvex: [],
                      mvhd: [],
                      pasp: [],
                      sdtp: [],
                      stbl: [],
                      stco: [],
                      stsc: [],
                      stsd: [],
                      stsz: [],
                      stts: [],
                      tfdt: [],
                      tfhd: [],
                      traf: [],
                      trak: [],
                      trun: [],
                      trex: [],
                      tkhd: [],
                      vmhd: [],
                      smhd: [],
                    }),
                    e.types))
                      e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                    var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                      r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                    e.HDLR_TYPES = { video: n, audio: r };
                    var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                      a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                    (e.STTS = e.STSC = e.STCO = a),
                      (e.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                      (e.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])),
                      (e.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
                      (e.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]));
                    var o = new Uint8Array([105, 115, 111, 109]),
                      s = new Uint8Array([97, 118, 99, 49]),
                      l = new Uint8Array([0, 0, 0, 1]);
                    (e.FTYP = e.box(e.types.ftyp, o, l, o, s)), (e.DINF = e.box(e.types.dinf, e.box(e.types.dref, i)));
                  },
                },
                {
                  key: 'box',
                  value: function (e) {
                    for (var t = 8, n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
                    for (var a = r.length, o = a; a--; ) t += r[a].byteLength;
                    var s = new Uint8Array(t);
                    for (s[0] = (t >> 24) & 255, s[1] = (t >> 16) & 255, s[2] = (t >> 8) & 255, s[3] = 255 & t, s.set(e, 4), a = 0, t = 8; a < o; a++) s.set(r[a], t), (t += r[a].byteLength);
                    return s;
                  },
                },
                {
                  key: 'hdlr',
                  value: function (t) {
                    return e.box(e.types.hdlr, e.HDLR_TYPES[t]);
                  },
                },
                {
                  key: 'mdat',
                  value: function (t) {
                    return e.box(e.types.mdat, t);
                  },
                },
                {
                  key: 'mdhd',
                  value: function (t, n) {
                    n *= t;
                    var r = Math.floor(n / (hi + 1)),
                      i = Math.floor(n % (hi + 1));
                    return e.box(
                      e.types.mdhd,
                      new Uint8Array([
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        3,
                        (t >> 24) & 255,
                        (t >> 16) & 255,
                        (t >> 8) & 255,
                        255 & t,
                        r >> 24,
                        (r >> 16) & 255,
                        (r >> 8) & 255,
                        255 & r,
                        i >> 24,
                        (i >> 16) & 255,
                        (i >> 8) & 255,
                        255 & i,
                        85,
                        196,
                        0,
                        0,
                      ]),
                    );
                  },
                },
                {
                  key: 'mdia',
                  value: function (t) {
                    return e.box(e.types.mdia, e.mdhd(t.timescale, t.duration), e.hdlr(t.type), e.minf(t));
                  },
                },
                {
                  key: 'mfhd',
                  value: function (t) {
                    return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, (t >> 16) & 255, (t >> 8) & 255, 255 & t]));
                  },
                },
                {
                  key: 'minf',
                  value: function (t) {
                    return 'audio' === t.type ? e.box(e.types.minf, e.box(e.types.smhd, e.SMHD), e.DINF, e.stbl(t)) : e.box(e.types.minf, e.box(e.types.vmhd, e.VMHD), e.DINF, e.stbl(t));
                  },
                },
                {
                  key: 'moof',
                  value: function (t, n, r) {
                    return e.box(e.types.moof, e.mfhd(t), e.traf(r, n));
                  },
                },
                {
                  key: 'moov',
                  value: function (t) {
                    for (var n = t.length, r = []; n--; ) r[n] = e.trak(t[n]);
                    return e.box.apply(null, [e.types.moov, e.mvhd(t[0].timescale, t[0].duration)].concat(r).concat(e.mvex(t)));
                  },
                },
                {
                  key: 'mvex',
                  value: function (t) {
                    for (var n = t.length, r = []; n--; ) r[n] = e.trex(t[n]);
                    return e.box.apply(null, [e.types.mvex].concat(r));
                  },
                },
                {
                  key: 'mvhd',
                  value: function (t, n) {
                    n *= t;
                    var r = Math.floor(n / (hi + 1)),
                      i = Math.floor(n % (hi + 1)),
                      a = new Uint8Array([
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        3,
                        (t >> 24) & 255,
                        (t >> 16) & 255,
                        (t >> 8) & 255,
                        255 & t,
                        r >> 24,
                        (r >> 16) & 255,
                        (r >> 8) & 255,
                        255 & r,
                        i >> 24,
                        (i >> 16) & 255,
                        (i >> 8) & 255,
                        255 & i,
                        0,
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        64,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        255,
                        255,
                        255,
                        255,
                      ]);
                    return e.box(e.types.mvhd, a);
                  },
                },
                {
                  key: 'sdtp',
                  value: function (t) {
                    var n,
                      r,
                      i = t.samples || [],
                      a = new Uint8Array(4 + i.length);
                    for (n = 0; n < i.length; n++) (r = i[n].flags), (a[n + 4] = (r.dependsOn << 4) | (r.isDependedOn << 2) | r.hasRedundancy);
                    return e.box(e.types.sdtp, a);
                  },
                },
                {
                  key: 'stbl',
                  value: function (t) {
                    return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.STTS), e.box(e.types.stsc, e.STSC), e.box(e.types.stsz, e.STSZ), e.box(e.types.stco, e.STCO));
                  },
                },
                {
                  key: 'avc1',
                  value: function (t) {
                    var n,
                      r,
                      i,
                      a = [],
                      o = [];
                    for (n = 0; n < t.sps.length; n++) (i = (r = t.sps[n]).byteLength), a.push((i >>> 8) & 255), a.push(255 & i), (a = a.concat(Array.prototype.slice.call(r)));
                    for (n = 0; n < t.pps.length; n++) (i = (r = t.pps[n]).byteLength), o.push((i >>> 8) & 255), o.push(255 & i), (o = o.concat(Array.prototype.slice.call(r)));
                    var s = e.box(e.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | t.sps.length].concat(a).concat([t.pps.length]).concat(o))),
                      l = t.width,
                      u = t.height,
                      c = t.pixelRatio[0],
                      d = t.pixelRatio[1];
                    return e.box(
                      e.types.avc1,
                      new Uint8Array([
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        (l >> 8) & 255,
                        255 & l,
                        (u >> 8) & 255,
                        255 & u,
                        0,
                        72,
                        0,
                        0,
                        0,
                        72,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        18,
                        100,
                        97,
                        105,
                        108,
                        121,
                        109,
                        111,
                        116,
                        105,
                        111,
                        110,
                        47,
                        104,
                        108,
                        115,
                        46,
                        106,
                        115,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        24,
                        17,
                        17,
                      ]),
                      s,
                      e.box(e.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])),
                      e.box(e.types.pasp, new Uint8Array([c >> 24, (c >> 16) & 255, (c >> 8) & 255, 255 & c, d >> 24, (d >> 16) & 255, (d >> 8) & 255, 255 & d])),
                    );
                  },
                },
                {
                  key: 'esds',
                  value: function (e) {
                    var t = e.config.length;
                    return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]));
                  },
                },
                {
                  key: 'mp4a',
                  value: function (t) {
                    var n = t.samplerate;
                    return e.box(
                      e.types.mp4a,
                      new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, (n >> 8) & 255, 255 & n, 0, 0]),
                      e.box(e.types.esds, e.esds(t)),
                    );
                  },
                },
                {
                  key: 'mp3',
                  value: function (t) {
                    var n = t.samplerate;
                    return e.box(e.types['.mp3'], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, (n >> 8) & 255, 255 & n, 0, 0]));
                  },
                },
                {
                  key: 'stsd',
                  value: function (t) {
                    return 'audio' === t.type
                      ? 'mp3' === t.segmentCodec && 'mp3' === t.codec
                        ? e.box(e.types.stsd, e.STSD, e.mp3(t))
                        : e.box(e.types.stsd, e.STSD, e.mp4a(t))
                      : e.box(e.types.stsd, e.STSD, e.avc1(t));
                  },
                },
                {
                  key: 'tkhd',
                  value: function (t) {
                    var n = t.id,
                      r = t.duration * t.timescale,
                      i = t.width,
                      a = t.height,
                      o = Math.floor(r / (hi + 1)),
                      s = Math.floor(r % (hi + 1));
                    return e.box(
                      e.types.tkhd,
                      new Uint8Array([
                        1,
                        0,
                        0,
                        7,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        2,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        3,
                        (n >> 24) & 255,
                        (n >> 16) & 255,
                        (n >> 8) & 255,
                        255 & n,
                        0,
                        0,
                        0,
                        0,
                        o >> 24,
                        (o >> 16) & 255,
                        (o >> 8) & 255,
                        255 & o,
                        s >> 24,
                        (s >> 16) & 255,
                        (s >> 8) & 255,
                        255 & s,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        64,
                        0,
                        0,
                        0,
                        (i >> 8) & 255,
                        255 & i,
                        0,
                        0,
                        (a >> 8) & 255,
                        255 & a,
                        0,
                        0,
                      ]),
                    );
                  },
                },
                {
                  key: 'traf',
                  value: function (t, n) {
                    var r = e.sdtp(t),
                      i = t.id,
                      a = Math.floor(n / (hi + 1)),
                      o = Math.floor(n % (hi + 1));
                    return e.box(
                      e.types.traf,
                      e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, i >> 24, (i >> 16) & 255, (i >> 8) & 255, 255 & i])),
                      e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, (a >> 16) & 255, (a >> 8) & 255, 255 & a, o >> 24, (o >> 16) & 255, (o >> 8) & 255, 255 & o])),
                      e.trun(t, r.length + 16 + 20 + 8 + 16 + 8 + 8),
                      r,
                    );
                  },
                },
                {
                  key: 'trak',
                  value: function (t) {
                    return (t.duration = t.duration || 4294967295), e.box(e.types.trak, e.tkhd(t), e.mdia(t));
                  },
                },
                {
                  key: 'trex',
                  value: function (t) {
                    var n = t.id;
                    return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, n >> 24, (n >> 16) & 255, (n >> 8) & 255, 255 & n, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]));
                  },
                },
                {
                  key: 'trun',
                  value: function (t, n) {
                    var r,
                      i,
                      a,
                      o,
                      s,
                      l,
                      u = t.samples || [],
                      c = u.length,
                      d = 12 + 16 * c,
                      f = new Uint8Array(d);
                    for (
                      n += 8 + d,
                        f.set(['video' === t.type ? 1 : 0, 0, 15, 1, (c >>> 24) & 255, (c >>> 16) & 255, (c >>> 8) & 255, 255 & c, (n >>> 24) & 255, (n >>> 16) & 255, (n >>> 8) & 255, 255 & n], 0),
                        r = 0;
                      r < c;
                      r++
                    )
                      (a = (i = u[r]).duration),
                        (o = i.size),
                        (s = i.flags),
                        (l = i.cts),
                        f.set(
                          [
                            (a >>> 24) & 255,
                            (a >>> 16) & 255,
                            (a >>> 8) & 255,
                            255 & a,
                            (o >>> 24) & 255,
                            (o >>> 16) & 255,
                            (o >>> 8) & 255,
                            255 & o,
                            (s.isLeading << 2) | s.dependsOn,
                            (s.isDependedOn << 6) | (s.hasRedundancy << 4) | (s.paddingValue << 1) | s.isNonSync,
                            61440 & s.degradPrio,
                            15 & s.degradPrio,
                            (l >>> 24) & 255,
                            (l >>> 16) & 255,
                            (l >>> 8) & 255,
                            255 & l,
                          ],
                          12 + 16 * r,
                        );
                    return e.box(e.types.trun, f);
                  },
                },
                {
                  key: 'initSegment',
                  value: function (t) {
                    e.types || e.init();
                    var n = e.moov(t),
                      r = new Uint8Array(e.FTYP.byteLength + n.byteLength);
                    return r.set(e.FTYP), r.set(n, e.FTYP.byteLength), r;
                  },
                },
              ]),
              e
            );
          })();
        (pi.types = void 0),
          (pi.HDLR_TYPES = void 0),
          (pi.STTS = void 0),
          (pi.STSC = void 0),
          (pi.STCO = void 0),
          (pi.STSZ = void 0),
          (pi.VMHD = void 0),
          (pi.SMHD = void 0),
          (pi.STSD = void 0),
          (pi.FTYP = void 0),
          (pi.DINF = void 0);
        var vi = 9e4;
        function mi(e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
            r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
            i = e * t * n;
          return r ? Math.round(i) : i;
        }
        function gi(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          return mi(e, 1e3, 11111111111111112e-21, t);
        }
        var yi = null,
          _i = null,
          bi = (function () {
            function e(t, n, r) {
              if (
                (k(this, e),
                (this.observer = void 0),
                (this.config = void 0),
                (this.typeSupported = void 0),
                (this.ISGenerated = !1),
                (this._initPTS = null),
                (this._initDTS = null),
                (this.nextAvcDts = null),
                (this.nextAudioPts = null),
                (this.videoSampleDuration = null),
                (this.isAudioContiguous = !1),
                (this.isVideoContiguous = !1),
                (this.observer = t),
                (this.config = n),
                (this.typeSupported = r),
                (this.ISGenerated = !1),
                null === yi)
              ) {
                var i = navigator.userAgent || '',
                  a = i.match(/Chrome\/(\d+)/i);
                yi = a ? parseInt(a[1]) : 0;
              }
              if (null === _i) {
                var o = navigator.userAgent.match(/Safari\/(\d+)/i);
                _i = o ? parseInt(o[1]) : 0;
              }
            }
            return (
              w(e, [
                { key: 'destroy', value: function () {} },
                {
                  key: 'resetTimeStamp',
                  value: function (e) {
                    ae.log('[mp4-remuxer]: initPTS & initDTS reset'), (this._initPTS = this._initDTS = e);
                  },
                },
                {
                  key: 'resetNextTimestamp',
                  value: function () {
                    ae.log('[mp4-remuxer]: reset next timestamp'), (this.isVideoContiguous = !1), (this.isAudioContiguous = !1);
                  },
                },
                {
                  key: 'resetInitSegment',
                  value: function () {
                    ae.log('[mp4-remuxer]: ISGenerated flag reset'), (this.ISGenerated = !1);
                  },
                },
                {
                  key: 'getVideoStartPts',
                  value: function (e) {
                    var t = !1,
                      n = e.reduce(function (e, n) {
                        var r = n.pts - e;
                        return r < -4294967296 ? ((t = !0), Ei(e, n.pts)) : r > 0 ? e : n.pts;
                      }, e[0].pts);
                    return t && ae.debug('PTS rollover detected'), n;
                  },
                },
                {
                  key: 'remux',
                  value: function (e, t, n, r, i, a, o, s) {
                    var l,
                      u,
                      c,
                      d,
                      f,
                      h,
                      p = i,
                      v = i,
                      m = e.pid > -1,
                      g = t.pid > -1,
                      y = t.samples.length,
                      _ = e.samples.length > 0,
                      b = (o && y > 0) || y > 1;
                    if (((!m || _) && (!g || b)) || this.ISGenerated || o) {
                      this.ISGenerated || (c = this.generateIS(e, t, i, a));
                      var E,
                        S = this.isVideoContiguous,
                        k = -1;
                      if (
                        b &&
                        ((k = (function (e) {
                          for (var t = 0; t < e.length; t++) if (e[t].key) return t;
                          return -1;
                        })(t.samples)),
                        !S && this.config.forceKeyFrameOnDiscontinuity)
                      )
                        if (((h = !0), k > 0)) {
                          ae.warn('[mp4-remuxer]: Dropped '.concat(k, ' out of ').concat(y, ' video samples due to a missing keyframe'));
                          var T = this.getVideoStartPts(t.samples);
                          (t.samples = t.samples.slice(k)), (t.dropped += k), (E = v += (t.samples[0].pts - T) / t.inputTimeScale);
                        } else -1 === k && (ae.warn('[mp4-remuxer]: No keyframe found out of '.concat(y, ' video samples')), (h = !1));
                      if (this.ISGenerated) {
                        if (_ && b) {
                          var w = this.getVideoStartPts(t.samples),
                            A = (Ei(e.samples[0].pts, w) - w) / t.inputTimeScale;
                          (p += Math.max(0, A)), (v += Math.max(0, -A));
                        }
                        if (_) {
                          if (
                            (e.samplerate || (ae.warn('[mp4-remuxer]: regenerate InitSegment as audio detected'), (c = this.generateIS(e, t, i, a))),
                            (u = this.remuxAudio(e, p, this.isAudioContiguous, a, g || b || s === Kt ? v : void 0)),
                            b)
                          ) {
                            var L = u ? u.endPTS - u.startPTS : 0;
                            t.inputTimeScale || (ae.warn('[mp4-remuxer]: regenerate InitSegment as video detected'), (c = this.generateIS(e, t, i, a))), (l = this.remuxVideo(t, v, S, L));
                          }
                        } else b && (l = this.remuxVideo(t, v, S, 0));
                        l && ((l.firstKeyFrame = k), (l.independent = -1 !== k), (l.firstKeyFramePTS = E));
                      }
                    }
                    return (
                      this.ISGenerated && this._initPTS && this._initDTS && (n.samples.length && (f = Si(n, i, this._initPTS, this._initDTS)), r.samples.length && (d = ki(r, i, this._initPTS))),
                      { audio: u, video: l, initSegment: c, independent: h, text: d, id3: f }
                    );
                  },
                },
                {
                  key: 'generateIS',
                  value: function (e, t, n, r) {
                    var i,
                      a,
                      o,
                      s = e.samples,
                      l = t.samples,
                      u = this.typeSupported,
                      c = {},
                      d = this._initPTS,
                      f = !d || r,
                      h = 'audio/mp4';
                    if ((f && (i = a = 1 / 0), e.config && s.length)) {
                      if (((e.timescale = e.samplerate), 'mp3' === e.segmentCodec)) u.mpeg ? ((h = 'audio/mpeg'), (e.codec = '')) : u.mp3 && (e.codec = 'mp3');
                      (c.audio = {
                        id: 'audio',
                        container: h,
                        codec: e.codec,
                        initSegment: 'mp3' === e.segmentCodec && u.mpeg ? new Uint8Array(0) : pi.initSegment([e]),
                        metadata: { channelCount: e.channelCount },
                      }),
                        f && ((o = e.inputTimeScale), d && o === d.timescale ? (f = !1) : (i = a = s[0].pts - Math.round(o * n)));
                    }
                    if (
                      t.sps &&
                      t.pps &&
                      l.length &&
                      ((t.timescale = t.inputTimeScale),
                      (c.video = { id: 'main', container: 'video/mp4', codec: t.codec, initSegment: pi.initSegment([t]), metadata: { width: t.width, height: t.height } }),
                      f)
                    )
                      if (((o = t.inputTimeScale), d && o === d.timescale)) f = !1;
                      else {
                        var p = this.getVideoStartPts(l),
                          v = Math.round(o * n);
                        (a = Math.min(a, Ei(l[0].dts, p) - v)), (i = Math.min(i, p - v));
                      }
                    if (Object.keys(c).length)
                      return (
                        (this.ISGenerated = !0),
                        f ? ((this._initPTS = { baseTime: i, timescale: o }), (this._initDTS = { baseTime: a, timescale: o })) : (i = o = void 0),
                        { tracks: c, initPTS: i, timescale: o }
                      );
                  },
                },
                {
                  key: 'remuxVideo',
                  value: function (e, t, n, r) {
                    var i,
                      a,
                      o = e.inputTimeScale,
                      s = e.samples,
                      l = [],
                      u = s.length,
                      c = this._initPTS,
                      d = this.nextAvcDts,
                      f = 8,
                      h = this.videoSampleDuration,
                      p = Number.POSITIVE_INFINITY,
                      v = Number.NEGATIVE_INFINITY,
                      m = !1;
                    (n && null !== d) || (d = t * o - (s[0].pts - Ei(s[0].dts, s[0].pts)));
                    for (var g = (c.baseTime * o) / c.timescale, y = 0; y < u; y++) {
                      var _ = s[y];
                      (_.pts = Ei(_.pts - g, d)), (_.dts = Ei(_.dts - g, d)), _.dts < s[y > 0 ? y - 1 : y].dts && (m = !0);
                    }
                    m &&
                      s.sort(function (e, t) {
                        var n = e.dts - t.dts,
                          r = e.pts - t.pts;
                        return n || r;
                      }),
                      (i = s[0].dts);
                    var b = (a = s[s.length - 1].dts) - i,
                      E = b ? Math.round(b / (u - 1)) : h || e.inputTimeScale / 30;
                    if (n) {
                      var S = i - d,
                        k = S > E,
                        T = S < -1;
                      if (
                        (k || T) &&
                        (k
                          ? ae.warn('AVC: '.concat(gi(S, !0), ' ms (').concat(S, 'dts) hole between fragments detected, filling it'))
                          : ae.warn('AVC: '.concat(gi(-S, !0), ' ms (').concat(S, 'dts) overlapping between fragments detected')),
                        !T || d >= s[0].pts)
                      ) {
                        i = d;
                        var w = s[0].pts - S;
                        (s[0].dts = i), (s[0].pts = w), ae.log('Video: First PTS/DTS adjusted: '.concat(gi(w, !0), '/').concat(gi(i, !0), ', delta: ').concat(gi(S, !0), ' ms'));
                      }
                    }
                    i = Math.max(0, i);
                    for (var A = 0, L = 0, R = 0; R < u; R++) {
                      for (var C = s[R], x = C.units, D = x.length, I = 0, M = 0; M < D; M++) I += x[M].data.length;
                      (L += I), (A += D), (C.length = I), (C.dts = Math.max(C.dts, i)), (p = Math.min(C.pts, p)), (v = Math.max(C.pts, v));
                    }
                    a = s[u - 1].dts;
                    var P,
                      O = L + 4 * A + 8;
                    try {
                      P = new Uint8Array(O);
                    } catch (e) {
                      return void this.observer.emit(Q.ERROR, Q.ERROR, {
                        type: Z.MUX_ERROR,
                        details: J.REMUX_ALLOC_ERROR,
                        fatal: !1,
                        error: e,
                        bytes: O,
                        reason: 'fail allocating video mdat '.concat(O),
                      });
                    }
                    var F = new DataView(P.buffer);
                    F.setUint32(0, O), P.set(pi.types.mdat, 4);
                    for (var N = !1, B = Number.POSITIVE_INFINITY, U = Number.POSITIVE_INFINITY, z = Number.NEGATIVE_INFINITY, H = Number.NEGATIVE_INFINITY, V = 0; V < u; V++) {
                      for (var G = s[V], j = G.units, K = 0, W = 0, q = j.length; W < q; W++) {
                        var Y = j[W],
                          $ = Y.data,
                          ee = Y.data.byteLength;
                        F.setUint32(f, ee), (f += 4), P.set($, f), (f += ee), (K += 4 + ee);
                      }
                      var te = void 0;
                      if (V < u - 1) (h = s[V + 1].dts - G.dts), (te = s[V + 1].pts - G.pts);
                      else {
                        var ne = this.config,
                          re = V > 0 ? G.dts - s[V - 1].dts : E;
                        if (((te = V > 0 ? G.pts - s[V - 1].pts : E), ne.stretchShortVideoTrack && null !== this.nextAudioPts)) {
                          var ie = Math.floor(ne.maxBufferHole * o),
                            oe = (r ? p + r * o : this.nextAudioPts) - G.pts;
                          oe > ie
                            ? ((h = oe - re) < 0 ? (h = re) : (N = !0),
                              ae.log('[mp4-remuxer]: It is approximately '.concat(oe / 90, ' ms to the next segment; using duration ').concat(h / 90, ' ms for the last video frame.')))
                            : (h = re);
                        } else h = re;
                      }
                      var se = Math.round(G.pts - G.dts);
                      (B = Math.min(B, h)), (z = Math.max(z, h)), (U = Math.min(U, te)), (H = Math.max(H, te)), l.push(new wi(G.key, h, K, se));
                    }
                    if (l.length)
                      if (yi) {
                        if (yi < 70) {
                          var le = l[0].flags;
                          (le.dependsOn = 2), (le.isNonSync = 0);
                        }
                      } else if (_i && H - U < z - B && E / z < 0.025 && 0 === l[0].cts) {
                        ae.warn('Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.');
                        for (var ue = i, ce = 0, de = l.length; ce < de; ce++) {
                          var fe = ue + l[ce].duration,
                            he = ue + l[ce].cts;
                          if (ce < de - 1) {
                            var pe = fe + l[ce + 1].cts;
                            l[ce].duration = pe - he;
                          } else l[ce].duration = ce ? l[ce - 1].duration : E;
                          (l[ce].cts = 0), (ue = fe);
                        }
                      }
                    (h = N || !h ? E : h), (this.nextAvcDts = d = a + h), (this.videoSampleDuration = h), (this.isVideoContiguous = !0);
                    var ve = {
                      data1: pi.moof(e.sequenceNumber++, i, X({}, e, { samples: l })),
                      data2: P,
                      startPTS: p / o,
                      endPTS: (v + h) / o,
                      startDTS: i / o,
                      endDTS: d / o,
                      type: 'video',
                      hasAudio: !1,
                      hasVideo: !0,
                      nb: l.length,
                      dropped: e.dropped,
                    };
                    return (e.samples = []), (e.dropped = 0), ve;
                  },
                },
                {
                  key: 'remuxAudio',
                  value: function (e, t, n, r, i) {
                    var a = e.inputTimeScale,
                      o = a / (e.samplerate ? e.samplerate : a),
                      s = 'aac' === e.segmentCodec ? 1024 : 1152,
                      l = s * o,
                      u = this._initPTS,
                      c = 'mp3' === e.segmentCodec && this.typeSupported.mpeg,
                      d = [],
                      f = void 0 !== i,
                      h = e.samples,
                      p = c ? 0 : 8,
                      v = this.nextAudioPts || -1,
                      m = t * a,
                      g = (u.baseTime * a) / u.timescale;
                    if (
                      ((this.isAudioContiguous = n = n || (h.length && v > 0 && ((r && Math.abs(m - v) < 9e3) || Math.abs(Ei(h[0].pts - g, m) - v) < 20 * l))),
                      h.forEach(function (e) {
                        e.pts = Ei(e.pts - g, m);
                      }),
                      !n || v < 0)
                    ) {
                      if (
                        ((h = h.filter(function (e) {
                          return e.pts >= 0;
                        })),
                        !h.length)
                      )
                        return;
                      v = 0 === i ? 0 : r && !f ? Math.max(0, m) : h[0].pts;
                    }
                    if ('aac' === e.segmentCodec)
                      for (var y = this.config.maxAudioFramesDrift, _ = 0, b = v; _ < h.length; _++) {
                        var E = h[_],
                          S = E.pts,
                          k = S - b,
                          T = Math.abs((1e3 * k) / a);
                        if (k <= -y * l && f)
                          0 === _ && (ae.warn('Audio frame @ '.concat((S / a).toFixed(3), 's overlaps nextAudioPts by ').concat(Math.round((1e3 * k) / a), ' ms.')), (this.nextAudioPts = v = b = S));
                        else if (k >= y * l && T < 1e4 && f) {
                          var w = Math.round(k / l);
                          (b = S - w * l) < 0 && (w--, (b += l)),
                            0 === _ && (this.nextAudioPts = v = b),
                            ae.warn(
                              '[mp4-remuxer]: Injecting '
                                .concat(w, ' audio frame @ ')
                                .concat((b / a).toFixed(3), 's due to ')
                                .concat(Math.round((1e3 * k) / a), ' ms gap.'),
                            );
                          for (var A = 0; A < w; A++) {
                            var L = Math.max(b, 0),
                              R = fi.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                            R || (ae.log('[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead.'), (R = E.unit.subarray())),
                              h.splice(_, 0, { unit: R, pts: L }),
                              (b += l),
                              _++;
                          }
                        }
                        (E.pts = b), (b += l);
                      }
                    for (var C, x = null, D = null, I = 0, M = h.length; M--; ) I += h[M].unit.byteLength;
                    for (var P = 0, O = h.length; P < O; P++) {
                      var F = h[P],
                        N = F.unit,
                        B = F.pts;
                      if (null !== D) {
                        d[P - 1].duration = Math.round((B - D) / o);
                      } else {
                        if ((n && 'aac' === e.segmentCodec && (B = v), (x = B), !(I > 0))) return;
                        I += p;
                        try {
                          C = new Uint8Array(I);
                        } catch (e) {
                          return void this.observer.emit(Q.ERROR, Q.ERROR, {
                            type: Z.MUX_ERROR,
                            details: J.REMUX_ALLOC_ERROR,
                            fatal: !1,
                            error: e,
                            bytes: I,
                            reason: 'fail allocating audio mdat '.concat(I),
                          });
                        }
                        c || (new DataView(C.buffer).setUint32(0, I), C.set(pi.types.mdat, 4));
                      }
                      C.set(N, p);
                      var U = N.byteLength;
                      (p += U), d.push(new wi(!0, s, U, 0)), (D = B);
                    }
                    var z = d.length;
                    if (z) {
                      var H = d[d.length - 1];
                      this.nextAudioPts = v = D + o * H.duration;
                      var V = c ? new Uint8Array(0) : pi.moof(e.sequenceNumber++, x / o, X({}, e, { samples: d }));
                      e.samples = [];
                      var G = x / a,
                        j = v / a,
                        K = { data1: V, data2: C, startPTS: G, endPTS: j, startDTS: G, endDTS: j, type: 'audio', hasAudio: !0, hasVideo: !1, nb: z };
                      return (this.isAudioContiguous = !0), K;
                    }
                  },
                },
                {
                  key: 'remuxEmptyAudio',
                  value: function (e, t, n, r) {
                    var i = e.inputTimeScale,
                      a = i / (e.samplerate ? e.samplerate : i),
                      o = this.nextAudioPts,
                      s = this._initDTS,
                      l = (9e4 * s.baseTime) / s.timescale,
                      u = (null !== o ? o : r.startDTS * i) + l,
                      c = r.endDTS * i + l,
                      d = 1024 * a,
                      f = Math.ceil((c - u) / d),
                      h = fi.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                    if ((ae.warn('[mp4-remuxer]: remux empty Audio'), h)) {
                      for (var p = [], v = 0; v < f; v++) {
                        var m = u + v * d;
                        p.push({ unit: h, pts: m, dts: m });
                      }
                      return (e.samples = p), this.remuxAudio(e, t, n, !1);
                    }
                    ae.trace('[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec');
                  },
                },
              ]),
              e
            );
          })();
        function Ei(e, t) {
          var n;
          if (null === t) return e;
          for (n = t < e ? -8589934592 : 8589934592; Math.abs(e - t) > 4294967296; ) e += n;
          return e;
        }
        function Si(e, t, n, r) {
          var i = e.samples.length;
          if (i) {
            for (var a = e.inputTimeScale, o = 0; o < i; o++) {
              var s = e.samples[o];
              (s.pts = Ei(s.pts - (n.baseTime * a) / n.timescale, t * a) / a), (s.dts = Ei(s.dts - (r.baseTime * a) / r.timescale, t * a) / a);
            }
            var l = e.samples;
            return (e.samples = []), { samples: l };
          }
        }
        function ki(e, t, n) {
          var r = e.samples.length;
          if (r) {
            for (var i = e.inputTimeScale, a = 0; a < r; a++) {
              var o = e.samples[a];
              o.pts = Ei(o.pts - (9e4 * n.baseTime) / n.timescale, t * i) / i;
            }
            e.samples.sort(function (e, t) {
              return e.pts - t.pts;
            });
            var s = e.samples;
            return (e.samples = []), { samples: s };
          }
        }
        var Ti,
          wi = w(function e(t, n, r, i) {
            k(this, e), (this.size = void 0), (this.duration = void 0), (this.cts = void 0), (this.flags = void 0), (this.duration = n), (this.size = r), (this.cts = i), (this.flags = new Ai(t));
          }),
          Ai = w(function e(t) {
            k(this, e),
              (this.isLeading = 0),
              (this.isDependedOn = 0),
              (this.hasRedundancy = 0),
              (this.degradPrio = 0),
              (this.dependsOn = 1),
              (this.isNonSync = 1),
              (this.dependsOn = t ? 2 : 1),
              (this.isNonSync = t ? 0 : 1);
          }),
          Li = (function () {
            function e() {
              k(this, e),
                (this.emitInitSegment = !1),
                (this.audioCodec = void 0),
                (this.videoCodec = void 0),
                (this.initData = void 0),
                (this.initPTS = null),
                (this.initTracks = void 0),
                (this.lastEndTime = null);
            }
            return (
              w(e, [
                { key: 'destroy', value: function () {} },
                {
                  key: 'resetTimeStamp',
                  value: function (e) {
                    (this.initPTS = e), (this.lastEndTime = null);
                  },
                },
                {
                  key: 'resetNextTimestamp',
                  value: function () {
                    this.lastEndTime = null;
                  },
                },
                {
                  key: 'resetInitSegment',
                  value: function (e, t, n, r) {
                    (this.audioCodec = t),
                      (this.videoCodec = n),
                      this.generateInitSegment(
                        (function (e, t) {
                          if (!e || !t) return e;
                          var n = t.keyId;
                          return (
                            n &&
                              t.isCommonEncryption &&
                              it(e, ['moov', 'trak']).forEach(function (e) {
                                var t = it(e, ['mdia', 'minf', 'stbl', 'stsd'])[0].subarray(8),
                                  r = it(t, ['enca']),
                                  i = r.length > 0;
                                i || (r = it(t, ['encv'])),
                                  r.forEach(function (e) {
                                    it(i ? e.subarray(28) : e.subarray(78), ['sinf']).forEach(function (e) {
                                      var t = st(e);
                                      if (t) {
                                        var r = t.subarray(8, 24);
                                        r.some(function (e) {
                                          return 0 !== e;
                                        }) ||
                                          (ae.log(
                                            "[eme] Patching keyId in 'enc"
                                              .concat(i ? 'a' : 'v', ">sinf>>tenc' box: ")
                                              .concat(Xe(r), ' -> ')
                                              .concat(Xe(n)),
                                          ),
                                          t.set(n, 8));
                                      }
                                    });
                                  });
                              }),
                            e
                          );
                        })(e, r),
                      ),
                      (this.emitInitSegment = !0);
                  },
                },
                {
                  key: 'generateInitSegment',
                  value: function (e) {
                    var t = this.audioCodec,
                      n = this.videoCodec;
                    if (null == e || !e.byteLength) return (this.initTracks = void 0), void (this.initData = void 0);
                    var r = (this.initData = ot(e));
                    t || (t = Ri(r.audio, fe)), n || (n = Ri(r.video, he));
                    var i = {};
                    r.audio && r.video
                      ? (i.audiovideo = { container: 'video/mp4', codec: t + ',' + n, initSegment: e, id: 'main' })
                      : r.audio
                      ? (i.audio = { container: 'audio/mp4', codec: t, initSegment: e, id: 'audio' })
                      : r.video
                      ? (i.video = { container: 'video/mp4', codec: n, initSegment: e, id: 'main' })
                      : ae.warn('[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes.'),
                      (this.initTracks = i);
                  },
                },
                {
                  key: 'remux',
                  value: function (e, t, n, r, i, a) {
                    var o,
                      s,
                      l = this.initPTS,
                      u = this.lastEndTime,
                      c = { audio: void 0, video: void 0, text: r, id3: n, initSegment: void 0 };
                    $(u) || (u = this.lastEndTime = i || 0);
                    var d = t.samples;
                    if (null == d || !d.length) return c;
                    var f = { initPTS: void 0, timescale: 1 },
                      h = this.initData;
                    if (((null != (o = h) && o.length) || (this.generateInitSegment(d), (h = this.initData)), null == (s = h) || !s.length))
                      return ae.warn('[passthrough-remuxer.ts]: Failed to generate initSegment.'), c;
                    this.emitInitSegment && ((f.tracks = this.initTracks), (this.emitInitSegment = !1));
                    var p = (function (e, t) {
                        for (var n = 0, r = 0, i = 0, a = it(e, ['moof', 'traf']), o = 0; o < a.length; o++) {
                          var s = a[o],
                            l = it(s, ['tfhd'])[0],
                            u = t[tt(l, 4)];
                          if (u) {
                            var c = u.default,
                              d = tt(l, 0) | (null == c ? void 0 : c.flags),
                              f = null == c ? void 0 : c.duration;
                            8 & d && (f = tt(l, 2 & d ? 12 : 8));
                            for (var h = u.timescale || 9e4, p = it(s, ['trun']), v = 0; v < p.length; v++)
                              !(n = lt(p[v])) && f && (n = f * tt(p[v], 4)), u.type === he ? (r += n / h) : u.type === fe && (i += n / h);
                          }
                        }
                        if (0 === r && 0 === i) {
                          for (var m = 0, g = it(e, ['sidx']), y = 0; y < g.length; y++) {
                            var _ = at(g[y]);
                            null != _ &&
                              _.references &&
                              (m += _.references.reduce(function (e, t) {
                                return e + t.info.duration || 0;
                              }, 0));
                          }
                          return m;
                        }
                        return r || i;
                      })(d, h),
                      v = (function (e, t) {
                        return it(t, ['moof', 'traf']).reduce(function (t, n) {
                          var r = it(n, ['tfdt'])[0],
                            i = r[0],
                            a = it(n, ['tfhd']).reduce(function (t, n) {
                              var a = tt(n, 4),
                                o = e[a];
                              if (o) {
                                var s = tt(r, 4);
                                if (1 === i) {
                                  if (s === $e) return ae.warn('[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time'), t;
                                  (s *= $e + 1), (s += tt(r, 8));
                                }
                                var l = s / (o.timescale || 9e4);
                                if (isFinite(l) && (null === t || l < t)) return l;
                              }
                              return t;
                            }, null);
                          return null !== a && isFinite(a) && (null === t || a < t) ? a : t;
                        }, null);
                      })(h, d),
                      m = null === v ? i : v;
                    ((function (e, t, n, r) {
                      if (null === e) return !0;
                      var i = Math.max(r, 1),
                        a = t - e.baseTime / e.timescale;
                      return Math.abs(a - n) > i;
                    })(l, m, i, p) ||
                      (f.timescale !== l.timescale && a)) &&
                      ((f.initPTS = m - i), l && 1 === l.timescale && ae.warn('Adjusting initPTS by '.concat(f.initPTS - l.baseTime)), (this.initPTS = l = { baseTime: f.initPTS, timescale: 1 }));
                    var g = e ? m - l.baseTime / l.timescale : u,
                      y = g + p;
                    !(function (e, t, n) {
                      it(t, ['moof', 'traf']).forEach(function (t) {
                        it(t, ['tfhd']).forEach(function (r) {
                          var i = tt(r, 4),
                            a = e[i];
                          if (a) {
                            var o = a.timescale || 9e4;
                            it(t, ['tfdt']).forEach(function (e) {
                              var t = e[0],
                                r = tt(e, 4);
                              if (0 === t) (r -= n * o), rt(e, 4, (r = Math.max(r, 0)));
                              else {
                                (r *= Math.pow(2, 32)), (r += tt(e, 8)), (r -= n * o), (r = Math.max(r, 0));
                                var i = Math.floor(r / ($e + 1)),
                                  a = Math.floor(r % ($e + 1));
                                rt(e, 4, i), rt(e, 8, a);
                              }
                            });
                          }
                        });
                      });
                    })(h, d, l.baseTime / l.timescale),
                      p > 0 ? (this.lastEndTime = y) : (ae.warn('Duration parsed from mp4 should be greater than zero'), this.resetNextTimestamp());
                    var _ = !!h.audio,
                      b = !!h.video,
                      E = '';
                    _ && (E += 'audio'), b && (E += 'video');
                    var S = { data1: d, startPTS: g, startDTS: g, endPTS: y, endDTS: y, type: E, hasAudio: _, hasVideo: b, nb: 1, dropped: 0 };
                    return (
                      (c.audio = 'audio' === S.type ? S : void 0),
                      (c.video = 'audio' !== S.type ? S : void 0),
                      (c.initSegment = f),
                      (c.id3 = Si(n, i, l, l)),
                      r.samples.length && (c.text = ki(r, i, l)),
                      c
                    );
                  },
                },
              ]),
              e
            );
          })();
        function Ri(e, t) {
          var n = null == e ? void 0 : e.codec;
          return n && n.length > 4 ? n : 'hvc1' === n || 'hev1' === n ? 'hvc1.1.6.L120.90' : 'av01' === n ? 'av01.0.04M.08' : 'avc1' === n || t === he ? 'avc1.42e01e' : 'mp4a.40.5';
        }
        try {
          Ti = self.performance.now.bind(self.performance);
        } catch (e) {
          ae.debug('Unable to use Performance API on this environment'), (Ti = 'undefined' != typeof self && self.Date.now);
        }
        var Ci = [
            { demux: jr, remux: Li },
            { demux: ii, remux: bi },
            { demux: Vr, remux: bi },
            { demux: di, remux: bi },
          ],
          xi = (function () {
            function e(t, n, r, i, a) {
              k(this, e),
                (this.async = !1),
                (this.observer = void 0),
                (this.typeSupported = void 0),
                (this.config = void 0),
                (this.vendor = void 0),
                (this.id = void 0),
                (this.demuxer = void 0),
                (this.remuxer = void 0),
                (this.decrypter = void 0),
                (this.probe = void 0),
                (this.decryptionPromise = null),
                (this.transmuxConfig = void 0),
                (this.currentTransmuxState = void 0),
                (this.observer = t),
                (this.typeSupported = n),
                (this.config = r),
                (this.vendor = i),
                (this.id = a);
            }
            return (
              w(e, [
                {
                  key: 'configure',
                  value: function (e) {
                    (this.transmuxConfig = e), this.decrypter && this.decrypter.reset();
                  },
                },
                {
                  key: 'push',
                  value: function (e, t, n, r) {
                    var i = this,
                      a = n.transmuxing;
                    a.executeStart = Ti();
                    var o = new Uint8Array(e),
                      s = this.currentTransmuxState,
                      l = this.transmuxConfig;
                    r && (this.currentTransmuxState = r);
                    var u = r || s,
                      c = u.contiguous,
                      d = u.discontinuity,
                      f = u.trackSwitch,
                      h = u.accurateTimeOffset,
                      p = u.timeOffset,
                      v = u.initSegmentChange,
                      m = l.audioCodec,
                      g = l.videoCodec,
                      y = l.defaultInitPts,
                      _ = l.duration,
                      b = l.initSegmentData,
                      E = (function (e, t) {
                        var n = null;
                        e.byteLength > 0 && null != t && null != t.key && null !== t.iv && null != t.method && (n = t);
                        return n;
                      })(o, t);
                    if (E && 'AES-128' === E.method) {
                      var S = this.getDecrypter();
                      if (!S.isSync())
                        return (
                          (this.decryptionPromise = S.webCryptoDecrypt(o, E.key.buffer, E.iv.buffer).then(function (e) {
                            var t = i.push(e, null, n);
                            return (i.decryptionPromise = null), t;
                          })),
                          this.decryptionPromise
                        );
                      var k = S.softwareDecrypt(o, E.key.buffer, E.iv.buffer);
                      if ((n.part > -1 && (k = S.flush()), !k)) return (a.executeEnd = Ti()), Di(n);
                      o = new Uint8Array(k);
                    }
                    var T = this.needsProbing(d, f);
                    if (T) {
                      var w = this.configureTransmuxer(o);
                      if (w)
                        return (
                          ae.warn('[transmuxer] '.concat(w.message)),
                          this.observer.emit(Q.ERROR, Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_PARSING_ERROR, fatal: !1, error: w, reason: w.message }),
                          (a.executeEnd = Ti()),
                          Di(n)
                        );
                    }
                    (d || f || v || T) && this.resetInitSegment(b, m, g, _, t), (d || v || T) && this.resetInitialTimestamp(y), c || this.resetContiguity();
                    var A = this.transmux(o, E, p, h, n),
                      L = this.currentTransmuxState;
                    return (L.contiguous = !0), (L.discontinuity = !1), (L.trackSwitch = !1), (a.executeEnd = Ti()), A;
                  },
                },
                {
                  key: 'flush',
                  value: function (e) {
                    var t = this,
                      n = e.transmuxing;
                    n.executeStart = Ti();
                    var r = this.decrypter,
                      i = this.currentTransmuxState,
                      a = this.decryptionPromise;
                    if (a)
                      return a.then(function () {
                        return t.flush(e);
                      });
                    var o = [],
                      s = i.timeOffset;
                    if (r) {
                      var l = r.flush();
                      l && o.push(this.push(l, null, e));
                    }
                    var u = this.demuxer,
                      c = this.remuxer;
                    if (!u || !c) return (n.executeEnd = Ti()), [Di(e)];
                    var d = u.flush(s);
                    return Ii(d)
                      ? d.then(function (n) {
                          return t.flushRemux(o, n, e), o;
                        })
                      : (this.flushRemux(o, d, e), o);
                  },
                },
                {
                  key: 'flushRemux',
                  value: function (e, t, n) {
                    var r = t.audioTrack,
                      i = t.videoTrack,
                      a = t.id3Track,
                      o = t.textTrack,
                      s = this.currentTransmuxState,
                      l = s.accurateTimeOffset,
                      u = s.timeOffset;
                    ae.log(
                      '[transmuxer.ts]: Flushed fragment '
                        .concat(n.sn)
                        .concat(n.part > -1 ? ' p: ' + n.part : '', ' of level ')
                        .concat(n.level),
                    );
                    var c = this.remuxer.remux(r, i, a, o, u, l, !0, this.id);
                    e.push({ remuxResult: c, chunkMeta: n }), (n.transmuxing.executeEnd = Ti());
                  },
                },
                {
                  key: 'resetInitialTimestamp',
                  value: function (e) {
                    var t = this.demuxer,
                      n = this.remuxer;
                    t && n && (t.resetTimeStamp(e), n.resetTimeStamp(e));
                  },
                },
                {
                  key: 'resetContiguity',
                  value: function () {
                    var e = this.demuxer,
                      t = this.remuxer;
                    e && t && (e.resetContiguity(), t.resetNextTimestamp());
                  },
                },
                {
                  key: 'resetInitSegment',
                  value: function (e, t, n, r, i) {
                    var a = this.demuxer,
                      o = this.remuxer;
                    a && o && (a.resetInitSegment(e, t, n, r), o.resetInitSegment(e, t, n, i));
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.demuxer && (this.demuxer.destroy(), (this.demuxer = void 0)), this.remuxer && (this.remuxer.destroy(), (this.remuxer = void 0));
                  },
                },
                {
                  key: 'transmux',
                  value: function (e, t, n, r, i) {
                    return t && 'SAMPLE-AES' === t.method ? this.transmuxSampleAes(e, t, n, r, i) : this.transmuxUnencrypted(e, n, r, i);
                  },
                },
                {
                  key: 'transmuxUnencrypted',
                  value: function (e, t, n, r) {
                    var i = this.demuxer.demux(e, t, !1, !this.config.progressive),
                      a = i.audioTrack,
                      o = i.videoTrack,
                      s = i.id3Track,
                      l = i.textTrack;
                    return { remuxResult: this.remuxer.remux(a, o, s, l, t, n, !1, this.id), chunkMeta: r };
                  },
                },
                {
                  key: 'transmuxSampleAes',
                  value: function (e, t, n, r, i) {
                    var a = this;
                    return this.demuxer.demuxSampleAes(e, t, n).then(function (e) {
                      return { remuxResult: a.remuxer.remux(e.audioTrack, e.videoTrack, e.id3Track, e.textTrack, n, r, !1, a.id), chunkMeta: i };
                    });
                  },
                },
                {
                  key: 'configureTransmuxer',
                  value: function (e) {
                    for (var t, n = this.config, r = this.observer, i = this.typeSupported, a = this.vendor, o = 0, s = Ci.length; o < s; o++)
                      if (Ci[o].demux.probe(e)) {
                        t = Ci[o];
                        break;
                      }
                    if (!t) return new Error('Failed to find demuxer by probing fragment data');
                    var l = this.demuxer,
                      u = this.remuxer,
                      c = t.remux,
                      d = t.demux;
                    (u && u instanceof c) || (this.remuxer = new c(r, n, i, a)), (l && l instanceof d) || ((this.demuxer = new d(r, n, i)), (this.probe = d.probe));
                  },
                },
                {
                  key: 'needsProbing',
                  value: function (e, t) {
                    return !this.demuxer || !this.remuxer || e || t;
                  },
                },
                {
                  key: 'getDecrypter',
                  value: function () {
                    var e = this.decrypter;
                    return e || (e = this.decrypter = new vr(this.config)), e;
                  },
                },
              ]),
              e
            );
          })();
        var Di = function (e) {
          return { remuxResult: {}, chunkMeta: e };
        };
        function Ii(e) {
          return 'then' in e && e.then instanceof Function;
        }
        var Mi = w(function e(t, n, r, i, a) {
            k(this, e),
              (this.audioCodec = void 0),
              (this.videoCodec = void 0),
              (this.initSegmentData = void 0),
              (this.duration = void 0),
              (this.defaultInitPts = void 0),
              (this.audioCodec = t),
              (this.videoCodec = n),
              (this.initSegmentData = r),
              (this.duration = i),
              (this.defaultInitPts = a || null);
          }),
          Pi = w(function e(t, n, r, i, a, o) {
            k(this, e),
              (this.discontinuity = void 0),
              (this.contiguous = void 0),
              (this.accurateTimeOffset = void 0),
              (this.trackSwitch = void 0),
              (this.timeOffset = void 0),
              (this.initSegmentChange = void 0),
              (this.discontinuity = t),
              (this.contiguous = n),
              (this.accurateTimeOffset = r),
              (this.trackSwitch = i),
              (this.timeOffset = a),
              (this.initSegmentChange = o);
          }),
          Oi = { exports: {} };
        !(function (e) {
          var t = Object.prototype.hasOwnProperty,
            n = '~';
          function r() {}
          function i(e, t, n) {
            (this.fn = e), (this.context = t), (this.once = n || !1);
          }
          function a(e, t, r, a, o) {
            if ('function' != typeof r) throw new TypeError('The listener must be a function');
            var s = new i(r, a || e, o),
              l = n ? n + t : t;
            return e._events[l] ? (e._events[l].fn ? (e._events[l] = [e._events[l], s]) : e._events[l].push(s)) : ((e._events[l] = s), e._eventsCount++), e;
          }
          function o(e, t) {
            0 == --e._eventsCount ? (e._events = new r()) : delete e._events[t];
          }
          function s() {
            (this._events = new r()), (this._eventsCount = 0);
          }
          Object.create && ((r.prototype = Object.create(null)), new r().__proto__ || (n = !1)),
            (s.prototype.eventNames = function () {
              var e,
                r,
                i = [];
              if (0 === this._eventsCount) return i;
              for (r in (e = this._events)) t.call(e, r) && i.push(n ? r.slice(1) : r);
              return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i;
            }),
            (s.prototype.listeners = function (e) {
              var t = n ? n + e : e,
                r = this._events[t];
              if (!r) return [];
              if (r.fn) return [r.fn];
              for (var i = 0, a = r.length, o = new Array(a); i < a; i++) o[i] = r[i].fn;
              return o;
            }),
            (s.prototype.listenerCount = function (e) {
              var t = n ? n + e : e,
                r = this._events[t];
              return r ? (r.fn ? 1 : r.length) : 0;
            }),
            (s.prototype.emit = function (e, t, r, i, a, o) {
              var s = n ? n + e : e;
              if (!this._events[s]) return !1;
              var l,
                u,
                c = this._events[s],
                d = arguments.length;
              if (c.fn) {
                switch ((c.once && this.removeListener(e, c.fn, void 0, !0), d)) {
                  case 1:
                    return c.fn.call(c.context), !0;
                  case 2:
                    return c.fn.call(c.context, t), !0;
                  case 3:
                    return c.fn.call(c.context, t, r), !0;
                  case 4:
                    return c.fn.call(c.context, t, r, i), !0;
                  case 5:
                    return c.fn.call(c.context, t, r, i, a), !0;
                  case 6:
                    return c.fn.call(c.context, t, r, i, a, o), !0;
                }
                for (u = 1, l = new Array(d - 1); u < d; u++) l[u - 1] = arguments[u];
                c.fn.apply(c.context, l);
              } else {
                var f,
                  h = c.length;
                for (u = 0; u < h; u++)
                  switch ((c[u].once && this.removeListener(e, c[u].fn, void 0, !0), d)) {
                    case 1:
                      c[u].fn.call(c[u].context);
                      break;
                    case 2:
                      c[u].fn.call(c[u].context, t);
                      break;
                    case 3:
                      c[u].fn.call(c[u].context, t, r);
                      break;
                    case 4:
                      c[u].fn.call(c[u].context, t, r, i);
                      break;
                    default:
                      if (!l) for (f = 1, l = new Array(d - 1); f < d; f++) l[f - 1] = arguments[f];
                      c[u].fn.apply(c[u].context, l);
                  }
              }
              return !0;
            }),
            (s.prototype.on = function (e, t, n) {
              return a(this, e, t, n, !1);
            }),
            (s.prototype.once = function (e, t, n) {
              return a(this, e, t, n, !0);
            }),
            (s.prototype.removeListener = function (e, t, r, i) {
              var a = n ? n + e : e;
              if (!this._events[a]) return this;
              if (!t) return o(this, a), this;
              var s = this._events[a];
              if (s.fn) s.fn !== t || (i && !s.once) || (r && s.context !== r) || o(this, a);
              else {
                for (var l = 0, u = [], c = s.length; l < c; l++) (s[l].fn !== t || (i && !s[l].once) || (r && s[l].context !== r)) && u.push(s[l]);
                u.length ? (this._events[a] = 1 === u.length ? u[0] : u) : o(this, a);
              }
              return this;
            }),
            (s.prototype.removeAllListeners = function (e) {
              var t;
              return e ? ((t = n ? n + e : e), this._events[t] && o(this, t)) : ((this._events = new r()), (this._eventsCount = 0)), this;
            }),
            (s.prototype.off = s.prototype.removeListener),
            (s.prototype.addListener = s.prototype.on),
            (s.prefixed = n),
            (s.EventEmitter = s),
            (e.exports = s);
        })(Oi);
        var Fi = G(Oi.exports),
          Ni = kt() || {
            isTypeSupported: function () {
              return !1;
            },
          },
          Bi = (function () {
            function e(t, n, r, i) {
              var a = this;
              k(this, e),
                (this.error = null),
                (this.hls = void 0),
                (this.id = void 0),
                (this.observer = void 0),
                (this.frag = null),
                (this.part = null),
                (this.useWorker = void 0),
                (this.workerContext = null),
                (this.onwmsg = void 0),
                (this.transmuxer = null),
                (this.onTransmuxComplete = void 0),
                (this.onFlush = void 0);
              var o = t.config;
              (this.hls = t), (this.id = n), (this.useWorker = !!o.enableWorker), (this.onTransmuxComplete = r), (this.onFlush = i);
              var s = function (e, t) {
                ((t = t || {}).frag = a.frag), (t.id = a.id), e === Q.ERROR && (a.error = t.error), a.hls.trigger(e, t);
              };
              (this.observer = new Fi()), this.observer.on(Q.FRAG_DECRYPTED, s), this.observer.on(Q.ERROR, s);
              var l,
                u,
                c,
                d,
                f = { mp4: Ni.isTypeSupported('video/mp4'), mpeg: Ni.isTypeSupported('audio/mpeg'), mp3: Ni.isTypeSupported('audio/mp4; codecs="mp3"') },
                h = navigator.vendor;
              if (this.useWorker && 'undefined' != typeof Worker && (o.workerPath || 'function' == typeof __HLS_WORKER_BUNDLE__)) {
                try {
                  o.workerPath
                    ? (ae.log('loading Web Worker '.concat(o.workerPath, ' for "').concat(n, '"')),
                      (this.workerContext = ((c = o.workerPath), (d = new self.URL(c, self.location.href).href), { worker: new self.Worker(d), scriptURL: d })))
                    : (ae.log('injecting Web Worker for "'.concat(n, '"')),
                      (this.workerContext =
                        ((l = new self.Blob(['var exports={};var module={exports:exports};function define(f){f()};define.amd=true;('.concat(__HLS_WORKER_BUNDLE__.toString(), ')(true);')], {
                          type: 'text/javascript',
                        })),
                        (u = self.URL.createObjectURL(l)),
                        { worker: new self.Worker(u), objectURL: u }))),
                    (this.onwmsg = function (e) {
                      return a.onWorkerMessage(e);
                    });
                  var p = this.workerContext.worker;
                  p.addEventListener('message', this.onwmsg),
                    (p.onerror = function (e) {
                      var t = new Error(''.concat(e.message, '  (').concat(e.filename, ':').concat(e.lineno, ')'));
                      (o.enableWorker = !1),
                        ae.warn('Error in "'.concat(n, '" Web Worker, fallback to inline')),
                        a.hls.trigger(Q.ERROR, { type: Z.OTHER_ERROR, details: J.INTERNAL_EXCEPTION, fatal: !1, event: 'demuxerWorker', error: t });
                    }),
                    p.postMessage({ cmd: 'init', typeSupported: f, vendor: h, id: n, config: JSON.stringify(o) });
                } catch (e) {
                  ae.warn('Error setting up "'.concat(n, '" Web Worker, fallback to inline'), e), this.resetWorker(), (this.error = null), (this.transmuxer = new xi(this.observer, f, o, h, n));
                }
                return;
              }
              this.transmuxer = new xi(this.observer, f, o, h, n);
            }
            return (
              w(e, [
                {
                  key: 'resetWorker',
                  value: function () {
                    if (this.workerContext) {
                      var e = this.workerContext,
                        t = e.worker,
                        n = e.objectURL;
                      n && self.URL.revokeObjectURL(n), t.removeEventListener('message', this.onwmsg), (t.onerror = null), t.terminate(), (this.workerContext = null);
                    }
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    if (this.workerContext) this.resetWorker(), (this.onwmsg = void 0);
                    else {
                      var e = this.transmuxer;
                      e && (e.destroy(), (this.transmuxer = null));
                    }
                    var t = this.observer;
                    t && t.removeAllListeners(), (this.frag = null), (this.observer = null), (this.hls = null);
                  },
                },
                {
                  key: 'push',
                  value: function (e, t, n, r, i, a, o, s, l, u) {
                    var c,
                      d,
                      f = this;
                    l.transmuxing.start = self.performance.now();
                    var h = this.transmuxer,
                      p = a ? a.start : i.start,
                      v = i.decryptdata,
                      m = this.frag,
                      g = !(m && i.cc === m.cc),
                      y = !(m && l.level === m.level),
                      _ = m ? l.sn - m.sn : -1,
                      b = this.part ? l.part - this.part.index : -1,
                      E = 0 === _ && l.id > 1 && l.id === (null == m ? void 0 : m.stats.chunkCount),
                      S = !y && (1 === _ || (0 === _ && (1 === b || (E && b <= 0)))),
                      k = self.performance.now();
                    (y || _ || 0 === i.stats.parsing.start) && (i.stats.parsing.start = k), !a || (!b && S) || (a.stats.parsing.start = k);
                    var T = !(m && (null == (c = i.initSegment) ? void 0 : c.url) === (null == (d = m.initSegment) ? void 0 : d.url)),
                      w = new Pi(g, S, s, y, p, T);
                    if (!S || g || T) {
                      ae.log(
                        '[transmuxer-interface, '
                          .concat(i.type, ']: Starting new transmux session for sn: ')
                          .concat(l.sn, ' p: ')
                          .concat(l.part, ' level: ')
                          .concat(l.level, ' id: ')
                          .concat(l.id, '\n        discontinuity: ')
                          .concat(g, '\n        trackSwitch: ')
                          .concat(y, '\n        contiguous: ')
                          .concat(S, '\n        accurateTimeOffset: ')
                          .concat(s, '\n        timeOffset: ')
                          .concat(p, '\n        initSegmentChange: ')
                          .concat(T),
                      );
                      var A = new Mi(n, r, t, o, u);
                      this.configureTransmuxer(A);
                    }
                    if (((this.frag = i), (this.part = a), this.workerContext))
                      this.workerContext.worker.postMessage({ cmd: 'demux', data: e, decryptdata: v, chunkMeta: l, state: w }, e instanceof ArrayBuffer ? [e] : []);
                    else if (h) {
                      var L = h.push(e, v, l, w);
                      Ii(L)
                        ? ((h.async = !0),
                          L.then(function (e) {
                            f.handleTransmuxComplete(e);
                          }).catch(function (e) {
                            f.transmuxerError(e, l, 'transmuxer-interface push error');
                          }))
                        : ((h.async = !1), this.handleTransmuxComplete(L));
                    }
                  },
                },
                {
                  key: 'flush',
                  value: function (e) {
                    var t = this;
                    e.transmuxing.start = self.performance.now();
                    var n = this.transmuxer;
                    if (this.workerContext) this.workerContext.worker.postMessage({ cmd: 'flush', chunkMeta: e });
                    else if (n) {
                      var r = n.flush(e);
                      Ii(r) || n.async
                        ? (Ii(r) || (r = Promise.resolve(r)),
                          r
                            .then(function (n) {
                              t.handleFlushResult(n, e);
                            })
                            .catch(function (n) {
                              t.transmuxerError(n, e, 'transmuxer-interface flush error');
                            }))
                        : this.handleFlushResult(r, e);
                    }
                  },
                },
                {
                  key: 'transmuxerError',
                  value: function (e, t, n) {
                    this.hls && ((this.error = e), this.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_PARSING_ERROR, chunkMeta: t, fatal: !1, error: e, err: e, reason: n }));
                  },
                },
                {
                  key: 'handleFlushResult',
                  value: function (e, t) {
                    var n = this;
                    e.forEach(function (e) {
                      n.handleTransmuxComplete(e);
                    }),
                      this.onFlush(t);
                  },
                },
                {
                  key: 'onWorkerMessage',
                  value: function (e) {
                    var t = e.data,
                      n = this.hls;
                    switch (t.event) {
                      case 'init':
                        var r,
                          i = null == (r = this.workerContext) ? void 0 : r.objectURL;
                        i && self.URL.revokeObjectURL(i);
                        break;
                      case 'transmuxComplete':
                        this.handleTransmuxComplete(t.data);
                        break;
                      case 'flush':
                        this.onFlush(t.data);
                        break;
                      case 'workerLog':
                        ae[t.data.logType] && ae[t.data.logType](t.data.message);
                        break;
                      default:
                        (t.data = t.data || {}), (t.data.frag = this.frag), (t.data.id = this.id), n.trigger(t.event, t.data);
                    }
                  },
                },
                {
                  key: 'configureTransmuxer',
                  value: function (e) {
                    var t = this.transmuxer;
                    this.workerContext ? this.workerContext.worker.postMessage({ cmd: 'configure', config: e }) : t && t.configure(e);
                  },
                },
                {
                  key: 'handleTransmuxComplete',
                  value: function (e) {
                    (e.chunkMeta.transmuxing.end = self.performance.now()), this.onTransmuxComplete(e);
                  },
                },
              ]),
              e
            );
          })(),
          Ui = (function () {
            function e(t, n, r, i) {
              k(this, e),
                (this.config = void 0),
                (this.media = null),
                (this.fragmentTracker = void 0),
                (this.hls = void 0),
                (this.nudgeRetry = 0),
                (this.stallReported = !1),
                (this.stalled = null),
                (this.moved = !1),
                (this.seeking = !1),
                (this.config = t),
                (this.media = n),
                (this.fragmentTracker = r),
                (this.hls = i);
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    (this.media = null), (this.hls = this.fragmentTracker = null);
                  },
                },
                {
                  key: 'poll',
                  value: function (e, t) {
                    var n = this.config,
                      r = this.media,
                      i = this.stalled;
                    if (null !== r) {
                      var a = r.currentTime,
                        o = r.seeking,
                        s = this.seeking && !o,
                        l = !this.seeking && o;
                      if (((this.seeking = o), a === e)) {
                        if (l || s) this.stalled = null;
                        else if (!((r.paused && !o) || r.ended || 0 === r.playbackRate) && ar.getBuffered(r).length) {
                          var u = ar.bufferInfo(r, a, 0),
                            c = u.len > 0,
                            d = u.nextStart || 0;
                          if (c || d) {
                            if (o) {
                              var f = u.len > 2,
                                h = !d || (t && t.start <= a) || (d - a > 2 && !this.fragmentTracker.getPartialFragment(a));
                              if (f || h) return;
                              this.moved = !1;
                            }
                            if (!this.moved && null !== this.stalled) {
                              var p,
                                v = Math.max(d, u.start || 0) - a,
                                m = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null,
                                g = (null == m || null == (p = m.details) ? void 0 : p.live) ? 2 * m.details.targetduration : 2,
                                y = this.fragmentTracker.getPartialFragment(a);
                              if (v > 0 && (v <= g || y)) return void this._trySkipBufferHole(y);
                            }
                            var _ = self.performance.now();
                            if (null !== i) {
                              var b = _ - i;
                              if (o || !(b >= 250) || (this._reportStall(u), this.media)) {
                                var E = ar.bufferInfo(r, a, n.maxBufferHole);
                                this._tryFixBufferStall(E, b);
                              }
                            } else this.stalled = _;
                          }
                        }
                      } else if (((this.moved = !0), null !== i)) {
                        if (this.stallReported) {
                          var S = self.performance.now() - i;
                          ae.warn('playback not stuck anymore @'.concat(a, ', after ').concat(Math.round(S), 'ms')), (this.stallReported = !1);
                        }
                        (this.stalled = null), (this.nudgeRetry = 0);
                      }
                    }
                  },
                },
                {
                  key: '_tryFixBufferStall',
                  value: function (e, t) {
                    var n = this.config,
                      r = this.fragmentTracker,
                      i = this.media;
                    if (null !== i) {
                      var a = i.currentTime,
                        o = r.getPartialFragment(a);
                      if (o) if (this._trySkipBufferHole(o) || !this.media) return;
                      (e.len > n.maxBufferHole || (e.nextStart && e.nextStart - a < n.maxBufferHole)) &&
                        t > 1e3 * n.highBufferWatchdogPeriod &&
                        (ae.warn('Trying to nudge playhead over buffer-hole'), (this.stalled = null), this._tryNudgeBuffer());
                    }
                  },
                },
                {
                  key: '_reportStall',
                  value: function (e) {
                    var t = this.hls,
                      n = this.media;
                    if (!this.stallReported && n) {
                      this.stallReported = !0;
                      var r = new Error('Playback stalling at @'.concat(n.currentTime, ' due to low buffer (').concat(JSON.stringify(e), ')'));
                      ae.warn(r.message), t.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_STALLED_ERROR, fatal: !1, error: r, buffer: e.len });
                    }
                  },
                },
                {
                  key: '_trySkipBufferHole',
                  value: function (e) {
                    var t = this.config,
                      n = this.hls,
                      r = this.media;
                    if (null === r) return 0;
                    var i = r.currentTime,
                      a = ar.bufferInfo(r, i, 0),
                      o = i < a.start ? a.start : a.nextStart;
                    if (o) {
                      var s = a.len <= t.maxBufferHole,
                        l = a.len > 0 && a.len < 1 && r.readyState < 3,
                        u = o - i;
                      if (u > 0 && (s || l)) {
                        if (u > t.maxBufferHole) {
                          var c = this.fragmentTracker,
                            d = !1;
                          if (0 === i) {
                            var f = c.getAppendedFrag(0, jt);
                            f && o < f.end && (d = !0);
                          }
                          if (!d) {
                            var h = e || c.getAppendedFrag(i, jt);
                            if (h) {
                              for (var p = !1, v = h.end; v < o; ) {
                                var m = c.getPartialFragment(v);
                                if (!m) {
                                  p = !0;
                                  break;
                                }
                                v += m.duration;
                              }
                              if (p) return 0;
                            }
                          }
                        }
                        var g = Math.max(o + 0.05, i + 0.1);
                        if ((ae.warn('skipping hole, adjusting currentTime from '.concat(i, ' to ').concat(g)), (this.moved = !0), (this.stalled = null), (r.currentTime = g), e && !e.gap)) {
                          var y = new Error('fragment loaded with buffer holes, seeking from '.concat(i, ' to ').concat(g));
                          n.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_SEEK_OVER_HOLE, fatal: !1, error: y, reason: y.message, frag: e });
                        }
                        return g;
                      }
                    }
                    return 0;
                  },
                },
                {
                  key: '_tryNudgeBuffer',
                  value: function () {
                    var e = this.config,
                      t = this.hls,
                      n = this.media,
                      r = this.nudgeRetry;
                    if (null !== n) {
                      var i = n.currentTime;
                      if ((this.nudgeRetry++, r < e.nudgeMaxRetry)) {
                        var a = i + (r + 1) * e.nudgeOffset,
                          o = new Error("Nudging 'currentTime' from ".concat(i, ' to ').concat(a));
                        ae.warn(o.message), (n.currentTime = a), t.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_NUDGE_ON_STALL, error: o, fatal: !1 });
                      } else {
                        var s = new Error('Playhead still not moving while enough data buffered @'.concat(i, ' after ').concat(e.nudgeMaxRetry, ' nudges'));
                        ae.error(s.message), t.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_STALLED_ERROR, error: s, fatal: !0 });
                      }
                    }
                  },
                },
              ]),
              e
            );
          })(),
          zi = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r, i) {
              var a;
              return (
                k(this, n),
                ((a = t.call(this, e, r, i, '[stream-controller]', jt)).audioCodecSwap = !1),
                (a.gapController = null),
                (a.level = -1),
                (a._forceStartLoad = !1),
                (a.altAudio = !1),
                (a.audioOnly = !1),
                (a.fragPlaying = null),
                (a.onvplaying = null),
                (a.onvseeked = null),
                (a.fragLastKbps = 0),
                (a.couldBacktrack = !1),
                (a.backtrackFragment = null),
                (a.audioCodecSwitch = !1),
                (a.videoBuffer = null),
                a._registerListeners(),
                a
              );
            }
            return (
              w(n, [
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.on(Q.LEVEL_LOADING, this.onLevelLoading, this),
                      e.on(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.on(Q.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                      e.on(Q.ERROR, this.onError, this),
                      e.on(Q.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                      e.on(Q.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                      e.on(Q.BUFFER_CREATED, this.onBufferCreated, this),
                      e.on(Q.BUFFER_FLUSHED, this.onBufferFlushed, this),
                      e.on(Q.LEVELS_UPDATED, this.onLevelsUpdated, this),
                      e.on(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.off(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.off(Q.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                      e.off(Q.ERROR, this.onError, this),
                      e.off(Q.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                      e.off(Q.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                      e.off(Q.BUFFER_CREATED, this.onBufferCreated, this),
                      e.off(Q.BUFFER_FLUSHED, this.onBufferFlushed, this),
                      e.off(Q.LEVELS_UPDATED, this.onLevelsUpdated, this),
                      e.off(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: 'onHandlerDestroying',
                  value: function () {
                    this._unregisterListeners(), this.onMediaDetaching();
                  },
                },
                {
                  key: 'startLoad',
                  value: function (e) {
                    if (this.levels) {
                      var t = this.lastCurrentTime,
                        n = this.hls;
                      if ((this.stopLoad(), this.setInterval(100), (this.level = -1), !this.startFragRequested)) {
                        var r = n.startLevel;
                        -1 === r && (n.config.testBandwidth && this.levels.length > 1 ? ((r = 0), (this.bitrateTest = !0)) : (r = n.nextAutoLevel)),
                          (this.level = n.nextLoadLevel = r),
                          (this.loadedmetadata = !1);
                      }
                      t > 0 && -1 === e && (this.log('Override startPosition with lastCurrentTime @'.concat(t.toFixed(3))), (e = t)),
                        (this.state = yr),
                        (this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e),
                        this.tick();
                    } else (this._forceStartLoad = !0), (this.state = gr);
                  },
                },
                {
                  key: 'stopLoad',
                  value: function () {
                    (this._forceStartLoad = !1), U(z(n.prototype), 'stopLoad', this).call(this);
                  },
                },
                {
                  key: 'doTick',
                  value: function () {
                    switch (this.state) {
                      case Rr:
                        var e,
                          t = this.levels,
                          n = this.level,
                          r = null == t || null == (e = t[n]) ? void 0 : e.details;
                        if (r && (!r.live || this.levelLastLoaded === this.level)) {
                          if (this.waitForCdnTuneIn(r)) break;
                          this.state = yr;
                          break;
                        }
                        if (this.hls.nextLoadLevel !== this.level) {
                          this.state = yr;
                          break;
                        }
                        break;
                      case Er:
                        var i,
                          a = self.performance.now(),
                          o = this.retryDate;
                        (!o || a >= o || (null != (i = this.media) && i.seeking)) && (this.resetStartWhenNotLoaded(this.level), (this.state = yr));
                    }
                    this.state === yr && this.doTickIdle(), this.onTickEnd();
                  },
                },
                {
                  key: 'onTickEnd',
                  value: function () {
                    U(z(n.prototype), 'onTickEnd', this).call(this), this.checkBuffer(), this.checkFragmentChanged();
                  },
                },
                {
                  key: 'doTickIdle',
                  value: function () {
                    var e = this.hls,
                      t = this.levelLastLoaded,
                      n = this.levels,
                      r = this.media,
                      i = e.config,
                      a = e.nextLoadLevel;
                    if (null !== t && (r || (!this.startFragRequested && i.startFragPrefetch)) && (!this.altAudio || !this.audioOnly) && null != n && n[a]) {
                      var o = n[a],
                        s = this.getMainFwdBufferInfo();
                      if (null !== s) {
                        var l = this.getLevelDetails();
                        if (l && this._streamEnded(s, l)) {
                          var u = {};
                          return this.altAudio && (u.type = 'video'), this.hls.trigger(Q.BUFFER_EOS, u), void (this.state = wr);
                        }
                        e.loadLevel !== a && -1 === e.manualLevel && this.log('Adapting to level '.concat(a, ' from level ').concat(this.level)), (this.level = e.nextLoadLevel = a);
                        var c = o.details;
                        if (!c || this.state === Rr || (c.live && this.levelLastLoaded !== a)) return (this.level = a), void (this.state = Rr);
                        var d = s.len,
                          f = this.getMaxBufferLength(o.maxBitrate);
                        if (!(d >= f)) {
                          this.backtrackFragment && this.backtrackFragment.start > s.end && (this.backtrackFragment = null);
                          var h = this.backtrackFragment ? this.backtrackFragment.start : s.end,
                            p = this.getNextFragment(h, c);
                          if (this.couldBacktrack && !this.fragPrevious && p && 'initSegment' !== p.sn && this.fragmentTracker.getState(p) !== qn) {
                            var v,
                              m = (null != (v = this.backtrackFragment) ? v : p).sn - c.startSN,
                              g = c.fragments[m - 1];
                            g && p.cc === g.cc && ((p = g), this.fragmentTracker.removeFragment(g));
                          } else this.backtrackFragment && s.len && (this.backtrackFragment = null);
                          if (p && this.isLoopLoading(p, h)) {
                            if (!p.gap) {
                              var y = this.audioOnly && !this.altAudio ? fe : he,
                                _ = (y === he ? this.videoBuffer : this.mediaBuffer) || this.media;
                              _ && this.afterBufferFlushed(_, y, jt);
                            }
                            p = this.getNextFragmentLoopLoading(p, c, s, jt, f);
                          }
                          p && (!p.initSegment || p.initSegment.data || this.bitrateTest || (p = p.initSegment), this.loadFragment(p, o, h));
                        }
                      }
                    }
                  },
                },
                {
                  key: 'loadFragment',
                  value: function (e, t, r) {
                    var i = this.fragmentTracker.getState(e);
                    (this.fragCurrent = e),
                      i === jn || i === Wn
                        ? 'initSegment' === e.sn
                          ? this._loadInitSegment(e, t)
                          : this.bitrateTest
                          ? (this.log('Fragment '.concat(e.sn, ' of level ').concat(e.level, ' is being downloaded to test bitrate and will not be buffered')), this._loadBitrateTestFrag(e, t))
                          : ((this.startFragRequested = !0), U(z(n.prototype), 'loadFragment', this).call(this, e, t, r))
                        : this.clearTrackerIfNeeded(e);
                  },
                },
                {
                  key: 'getBufferedFrag',
                  value: function (e) {
                    return this.fragmentTracker.getBufferedFrag(e, jt);
                  },
                },
                {
                  key: 'followingBufferedFrag',
                  value: function (e) {
                    return e ? this.getBufferedFrag(e.end + 0.5) : null;
                  },
                },
                {
                  key: 'immediateLevelSwitch',
                  value: function () {
                    this.abortCurrentFrag(), this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                  },
                },
                {
                  key: 'nextLevelSwitch',
                  value: function () {
                    var e = this.levels,
                      t = this.media;
                    if (null != t && t.readyState) {
                      var n,
                        r = this.getAppendedFrag(t.currentTime);
                      r && r.start > 1 && this.flushMainBuffer(0, r.start - 1);
                      var i = this.getLevelDetails();
                      if (null != i && i.live) {
                        var a = this.getMainFwdBufferInfo();
                        if (!a || a.len < 2 * i.targetduration) return;
                      }
                      if (!t.paused && e) {
                        var o = e[this.hls.nextLoadLevel],
                          s = this.fragLastKbps;
                        n = s && this.fragCurrent ? (this.fragCurrent.duration * o.maxBitrate) / (1e3 * s) + 1 : 0;
                      } else n = 0;
                      var l = this.getBufferedFrag(t.currentTime + n);
                      if (l) {
                        var u = this.followingBufferedFrag(l);
                        if (u) {
                          this.abortCurrentFrag();
                          var c = u.maxStartPTS ? u.maxStartPTS : u.start,
                            d = u.duration,
                            f = Math.max(l.end, c + Math.min(Math.max(d - this.config.maxFragLookUpTolerance, 0.5 * d), 0.75 * d));
                          this.flushMainBuffer(f, Number.POSITIVE_INFINITY);
                        }
                      }
                    }
                  },
                },
                {
                  key: 'abortCurrentFrag',
                  value: function () {
                    var e = this.fragCurrent;
                    switch (((this.fragCurrent = null), (this.backtrackFragment = null), e && (e.abortRequests(), this.fragmentTracker.removeFragment(e)), this.state)) {
                      case _r:
                      case br:
                      case Er:
                      case kr:
                      case Tr:
                        this.state = yr;
                    }
                    this.nextLoadPosition = this.getLoadPosition();
                  },
                },
                {
                  key: 'flushMainBuffer',
                  value: function (e, t) {
                    U(z(n.prototype), 'flushMainBuffer', this).call(this, e, t, this.altAudio ? 'video' : null);
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    U(z(n.prototype), 'onMediaAttached', this).call(this, e, t);
                    var r = t.media;
                    (this.onvplaying = this.onMediaPlaying.bind(this)),
                      (this.onvseeked = this.onMediaSeeked.bind(this)),
                      r.addEventListener('playing', this.onvplaying),
                      r.addEventListener('seeked', this.onvseeked),
                      (this.gapController = new Ui(this.config, r, this.fragmentTracker, this.hls));
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    var e = this.media;
                    e &&
                      this.onvplaying &&
                      this.onvseeked &&
                      (e.removeEventListener('playing', this.onvplaying), e.removeEventListener('seeked', this.onvseeked), (this.onvplaying = this.onvseeked = null), (this.videoBuffer = null)),
                      (this.fragPlaying = null),
                      this.gapController && (this.gapController.destroy(), (this.gapController = null)),
                      U(z(n.prototype), 'onMediaDetaching', this).call(this);
                  },
                },
                {
                  key: 'onMediaPlaying',
                  value: function () {
                    this.tick();
                  },
                },
                {
                  key: 'onMediaSeeked',
                  value: function () {
                    var e = this.media,
                      t = e ? e.currentTime : null;
                    $(t) && this.log('Media seeked to '.concat(t.toFixed(3)));
                    var n = this.getMainFwdBufferInfo();
                    null !== n && 0 !== n.len ? this.tick() : this.warn('Main forward buffer length on "seeked" event '.concat(n ? n.len : 'empty', ')'));
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    this.log('Trigger BUFFER_RESET'),
                      this.hls.trigger(Q.BUFFER_RESET, void 0),
                      this.fragmentTracker.removeAllFragments(),
                      (this.couldBacktrack = !1),
                      (this.startPosition = this.lastCurrentTime = 0),
                      (this.levels = this.fragPlaying = this.backtrackFragment = null),
                      (this.altAudio = this.audioOnly = !1);
                  },
                },
                {
                  key: 'onManifestParsed',
                  value: function (e, t) {
                    var n,
                      r,
                      i,
                      a = !1,
                      o = !1;
                    t.levels.forEach(function (e) {
                      (n = e.audioCodec) && (-1 !== n.indexOf('mp4a.40.2') && (a = !0), -1 !== n.indexOf('mp4a.40.5') && (o = !0));
                    }),
                      (this.audioCodecSwitch = a && o && !('function' == typeof (null == (i = xr()) || null == (r = i.prototype) ? void 0 : r.changeType))),
                      this.audioCodecSwitch && this.log('Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC'),
                      (this.levels = t.levels),
                      (this.startFragRequested = !1);
                  },
                },
                {
                  key: 'onLevelLoading',
                  value: function (e, t) {
                    var n = this.levels;
                    if (n && this.state === yr) {
                      var r = n[t.level];
                      (!r.details || (r.details.live && this.levelLastLoaded !== t.level) || this.waitForCdnTuneIn(r.details)) && (this.state = Rr);
                    }
                  },
                },
                {
                  key: 'onLevelLoaded',
                  value: function (e, t) {
                    var n,
                      r = this.levels,
                      i = t.level,
                      a = t.details,
                      o = a.totalduration;
                    if (r) {
                      this.log(
                        'Level '
                          .concat(i, ' loaded [')
                          .concat(a.startSN, ',')
                          .concat(a.endSN, ']')
                          .concat(a.lastPartSn ? '[part-'.concat(a.lastPartSn, '-').concat(a.lastPartIndex, ']') : '', ', cc [')
                          .concat(a.startCC, ', ')
                          .concat(a.endCC, '] duration:')
                          .concat(o),
                      );
                      var s = r[i],
                        l = this.fragCurrent;
                      !l || (this.state !== br && this.state !== Er) || (l.level === t.level && l.urlId === s.urlId) || !l.loader || this.abortCurrentFrag();
                      var u = 0;
                      if (a.live || (null != (n = s.details) && n.live)) {
                        if ((a.fragments[0] || (a.deltaUpdateFailed = !0), a.deltaUpdateFailed)) return;
                        u = this.alignPlaylists(a, s.details);
                      }
                      if (((s.details = a), (this.levelLastLoaded = i), this.hls.trigger(Q.LEVEL_UPDATED, { details: a, level: i }), this.state === Rr)) {
                        if (this.waitForCdnTuneIn(a)) return;
                        this.state = yr;
                      }
                      this.startFragRequested ? a.live && this.synchronizeToLiveEdge(a) : this.setStartPosition(a, u), this.tick();
                    } else this.warn('Levels were reset while loading level '.concat(i));
                  },
                },
                {
                  key: '_handleFragmentLoadProgress',
                  value: function (e) {
                    var t,
                      n = e.frag,
                      r = e.part,
                      i = e.payload,
                      a = this.levels;
                    if (a) {
                      var o = a[n.level],
                        s = o.details;
                      if (!s) return this.warn('Dropping fragment '.concat(n.sn, ' of level ').concat(n.level, ' after level details were reset')), void this.fragmentTracker.removeFragment(n);
                      var l = o.videoCodec,
                        u = s.PTSKnown || !s.live,
                        c = null == (t = n.initSegment) ? void 0 : t.data,
                        d = this._getAudioCodec(o),
                        f = (this.transmuxer = this.transmuxer || new Bi(this.hls, jt, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this))),
                        h = r ? r.index : -1,
                        p = -1 !== h,
                        v = new or(n.level, n.sn, n.stats.chunkCount, i.byteLength, h, p),
                        m = this.initPTS[n.cc];
                      f.push(i, c, d, l, n, r, s.totalduration, u, v, m);
                    } else this.warn('Levels were reset while fragment load was in progress. Fragment '.concat(n.sn, ' of level ').concat(n.level, ' will not be buffered'));
                  },
                },
                {
                  key: 'onAudioTrackSwitching',
                  value: function (e, t) {
                    var n = this.altAudio;
                    if (!!!t.url) {
                      if (this.mediaBuffer !== this.media) {
                        this.log('Switching on main audio, use media.buffered to schedule main fragment loading'), (this.mediaBuffer = this.media);
                        var r = this.fragCurrent;
                        r && (this.log('Switching to main audio track, cancel main fragment load'), r.abortRequests(), this.fragmentTracker.removeFragment(r)),
                          this.resetTransmuxer(),
                          this.resetLoadingState();
                      } else this.audioOnly && this.resetTransmuxer();
                      var i = this.hls;
                      n && (i.trigger(Q.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: null }), this.fragmentTracker.removeAllFragments()),
                        i.trigger(Q.AUDIO_TRACK_SWITCHED, t);
                    }
                  },
                },
                {
                  key: 'onAudioTrackSwitched',
                  value: function (e, t) {
                    var n = t.id,
                      r = !!this.hls.audioTracks[n].url;
                    if (r) {
                      var i = this.videoBuffer;
                      i && this.mediaBuffer !== i && (this.log('Switching on alternate audio, use video.buffered to schedule main fragment loading'), (this.mediaBuffer = i));
                    }
                    (this.altAudio = r), this.tick();
                  },
                },
                {
                  key: 'onBufferCreated',
                  value: function (e, t) {
                    var n,
                      r,
                      i = t.tracks,
                      a = !1;
                    for (var o in i) {
                      var s = i[o];
                      if ('main' === s.id) {
                        if (((r = o), (n = s), 'video' === o)) {
                          var l = i[o];
                          l && (this.videoBuffer = l.buffer);
                        }
                      } else a = !0;
                    }
                    a && n ? (this.log('Alternate track found, use '.concat(r, '.buffered to schedule main fragment loading')), (this.mediaBuffer = n.buffer)) : (this.mediaBuffer = this.media);
                  },
                },
                {
                  key: 'onFragBuffered',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.part;
                    if (!n || n.type === jt) {
                      if (this.fragContextChanged(n))
                        return (
                          this.warn(
                            'Fragment '
                              .concat(n.sn)
                              .concat(r ? ' p: ' + r.index : '', ' of level ')
                              .concat(n.level, ' finished buffering, but was aborted. state: ')
                              .concat(this.state),
                          ),
                          void (this.state === Tr && (this.state = yr))
                        );
                      var i = r ? r.stats : n.stats;
                      (this.fragLastKbps = Math.round((8 * i.total) / (i.buffering.end - i.loading.first))), 'initSegment' !== n.sn && (this.fragPrevious = n), this.fragBufferedComplete(n, r);
                    }
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var n;
                    if (t.fatal) this.state = Ar;
                    else
                      switch (t.details) {
                        case J.FRAG_GAP:
                        case J.FRAG_PARSING_ERROR:
                        case J.FRAG_DECRYPT_ERROR:
                        case J.FRAG_LOAD_ERROR:
                        case J.FRAG_LOAD_TIMEOUT:
                        case J.KEY_LOAD_ERROR:
                        case J.KEY_LOAD_TIMEOUT:
                          this.onFragmentOrKeyLoadError(jt, t);
                          break;
                        case J.LEVEL_LOAD_ERROR:
                        case J.LEVEL_LOAD_TIMEOUT:
                        case J.LEVEL_PARSING_ERROR:
                          t.levelRetry || this.state !== Rr || (null == (n = t.context) ? void 0 : n.type) !== Ht || (this.state = yr);
                          break;
                        case J.BUFFER_FULL_ERROR:
                          if (!t.parent || 'main' !== t.parent) return;
                          this.reduceLengthAndFlushBuffer(t) && this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                          break;
                        case J.INTERNAL_EXCEPTION:
                          this.recoverWorkerError(t);
                      }
                  },
                },
                {
                  key: 'checkBuffer',
                  value: function () {
                    var e = this.media,
                      t = this.gapController;
                    if (e && t && e.readyState) {
                      if (this.loadedmetadata || !ar.getBuffered(e).length) {
                        var n = this.state !== yr ? this.fragCurrent : null;
                        t.poll(this.lastCurrentTime, n);
                      }
                      this.lastCurrentTime = e.currentTime;
                    }
                  },
                },
                {
                  key: 'onFragLoadEmergencyAborted',
                  value: function () {
                    (this.state = yr), this.loadedmetadata || ((this.startFragRequested = !1), (this.nextLoadPosition = this.startPosition)), this.tickImmediate();
                  },
                },
                {
                  key: 'onBufferFlushed',
                  value: function (e, t) {
                    var n = t.type;
                    if (n !== fe || (this.audioOnly && !this.altAudio)) {
                      var r = (n === he ? this.videoBuffer : this.mediaBuffer) || this.media;
                      this.afterBufferFlushed(r, n, jt);
                    }
                  },
                },
                {
                  key: 'onLevelsUpdated',
                  value: function (e, t) {
                    this.levels = t.levels;
                  },
                },
                {
                  key: 'swapAudioCodec',
                  value: function () {
                    this.audioCodecSwap = !this.audioCodecSwap;
                  },
                },
                {
                  key: 'seekToStartPos',
                  value: function () {
                    var e = this.media;
                    if (e) {
                      var t = e.currentTime,
                        n = this.startPosition;
                      if (n >= 0 && t < n) {
                        if (e.seeking) return void this.log('could not seek to '.concat(n, ', already seeking at ').concat(t));
                        var r = ar.getBuffered(e),
                          i = (r.length ? r.start(0) : 0) - n;
                        i > 0 &&
                          (i < this.config.maxBufferHole || i < this.config.maxFragLookUpTolerance) &&
                          (this.log('adjusting start position by '.concat(i, ' to match buffer start')), (n += i), (this.startPosition = n)),
                          this.log('seek to target start position '.concat(n, ' from current time ').concat(t)),
                          (e.currentTime = n);
                      }
                    }
                  },
                },
                {
                  key: '_getAudioCodec',
                  value: function (e) {
                    var t = this.config.defaultAudioCodec || e.audioCodec;
                    return this.audioCodecSwap && t && (this.log('Swapping audio codec'), (t = -1 !== t.indexOf('mp4a.40.5') ? 'mp4a.40.2' : 'mp4a.40.5')), t;
                  },
                },
                {
                  key: '_loadBitrateTestFrag',
                  value: function (e, t) {
                    var n = this;
                    (e.bitrateTest = !0),
                      this._doFragLoad(e, t).then(function (r) {
                        var i = n.hls;
                        if (r && !n.fragContextChanged(e)) {
                          (t.fragmentError = 0), (n.state = yr), (n.startFragRequested = !1), (n.bitrateTest = !1);
                          var a = e.stats;
                          (a.parsing.start = a.parsing.end = a.buffering.start = a.buffering.end = self.performance.now()), i.trigger(Q.FRAG_LOADED, r), (e.bitrateTest = !1);
                        }
                      });
                  },
                },
                {
                  key: '_handleTransmuxComplete',
                  value: function (e) {
                    var t,
                      n = 'main',
                      r = this.hls,
                      i = e.remuxResult,
                      a = e.chunkMeta,
                      o = this.getCurrentContext(a);
                    if (o) {
                      var s = o.frag,
                        l = o.part,
                        u = o.level,
                        c = i.video,
                        d = i.text,
                        f = i.id3,
                        h = i.initSegment,
                        p = u.details,
                        v = this.altAudio ? void 0 : i.audio;
                      if (this.fragContextChanged(s)) this.fragmentTracker.removeFragment(s);
                      else {
                        if (((this.state = kr), h)) {
                          if (null != h && h.tracks) {
                            var m = s.initSegment || s;
                            this._bufferInitSegment(u, h.tracks, m, a), r.trigger(Q.FRAG_PARSING_INIT_SEGMENT, { frag: m, id: n, tracks: h.tracks });
                          }
                          var g = h.initPTS,
                            y = h.timescale;
                          $(g) && ((this.initPTS[s.cc] = { baseTime: g, timescale: y }), r.trigger(Q.INIT_PTS_FOUND, { frag: s, id: n, initPTS: g, timescale: y }));
                        }
                        var _ = s.sn !== (null == p ? void 0 : p.startSN);
                        if (c && !1 !== i.independent) {
                          if (p) {
                            var b = c.startPTS,
                              E = c.endPTS,
                              S = c.startDTS,
                              k = c.endDTS;
                            if (l) l.elementaryStreams[c.type] = { startPTS: b, endPTS: E, startDTS: S, endDTS: k };
                            else if ((c.firstKeyFrame && c.independent && 1 === a.id && (this.couldBacktrack = !0), c.dropped && c.independent)) {
                              var T = this.getMainFwdBufferInfo(),
                                w = (T ? T.end : this.getLoadPosition()) + this.config.maxBufferHole,
                                A = c.firstKeyFramePTS ? c.firstKeyFramePTS : b;
                              if (_ && w < A - this.config.maxBufferHole) return void this.backtrack(s);
                              s.setElementaryStreamInfo(c.type, s.start, E, s.start, k, !0);
                            }
                            s.setElementaryStreamInfo(c.type, b, E, S, k), this.backtrackFragment && (this.backtrackFragment = s), this.bufferFragmentData(c, s, l, a);
                          }
                        } else if (_ && !1 === i.independent) return void this.backtrack(s);
                        if (v) {
                          var L = v.startPTS,
                            R = v.endPTS,
                            C = v.startDTS,
                            x = v.endDTS;
                          l && (l.elementaryStreams[fe] = { startPTS: L, endPTS: R, startDTS: C, endDTS: x }), s.setElementaryStreamInfo(fe, L, R, C, x), this.bufferFragmentData(v, s, l, a);
                        }
                        if (p && null != f && null != (t = f.samples) && t.length) {
                          var D = { id: n, frag: s, details: p, samples: f.samples };
                          r.trigger(Q.FRAG_PARSING_METADATA, D);
                        }
                        if (p && d) {
                          var I = { id: n, frag: s, details: p, samples: d.samples };
                          r.trigger(Q.FRAG_PARSING_USERDATA, I);
                        }
                      }
                    } else this.resetWhenMissingContext(a);
                  },
                },
                {
                  key: '_bufferInitSegment',
                  value: function (e, t, n, r) {
                    var i = this;
                    if (this.state === kr) {
                      (this.audioOnly = !!t.audio && !t.video), this.altAudio && !this.audioOnly && delete t.audio;
                      var a = t.audio,
                        o = t.video,
                        s = t.audiovideo;
                      if (a) {
                        var l = e.audioCodec,
                          u = navigator.userAgent.toLowerCase();
                        this.audioCodecSwitch &&
                          (l && (l = -1 !== l.indexOf('mp4a.40.5') ? 'mp4a.40.2' : 'mp4a.40.5'), 1 !== a.metadata.channelCount && -1 === u.indexOf('firefox') && (l = 'mp4a.40.5')),
                          -1 !== u.indexOf('android') && 'audio/mpeg' !== a.container && ((l = 'mp4a.40.2'), this.log('Android: force audio codec to '.concat(l))),
                          e.audioCodec && e.audioCodec !== l && this.log('Swapping manifest audio codec "'.concat(e.audioCodec, '" for "').concat(l, '"')),
                          (a.levelCodec = l),
                          (a.id = 'main'),
                          this.log(
                            'Init audio buffer, container:'
                              .concat(a.container, ', codecs[selected/level/parsed]=[')
                              .concat(l || '', '/')
                              .concat(e.audioCodec || '', '/')
                              .concat(a.codec, ']'),
                          );
                      }
                      o &&
                        ((o.levelCodec = e.videoCodec),
                        (o.id = 'main'),
                        this.log(
                          'Init video buffer, container:'
                            .concat(o.container, ', codecs[level/parsed]=[')
                            .concat(e.videoCodec || '', '/')
                            .concat(o.codec, ']'),
                        )),
                        s &&
                          this.log(
                            'Init audiovideo buffer, container:'
                              .concat(s.container, ', codecs[level/parsed]=[')
                              .concat(e.attrs.CODECS || '', '/')
                              .concat(s.codec, ']'),
                          ),
                        this.hls.trigger(Q.BUFFER_CODECS, t),
                        Object.keys(t).forEach(function (e) {
                          var a = t[e].initSegment;
                          null != a && a.byteLength && i.hls.trigger(Q.BUFFER_APPENDING, { type: e, data: a, frag: n, part: null, chunkMeta: r, parent: n.type });
                        }),
                        this.tick();
                    }
                  },
                },
                {
                  key: 'getMainFwdBufferInfo',
                  value: function () {
                    return this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, jt);
                  },
                },
                {
                  key: 'backtrack',
                  value: function (e) {
                    (this.couldBacktrack = !0),
                      (this.backtrackFragment = e),
                      this.resetTransmuxer(),
                      this.flushBufferGap(e),
                      this.fragmentTracker.removeFragment(e),
                      (this.fragPrevious = null),
                      (this.nextLoadPosition = e.start),
                      (this.state = yr);
                  },
                },
                {
                  key: 'checkFragmentChanged',
                  value: function () {
                    var e = this.media,
                      t = null;
                    if (e && e.readyState > 1 && !1 === e.seeking) {
                      var n = e.currentTime;
                      if ((ar.isBuffered(e, n) ? (t = this.getAppendedFrag(n)) : ar.isBuffered(e, n + 0.1) && (t = this.getAppendedFrag(n + 0.1)), t)) {
                        this.backtrackFragment = null;
                        var r = this.fragPlaying,
                          i = t.level;
                        (r && t.sn === r.sn && r.level === i && t.urlId === r.urlId) ||
                          ((this.fragPlaying = t), this.hls.trigger(Q.FRAG_CHANGED, { frag: t }), (r && r.level === i) || this.hls.trigger(Q.LEVEL_SWITCHED, { level: i }));
                      }
                    }
                  },
                },
                {
                  key: 'nextLevel',
                  get: function () {
                    var e = this.nextBufferedFrag;
                    return e ? e.level : -1;
                  },
                },
                {
                  key: 'currentFrag',
                  get: function () {
                    var e = this.media;
                    return e ? this.fragPlaying || this.getAppendedFrag(e.currentTime) : null;
                  },
                },
                {
                  key: 'currentProgramDateTime',
                  get: function () {
                    var e = this.media;
                    if (e) {
                      var t = e.currentTime,
                        n = this.currentFrag;
                      if (n && $(t) && $(n.programDateTime)) {
                        var r = n.programDateTime + 1e3 * (t - n.start);
                        return new Date(r);
                      }
                    }
                    return null;
                  },
                },
                {
                  key: 'currentLevel',
                  get: function () {
                    var e = this.currentFrag;
                    return e ? e.level : -1;
                  },
                },
                {
                  key: 'nextBufferedFrag',
                  get: function () {
                    var e = this.currentFrag;
                    return e ? this.followingBufferedFrag(e) : null;
                  },
                },
                {
                  key: 'forceStartLoad',
                  get: function () {
                    return this._forceStartLoad;
                  },
                },
              ]),
              n
            );
          })(Cr),
          Hi = (function () {
            function e(t) {
              var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
              k(this, e),
                (this.halfLife = void 0),
                (this.alpha_ = void 0),
                (this.estimate_ = void 0),
                (this.totalWeight_ = void 0),
                (this.halfLife = t),
                (this.alpha_ = t ? Math.exp(Math.log(0.5) / t) : 0),
                (this.estimate_ = n),
                (this.totalWeight_ = r);
            }
            return (
              w(e, [
                {
                  key: 'sample',
                  value: function (e, t) {
                    var n = Math.pow(this.alpha_, e);
                    (this.estimate_ = t * (1 - n) + n * this.estimate_), (this.totalWeight_ += e);
                  },
                },
                {
                  key: 'getTotalWeight',
                  value: function () {
                    return this.totalWeight_;
                  },
                },
                {
                  key: 'getEstimate',
                  value: function () {
                    if (this.alpha_) {
                      var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                      if (e) return this.estimate_ / e;
                    }
                    return this.estimate_;
                  },
                },
              ]),
              e
            );
          })(),
          Vi = (function () {
            function e(t, n, r) {
              var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100;
              k(this, e),
                (this.defaultEstimate_ = void 0),
                (this.minWeight_ = void 0),
                (this.minDelayMs_ = void 0),
                (this.slow_ = void 0),
                (this.fast_ = void 0),
                (this.defaultTTFB_ = void 0),
                (this.ttfb_ = void 0),
                (this.defaultEstimate_ = r),
                (this.minWeight_ = 0.001),
                (this.minDelayMs_ = 50),
                (this.slow_ = new Hi(t)),
                (this.fast_ = new Hi(n)),
                (this.defaultTTFB_ = i),
                (this.ttfb_ = new Hi(t));
            }
            return (
              w(e, [
                {
                  key: 'update',
                  value: function (e, t) {
                    var n = this.slow_,
                      r = this.fast_,
                      i = this.ttfb_;
                    n.halfLife !== e && (this.slow_ = new Hi(e, n.getEstimate(), n.getTotalWeight())),
                      r.halfLife !== t && (this.fast_ = new Hi(t, r.getEstimate(), r.getTotalWeight())),
                      i.halfLife !== e && (this.ttfb_ = new Hi(e, i.getEstimate(), i.getTotalWeight()));
                  },
                },
                {
                  key: 'sample',
                  value: function (e, t) {
                    var n = (e = Math.max(e, this.minDelayMs_)) / 1e3,
                      r = (8 * t) / n;
                    this.fast_.sample(n, r), this.slow_.sample(n, r);
                  },
                },
                {
                  key: 'sampleTTFB',
                  value: function (e) {
                    var t = e / 1e3,
                      n = Math.sqrt(2) * Math.exp(-Math.pow(t, 2) / 2);
                    this.ttfb_.sample(n, Math.max(e, 5));
                  },
                },
                {
                  key: 'canEstimate',
                  value: function () {
                    return this.fast_.getTotalWeight() >= this.minWeight_;
                  },
                },
                {
                  key: 'getEstimate',
                  value: function () {
                    return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_;
                  },
                },
                {
                  key: 'getEstimateTTFB',
                  value: function () {
                    return this.ttfb_.getTotalWeight() >= this.minWeight_ ? this.ttfb_.getEstimate() : this.defaultTTFB_;
                  },
                },
                { key: 'destroy', value: function () {} },
              ]),
              e
            );
          })(),
          Gi = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.lastLevelLoadSec = 0),
                (this.lastLoadedFragLevel = 0),
                (this._nextAutoLevel = -1),
                (this.timer = -1),
                (this.onCheck = this._abandonRulesCheck.bind(this)),
                (this.fragCurrent = null),
                (this.partCurrent = null),
                (this.bitrateTestDelay = 0),
                (this.bwEstimator = void 0),
                (this.hls = t);
              var n = t.config;
              (this.bwEstimator = new Vi(n.abrEwmaSlowVoD, n.abrEwmaFastVoD, n.abrEwmaDefaultEstimate)), this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.FRAG_LOADING, this.onFragLoading, this),
                      e.on(Q.FRAG_LOADED, this.onFragLoaded, this),
                      e.on(Q.FRAG_BUFFERED, this.onFragBuffered, this),
                      e.on(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.on(Q.LEVEL_LOADED, this.onLevelLoaded, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.FRAG_LOADING, this.onFragLoading, this),
                      e.off(Q.FRAG_LOADED, this.onFragLoaded, this),
                      e.off(Q.FRAG_BUFFERED, this.onFragBuffered, this),
                      e.off(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.off(Q.LEVEL_LOADED, this.onLevelLoaded, this);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), this.clearTimer(), (this.hls = this.onCheck = null), (this.fragCurrent = this.partCurrent = null);
                  },
                },
                {
                  key: 'onFragLoading',
                  value: function (e, t) {
                    var n,
                      r = t.frag;
                    this.ignoreFragment(r) || ((this.fragCurrent = r), (this.partCurrent = null != (n = t.part) ? n : null), this.clearTimer(), (this.timer = self.setInterval(this.onCheck, 100)));
                  },
                },
                {
                  key: 'onLevelSwitching',
                  value: function (e, t) {
                    this.clearTimer();
                  },
                },
                {
                  key: 'getTimeToLoadFrag',
                  value: function (e, t, n, r) {
                    return e + n / t + (r ? this.lastLevelLoadSec : 0);
                  },
                },
                {
                  key: 'onLevelLoaded',
                  value: function (e, t) {
                    var n = this.hls.config,
                      r = t.stats,
                      i = r.total,
                      a = r.bwEstimate;
                    $(i) && $(a) && (this.lastLevelLoadSec = (8 * i) / a),
                      t.details.live ? this.bwEstimator.update(n.abrEwmaSlowLive, n.abrEwmaFastLive) : this.bwEstimator.update(n.abrEwmaSlowVoD, n.abrEwmaFastVoD);
                  },
                },
                {
                  key: '_abandonRulesCheck',
                  value: function () {
                    var e = this.fragCurrent,
                      t = this.partCurrent,
                      n = this.hls,
                      r = n.autoLevelEnabled,
                      i = n.media;
                    if (e && i) {
                      var a = performance.now(),
                        o = t ? t.stats : e.stats,
                        s = t ? t.duration : e.duration,
                        l = a - o.loading.start;
                      if (o.aborted || (o.loaded && o.loaded === o.total) || 0 === e.level) return this.clearTimer(), void (this._nextAutoLevel = -1);
                      if (r && !i.paused && i.playbackRate && i.readyState) {
                        var u = n.mainForwardBufferInfo;
                        if (null !== u) {
                          var c = this.bwEstimator.getEstimateTTFB(),
                            d = Math.abs(i.playbackRate);
                          if (!(l <= Math.max(c, (s / (2 * d)) * 1e3))) {
                            var f = u.len / d;
                            if (!(f >= (2 * s) / d)) {
                              var h = o.loading.first ? o.loading.first - o.loading.start : -1,
                                p = o.loaded && h > -1,
                                v = this.bwEstimator.getEstimate(),
                                m = n.levels,
                                g = n.minAutoLevel,
                                y = m[e.level],
                                _ = o.total || Math.max(o.loaded, Math.round((s * y.maxBitrate) / 8)),
                                b = l - h;
                              b < 1 && p && (b = Math.min(l, (8 * o.loaded) / v));
                              var E = p ? (1e3 * o.loaded) / b : 0,
                                S = E ? (_ - o.loaded) / E : (8 * _) / v + c / 1e3;
                              if (!(S <= f)) {
                                var k,
                                  T = E ? 8 * E : v,
                                  w = Number.POSITIVE_INFINITY;
                                for (k = e.level - 1; k > g; k--) {
                                  var A = m[k].maxBitrate;
                                  if ((w = this.getTimeToLoadFrag(c / 1e3, T, s * A, !m[k].details)) < f) break;
                                }
                                w >= S ||
                                  w > 10 * s ||
                                  ((n.nextLoadLevel = k),
                                  p ? this.bwEstimator.sample(l - Math.min(c, h), o.loaded) : this.bwEstimator.sampleTTFB(l),
                                  this.clearTimer(),
                                  ae.warn(
                                    '[abr] Fragment '
                                      .concat(e.sn)
                                      .concat(t ? ' part ' + t.index : '', ' of level ')
                                      .concat(e.level, ' is loading too slowly;\n      Time to underbuffer: ')
                                      .concat(f.toFixed(3), ' s\n      Estimated load time for current fragment: ')
                                      .concat(S.toFixed(3), ' s\n      Estimated load time for down switch fragment: ')
                                      .concat(w.toFixed(3), ' s\n      TTFB estimate: ')
                                      .concat(h, '\n      Current BW estimate: ')
                                      .concat($(v) ? (v / 1024).toFixed(3) : 'Unknown', ' Kb/s\n      New BW estimate: ')
                                      .concat((this.bwEstimator.getEstimate() / 1024).toFixed(3), ' Kb/s\n      Aborting and switching to level ')
                                      .concat(k),
                                  ),
                                  e.loader && ((this.fragCurrent = this.partCurrent = null), e.abortRequests()),
                                  n.trigger(Q.FRAG_LOAD_EMERGENCY_ABORTED, { frag: e, part: t, stats: o }));
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                },
                {
                  key: 'onFragLoaded',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.part,
                      i = r ? r.stats : n.stats;
                    if ((n.type === jt && this.bwEstimator.sampleTTFB(i.loading.first - i.loading.start), !this.ignoreFragment(n))) {
                      if ((this.clearTimer(), (this.lastLoadedFragLevel = n.level), (this._nextAutoLevel = -1), this.hls.config.abrMaxWithRealBitrate)) {
                        var a = r ? r.duration : n.duration,
                          o = this.hls.levels[n.level],
                          s = (o.loaded ? o.loaded.bytes : 0) + i.loaded,
                          l = (o.loaded ? o.loaded.duration : 0) + a;
                        (o.loaded = { bytes: s, duration: l }), (o.realBitrate = Math.round((8 * s) / l));
                      }
                      if (n.bitrateTest) {
                        var u = { stats: i, frag: n, part: r, id: n.type };
                        this.onFragBuffered(Q.FRAG_BUFFERED, u), (n.bitrateTest = !1);
                      }
                    }
                  },
                },
                {
                  key: 'onFragBuffered',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.part,
                      i = null != r && r.stats.loaded ? r.stats : n.stats;
                    if (!i.aborted && !this.ignoreFragment(n)) {
                      var a = i.parsing.end - i.loading.start - Math.min(i.loading.first - i.loading.start, this.bwEstimator.getEstimateTTFB());
                      this.bwEstimator.sample(a, i.loaded), (i.bwEstimate = this.bwEstimator.getEstimate()), n.bitrateTest ? (this.bitrateTestDelay = a / 1e3) : (this.bitrateTestDelay = 0);
                    }
                  },
                },
                {
                  key: 'ignoreFragment',
                  value: function (e) {
                    return e.type !== jt || 'initSegment' === e.sn;
                  },
                },
                {
                  key: 'clearTimer',
                  value: function () {
                    self.clearInterval(this.timer);
                  },
                },
                {
                  key: 'nextAutoLevel',
                  get: function () {
                    var e = this._nextAutoLevel,
                      t = this.bwEstimator;
                    if (-1 !== e && !t.canEstimate()) return e;
                    var n = this.getNextABRAutoLevel();
                    if (-1 !== e) {
                      var r = this.hls.levels;
                      if (r.length > Math.max(e, n) && r[e].loadError <= r[n].loadError) return e;
                    }
                    return -1 !== e && (n = Math.min(e, n)), n;
                  },
                  set: function (e) {
                    this._nextAutoLevel = e;
                  },
                },
                {
                  key: 'getNextABRAutoLevel',
                  value: function () {
                    var e = this.fragCurrent,
                      t = this.partCurrent,
                      n = this.hls,
                      r = n.maxAutoLevel,
                      i = n.config,
                      a = n.minAutoLevel,
                      o = n.media,
                      s = t ? t.duration : e ? e.duration : 0,
                      l = o && 0 !== o.playbackRate ? Math.abs(o.playbackRate) : 1,
                      u = this.bwEstimator ? this.bwEstimator.getEstimate() : i.abrEwmaDefaultEstimate,
                      c = n.mainForwardBufferInfo,
                      d = (c ? c.len : 0) / l,
                      f = this.findBestLevel(u, a, r, d, i.abrBandWidthFactor, i.abrBandWidthUpFactor);
                    if (f >= 0) return f;
                    ae.trace('[abr] '.concat(d ? 'rebuffering expected' : 'buffer is empty', ', finding optimal quality level'));
                    var h = s ? Math.min(s, i.maxStarvationDelay) : i.maxStarvationDelay,
                      p = i.abrBandWidthFactor,
                      v = i.abrBandWidthUpFactor;
                    if (!d) {
                      var m = this.bitrateTestDelay;
                      if (m)
                        (h = (s ? Math.min(s, i.maxLoadingDelay) : i.maxLoadingDelay) - m),
                          ae.trace('[abr] bitrate test took '.concat(Math.round(1e3 * m), 'ms, set first fragment max fetchDuration to ').concat(Math.round(1e3 * h), ' ms')),
                          (p = v = 1);
                    }
                    return (f = this.findBestLevel(u, a, r, d + h, p, v)), Math.max(f, 0);
                  },
                },
                {
                  key: 'findBestLevel',
                  value: function (e, t, n, r, i, a) {
                    for (
                      var o,
                        s = this.fragCurrent,
                        l = this.partCurrent,
                        u = this.lastLoadedFragLevel,
                        c = this.hls.levels,
                        d = c[u],
                        f = !(null == d || null == (o = d.details) || !o.live),
                        h = null == d ? void 0 : d.codecSet,
                        p = l ? l.duration : s ? s.duration : 0,
                        v = this.bwEstimator.getEstimateTTFB() / 1e3,
                        m = t,
                        g = -1,
                        y = n;
                      y >= t;
                      y--
                    ) {
                      var _ = c[y];
                      if (!_ || (h && _.codecSet !== h)) _ && ((m = Math.min(y, m)), (g = Math.max(y, g)));
                      else {
                        -1 !== g && ae.trace('[abr] Skipped level(s) '.concat(m, '-').concat(g, ' with CODECS:"').concat(c[g].attrs.CODECS, '"; not compatible with "').concat(d.attrs.CODECS, '"'));
                        var b = _.details,
                          E = (l ? (null == b ? void 0 : b.partTarget) : null == b ? void 0 : b.averagetargetduration) || p,
                          S = void 0;
                        S = y <= u ? i * e : a * e;
                        var k = c[y].maxBitrate,
                          T = this.getTimeToLoadFrag(v, S, k * E, void 0 === b);
                        if (
                          (ae.trace(
                            '[abr] level:'
                              .concat(y, ' adjustedbw-bitrate:')
                              .concat(Math.round(S - k), ' avgDuration:')
                              .concat(E.toFixed(1), ' maxFetchDuration:')
                              .concat(r.toFixed(1), ' fetchDuration:')
                              .concat(T.toFixed(1)),
                          ),
                          S > k && (0 === T || !$(T) || (f && !this.bitrateTestDelay) || T < r))
                        )
                          return y;
                      }
                    }
                    return -1;
                  },
                },
              ]),
              e
            );
          })(),
          ji = (function () {
            function e() {
              k(this, e), (this.chunks = []), (this.dataLength = 0);
            }
            return (
              w(e, [
                {
                  key: 'push',
                  value: function (e) {
                    this.chunks.push(e), (this.dataLength += e.length);
                  },
                },
                {
                  key: 'flush',
                  value: function () {
                    var e,
                      t = this.chunks,
                      n = this.dataLength;
                    return t.length
                      ? ((e =
                          1 === t.length
                            ? t[0]
                            : (function (e, t) {
                                for (var n = new Uint8Array(t), r = 0, i = 0; i < e.length; i++) {
                                  var a = e[i];
                                  n.set(a, r), (r += a.length);
                                }
                                return n;
                              })(t, n)),
                        this.reset(),
                        e)
                      : new Uint8Array(0);
                  },
                },
                {
                  key: 'reset',
                  value: function () {
                    (this.chunks.length = 0), (this.dataLength = 0);
                  },
                },
              ]),
              e
            );
          })();
        var Ki = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r, i) {
              var a;
              return (
                k(this, n),
                ((a = t.call(this, e, r, i, '[audio-stream-controller]', Kt)).videoBuffer = null),
                (a.videoTrackCC = -1),
                (a.waitingVideoCC = -1),
                (a.bufferedTrack = null),
                (a.switchingTrack = null),
                (a.trackId = -1),
                (a.waitingData = null),
                (a.mainDetails = null),
                (a.bufferFlushed = !1),
                (a.cachedTrackLoadedData = null),
                a._registerListeners(),
                a
              );
            }
            return (
              w(n, [
                {
                  key: 'onHandlerDestroying',
                  value: function () {
                    this._unregisterListeners(), (this.mainDetails = null), (this.bufferedTrack = null), (this.switchingTrack = null);
                  },
                },
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.on(Q.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                      e.on(Q.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                      e.on(Q.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                      e.on(Q.ERROR, this.onError, this),
                      e.on(Q.BUFFER_RESET, this.onBufferReset, this),
                      e.on(Q.BUFFER_CREATED, this.onBufferCreated, this),
                      e.on(Q.BUFFER_FLUSHED, this.onBufferFlushed, this),
                      e.on(Q.INIT_PTS_FOUND, this.onInitPtsFound, this),
                      e.on(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.off(Q.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                      e.off(Q.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                      e.off(Q.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                      e.off(Q.ERROR, this.onError, this),
                      e.off(Q.BUFFER_RESET, this.onBufferReset, this),
                      e.off(Q.BUFFER_CREATED, this.onBufferCreated, this),
                      e.off(Q.BUFFER_FLUSHED, this.onBufferFlushed, this),
                      e.off(Q.INIT_PTS_FOUND, this.onInitPtsFound, this),
                      e.off(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: 'onInitPtsFound',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.id,
                      i = t.initPTS,
                      a = t.timescale;
                    if ('main' === r) {
                      var o = n.cc;
                      (this.initPTS[n.cc] = { baseTime: i, timescale: a }),
                        this.log('InitPTS for cc: '.concat(o, ' found from main: ').concat(i)),
                        (this.videoTrackCC = o),
                        this.state === Lr && this.tick();
                    }
                  },
                },
                {
                  key: 'startLoad',
                  value: function (e) {
                    if (!this.levels) return (this.startPosition = e), void (this.state = gr);
                    var t = this.lastCurrentTime;
                    this.stopLoad(),
                      this.setInterval(100),
                      t > 0 && -1 === e
                        ? (this.log('Override startPosition with lastCurrentTime @'.concat(t.toFixed(3))), (e = t), (this.state = yr))
                        : ((this.loadedmetadata = !1), (this.state = Sr)),
                      (this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e),
                      this.tick();
                  },
                },
                {
                  key: 'doTick',
                  value: function () {
                    switch (this.state) {
                      case yr:
                        this.doTickIdle();
                        break;
                      case Sr:
                        var e,
                          t = this.levels,
                          r = this.trackId,
                          i = null == t || null == (e = t[r]) ? void 0 : e.details;
                        if (i) {
                          if (this.waitForCdnTuneIn(i)) break;
                          this.state = Lr;
                        }
                        break;
                      case Er:
                        var a,
                          o = performance.now(),
                          s = this.retryDate;
                        (!s || o >= s || (null != (a = this.media) && a.seeking)) &&
                          (this.log('RetryDate reached, switch back to IDLE state'), this.resetStartWhenNotLoaded(this.trackId), (this.state = yr));
                        break;
                      case Lr:
                        var l = this.waitingData;
                        if (l) {
                          var u = l.frag,
                            c = l.part,
                            d = l.cache,
                            f = l.complete;
                          if (void 0 !== this.initPTS[u.cc]) {
                            (this.waitingData = null), (this.waitingVideoCC = -1), (this.state = br);
                            var h = { frag: u, part: c, payload: d.flush(), networkDetails: null };
                            this._handleFragmentLoadProgress(h), f && U(z(n.prototype), '_handleFragmentLoadComplete', this).call(this, h);
                          } else if (this.videoTrackCC !== this.waitingVideoCC)
                            this.log('Waiting fragment cc ('.concat(u.cc, ') cancelled because video is at cc ').concat(this.videoTrackCC)), this.clearWaitingFragment();
                          else {
                            var p = this.getLoadPosition(),
                              v = ar.bufferInfo(this.mediaBuffer, p, this.config.maxBufferHole);
                            Cn(v.end, this.config.maxFragLookUpTolerance, u) < 0 &&
                              (this.log('Waiting fragment cc ('.concat(u.cc, ') @ ').concat(u.start, ' cancelled because another fragment at ').concat(v.end, ' is needed')),
                              this.clearWaitingFragment());
                          }
                        } else this.state = yr;
                    }
                    this.onTickEnd();
                  },
                },
                {
                  key: 'clearWaitingFragment',
                  value: function () {
                    var e = this.waitingData;
                    e && (this.fragmentTracker.removeFragment(e.frag), (this.waitingData = null), (this.waitingVideoCC = -1), (this.state = yr));
                  },
                },
                {
                  key: 'resetLoadingState',
                  value: function () {
                    this.clearWaitingFragment(), U(z(n.prototype), 'resetLoadingState', this).call(this);
                  },
                },
                {
                  key: 'onTickEnd',
                  value: function () {
                    var e = this.media;
                    null != e && e.readyState && (this.lastCurrentTime = e.currentTime);
                  },
                },
                {
                  key: 'doTickIdle',
                  value: function () {
                    var e = this.hls,
                      t = this.levels,
                      n = this.media,
                      r = this.trackId,
                      i = e.config;
                    if (null != t && t[r] && (n || (!this.startFragRequested && i.startFragPrefetch))) {
                      var a = t[r],
                        o = a.details;
                      if (!o || (o.live && this.levelLastLoaded !== r) || this.waitForCdnTuneIn(o)) this.state = Sr;
                      else {
                        var s = this.mediaBuffer ? this.mediaBuffer : this.media;
                        this.bufferFlushed && s && ((this.bufferFlushed = !1), this.afterBufferFlushed(s, fe, Kt));
                        var l = this.getFwdBufferInfo(s, Kt);
                        if (null !== l) {
                          var u = this.bufferedTrack,
                            c = this.switchingTrack;
                          if (!c && this._streamEnded(l, o)) return e.trigger(Q.BUFFER_EOS, { type: 'audio' }), void (this.state = wr);
                          var d = this.getFwdBufferInfo(this.videoBuffer ? this.videoBuffer : this.media, jt),
                            f = l.len,
                            h = this.getMaxBufferLength(null == d ? void 0 : d.len);
                          if (!(f >= h) || c) {
                            var p = o.fragments[0].start,
                              v = l.end;
                            if (c && n) {
                              var m = this.getLoadPosition();
                              u && c.attrs !== u.attrs && (v = m),
                                o.PTSKnown && m < p && (l.end > p || l.nextStart) && (this.log('Alt audio track ahead of main track, seek to start of alt audio track'), (n.currentTime = p + 0.05));
                            }
                            var g = this.getNextFragment(v, o),
                              y = !1;
                            if ((g && this.isLoopLoading(g, v) && ((y = !!g.gap), (g = this.getNextFragmentLoopLoading(g, o, l, jt, h))), g)) {
                              var _ = d && g.start > d.end + o.targetduration;
                              if (_ || ((null == d || !d.len) && l.len)) {
                                var b = this.getAppendedFrag(g.start, jt);
                                if (null === b) return;
                                if ((y || (y = !!b.gap || (!!_ && 0 === d.len)), (_ && !y) || (y && l.nextStart && l.nextStart < b.end))) return;
                              }
                              this.loadFragment(g, a, v);
                            } else this.bufferFlushed = !0;
                          }
                        }
                      }
                    }
                  },
                },
                {
                  key: 'getMaxBufferLength',
                  value: function (e) {
                    var t = U(z(n.prototype), 'getMaxBufferLength', this).call(this);
                    return e ? Math.min(Math.max(t, e), this.config.maxMaxBufferLength) : t;
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    (this.videoBuffer = null), U(z(n.prototype), 'onMediaDetaching', this).call(this);
                  },
                },
                {
                  key: 'onAudioTracksUpdated',
                  value: function (e, t) {
                    var n = t.audioTracks;
                    this.resetTransmuxer(),
                      (this.levels = n.map(function (e) {
                        return new pn(e);
                      }));
                  },
                },
                {
                  key: 'onAudioTrackSwitching',
                  value: function (e, t) {
                    var n = !!t.url;
                    this.trackId = t.id;
                    var r = this.fragCurrent;
                    r && (r.abortRequests(), this.removeUnbufferedFrags(r.start)),
                      this.resetLoadingState(),
                      n ? this.setInterval(100) : this.resetTransmuxer(),
                      n ? ((this.switchingTrack = t), (this.state = yr)) : ((this.switchingTrack = null), (this.bufferedTrack = t), (this.state = gr)),
                      this.tick();
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    this.fragmentTracker.removeAllFragments(),
                      (this.startPosition = this.lastCurrentTime = 0),
                      (this.bufferFlushed = !1),
                      (this.levels = this.mainDetails = this.waitingData = this.bufferedTrack = this.cachedTrackLoadedData = this.switchingTrack = null),
                      (this.startFragRequested = !1),
                      (this.trackId = this.videoTrackCC = this.waitingVideoCC = -1);
                  },
                },
                {
                  key: 'onLevelLoaded',
                  value: function (e, t) {
                    (this.mainDetails = t.details), null !== this.cachedTrackLoadedData && (this.hls.trigger(Q.AUDIO_TRACK_LOADED, this.cachedTrackLoadedData), (this.cachedTrackLoadedData = null));
                  },
                },
                {
                  key: 'onAudioTrackLoaded',
                  value: function (e, t) {
                    var n;
                    if (null != this.mainDetails) {
                      var r = this.levels,
                        i = t.details,
                        a = t.id;
                      if (r) {
                        this.log(
                          'Track '
                            .concat(a, ' loaded [')
                            .concat(i.startSN, ',')
                            .concat(i.endSN, ']')
                            .concat(i.lastPartSn ? '[part-'.concat(i.lastPartSn, '-').concat(i.lastPartIndex, ']') : '', ',duration:')
                            .concat(i.totalduration),
                        );
                        var o = r[a],
                          s = 0;
                        if (i.live || (null != (n = o.details) && n.live)) {
                          var l = this.mainDetails;
                          if ((i.fragments[0] || (i.deltaUpdateFailed = !0), i.deltaUpdateFailed || !l)) return;
                          !o.details && i.hasProgramDateTime && l.hasProgramDateTime ? (dr(i, l), (s = i.fragments[0].start)) : (s = this.alignPlaylists(i, o.details));
                        }
                        (o.details = i),
                          (this.levelLastLoaded = a),
                          this.startFragRequested || (!this.mainDetails && i.live) || this.setStartPosition(o.details, s),
                          this.state !== Sr || this.waitForCdnTuneIn(i) || (this.state = yr),
                          this.tick();
                      } else this.warn('Audio tracks were reset while loading level '.concat(a));
                    } else this.cachedTrackLoadedData = t;
                  },
                },
                {
                  key: '_handleFragmentLoadProgress',
                  value: function (e) {
                    var t,
                      n = e.frag,
                      r = e.part,
                      i = e.payload,
                      a = this.config,
                      o = this.trackId,
                      s = this.levels;
                    if (s) {
                      var l = s[o];
                      if (l) {
                        var u = l.details;
                        if (!u) return this.warn('Audio track details undefined on fragment load progress'), void this.removeUnbufferedFrags(n.start);
                        var c = a.defaultAudioCodec || l.audioCodec || 'mp4a.40.2',
                          d = this.transmuxer;
                        d || (d = this.transmuxer = new Bi(this.hls, Kt, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this)));
                        var f = this.initPTS[n.cc],
                          h = null == (t = n.initSegment) ? void 0 : t.data;
                        if (void 0 !== f) {
                          var p = r ? r.index : -1,
                            v = -1 !== p,
                            m = new or(n.level, n.sn, n.stats.chunkCount, i.byteLength, p, v);
                          d.push(i, h, c, '', n, r, u.totalduration, !1, m, f);
                        } else {
                          this.log(
                            'Unknown video PTS for cc '
                              .concat(n.cc, ', waiting for video PTS before demuxing audio frag ')
                              .concat(n.sn, ' of [')
                              .concat(u.startSN, ' ,')
                              .concat(u.endSN, '],track ')
                              .concat(o),
                          ),
                            (this.waitingData = this.waitingData || { frag: n, part: r, cache: new ji(), complete: !1 }).cache.push(new Uint8Array(i)),
                            (this.waitingVideoCC = this.videoTrackCC),
                            (this.state = Lr);
                        }
                      } else this.warn('Audio track is undefined on fragment load progress');
                    } else this.warn('Audio tracks were reset while fragment load was in progress. Fragment '.concat(n.sn, ' of level ').concat(n.level, ' will not be buffered'));
                  },
                },
                {
                  key: '_handleFragmentLoadComplete',
                  value: function (e) {
                    this.waitingData ? (this.waitingData.complete = !0) : U(z(n.prototype), '_handleFragmentLoadComplete', this).call(this, e);
                  },
                },
                {
                  key: 'onBufferReset',
                  value: function () {
                    (this.mediaBuffer = this.videoBuffer = null), (this.loadedmetadata = !1);
                  },
                },
                {
                  key: 'onBufferCreated',
                  value: function (e, t) {
                    var n = t.tracks.audio;
                    n && (this.mediaBuffer = n.buffer || null), t.tracks.video && (this.videoBuffer = t.tracks.video.buffer || null);
                  },
                },
                {
                  key: 'onFragBuffered',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.part;
                    if (n.type === Kt)
                      if (this.fragContextChanged(n))
                        this.warn(
                          'Fragment '
                            .concat(n.sn)
                            .concat(r ? ' p: ' + r.index : '', ' of level ')
                            .concat(n.level, ' finished buffering, but was aborted. state: ')
                            .concat(this.state, ', audioSwitch: ')
                            .concat(this.switchingTrack ? this.switchingTrack.name : 'false'),
                        );
                      else {
                        if ('initSegment' !== n.sn) {
                          this.fragPrevious = n;
                          var i = this.switchingTrack;
                          i && ((this.bufferedTrack = i), (this.switchingTrack = null), this.hls.trigger(Q.AUDIO_TRACK_SWITCHED, q({}, i)));
                        }
                        this.fragBufferedComplete(n, r);
                      }
                    else if (!this.loadedmetadata && n.type === jt) {
                      var a = this.videoBuffer || this.media;
                      if (a) ar.getBuffered(a).length && (this.loadedmetadata = !0);
                    }
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var r;
                    if (t.fatal) this.state = Ar;
                    else
                      switch (t.details) {
                        case J.FRAG_GAP:
                        case J.FRAG_PARSING_ERROR:
                        case J.FRAG_DECRYPT_ERROR:
                        case J.FRAG_LOAD_ERROR:
                        case J.FRAG_LOAD_TIMEOUT:
                        case J.KEY_LOAD_ERROR:
                        case J.KEY_LOAD_TIMEOUT:
                          this.onFragmentOrKeyLoadError(Kt, t);
                          break;
                        case J.AUDIO_TRACK_LOAD_ERROR:
                        case J.AUDIO_TRACK_LOAD_TIMEOUT:
                        case J.LEVEL_PARSING_ERROR:
                          t.levelRetry || this.state !== Sr || (null == (r = t.context) ? void 0 : r.type) !== Vt || (this.state = yr);
                          break;
                        case J.BUFFER_FULL_ERROR:
                          if (!t.parent || 'audio' !== t.parent) return;
                          this.reduceLengthAndFlushBuffer(t) && ((this.bufferedTrack = null), U(z(n.prototype), 'flushMainBuffer', this).call(this, 0, Number.POSITIVE_INFINITY, 'audio'));
                          break;
                        case J.INTERNAL_EXCEPTION:
                          this.recoverWorkerError(t);
                      }
                  },
                },
                {
                  key: 'onBufferFlushed',
                  value: function (e, t) {
                    t.type === fe && ((this.bufferFlushed = !0), this.state === wr && (this.state = yr));
                  },
                },
                {
                  key: '_handleTransmuxComplete',
                  value: function (e) {
                    var t,
                      n = 'audio',
                      r = this.hls,
                      i = e.remuxResult,
                      a = e.chunkMeta,
                      o = this.getCurrentContext(a);
                    if (o) {
                      var s = o.frag,
                        l = o.part,
                        u = o.level.details,
                        c = i.audio,
                        d = i.text,
                        f = i.id3,
                        h = i.initSegment;
                      if (!this.fragContextChanged(s) && u) {
                        if (((this.state = kr), this.switchingTrack && c && this.completeAudioSwitch(this.switchingTrack), null != h && h.tracks)) {
                          var p = s.initSegment || s;
                          this._bufferInitSegment(h.tracks, p, a), r.trigger(Q.FRAG_PARSING_INIT_SEGMENT, { frag: p, id: n, tracks: h.tracks });
                        }
                        if (c) {
                          var v = c.startPTS,
                            m = c.endPTS,
                            g = c.startDTS,
                            y = c.endDTS;
                          l && (l.elementaryStreams[fe] = { startPTS: v, endPTS: m, startDTS: g, endDTS: y }), s.setElementaryStreamInfo(fe, v, m, g, y), this.bufferFragmentData(c, s, l, a);
                        }
                        if (null != f && null != (t = f.samples) && t.length) {
                          var _ = X({ id: n, frag: s, details: u }, f);
                          r.trigger(Q.FRAG_PARSING_METADATA, _);
                        }
                        if (d) {
                          var b = X({ id: n, frag: s, details: u }, d);
                          r.trigger(Q.FRAG_PARSING_USERDATA, b);
                        }
                      } else this.fragmentTracker.removeFragment(s);
                    } else this.resetWhenMissingContext(a);
                  },
                },
                {
                  key: '_bufferInitSegment',
                  value: function (e, t, n) {
                    if (this.state === kr) {
                      e.video && delete e.video;
                      var r = e.audio;
                      if (r) {
                        (r.levelCodec = r.codec),
                          (r.id = 'audio'),
                          this.log('Init audio buffer, container:'.concat(r.container, ', codecs[parsed]=[').concat(r.codec, ']')),
                          this.hls.trigger(Q.BUFFER_CODECS, e);
                        var i = r.initSegment;
                        if (null != i && i.byteLength) {
                          var a = { type: 'audio', frag: t, part: null, chunkMeta: n, parent: t.type, data: i };
                          this.hls.trigger(Q.BUFFER_APPENDING, a);
                        }
                        this.tick();
                      }
                    }
                  },
                },
                {
                  key: 'loadFragment',
                  value: function (e, t, r) {
                    var i,
                      a = this.fragmentTracker.getState(e);
                    ((this.fragCurrent = e), this.switchingTrack || a === jn || a === Wn)
                      ? 'initSegment' === e.sn
                        ? this._loadInitSegment(e, t)
                        : null != (i = t.details) && i.live && !this.initPTS[e.cc]
                        ? (this.log('Waiting for video PTS in continuity counter '.concat(e.cc, ' of live stream before loading audio fragment ').concat(e.sn, ' of level ').concat(this.trackId)),
                          (this.state = Lr))
                        : ((this.startFragRequested = !0), U(z(n.prototype), 'loadFragment', this).call(this, e, t, r))
                      : this.clearTrackerIfNeeded(e);
                  },
                },
                {
                  key: 'completeAudioSwitch',
                  value: function (e) {
                    var t = this.hls,
                      r = this.media,
                      i = this.bufferedTrack,
                      a = null == i ? void 0 : i.attrs,
                      o = e.attrs;
                    r &&
                      a &&
                      (a.CHANNELS !== o.CHANNELS || a.NAME !== o.NAME || a.LANGUAGE !== o.LANGUAGE) &&
                      (this.log('Switching audio track : flushing all audio'), U(z(n.prototype), 'flushMainBuffer', this).call(this, 0, Number.POSITIVE_INFINITY, 'audio')),
                      (this.bufferedTrack = e),
                      (this.switchingTrack = null),
                      t.trigger(Q.AUDIO_TRACK_SWITCHED, q({}, e));
                  },
                },
              ]),
              n
            );
          })(Cr),
          Wi = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e) {
              var r;
              return (
                k(this, n),
                ((r = t.call(this, e, '[audio-track-controller]')).tracks = []),
                (r.groupId = null),
                (r.tracksInGroup = []),
                (r.trackId = -1),
                (r.currentTrack = null),
                (r.selectDefaultTrack = !0),
                r.registerListeners(),
                r
              );
            }
            return (
              w(n, [
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.on(Q.LEVEL_LOADING, this.onLevelLoading, this),
                      e.on(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.on(Q.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                      e.on(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.off(Q.LEVEL_LOADING, this.onLevelLoading, this),
                      e.off(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.off(Q.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                      e.off(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), (this.tracks.length = 0), (this.tracksInGroup.length = 0), (this.currentTrack = null), U(z(n.prototype), 'destroy', this).call(this);
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.tracks = []), (this.groupId = null), (this.tracksInGroup = []), (this.trackId = -1), (this.currentTrack = null), (this.selectDefaultTrack = !0);
                  },
                },
                {
                  key: 'onManifestParsed',
                  value: function (e, t) {
                    this.tracks = t.audioTracks || [];
                  },
                },
                {
                  key: 'onAudioTrackLoaded',
                  value: function (e, t) {
                    var n = t.id,
                      r = t.groupId,
                      i = t.details,
                      a = this.tracksInGroup[n];
                    if (a && a.groupId === r) {
                      var o = a.details;
                      (a.details = t.details),
                        this.log('audio-track '.concat(n, ' "').concat(a.name, '" lang:').concat(a.lang, ' group:').concat(r, ' loaded [').concat(i.startSN, '-').concat(i.endSN, ']')),
                        n === this.trackId && this.playlistLoaded(n, t, o);
                    } else this.warn('Track with id:'.concat(n, ' and group:').concat(r, ' not found in active group ').concat(a.groupId));
                  },
                },
                {
                  key: 'onLevelLoading',
                  value: function (e, t) {
                    this.switchLevel(t.level);
                  },
                },
                {
                  key: 'onLevelSwitching',
                  value: function (e, t) {
                    this.switchLevel(t.level);
                  },
                },
                {
                  key: 'switchLevel',
                  value: function (e) {
                    var t = this.hls.levels[e];
                    if (null != t && t.audioGroupIds) {
                      var n = t.audioGroupIds[t.urlId];
                      if (this.groupId !== n) {
                        this.groupId = n || null;
                        var r = this.tracks.filter(function (e) {
                          return !n || e.groupId === n;
                        });
                        this.selectDefaultTrack &&
                          !r.some(function (e) {
                            return e.default;
                          }) &&
                          (this.selectDefaultTrack = !1),
                          (this.tracksInGroup = r);
                        var i = { audioTracks: r };
                        this.log('Updating audio tracks, '.concat(r.length, ' track(s) found in group:').concat(n)), this.hls.trigger(Q.AUDIO_TRACKS_UPDATED, i), this.selectInitialTrack();
                      } else this.shouldReloadPlaylist(this.currentTrack) && this.setAudioTrack(this.trackId);
                    }
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    !t.fatal && t.context && t.context.type === Vt && t.context.id === this.trackId && t.context.groupId === this.groupId && ((this.requestScheduled = -1), this.checkRetry(t));
                  },
                },
                {
                  key: 'audioTracks',
                  get: function () {
                    return this.tracksInGroup;
                  },
                },
                {
                  key: 'audioTrack',
                  get: function () {
                    return this.trackId;
                  },
                  set: function (e) {
                    (this.selectDefaultTrack = !1), this.setAudioTrack(e);
                  },
                },
                {
                  key: 'setAudioTrack',
                  value: function (e) {
                    var t = this.tracksInGroup;
                    if (e < 0 || e >= t.length) this.warn('Invalid id passed to audio-track controller');
                    else {
                      this.clearTimer();
                      var n = this.currentTrack;
                      t[this.trackId];
                      var r = t[e],
                        i = r.groupId,
                        a = r.name;
                      if (
                        (this.log('Switching to audio-track '.concat(e, ' "').concat(a, '" lang:').concat(r.lang, ' group:').concat(i)),
                        (this.trackId = e),
                        (this.currentTrack = r),
                        (this.selectDefaultTrack = !1),
                        this.hls.trigger(Q.AUDIO_TRACK_SWITCHING, q({}, r)),
                        !r.details || r.details.live)
                      ) {
                        var o = this.switchParams(r.url, null == n ? void 0 : n.details);
                        this.loadPlaylist(o);
                      }
                    }
                  },
                },
                {
                  key: 'selectInitialTrack',
                  value: function () {
                    var e = this.tracksInGroup,
                      t = this.findTrackId(this.currentTrack) | this.findTrackId(null);
                    if (-1 !== t) this.setAudioTrack(t);
                    else {
                      var n = new Error('No track found for running audio group-ID: '.concat(this.groupId, ' track count: ').concat(e.length));
                      this.warn(n.message), this.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.AUDIO_TRACK_LOAD_ERROR, fatal: !0, error: n });
                    }
                  },
                },
                {
                  key: 'findTrackId',
                  value: function (e) {
                    for (var t = this.tracksInGroup, n = 0; n < t.length; n++) {
                      var r = t[n];
                      if (!this.selectDefaultTrack || r.default) {
                        if (!e || (void 0 !== e.attrs['STABLE-RENDITION-ID'] && e.attrs['STABLE-RENDITION-ID'] === r.attrs['STABLE-RENDITION-ID'])) return r.id;
                        if (e.name === r.name && e.lang === r.lang) return r.id;
                      }
                    }
                    return -1;
                  },
                },
                {
                  key: 'loadPlaylist',
                  value: function (e) {
                    U(z(n.prototype), 'loadPlaylist', this).call(this);
                    var t = this.tracksInGroup[this.trackId];
                    if (this.shouldLoadPlaylist(t)) {
                      var r = t.id,
                        i = t.groupId,
                        a = t.url;
                      if (e)
                        try {
                          a = e.addDirectives(a);
                        } catch (e) {
                          this.warn('Could not construct new URL with HLS Delivery Directives: '.concat(e));
                        }
                      this.log('loading audio-track playlist '.concat(r, ' "').concat(t.name, '" lang:').concat(t.lang, ' group:').concat(i)),
                        this.clearTimer(),
                        this.hls.trigger(Q.AUDIO_TRACK_LOADING, { url: a, id: r, groupId: i, deliveryDirectives: e || null });
                    }
                  },
                },
              ]),
              n
            );
          })(zn);
        function qi(e, t) {
          if (e.length !== t.length) return !1;
          for (var n = 0; n < e.length; n++) if (!Yi(e[n].attrs, t[n].attrs)) return !1;
          return !0;
        }
        function Yi(e, t) {
          var n = e['STABLE-RENDITION-ID'];
          return n
            ? n === t['STABLE-RENDITION-ID']
            : !['LANGUAGE', 'NAME', 'CHARACTERISTICS', 'AUTOSELECT', 'DEFAULT', 'FORCED'].some(function (n) {
                return e[n] !== t[n];
              });
        }
        var Xi = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r, i) {
              var a;
              return (
                k(this, n),
                ((a = t.call(this, e, r, i, '[subtitle-stream-controller]', Wt)).levels = []),
                (a.currentTrackId = -1),
                (a.tracksBuffered = []),
                (a.mainDetails = null),
                a._registerListeners(),
                a
              );
            }
            return (
              w(n, [
                {
                  key: 'onHandlerDestroying',
                  value: function () {
                    this._unregisterListeners(), (this.mainDetails = null);
                  },
                },
                {
                  key: '_registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.on(Q.ERROR, this.onError, this),
                      e.on(Q.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                      e.on(Q.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                      e.on(Q.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                      e.on(Q.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                      e.on(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.on(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: '_unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.LEVEL_LOADED, this.onLevelLoaded, this),
                      e.off(Q.ERROR, this.onError, this),
                      e.off(Q.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                      e.off(Q.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                      e.off(Q.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                      e.off(Q.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                      e.off(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.off(Q.FRAG_BUFFERED, this.onFragBuffered, this);
                  },
                },
                {
                  key: 'startLoad',
                  value: function (e) {
                    this.stopLoad(), (this.state = yr), this.setInterval(500), (this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e), this.tick();
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.mainDetails = null), this.fragmentTracker.removeAllFragments();
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    (this.tracksBuffered = []), U(z(n.prototype), 'onMediaDetaching', this).call(this);
                  },
                },
                {
                  key: 'onLevelLoaded',
                  value: function (e, t) {
                    this.mainDetails = t.details;
                  },
                },
                {
                  key: 'onSubtitleFragProcessed',
                  value: function (e, t) {
                    var n = t.frag,
                      r = t.success;
                    if (((this.fragPrevious = n), (this.state = yr), r)) {
                      var i = this.tracksBuffered[this.currentTrackId];
                      if (i) {
                        for (var a, o = n.start, s = 0; s < i.length; s++)
                          if (o >= i[s].start && o <= i[s].end) {
                            a = i[s];
                            break;
                          }
                        var l = n.start + n.duration;
                        a ? (a.end = l) : ((a = { start: o, end: l }), i.push(a)), this.fragmentTracker.fragBuffered(n);
                      }
                    }
                  },
                },
                {
                  key: 'onBufferFlushing',
                  value: function (e, t) {
                    var n = t.startOffset,
                      r = t.endOffset;
                    if (0 === n && r !== Number.POSITIVE_INFINITY) {
                      var i = r - 1;
                      if (i <= 0) return;
                      (t.endOffsetSubtitles = Math.max(0, i)),
                        this.tracksBuffered.forEach(function (e) {
                          for (var t = 0; t < e.length; )
                            if (e[t].end <= i) e.shift();
                            else {
                              if (!(e[t].start < i)) break;
                              (e[t].start = i), t++;
                            }
                        }),
                        this.fragmentTracker.removeFragmentsInRange(n, i, Wt);
                    }
                  },
                },
                {
                  key: 'onFragBuffered',
                  value: function (e, t) {
                    var n;
                    this.loadedmetadata || t.frag.type !== jt || (null != (n = this.media) && n.buffered.length && (this.loadedmetadata = !0));
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var n = t.frag;
                    (null == n ? void 0 : n.type) === Wt && (this.fragCurrent && this.fragCurrent.abortRequests(), this.state !== gr && (this.state = yr));
                  },
                },
                {
                  key: 'onSubtitleTracksUpdated',
                  value: function (e, t) {
                    var n = this,
                      r = t.subtitleTracks;
                    qi(this.levels, r)
                      ? (this.levels = r.map(function (e) {
                          return new pn(e);
                        }))
                      : ((this.tracksBuffered = []),
                        (this.levels = r.map(function (e) {
                          var t = new pn(e);
                          return (n.tracksBuffered[t.id] = []), t;
                        })),
                        this.fragmentTracker.removeFragmentsInRange(0, Number.POSITIVE_INFINITY, Wt),
                        (this.fragPrevious = null),
                        (this.mediaBuffer = null));
                  },
                },
                {
                  key: 'onSubtitleTrackSwitch',
                  value: function (e, t) {
                    if (((this.currentTrackId = t.id), this.levels.length && -1 !== this.currentTrackId)) {
                      var n = this.levels[this.currentTrackId];
                      null != n && n.details ? (this.mediaBuffer = this.mediaBufferTimeRanges) : (this.mediaBuffer = null), n && this.setInterval(500);
                    } else this.clearInterval();
                  },
                },
                {
                  key: 'onSubtitleTrackLoaded',
                  value: function (e, t) {
                    var n,
                      r = t.details,
                      i = t.id,
                      a = this.currentTrackId,
                      o = this.levels;
                    if (o.length) {
                      var s = o[a];
                      if (!(i >= o.length || i !== a) && s) {
                        this.mediaBuffer = this.mediaBufferTimeRanges;
                        var l = 0;
                        if (r.live || (null != (n = s.details) && n.live)) {
                          var u = this.mainDetails;
                          if (r.deltaUpdateFailed || !u) return;
                          var c = u.fragments[0];
                          s.details
                            ? 0 === (l = this.alignPlaylists(r, s.details)) && c && _n(r, (l = c.start))
                            : r.hasProgramDateTime && u.hasProgramDateTime
                            ? (dr(r, u), (l = r.fragments[0].start))
                            : c && _n(r, (l = c.start));
                        }
                        if (
                          ((s.details = r),
                          (this.levelLastLoaded = i),
                          this.startFragRequested || (!this.mainDetails && r.live) || this.setStartPosition(s.details, l),
                          this.tick(),
                          r.live && !this.fragCurrent && this.media && this.state === yr)
                        )
                          Rn(null, r.fragments, this.media.currentTime, 0) || (this.warn('Subtitle playlist not aligned with playback'), (s.details = void 0));
                      }
                    }
                  },
                },
                {
                  key: '_handleFragmentLoadComplete',
                  value: function (e) {
                    var t = this,
                      n = e.frag,
                      r = e.payload,
                      i = n.decryptdata,
                      a = this.hls;
                    if (!this.fragContextChanged(n) && r && r.byteLength > 0 && i && i.key && i.iv && 'AES-128' === i.method) {
                      var o = performance.now();
                      this.decrypter
                        .decrypt(new Uint8Array(r), i.key.buffer, i.iv.buffer)
                        .catch(function (e) {
                          throw (a.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.FRAG_DECRYPT_ERROR, fatal: !1, error: e, reason: e.message, frag: n }), e);
                        })
                        .then(function (e) {
                          var t = performance.now();
                          a.trigger(Q.FRAG_DECRYPTED, { frag: n, payload: e, stats: { tstart: o, tdecrypt: t } });
                        })
                        .catch(function (e) {
                          t.warn(''.concat(e.name, ': ').concat(e.message)), (t.state = yr);
                        });
                    }
                  },
                },
                {
                  key: 'doTick',
                  value: function () {
                    if (this.media) {
                      if (this.state === yr) {
                        var e = this.currentTrackId,
                          t = this.levels,
                          n = t[e];
                        if (!t.length || !n || !n.details) return;
                        var r = this.config,
                          i = this.getLoadPosition(),
                          a = ar.bufferedInfo(this.tracksBuffered[this.currentTrackId] || [], i, r.maxBufferHole),
                          o = a.end,
                          s = a.len,
                          l = this.getFwdBufferInfo(this.media, jt),
                          u = n.details;
                        if (s > this.getMaxBufferLength(null == l ? void 0 : l.len) + u.levelTargetDuration) return;
                        var c = u.fragments,
                          d = c.length,
                          f = u.edge,
                          h = null,
                          p = this.fragPrevious;
                        if (o < f) {
                          var v = r.maxFragLookUpTolerance,
                            m = o > f - v ? 0 : v;
                          !(h = Rn(p, c, Math.max(c[0].start, o), m)) && p && p.start < c[0].start && (h = c[0]);
                        } else h = c[d - 1];
                        if (!h) return;
                        if ('initSegment' !== (h = this.mapToInitFragWhenRequired(h)).sn) {
                          var g = c[h.sn - u.startSN - 1];
                          g && g.cc === h.cc && this.fragmentTracker.getState(g) === jn && (h = g);
                        }
                        this.fragmentTracker.getState(h) === jn && this.loadFragment(h, n, o);
                      }
                    } else this.state = yr;
                  },
                },
                {
                  key: 'getMaxBufferLength',
                  value: function (e) {
                    var t = U(z(n.prototype), 'getMaxBufferLength', this).call(this);
                    return e ? Math.max(t, e) : t;
                  },
                },
                {
                  key: 'loadFragment',
                  value: function (e, t, r) {
                    (this.fragCurrent = e), 'initSegment' === e.sn ? this._loadInitSegment(e, t) : ((this.startFragRequested = !0), U(z(n.prototype), 'loadFragment', this).call(this, e, t, r));
                  },
                },
                {
                  key: 'mediaBufferTimeRanges',
                  get: function () {
                    return new $i(this.tracksBuffered[this.currentTrackId] || []);
                  },
                },
              ]),
              n
            );
          })(Cr),
          $i = w(function e(t) {
            k(this, e), (this.buffered = void 0);
            var n = function (e, n, r) {
              if ((n >>>= 0) > r - 1)
                throw new DOMException("Failed to execute '".concat(e, "' on 'TimeRanges': The index provided (").concat(n, ') is greater than the maximum bound (').concat(r, ')'));
              return t[n][e];
            };
            this.buffered = {
              get length() {
                return t.length;
              },
              end: function (e) {
                return n('end', e, t.length);
              },
              start: function (e) {
                return n('start', e, t.length);
              },
            };
          }),
          Qi = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e) {
              var r;
              return (
                k(this, n),
                ((r = t.call(this, e, '[subtitle-track-controller]')).media = null),
                (r.tracks = []),
                (r.groupId = null),
                (r.tracksInGroup = []),
                (r.trackId = -1),
                (r.selectDefaultTrack = !0),
                (r.queuedDefaultTrack = -1),
                (r.trackChangeListener = function () {
                  return r.onTextTracksChanged();
                }),
                (r.asyncPollTrackChange = function () {
                  return r.pollTrackChange(0);
                }),
                (r.useTextTrackPolling = !1),
                (r.subtitlePollingInterval = -1),
                (r._subtitleDisplay = !0),
                r.registerListeners(),
                r
              );
            }
            return (
              w(n, [
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(),
                      (this.tracks.length = 0),
                      (this.tracksInGroup.length = 0),
                      (this.trackChangeListener = this.asyncPollTrackChange = null),
                      U(z(n.prototype), 'destroy', this).call(this);
                  },
                },
                {
                  key: 'subtitleDisplay',
                  get: function () {
                    return this._subtitleDisplay;
                  },
                  set: function (e) {
                    (this._subtitleDisplay = e), this.trackId > -1 && this.toggleTrackModes(this.trackId);
                  },
                },
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.on(Q.LEVEL_LOADING, this.onLevelLoading, this),
                      e.on(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.on(Q.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                      e.on(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.off(Q.LEVEL_LOADING, this.onLevelLoading, this),
                      e.off(Q.LEVEL_SWITCHING, this.onLevelSwitching, this),
                      e.off(Q.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                      e.off(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    (this.media = t.media),
                      this.media &&
                        (this.queuedDefaultTrack > -1 && ((this.subtitleTrack = this.queuedDefaultTrack), (this.queuedDefaultTrack = -1)),
                        (this.useTextTrackPolling = !(this.media.textTracks && 'onchange' in this.media.textTracks)),
                        this.useTextTrackPolling ? this.pollTrackChange(500) : this.media.textTracks.addEventListener('change', this.asyncPollTrackChange));
                  },
                },
                {
                  key: 'pollTrackChange',
                  value: function (e) {
                    self.clearInterval(this.subtitlePollingInterval), (this.subtitlePollingInterval = self.setInterval(this.trackChangeListener, e));
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    this.media &&
                      (self.clearInterval(this.subtitlePollingInterval),
                      this.useTextTrackPolling || this.media.textTracks.removeEventListener('change', this.asyncPollTrackChange),
                      this.trackId > -1 && (this.queuedDefaultTrack = this.trackId),
                      Zi(this.media.textTracks).forEach(function (e) {
                        Zt(e);
                      }),
                      (this.subtitleTrack = -1),
                      (this.media = null));
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.tracks = []), (this.groupId = null), (this.tracksInGroup = []), (this.trackId = -1), (this.selectDefaultTrack = !0);
                  },
                },
                {
                  key: 'onManifestParsed',
                  value: function (e, t) {
                    this.tracks = t.subtitleTracks;
                  },
                },
                {
                  key: 'onSubtitleTrackLoaded',
                  value: function (e, t) {
                    var n = t.id,
                      r = t.details,
                      i = this.trackId,
                      a = this.tracksInGroup[i];
                    if (a) {
                      var o = a.details;
                      (a.details = t.details), this.log('subtitle track '.concat(n, ' loaded [').concat(r.startSN, '-').concat(r.endSN, ']')), n === this.trackId && this.playlistLoaded(n, t, o);
                    } else this.warn('Invalid subtitle track id '.concat(n));
                  },
                },
                {
                  key: 'onLevelLoading',
                  value: function (e, t) {
                    this.switchLevel(t.level);
                  },
                },
                {
                  key: 'onLevelSwitching',
                  value: function (e, t) {
                    this.switchLevel(t.level);
                  },
                },
                {
                  key: 'switchLevel',
                  value: function (e) {
                    var t = this.hls.levels[e];
                    if (null != t && t.textGroupIds) {
                      var n = t.textGroupIds[t.urlId],
                        r = this.tracksInGroup ? this.tracksInGroup[this.trackId] : void 0;
                      if (this.groupId !== n) {
                        var i = this.tracks.filter(function (e) {
                          return !n || e.groupId === n;
                        });
                        this.tracksInGroup = i;
                        var a = this.findTrackId(null == r ? void 0 : r.name) || this.findTrackId();
                        this.groupId = n || null;
                        var o = { subtitleTracks: i };
                        this.log('Updating subtitle tracks, '.concat(i.length, ' track(s) found in "').concat(n, '" group-id')),
                          this.hls.trigger(Q.SUBTITLE_TRACKS_UPDATED, o),
                          -1 !== a && this.setSubtitleTrack(a, r);
                      } else this.shouldReloadPlaylist(r) && this.setSubtitleTrack(this.trackId, r);
                    }
                  },
                },
                {
                  key: 'findTrackId',
                  value: function (e) {
                    for (var t = this.tracksInGroup, n = 0; n < t.length; n++) {
                      var r = t[n];
                      if ((!this.selectDefaultTrack || r.default) && (!e || e === r.name)) return r.id;
                    }
                    return -1;
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    !t.fatal && t.context && t.context.type === Gt && t.context.id === this.trackId && t.context.groupId === this.groupId && this.checkRetry(t);
                  },
                },
                {
                  key: 'subtitleTracks',
                  get: function () {
                    return this.tracksInGroup;
                  },
                },
                {
                  key: 'subtitleTrack',
                  get: function () {
                    return this.trackId;
                  },
                  set: function (e) {
                    this.selectDefaultTrack = !1;
                    var t = this.tracksInGroup ? this.tracksInGroup[this.trackId] : void 0;
                    this.setSubtitleTrack(e, t);
                  },
                },
                {
                  key: 'loadPlaylist',
                  value: function (e) {
                    U(z(n.prototype), 'loadPlaylist', this).call(this);
                    var t = this.tracksInGroup[this.trackId];
                    if (this.shouldLoadPlaylist(t)) {
                      var r = t.id,
                        i = t.groupId,
                        a = t.url;
                      if (e)
                        try {
                          a = e.addDirectives(a);
                        } catch (e) {
                          this.warn('Could not construct new URL with HLS Delivery Directives: '.concat(e));
                        }
                      this.log('Loading subtitle playlist for id '.concat(r)), this.hls.trigger(Q.SUBTITLE_TRACK_LOADING, { url: a, id: r, groupId: i, deliveryDirectives: e || null });
                    }
                  },
                },
                {
                  key: 'toggleTrackModes',
                  value: function (e) {
                    var t = this,
                      n = this.media,
                      r = this.trackId;
                    if (n) {
                      var i = Zi(n.textTracks),
                        a = i.filter(function (e) {
                          return e.groupId === t.groupId;
                        });
                      if (-1 === e)
                        [].slice.call(i).forEach(function (e) {
                          e.mode = 'disabled';
                        });
                      else {
                        var o = a[r];
                        o && (o.mode = 'disabled');
                      }
                      var s = a[e];
                      s && (s.mode = this.subtitleDisplay ? 'showing' : 'hidden');
                    }
                  },
                },
                {
                  key: 'setSubtitleTrack',
                  value: function (e, t) {
                    var n,
                      r = this.tracksInGroup;
                    if (this.media) {
                      if ((this.trackId !== e && this.toggleTrackModes(e), !((this.trackId === e && (-1 === e || (null != (n = r[e]) && n.details))) || e < -1 || e >= r.length))) {
                        this.clearTimer();
                        var i = r[e];
                        if ((this.log('Switching to subtitle-track '.concat(e) + (i ? ' "'.concat(i.name, '" lang:').concat(i.lang, ' group:').concat(i.groupId) : '')), (this.trackId = e), i)) {
                          var a = i.id,
                            o = i.groupId,
                            s = void 0 === o ? '' : o,
                            l = i.name,
                            u = i.type,
                            c = i.url;
                          this.hls.trigger(Q.SUBTITLE_TRACK_SWITCH, { id: a, groupId: s, name: l, type: u, url: c });
                          var d = this.switchParams(i.url, null == t ? void 0 : t.details);
                          this.loadPlaylist(d);
                        } else this.hls.trigger(Q.SUBTITLE_TRACK_SWITCH, { id: e });
                      }
                    } else this.queuedDefaultTrack = e;
                  },
                },
                {
                  key: 'onTextTracksChanged',
                  value: function () {
                    if ((this.useTextTrackPolling || self.clearInterval(this.subtitlePollingInterval), this.media && this.hls.config.renderTextTracksNatively)) {
                      for (var e = -1, t = Zi(this.media.textTracks), n = 0; n < t.length; n++)
                        if ('hidden' === t[n].mode) e = n;
                        else if ('showing' === t[n].mode) {
                          e = n;
                          break;
                        }
                      this.subtitleTrack !== e && (this.subtitleTrack = e);
                    }
                  },
                },
              ]),
              n
            );
          })(zn);
        function Zi(e) {
          for (var t = [], n = 0; n < e.length; n++) {
            var r = e[n];
            ('subtitles' !== r.kind && 'captions' !== r.kind) || !r.label || t.push(e[n]);
          }
          return t;
        }
        var Ji = (function () {
            function e(t) {
              k(this, e), (this.buffers = void 0), (this.queues = { video: [], audio: [], audiovideo: [] }), (this.buffers = t);
            }
            return (
              w(e, [
                {
                  key: 'append',
                  value: function (e, t) {
                    var n = this.queues[t];
                    n.push(e), 1 === n.length && this.buffers[t] && this.executeNext(t);
                  },
                },
                {
                  key: 'insertAbort',
                  value: function (e, t) {
                    this.queues[t].unshift(e), this.executeNext(t);
                  },
                },
                {
                  key: 'appendBlocker',
                  value: function (e) {
                    var t,
                      n = new Promise(function (e) {
                        t = e;
                      }),
                      r = { execute: t, onStart: function () {}, onComplete: function () {}, onError: function () {} };
                    return this.append(r, e), n;
                  },
                },
                {
                  key: 'executeNext',
                  value: function (e) {
                    var t = this.buffers,
                      n = this.queues,
                      r = t[e],
                      i = n[e];
                    if (i.length) {
                      var a = i[0];
                      try {
                        a.execute();
                      } catch (t) {
                        ae.warn('[buffer-operation-queue]: Unhandled exception executing the current operation'), a.onError(t), (null != r && r.updating) || (i.shift(), this.executeNext(e));
                      }
                    }
                  },
                },
                {
                  key: 'shiftAndExecuteNext',
                  value: function (e) {
                    this.queues[e].shift(), this.executeNext(e);
                  },
                },
                {
                  key: 'current',
                  value: function (e) {
                    return this.queues[e][0];
                  },
                },
              ]),
              e
            );
          })(),
          ea = kt(),
          ta = /([ha]vc.)(?:\.[^.,]+)+/,
          na = (function () {
            function e(t) {
              var n = this;
              k(this, e),
                (this.details = null),
                (this._objectUrl = null),
                (this.operationQueue = void 0),
                (this.listeners = void 0),
                (this.hls = void 0),
                (this.bufferCodecEventsExpected = 0),
                (this._bufferCodecEventsTotal = 0),
                (this.media = null),
                (this.mediaSource = null),
                (this.lastMpegAudioChunk = null),
                (this.appendError = 0),
                (this.tracks = {}),
                (this.pendingTracks = {}),
                (this.sourceBuffer = void 0),
                (this._onMediaSourceOpen = function () {
                  var e = n.media,
                    t = n.mediaSource;
                  ae.log('[buffer-controller]: Media source opened'),
                    e && (e.removeEventListener('emptied', n._onMediaEmptied), n.updateMediaElementDuration(), n.hls.trigger(Q.MEDIA_ATTACHED, { media: e })),
                    t && t.removeEventListener('sourceopen', n._onMediaSourceOpen),
                    n.checkPendingTracks();
                }),
                (this._onMediaSourceClose = function () {
                  ae.log('[buffer-controller]: Media source closed');
                }),
                (this._onMediaSourceEnded = function () {
                  ae.log('[buffer-controller]: Media source ended');
                }),
                (this._onMediaEmptied = function () {
                  var e = n.media,
                    t = n._objectUrl;
                  e && e.src !== t && ae.error('Media element src was set while attaching MediaSource ('.concat(t, ' > ').concat(e.src, ')'));
                }),
                (this.hls = t),
                this._initSourceBuffer(),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'hasSourceTypes',
                  value: function () {
                    return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0;
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), (this.details = null), (this.lastMpegAudioChunk = null);
                  },
                },
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
                      e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.on(Q.BUFFER_RESET, this.onBufferReset, this),
                      e.on(Q.BUFFER_APPENDING, this.onBufferAppending, this),
                      e.on(Q.BUFFER_CODECS, this.onBufferCodecs, this),
                      e.on(Q.BUFFER_EOS, this.onBufferEos, this),
                      e.on(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.on(Q.LEVEL_UPDATED, this.onLevelUpdated, this),
                      e.on(Q.FRAG_PARSED, this.onFragParsed, this),
                      e.on(Q.FRAG_CHANGED, this.onFragChanged, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e.off(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
                      e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                      e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.off(Q.BUFFER_RESET, this.onBufferReset, this),
                      e.off(Q.BUFFER_APPENDING, this.onBufferAppending, this),
                      e.off(Q.BUFFER_CODECS, this.onBufferCodecs, this),
                      e.off(Q.BUFFER_EOS, this.onBufferEos, this),
                      e.off(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                      e.off(Q.LEVEL_UPDATED, this.onLevelUpdated, this),
                      e.off(Q.FRAG_PARSED, this.onFragParsed, this),
                      e.off(Q.FRAG_CHANGED, this.onFragChanged, this);
                  },
                },
                {
                  key: '_initSourceBuffer',
                  value: function () {
                    (this.sourceBuffer = {}), (this.operationQueue = new Ji(this.sourceBuffer)), (this.listeners = { audio: [], video: [], audiovideo: [] }), (this.lastMpegAudioChunk = null);
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = 0), (this.details = null);
                  },
                },
                {
                  key: 'onManifestParsed',
                  value: function (e, t) {
                    var n = 2;
                    ((t.audio && !t.video) || !t.altAudio) && (n = 1),
                      (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = n),
                      ae.log(''.concat(this.bufferCodecEventsExpected, ' bufferCodec event(s) expected'));
                  },
                },
                {
                  key: 'onMediaAttaching',
                  value: function (e, t) {
                    var n = (this.media = t.media);
                    if (n && ea) {
                      var r = (this.mediaSource = new ea());
                      r.addEventListener('sourceopen', this._onMediaSourceOpen),
                        r.addEventListener('sourceended', this._onMediaSourceEnded),
                        r.addEventListener('sourceclose', this._onMediaSourceClose),
                        (n.src = self.URL.createObjectURL(r)),
                        (this._objectUrl = n.src),
                        n.addEventListener('emptied', this._onMediaEmptied);
                    }
                  },
                },
                {
                  key: 'onMediaDetaching',
                  value: function () {
                    var e = this.media,
                      t = this.mediaSource,
                      n = this._objectUrl;
                    if (t) {
                      if ((ae.log('[buffer-controller]: media source detaching'), 'open' === t.readyState))
                        try {
                          t.endOfStream();
                        } catch (e) {
                          ae.warn('[buffer-controller]: onMediaDetaching: '.concat(e.message, ' while calling endOfStream'));
                        }
                      this.onBufferReset(),
                        t.removeEventListener('sourceopen', this._onMediaSourceOpen),
                        t.removeEventListener('sourceended', this._onMediaSourceEnded),
                        t.removeEventListener('sourceclose', this._onMediaSourceClose),
                        e &&
                          (e.removeEventListener('emptied', this._onMediaEmptied),
                          n && self.URL.revokeObjectURL(n),
                          e.src === n ? (e.removeAttribute('src'), e.load()) : ae.warn('[buffer-controller]: media.src was changed by a third party - skip cleanup')),
                        (this.mediaSource = null),
                        (this.media = null),
                        (this._objectUrl = null),
                        (this.bufferCodecEventsExpected = this._bufferCodecEventsTotal),
                        (this.pendingTracks = {}),
                        (this.tracks = {});
                    }
                    this.hls.trigger(Q.MEDIA_DETACHED, void 0);
                  },
                },
                {
                  key: 'onBufferReset',
                  value: function () {
                    var e = this;
                    this.getSourceBufferTypes().forEach(function (t) {
                      var n = e.sourceBuffer[t];
                      try {
                        n && (e.removeBufferListeners(t), e.mediaSource && e.mediaSource.removeSourceBuffer(n), (e.sourceBuffer[t] = void 0));
                      } catch (e) {
                        ae.warn('[buffer-controller]: Failed to reset the '.concat(t, ' buffer'), e);
                      }
                    }),
                      this._initSourceBuffer();
                  },
                },
                {
                  key: 'onBufferCodecs',
                  value: function (e, t) {
                    var n = this,
                      r = this.getSourceBufferTypes().length;
                    Object.keys(t).forEach(function (e) {
                      if (r) {
                        var i = n.tracks[e];
                        if (i && 'function' == typeof i.buffer.changeType) {
                          var a = t[e],
                            o = a.id,
                            s = a.codec,
                            l = a.levelCodec,
                            u = a.container,
                            c = a.metadata,
                            d = (i.levelCodec || i.codec).replace(ta, '$1'),
                            f = (l || s).replace(ta, '$1');
                          if (d !== f) {
                            var h = ''.concat(u, ';codecs=').concat(l || s);
                            n.appendChangeType(e, h),
                              ae.log('[buffer-controller]: switching codec '.concat(d, ' to ').concat(f)),
                              (n.tracks[e] = { buffer: i.buffer, codec: s, container: u, levelCodec: l, metadata: c, id: o });
                          }
                        }
                      } else n.pendingTracks[e] = t[e];
                    }),
                      r ||
                        ((this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0)), this.mediaSource && 'open' === this.mediaSource.readyState && this.checkPendingTracks());
                  },
                },
                {
                  key: 'appendChangeType',
                  value: function (e, t) {
                    var n = this,
                      r = this.operationQueue,
                      i = {
                        execute: function () {
                          var i = n.sourceBuffer[e];
                          i && (ae.log('[buffer-controller]: changing '.concat(e, ' sourceBuffer type to ').concat(t)), i.changeType(t)), r.shiftAndExecuteNext(e);
                        },
                        onStart: function () {},
                        onComplete: function () {},
                        onError: function (t) {
                          ae.warn('[buffer-controller]: Failed to change '.concat(e, ' SourceBuffer type'), t);
                        },
                      };
                    r.append(i, e);
                  },
                },
                {
                  key: 'onBufferAppending',
                  value: function (e, t) {
                    var n = this,
                      r = this.hls,
                      i = this.operationQueue,
                      a = this.tracks,
                      o = t.data,
                      s = t.type,
                      l = t.frag,
                      u = t.part,
                      c = t.chunkMeta,
                      d = c.buffering[s],
                      f = self.performance.now();
                    d.start = f;
                    var h = l.stats.buffering,
                      p = u ? u.stats.buffering : null;
                    0 === h.start && (h.start = f), p && 0 === p.start && (p.start = f);
                    var v = a.audio,
                      m = !1;
                    'audio' === s &&
                      'audio/mpeg' === (null == v ? void 0 : v.container) &&
                      ((m = !this.lastMpegAudioChunk || 1 === c.id || this.lastMpegAudioChunk.sn !== c.sn), (this.lastMpegAudioChunk = c));
                    var g = l.start,
                      y = {
                        execute: function () {
                          if (((d.executeStart = self.performance.now()), m)) {
                            var e = n.sourceBuffer[s];
                            if (e) {
                              var t = g - e.timestampOffset;
                              Math.abs(t) >= 0.1 &&
                                (ae.log('[buffer-controller]: Updating audio SourceBuffer timestampOffset to '.concat(g, ' (delta: ').concat(t, ') sn: ').concat(l.sn, ')')), (e.timestampOffset = g));
                            }
                          }
                          n.appendExecutor(o, s);
                        },
                        onStart: function () {},
                        onComplete: function () {
                          var e = self.performance.now();
                          (d.executeEnd = d.end = e), 0 === h.first && (h.first = e), p && 0 === p.first && (p.first = e);
                          var t = n.sourceBuffer,
                            r = {};
                          for (var i in t) r[i] = ar.getBuffered(t[i]);
                          (n.appendError = 0), n.hls.trigger(Q.BUFFER_APPENDED, { type: s, frag: l, part: u, chunkMeta: c, parent: l.type, timeRanges: r });
                        },
                        onError: function (e) {
                          ae.error('[buffer-controller]: Error encountered while trying to append to the '.concat(s, ' SourceBuffer'), e);
                          var t = { type: Z.MEDIA_ERROR, parent: l.type, details: J.BUFFER_APPEND_ERROR, frag: l, part: u, chunkMeta: c, error: e, err: e, fatal: !1 };
                          e.code === DOMException.QUOTA_EXCEEDED_ERR
                            ? (t.details = J.BUFFER_FULL_ERROR)
                            : (n.appendError++,
                              (t.details = J.BUFFER_APPEND_ERROR),
                              n.appendError > r.config.appendErrorMaxRetry &&
                                (ae.error('[buffer-controller]: Failed '.concat(r.config.appendErrorMaxRetry, ' times to append segment in sourceBuffer')), (t.fatal = !0))),
                            r.trigger(Q.ERROR, t);
                        },
                      };
                    i.append(y, s);
                  },
                },
                {
                  key: 'onBufferFlushing',
                  value: function (e, t) {
                    var n = this,
                      r = this.operationQueue,
                      i = function (e) {
                        return {
                          execute: n.removeExecutor.bind(n, e, t.startOffset, t.endOffset),
                          onStart: function () {},
                          onComplete: function () {
                            n.hls.trigger(Q.BUFFER_FLUSHED, { type: e });
                          },
                          onError: function (t) {
                            ae.warn('[buffer-controller]: Failed to remove from '.concat(e, ' SourceBuffer'), t);
                          },
                        };
                      };
                    t.type
                      ? r.append(i(t.type), t.type)
                      : this.getSourceBufferTypes().forEach(function (e) {
                          r.append(i(e), e);
                        });
                  },
                },
                {
                  key: 'onFragParsed',
                  value: function (e, t) {
                    var n = this,
                      r = t.frag,
                      i = t.part,
                      a = [],
                      o = i ? i.elementaryStreams : r.elementaryStreams;
                    o[pe] ? a.push('audiovideo') : (o[fe] && a.push('audio'), o[he] && a.push('video'));
                    0 === a.length && ae.warn('Fragments must have at least one ElementaryStreamType set. type: '.concat(r.type, ' level: ').concat(r.level, ' sn: ').concat(r.sn)),
                      this.blockBuffers(function () {
                        var e = self.performance.now();
                        (r.stats.buffering.end = e), i && (i.stats.buffering.end = e);
                        var t = i ? i.stats : r.stats;
                        n.hls.trigger(Q.FRAG_BUFFERED, { frag: r, part: i, stats: t, id: r.type });
                      }, a);
                  },
                },
                {
                  key: 'onFragChanged',
                  value: function (e, t) {
                    this.flushBackBuffer();
                  },
                },
                {
                  key: 'onBufferEos',
                  value: function (e, t) {
                    var n = this;
                    this.getSourceBufferTypes().reduce(function (e, r) {
                      var i = n.sourceBuffer[r];
                      return (
                        !i || (t.type && t.type !== r) || ((i.ending = !0), i.ended || ((i.ended = !0), ae.log('[buffer-controller]: '.concat(r, ' sourceBuffer now EOS')))), e && !(i && !i.ended)
                      );
                    }, !0) &&
                      (ae.log('[buffer-controller]: Queueing mediaSource.endOfStream()'),
                      this.blockBuffers(function () {
                        n.getSourceBufferTypes().forEach(function (e) {
                          var t = n.sourceBuffer[e];
                          t && (t.ending = !1);
                        });
                        var e = n.mediaSource;
                        e && 'open' === e.readyState
                          ? (ae.log('[buffer-controller]: Calling mediaSource.endOfStream()'), e.endOfStream())
                          : e && ae.info('[buffer-controller]: Could not call mediaSource.endOfStream(). mediaSource.readyState: '.concat(e.readyState));
                      }));
                  },
                },
                {
                  key: 'onLevelUpdated',
                  value: function (e, t) {
                    var n = t.details;
                    n.fragments.length && ((this.details = n), this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration());
                  },
                },
                {
                  key: 'flushBackBuffer',
                  value: function () {
                    var e = this.hls,
                      t = this.details,
                      n = this.media,
                      r = this.sourceBuffer;
                    if (n && null !== t) {
                      var i = this.getSourceBufferTypes();
                      if (i.length) {
                        var a = t.live && null !== e.config.liveBackBufferLength ? e.config.liveBackBufferLength : e.config.backBufferLength;
                        if ($(a) && !(a < 0)) {
                          var o = n.currentTime,
                            s = t.levelTargetDuration,
                            l = Math.max(a, s),
                            u = Math.floor(o / s) * s - l;
                          i.forEach(function (n) {
                            var i = r[n];
                            if (i) {
                              var a = ar.getBuffered(i);
                              if (a.length > 0 && u > a.start(0)) {
                                if ((e.trigger(Q.BACK_BUFFER_REACHED, { bufferEnd: u }), t.live)) e.trigger(Q.LIVE_BACK_BUFFER_REACHED, { bufferEnd: u });
                                else if (i.ended && a.end(a.length - 1) - o < 2 * s)
                                  return void ae.info('[buffer-controller]: Cannot flush '.concat(n, ' back buffer while SourceBuffer is in ended state'));
                                e.trigger(Q.BUFFER_FLUSHING, { startOffset: 0, endOffset: u, type: n });
                              }
                            }
                          });
                        }
                      }
                    }
                  },
                },
                {
                  key: 'updateMediaElementDuration',
                  value: function () {
                    if (this.details && this.media && this.mediaSource && 'open' === this.mediaSource.readyState) {
                      var e = this.details,
                        t = this.hls,
                        n = this.media,
                        r = this.mediaSource,
                        i = e.fragments[0].start + e.totalduration,
                        a = n.duration,
                        o = $(r.duration) ? r.duration : 0;
                      e.live && t.config.liveDurationInfinity
                        ? (ae.log('[buffer-controller]: Media Source duration is set to Infinity'), (r.duration = 1 / 0), this.updateSeekableRange(e))
                        : ((i > o && i > a) || !$(a)) && (ae.log('[buffer-controller]: Updating Media Source duration to '.concat(i.toFixed(3))), (r.duration = i));
                    }
                  },
                },
                {
                  key: 'updateSeekableRange',
                  value: function (e) {
                    var t = this.mediaSource,
                      n = e.fragments;
                    if (n.length && e.live && null != t && t.setLiveSeekableRange) {
                      var r = Math.max(0, n[0].start),
                        i = Math.max(r, r + e.totalduration);
                      t.setLiveSeekableRange(r, i);
                    }
                  },
                },
                {
                  key: 'checkPendingTracks',
                  value: function () {
                    var e = this.bufferCodecEventsExpected,
                      t = this.operationQueue,
                      n = this.pendingTracks,
                      r = Object.keys(n).length;
                    if ((r && !e) || 2 === r) {
                      this.createSourceBuffers(n), (this.pendingTracks = {});
                      var i = this.getSourceBufferTypes();
                      if (i.length)
                        this.hls.trigger(Q.BUFFER_CREATED, { tracks: this.tracks }),
                          i.forEach(function (e) {
                            t.executeNext(e);
                          });
                      else {
                        var a = new Error('could not create source buffer for media codec(s)');
                        this.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_INCOMPATIBLE_CODECS_ERROR, fatal: !0, error: a, reason: a.message });
                      }
                    }
                  },
                },
                {
                  key: 'createSourceBuffers',
                  value: function (e) {
                    var t = this.sourceBuffer,
                      n = this.mediaSource;
                    if (!n) throw Error('createSourceBuffers called when mediaSource was null');
                    for (var r in e)
                      if (!t[r]) {
                        var i = e[r];
                        if (!i) throw Error('source buffer exists for track '.concat(r, ', however track does not'));
                        var a = i.levelCodec || i.codec,
                          o = ''.concat(i.container, ';codecs=').concat(a);
                        ae.log('[buffer-controller]: creating sourceBuffer('.concat(o, ')'));
                        try {
                          var s = (t[r] = n.addSourceBuffer(o)),
                            l = r;
                          this.addBufferListener(l, 'updatestart', this._onSBUpdateStart),
                            this.addBufferListener(l, 'updateend', this._onSBUpdateEnd),
                            this.addBufferListener(l, 'error', this._onSBUpdateError),
                            (this.tracks[r] = { buffer: s, codec: a, container: i.container, levelCodec: i.levelCodec, metadata: i.metadata, id: i.id });
                        } catch (e) {
                          ae.error('[buffer-controller]: error while trying to add sourceBuffer: '.concat(e.message)),
                            this.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_ADD_CODEC_ERROR, fatal: !1, error: e, mimeType: o });
                        }
                      }
                  },
                },
                {
                  key: '_onSBUpdateStart',
                  value: function (e) {
                    this.operationQueue.current(e).onStart();
                  },
                },
                {
                  key: '_onSBUpdateEnd',
                  value: function (e) {
                    var t = this.operationQueue;
                    t.current(e).onComplete(), t.shiftAndExecuteNext(e);
                  },
                },
                {
                  key: '_onSBUpdateError',
                  value: function (e, t) {
                    var n = new Error(''.concat(e, ' SourceBuffer error'));
                    ae.error('[buffer-controller]: '.concat(n), t), this.hls.trigger(Q.ERROR, { type: Z.MEDIA_ERROR, details: J.BUFFER_APPENDING_ERROR, error: n, fatal: !1 });
                    var r = this.operationQueue.current(e);
                    r && r.onError(t);
                  },
                },
                {
                  key: 'removeExecutor',
                  value: function (e, t, n) {
                    var r = this.media,
                      i = this.mediaSource,
                      a = this.operationQueue,
                      o = this.sourceBuffer[e];
                    if (!r || !i || !o) return ae.warn('[buffer-controller]: Attempting to remove from the '.concat(e, ' SourceBuffer, but it does not exist')), void a.shiftAndExecuteNext(e);
                    var s = $(r.duration) ? r.duration : 1 / 0,
                      l = $(i.duration) ? i.duration : 1 / 0,
                      u = Math.max(0, t),
                      c = Math.min(n, s, l);
                    c > u && !o.ending
                      ? ((o.ended = !1), ae.log('[buffer-controller]: Removing ['.concat(u, ',').concat(c, '] from the ').concat(e, ' SourceBuffer')), o.remove(u, c))
                      : a.shiftAndExecuteNext(e);
                  },
                },
                {
                  key: 'appendExecutor',
                  value: function (e, t) {
                    var n = this.operationQueue,
                      r = this.sourceBuffer[t];
                    if (!r) return ae.warn('[buffer-controller]: Attempting to append to the '.concat(t, ' SourceBuffer, but it does not exist')), void n.shiftAndExecuteNext(t);
                    (r.ended = !1), r.appendBuffer(e);
                  },
                },
                {
                  key: 'blockBuffers',
                  value: function (e) {
                    var t = this,
                      n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.getSourceBufferTypes();
                    if (!n.length) return ae.log('[buffer-controller]: Blocking operation requested, but no SourceBuffers exist'), void Promise.resolve().then(e);
                    var r = this.operationQueue,
                      i = n.map(function (e) {
                        return r.appendBlocker(e);
                      });
                    Promise.all(i).then(function () {
                      e(),
                        n.forEach(function (e) {
                          var n = t.sourceBuffer[e];
                          (null != n && n.updating) || r.shiftAndExecuteNext(e);
                        });
                    });
                  },
                },
                {
                  key: 'getSourceBufferTypes',
                  value: function () {
                    return Object.keys(this.sourceBuffer);
                  },
                },
                {
                  key: 'addBufferListener',
                  value: function (e, t, n) {
                    var r = this.sourceBuffer[e];
                    if (r) {
                      var i = n.bind(this, e);
                      this.listeners[e].push({ event: t, listener: i }), r.addEventListener(t, i);
                    }
                  },
                },
                {
                  key: 'removeBufferListeners',
                  value: function (e) {
                    var t = this.sourceBuffer[e];
                    t &&
                      this.listeners[e].forEach(function (e) {
                        t.removeEventListener(e.event, e.listener);
                      });
                  },
                },
              ]),
              e
            );
          })(),
          ra = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            128: 174,
            129: 176,
            130: 189,
            131: 191,
            132: 8482,
            133: 162,
            134: 163,
            135: 9834,
            136: 224,
            137: 32,
            138: 232,
            139: 226,
            140: 234,
            141: 238,
            142: 244,
            143: 251,
            144: 193,
            145: 201,
            146: 211,
            147: 218,
            148: 220,
            149: 252,
            150: 8216,
            151: 161,
            152: 42,
            153: 8217,
            154: 9473,
            155: 169,
            156: 8480,
            157: 8226,
            158: 8220,
            159: 8221,
            160: 192,
            161: 194,
            162: 199,
            163: 200,
            164: 202,
            165: 203,
            166: 235,
            167: 206,
            168: 207,
            169: 239,
            170: 212,
            171: 217,
            172: 249,
            173: 219,
            174: 171,
            175: 187,
            176: 195,
            177: 227,
            178: 205,
            179: 204,
            180: 236,
            181: 210,
            182: 242,
            183: 213,
            184: 245,
            185: 123,
            186: 125,
            187: 92,
            188: 94,
            189: 95,
            190: 124,
            191: 8764,
            192: 196,
            193: 228,
            194: 214,
            195: 246,
            196: 223,
            197: 165,
            198: 164,
            199: 9475,
            200: 197,
            201: 229,
            202: 216,
            203: 248,
            204: 9487,
            205: 9491,
            206: 9495,
            207: 9499,
          },
          ia = function (e) {
            var t = e;
            return ra.hasOwnProperty(e) && (t = ra[e]), String.fromCharCode(t);
          },
          aa = 15,
          oa = 100,
          sa = { 17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14 },
          la = { 17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15 },
          ua = { 25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14 },
          ca = { 25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15 },
          da = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'],
          fa = (function () {
            function e() {
              k(this, e), (this.time = null), (this.verboseLevel = 0);
            }
            return (
              w(e, [
                {
                  key: 'log',
                  value: function (e, t) {
                    if (this.verboseLevel >= e) {
                      var n = 'function' == typeof t ? t() : t;
                      ae.log(''.concat(this.time, ' [').concat(e, '] ').concat(n));
                    }
                  },
                },
              ]),
              e
            );
          })(),
          ha = function (e) {
            for (var t = [], n = 0; n < e.length; n++) t.push(e[n].toString(16));
            return t;
          },
          pa = (function () {
            function e(t, n, r, i, a) {
              k(this, e),
                (this.foreground = void 0),
                (this.underline = void 0),
                (this.italics = void 0),
                (this.background = void 0),
                (this.flash = void 0),
                (this.foreground = t || 'white'),
                (this.underline = n || !1),
                (this.italics = r || !1),
                (this.background = i || 'black'),
                (this.flash = a || !1);
            }
            return (
              w(e, [
                {
                  key: 'reset',
                  value: function () {
                    (this.foreground = 'white'), (this.underline = !1), (this.italics = !1), (this.background = 'black'), (this.flash = !1);
                  },
                },
                {
                  key: 'setStyles',
                  value: function (e) {
                    for (var t = ['foreground', 'underline', 'italics', 'background', 'flash'], n = 0; n < t.length; n++) {
                      var r = t[n];
                      e.hasOwnProperty(r) && (this[r] = e[r]);
                    }
                  },
                },
                {
                  key: 'isDefault',
                  value: function () {
                    return 'white' === this.foreground && !this.underline && !this.italics && 'black' === this.background && !this.flash;
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    return this.foreground === e.foreground && this.underline === e.underline && this.italics === e.italics && this.background === e.background && this.flash === e.flash;
                  },
                },
                {
                  key: 'copy',
                  value: function (e) {
                    (this.foreground = e.foreground), (this.underline = e.underline), (this.italics = e.italics), (this.background = e.background), (this.flash = e.flash);
                  },
                },
                {
                  key: 'toString',
                  value: function () {
                    return 'color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics + ', background=' + this.background + ', flash=' + this.flash;
                  },
                },
              ]),
              e
            );
          })(),
          va = (function () {
            function e(t, n, r, i, a, o) {
              k(this, e), (this.uchar = void 0), (this.penState = void 0), (this.uchar = t || ' '), (this.penState = new pa(n, r, i, a, o));
            }
            return (
              w(e, [
                {
                  key: 'reset',
                  value: function () {
                    (this.uchar = ' '), this.penState.reset();
                  },
                },
                {
                  key: 'setChar',
                  value: function (e, t) {
                    (this.uchar = e), this.penState.copy(t);
                  },
                },
                {
                  key: 'setPenState',
                  value: function (e) {
                    this.penState.copy(e);
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    return this.uchar === e.uchar && this.penState.equals(e.penState);
                  },
                },
                {
                  key: 'copy',
                  value: function (e) {
                    (this.uchar = e.uchar), this.penState.copy(e.penState);
                  },
                },
                {
                  key: 'isEmpty',
                  value: function () {
                    return ' ' === this.uchar && this.penState.isDefault();
                  },
                },
              ]),
              e
            );
          })(),
          ma = (function () {
            function e(t) {
              k(this, e), (this.chars = void 0), (this.pos = void 0), (this.currPenState = void 0), (this.cueStartTime = void 0), (this.logger = void 0), (this.chars = []);
              for (var n = 0; n < oa; n++) this.chars.push(new va());
              (this.logger = t), (this.pos = 0), (this.currPenState = new pa());
            }
            return (
              w(e, [
                {
                  key: 'equals',
                  value: function (e) {
                    for (var t = !0, n = 0; n < oa; n++)
                      if (!this.chars[n].equals(e.chars[n])) {
                        t = !1;
                        break;
                      }
                    return t;
                  },
                },
                {
                  key: 'copy',
                  value: function (e) {
                    for (var t = 0; t < oa; t++) this.chars[t].copy(e.chars[t]);
                  },
                },
                {
                  key: 'isEmpty',
                  value: function () {
                    for (var e = !0, t = 0; t < oa; t++)
                      if (!this.chars[t].isEmpty()) {
                        e = !1;
                        break;
                      }
                    return e;
                  },
                },
                {
                  key: 'setCursor',
                  value: function (e) {
                    this.pos !== e && (this.pos = e),
                      this.pos < 0
                        ? (this.logger.log(3, 'Negative cursor position ' + this.pos), (this.pos = 0))
                        : this.pos > oa && (this.logger.log(3, 'Too large cursor position ' + this.pos), (this.pos = oa));
                  },
                },
                {
                  key: 'moveCursor',
                  value: function (e) {
                    var t = this.pos + e;
                    if (e > 1) for (var n = this.pos + 1; n < t + 1; n++) this.chars[n].setPenState(this.currPenState);
                    this.setCursor(t);
                  },
                },
                {
                  key: 'backSpace',
                  value: function () {
                    this.moveCursor(-1), this.chars[this.pos].setChar(' ', this.currPenState);
                  },
                },
                {
                  key: 'insertChar',
                  value: function (e) {
                    var t = this;
                    e >= 144 && this.backSpace();
                    var n = ia(e);
                    this.pos >= oa
                      ? this.logger.log(0, function () {
                          return 'Cannot insert ' + e.toString(16) + ' (' + n + ') at position ' + t.pos + '. Skipping it!';
                        })
                      : (this.chars[this.pos].setChar(n, this.currPenState), this.moveCursor(1));
                  },
                },
                {
                  key: 'clearFromPos',
                  value: function (e) {
                    var t;
                    for (t = e; t < oa; t++) this.chars[t].reset();
                  },
                },
                {
                  key: 'clear',
                  value: function () {
                    this.clearFromPos(0), (this.pos = 0), this.currPenState.reset();
                  },
                },
                {
                  key: 'clearToEndOfRow',
                  value: function () {
                    this.clearFromPos(this.pos);
                  },
                },
                {
                  key: 'getTextString',
                  value: function () {
                    for (var e = [], t = !0, n = 0; n < oa; n++) {
                      var r = this.chars[n].uchar;
                      ' ' !== r && (t = !1), e.push(r);
                    }
                    return t ? '' : e.join('');
                  },
                },
                {
                  key: 'setPenStyles',
                  value: function (e) {
                    this.currPenState.setStyles(e), this.chars[this.pos].setPenState(this.currPenState);
                  },
                },
              ]),
              e
            );
          })(),
          ga = (function () {
            function e(t) {
              k(this, e), (this.rows = void 0), (this.currRow = void 0), (this.nrRollUpRows = void 0), (this.lastOutputScreen = void 0), (this.logger = void 0), (this.rows = []);
              for (var n = 0; n < aa; n++) this.rows.push(new ma(t));
              (this.logger = t), (this.currRow = 14), (this.nrRollUpRows = null), (this.lastOutputScreen = null), this.reset();
            }
            return (
              w(e, [
                {
                  key: 'reset',
                  value: function () {
                    for (var e = 0; e < aa; e++) this.rows[e].clear();
                    this.currRow = 14;
                  },
                },
                {
                  key: 'equals',
                  value: function (e) {
                    for (var t = !0, n = 0; n < aa; n++)
                      if (!this.rows[n].equals(e.rows[n])) {
                        t = !1;
                        break;
                      }
                    return t;
                  },
                },
                {
                  key: 'copy',
                  value: function (e) {
                    for (var t = 0; t < aa; t++) this.rows[t].copy(e.rows[t]);
                  },
                },
                {
                  key: 'isEmpty',
                  value: function () {
                    for (var e = !0, t = 0; t < aa; t++)
                      if (!this.rows[t].isEmpty()) {
                        e = !1;
                        break;
                      }
                    return e;
                  },
                },
                {
                  key: 'backSpace',
                  value: function () {
                    this.rows[this.currRow].backSpace();
                  },
                },
                {
                  key: 'clearToEndOfRow',
                  value: function () {
                    this.rows[this.currRow].clearToEndOfRow();
                  },
                },
                {
                  key: 'insertChar',
                  value: function (e) {
                    this.rows[this.currRow].insertChar(e);
                  },
                },
                {
                  key: 'setPen',
                  value: function (e) {
                    this.rows[this.currRow].setPenStyles(e);
                  },
                },
                {
                  key: 'moveCursor',
                  value: function (e) {
                    this.rows[this.currRow].moveCursor(e);
                  },
                },
                {
                  key: 'setCursor',
                  value: function (e) {
                    this.logger.log(2, 'setCursor: ' + e), this.rows[this.currRow].setCursor(e);
                  },
                },
                {
                  key: 'setPAC',
                  value: function (e) {
                    this.logger.log(2, function () {
                      return 'pacData = ' + JSON.stringify(e);
                    });
                    var t = e.row - 1;
                    if ((this.nrRollUpRows && t < this.nrRollUpRows - 1 && (t = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== t)) {
                      for (var n = 0; n < aa; n++) this.rows[n].clear();
                      var r = this.currRow + 1 - this.nrRollUpRows,
                        i = this.lastOutputScreen;
                      if (i) {
                        var a = i.rows[r].cueStartTime,
                          o = this.logger.time;
                        if (a && null !== o && a < o) for (var s = 0; s < this.nrRollUpRows; s++) this.rows[t - this.nrRollUpRows + s + 1].copy(i.rows[r + s]);
                      }
                    }
                    this.currRow = t;
                    var l = this.rows[this.currRow];
                    if (null !== e.indent) {
                      var u = e.indent,
                        c = Math.max(u - 1, 0);
                      l.setCursor(e.indent), (e.color = l.chars[c].penState.foreground);
                    }
                    var d = { foreground: e.color, underline: e.underline, italics: e.italics, background: 'black', flash: !1 };
                    this.setPen(d);
                  },
                },
                {
                  key: 'setBkgData',
                  value: function (e) {
                    this.logger.log(2, function () {
                      return 'bkgData = ' + JSON.stringify(e);
                    }),
                      this.backSpace(),
                      this.setPen(e),
                      this.insertChar(32);
                  },
                },
                {
                  key: 'setRollUpRows',
                  value: function (e) {
                    this.nrRollUpRows = e;
                  },
                },
                {
                  key: 'rollUp',
                  value: function () {
                    var e = this;
                    if (null !== this.nrRollUpRows) {
                      this.logger.log(1, function () {
                        return e.getDisplayText();
                      });
                      var t = this.currRow + 1 - this.nrRollUpRows,
                        n = this.rows.splice(t, 1)[0];
                      n.clear(), this.rows.splice(this.currRow, 0, n), this.logger.log(2, 'Rolling up');
                    } else this.logger.log(3, 'roll_up but nrRollUpRows not set yet');
                  },
                },
                {
                  key: 'getDisplayText',
                  value: function (e) {
                    e = e || !1;
                    for (var t = [], n = '', r = -1, i = 0; i < aa; i++) {
                      var a = this.rows[i].getTextString();
                      a && ((r = i + 1), e ? t.push('Row ' + r + ": '" + a + "'") : t.push(a.trim()));
                    }
                    return t.length > 0 && (n = e ? '[' + t.join(' | ') + ']' : t.join('\n')), n;
                  },
                },
                {
                  key: 'getTextAndFormat',
                  value: function () {
                    return this.rows;
                  },
                },
              ]),
              e
            );
          })(),
          ya = (function () {
            function e(t, n, r) {
              k(this, e),
                (this.chNr = void 0),
                (this.outputFilter = void 0),
                (this.mode = void 0),
                (this.verbose = void 0),
                (this.displayedMemory = void 0),
                (this.nonDisplayedMemory = void 0),
                (this.lastOutputScreen = void 0),
                (this.currRollUpRow = void 0),
                (this.writeScreen = void 0),
                (this.cueStartTime = void 0),
                (this.logger = void 0),
                (this.chNr = t),
                (this.outputFilter = n),
                (this.mode = null),
                (this.verbose = 0),
                (this.displayedMemory = new ga(r)),
                (this.nonDisplayedMemory = new ga(r)),
                (this.lastOutputScreen = new ga(r)),
                (this.currRollUpRow = this.displayedMemory.rows[14]),
                (this.writeScreen = this.displayedMemory),
                (this.mode = null),
                (this.cueStartTime = null),
                (this.logger = r);
            }
            return (
              w(e, [
                {
                  key: 'reset',
                  value: function () {
                    (this.mode = null),
                      this.displayedMemory.reset(),
                      this.nonDisplayedMemory.reset(),
                      this.lastOutputScreen.reset(),
                      this.outputFilter.reset(),
                      (this.currRollUpRow = this.displayedMemory.rows[14]),
                      (this.writeScreen = this.displayedMemory),
                      (this.mode = null),
                      (this.cueStartTime = null);
                  },
                },
                {
                  key: 'getHandler',
                  value: function () {
                    return this.outputFilter;
                  },
                },
                {
                  key: 'setHandler',
                  value: function (e) {
                    this.outputFilter = e;
                  },
                },
                {
                  key: 'setPAC',
                  value: function (e) {
                    this.writeScreen.setPAC(e);
                  },
                },
                {
                  key: 'setBkgData',
                  value: function (e) {
                    this.writeScreen.setBkgData(e);
                  },
                },
                {
                  key: 'setMode',
                  value: function (e) {
                    e !== this.mode &&
                      ((this.mode = e),
                      this.logger.log(2, function () {
                        return 'MODE=' + e;
                      }),
                      'MODE_POP-ON' === this.mode ? (this.writeScreen = this.nonDisplayedMemory) : ((this.writeScreen = this.displayedMemory), this.writeScreen.reset()),
                      'MODE_ROLL-UP' !== this.mode && ((this.displayedMemory.nrRollUpRows = null), (this.nonDisplayedMemory.nrRollUpRows = null)),
                      (this.mode = e));
                  },
                },
                {
                  key: 'insertChars',
                  value: function (e) {
                    for (var t = this, n = 0; n < e.length; n++) this.writeScreen.insertChar(e[n]);
                    var r = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';
                    this.logger.log(2, function () {
                      return r + ': ' + t.writeScreen.getDisplayText(!0);
                    }),
                      ('MODE_PAINT-ON' !== this.mode && 'MODE_ROLL-UP' !== this.mode) ||
                        (this.logger.log(1, function () {
                          return 'DISPLAYED: ' + t.displayedMemory.getDisplayText(!0);
                        }),
                        this.outputDataUpdate());
                  },
                },
                {
                  key: 'ccRCL',
                  value: function () {
                    this.logger.log(2, 'RCL - Resume Caption Loading'), this.setMode('MODE_POP-ON');
                  },
                },
                {
                  key: 'ccBS',
                  value: function () {
                    this.logger.log(2, 'BS - BackSpace'), 'MODE_TEXT' !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate());
                  },
                },
                { key: 'ccAOF', value: function () {} },
                { key: 'ccAON', value: function () {} },
                {
                  key: 'ccDER',
                  value: function () {
                    this.logger.log(2, 'DER- Delete to End of Row'), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate();
                  },
                },
                {
                  key: 'ccRU',
                  value: function (e) {
                    this.logger.log(2, 'RU(' + e + ') - Roll Up'), (this.writeScreen = this.displayedMemory), this.setMode('MODE_ROLL-UP'), this.writeScreen.setRollUpRows(e);
                  },
                },
                {
                  key: 'ccFON',
                  value: function () {
                    this.logger.log(2, 'FON - Flash On'), this.writeScreen.setPen({ flash: !0 });
                  },
                },
                {
                  key: 'ccRDC',
                  value: function () {
                    this.logger.log(2, 'RDC - Resume Direct Captioning'), this.setMode('MODE_PAINT-ON');
                  },
                },
                {
                  key: 'ccTR',
                  value: function () {
                    this.logger.log(2, 'TR'), this.setMode('MODE_TEXT');
                  },
                },
                {
                  key: 'ccRTD',
                  value: function () {
                    this.logger.log(2, 'RTD'), this.setMode('MODE_TEXT');
                  },
                },
                {
                  key: 'ccEDM',
                  value: function () {
                    this.logger.log(2, 'EDM - Erase Displayed Memory'), this.displayedMemory.reset(), this.outputDataUpdate(!0);
                  },
                },
                {
                  key: 'ccCR',
                  value: function () {
                    this.logger.log(2, 'CR - Carriage Return'), this.writeScreen.rollUp(), this.outputDataUpdate(!0);
                  },
                },
                {
                  key: 'ccENM',
                  value: function () {
                    this.logger.log(2, 'ENM - Erase Non-displayed Memory'), this.nonDisplayedMemory.reset();
                  },
                },
                {
                  key: 'ccEOC',
                  value: function () {
                    var e = this;
                    if ((this.logger.log(2, 'EOC - End Of Caption'), 'MODE_POP-ON' === this.mode)) {
                      var t = this.displayedMemory;
                      (this.displayedMemory = this.nonDisplayedMemory),
                        (this.nonDisplayedMemory = t),
                        (this.writeScreen = this.nonDisplayedMemory),
                        this.logger.log(1, function () {
                          return 'DISP: ' + e.displayedMemory.getDisplayText();
                        });
                    }
                    this.outputDataUpdate(!0);
                  },
                },
                {
                  key: 'ccTO',
                  value: function (e) {
                    this.logger.log(2, 'TO(' + e + ') - Tab Offset'), this.writeScreen.moveCursor(e);
                  },
                },
                {
                  key: 'ccMIDROW',
                  value: function (e) {
                    var t = { flash: !1 };
                    if (((t.underline = e % 2 == 1), (t.italics = e >= 46), t.italics)) t.foreground = 'white';
                    else {
                      var n = Math.floor(e / 2) - 16;
                      t.foreground = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'][n];
                    }
                    this.logger.log(2, 'MIDROW: ' + JSON.stringify(t)), this.writeScreen.setPen(t);
                  },
                },
                {
                  key: 'outputDataUpdate',
                  value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                      t = this.logger.time;
                    null !== t &&
                      this.outputFilter &&
                      (null !== this.cueStartTime || this.displayedMemory.isEmpty()
                        ? this.displayedMemory.equals(this.lastOutputScreen) ||
                          (this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen),
                          e && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(),
                          (this.cueStartTime = this.displayedMemory.isEmpty() ? null : t))
                        : (this.cueStartTime = t),
                      this.lastOutputScreen.copy(this.displayedMemory));
                  },
                },
                {
                  key: 'cueSplitAtTime',
                  value: function (e) {
                    this.outputFilter &&
                      (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, e, this.displayedMemory), (this.cueStartTime = e)));
                  },
                },
              ]),
              e
            );
          })(),
          _a = (function () {
            function e(t, n, r) {
              k(this, e), (this.channels = void 0), (this.currentChannel = 0), (this.cmdHistory = void 0), (this.logger = void 0);
              var i = new fa();
              (this.channels = [null, new ya(t, n, i), new ya(t + 1, r, i)]), (this.cmdHistory = { a: null, b: null }), (this.logger = i);
            }
            return (
              w(e, [
                {
                  key: 'getHandler',
                  value: function (e) {
                    return this.channels[e].getHandler();
                  },
                },
                {
                  key: 'setHandler',
                  value: function (e, t) {
                    this.channels[e].setHandler(t);
                  },
                },
                {
                  key: 'addData',
                  value: function (e, t) {
                    var n,
                      r,
                      i,
                      a = !1;
                    this.logger.time = e;
                    for (var o = 0; o < t.length; o += 2)
                      if (((r = 127 & t[o]), (i = 127 & t[o + 1]), 0 !== r || 0 !== i)) {
                        if (
                          (this.logger.log(3, '[' + ha([t[o], t[o + 1]]) + '] -> (' + ha([r, i]) + ')'),
                          (n = this.parseCmd(r, i)) || (n = this.parseMidrow(r, i)),
                          n || (n = this.parsePAC(r, i)),
                          n || (n = this.parseBackgroundAttributes(r, i)),
                          !n && (a = this.parseChars(r, i)))
                        ) {
                          var s = this.currentChannel;
                          if (s && s > 0) this.channels[s].insertChars(a);
                          else this.logger.log(2, 'No channel found yet. TEXT-MODE?');
                        }
                        n || a || this.logger.log(2, "Couldn't parse cleaned data " + ha([r, i]) + ' orig: ' + ha([t[o], t[o + 1]]));
                      }
                  },
                },
                {
                  key: 'parseCmd',
                  value: function (e, t) {
                    var n = this.cmdHistory;
                    if (!((20 === e || 28 === e || 21 === e || 29 === e) && t >= 32 && t <= 47) && !((23 === e || 31 === e) && t >= 33 && t <= 35)) return !1;
                    if (Ea(e, t, n)) return ba(null, null, n), this.logger.log(3, 'Repeated command (' + ha([e, t]) + ') is dropped'), !0;
                    var r = 20 === e || 21 === e || 23 === e ? 1 : 2,
                      i = this.channels[r];
                    return (
                      20 === e || 21 === e || 28 === e || 29 === e
                        ? 32 === t
                          ? i.ccRCL()
                          : 33 === t
                          ? i.ccBS()
                          : 34 === t
                          ? i.ccAOF()
                          : 35 === t
                          ? i.ccAON()
                          : 36 === t
                          ? i.ccDER()
                          : 37 === t
                          ? i.ccRU(2)
                          : 38 === t
                          ? i.ccRU(3)
                          : 39 === t
                          ? i.ccRU(4)
                          : 40 === t
                          ? i.ccFON()
                          : 41 === t
                          ? i.ccRDC()
                          : 42 === t
                          ? i.ccTR()
                          : 43 === t
                          ? i.ccRTD()
                          : 44 === t
                          ? i.ccEDM()
                          : 45 === t
                          ? i.ccCR()
                          : 46 === t
                          ? i.ccENM()
                          : 47 === t && i.ccEOC()
                        : i.ccTO(t - 32),
                      ba(e, t, n),
                      (this.currentChannel = r),
                      !0
                    );
                  },
                },
                {
                  key: 'parseMidrow',
                  value: function (e, t) {
                    var n = 0;
                    if ((17 === e || 25 === e) && t >= 32 && t <= 47) {
                      if ((n = 17 === e ? 1 : 2) !== this.currentChannel) return this.logger.log(0, 'Mismatch channel in midrow parsing'), !1;
                      var r = this.channels[n];
                      return !!r && (r.ccMIDROW(t), this.logger.log(3, 'MIDROW (' + ha([e, t]) + ')'), !0);
                    }
                    return !1;
                  },
                },
                {
                  key: 'parsePAC',
                  value: function (e, t) {
                    var n,
                      r = this.cmdHistory;
                    if (!(((e >= 17 && e <= 23) || (e >= 25 && e <= 31)) && t >= 64 && t <= 127) && !((16 === e || 24 === e) && t >= 64 && t <= 95)) return !1;
                    if (Ea(e, t, r)) return ba(null, null, r), !0;
                    var i = e <= 23 ? 1 : 2;
                    n = t >= 64 && t <= 95 ? (1 === i ? sa[e] : ua[e]) : 1 === i ? la[e] : ca[e];
                    var a = this.channels[i];
                    return !!a && (a.setPAC(this.interpretPAC(n, t)), ba(e, t, r), (this.currentChannel = i), !0);
                  },
                },
                {
                  key: 'interpretPAC',
                  value: function (e, t) {
                    var n,
                      r = { color: null, italics: !1, indent: null, underline: !1, row: e };
                    return (
                      (n = t > 95 ? t - 96 : t - 64),
                      (r.underline = 1 == (1 & n)),
                      n <= 13
                        ? (r.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(n / 2)])
                        : n <= 15
                        ? ((r.italics = !0), (r.color = 'white'))
                        : (r.indent = 4 * Math.floor((n - 16) / 2)),
                      r
                    );
                  },
                },
                {
                  key: 'parseChars',
                  value: function (e, t) {
                    var n,
                      r,
                      i = null,
                      a = null;
                    (e >= 25 ? ((n = 2), (a = e - 8)) : ((n = 1), (a = e)), a >= 17 && a <= 19)
                      ? ((r = 17 === a ? t + 80 : 18 === a ? t + 112 : t + 144), this.logger.log(2, "Special char '" + ia(r) + "' in channel " + n), (i = [r]))
                      : e >= 32 && e <= 127 && (i = 0 === t ? [e] : [e, t]);
                    if (i) {
                      var o = ha(i);
                      this.logger.log(3, 'Char codes =  ' + o.join(',')), ba(e, t, this.cmdHistory);
                    }
                    return i;
                  },
                },
                {
                  key: 'parseBackgroundAttributes',
                  value: function (e, t) {
                    var n;
                    if (!((16 === e || 24 === e) && t >= 32 && t <= 47) && !((23 === e || 31 === e) && t >= 45 && t <= 47)) return !1;
                    var r = {};
                    16 === e || 24 === e
                      ? ((n = Math.floor((t - 32) / 2)), (r.background = da[n]), t % 2 == 1 && (r.background = r.background + '_semi'))
                      : 45 === t
                      ? (r.background = 'transparent')
                      : ((r.foreground = 'black'), 47 === t && (r.underline = !0));
                    var i = e <= 23 ? 1 : 2;
                    return this.channels[i].setBkgData(r), ba(e, t, this.cmdHistory), !0;
                  },
                },
                {
                  key: 'reset',
                  value: function () {
                    for (var e = 0; e < Object.keys(this.channels).length; e++) {
                      var t = this.channels[e];
                      t && t.reset();
                    }
                    this.cmdHistory = { a: null, b: null };
                  },
                },
                {
                  key: 'cueSplitAtTime',
                  value: function (e) {
                    for (var t = 0; t < this.channels.length; t++) {
                      var n = this.channels[t];
                      n && n.cueSplitAtTime(e);
                    }
                  },
                },
              ]),
              e
            );
          })();
        function ba(e, t, n) {
          (n.a = e), (n.b = t);
        }
        function Ea(e, t, n) {
          return n.a === e && n.b === t;
        }
        var Sa = (function () {
            function e(t, n) {
              k(this, e),
                (this.timelineController = void 0),
                (this.cueRanges = []),
                (this.trackName = void 0),
                (this.startTime = null),
                (this.endTime = null),
                (this.screen = null),
                (this.timelineController = t),
                (this.trackName = n);
            }
            return (
              w(e, [
                {
                  key: 'dispatchCue',
                  value: function () {
                    null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges), (this.startTime = null));
                  },
                },
                {
                  key: 'newCue',
                  value: function (e, t, n) {
                    (null === this.startTime || this.startTime > e) && (this.startTime = e), (this.endTime = t), (this.screen = n), this.timelineController.createCaptionsTrack(this.trackName);
                  },
                },
                {
                  key: 'reset',
                  value: function () {
                    (this.cueRanges = []), (this.startTime = null);
                  },
                },
              ]),
              e
            );
          })(),
          ka = (function () {
            if ('undefined' != typeof self && self.VTTCue) return self.VTTCue;
            var e = ['', 'lr', 'rl'],
              t = ['start', 'middle', 'end', 'left', 'right'];
            function n(e, t) {
              if ('string' != typeof t) return !1;
              if (!Array.isArray(e)) return !1;
              var n = t.toLowerCase();
              return !!~e.indexOf(n) && n;
            }
            function r(e) {
              return n(t, e);
            }
            function i(e) {
              for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
              for (var i = 1; i < arguments.length; i++) {
                var a = arguments[i];
                for (var o in a) e[o] = a[o];
              }
              return e;
            }
            function a(t, a, o) {
              var s = this,
                l = { enumerable: !0 };
              s.hasBeenReset = !1;
              var u = '',
                c = !1,
                d = t,
                f = a,
                h = o,
                p = null,
                v = '',
                m = !0,
                g = 'auto',
                y = 'start',
                _ = 50,
                b = 'middle',
                E = 50,
                S = 'middle';
              Object.defineProperty(
                s,
                'id',
                i({}, l, {
                  get: function () {
                    return u;
                  },
                  set: function (e) {
                    u = '' + e;
                  },
                }),
              ),
                Object.defineProperty(
                  s,
                  'pauseOnExit',
                  i({}, l, {
                    get: function () {
                      return c;
                    },
                    set: function (e) {
                      c = !!e;
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'startTime',
                  i({}, l, {
                    get: function () {
                      return d;
                    },
                    set: function (e) {
                      if ('number' != typeof e) throw new TypeError('Start time must be set to a number.');
                      (d = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'endTime',
                  i({}, l, {
                    get: function () {
                      return f;
                    },
                    set: function (e) {
                      if ('number' != typeof e) throw new TypeError('End time must be set to a number.');
                      (f = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'text',
                  i({}, l, {
                    get: function () {
                      return h;
                    },
                    set: function (e) {
                      (h = '' + e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'region',
                  i({}, l, {
                    get: function () {
                      return p;
                    },
                    set: function (e) {
                      (p = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'vertical',
                  i({}, l, {
                    get: function () {
                      return v;
                    },
                    set: function (t) {
                      var r = (function (t) {
                        return n(e, t);
                      })(t);
                      if (!1 === r) throw new SyntaxError('An invalid or illegal string was specified.');
                      (v = r), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'snapToLines',
                  i({}, l, {
                    get: function () {
                      return m;
                    },
                    set: function (e) {
                      (m = !!e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'line',
                  i({}, l, {
                    get: function () {
                      return g;
                    },
                    set: function (e) {
                      if ('number' != typeof e && 'auto' !== e) throw new SyntaxError('An invalid number or illegal string was specified.');
                      (g = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'lineAlign',
                  i({}, l, {
                    get: function () {
                      return y;
                    },
                    set: function (e) {
                      var t = r(e);
                      if (!t) throw new SyntaxError('An invalid or illegal string was specified.');
                      (y = t), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'position',
                  i({}, l, {
                    get: function () {
                      return _;
                    },
                    set: function (e) {
                      if (e < 0 || e > 100) throw new Error('Position must be between 0 and 100.');
                      (_ = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'positionAlign',
                  i({}, l, {
                    get: function () {
                      return b;
                    },
                    set: function (e) {
                      var t = r(e);
                      if (!t) throw new SyntaxError('An invalid or illegal string was specified.');
                      (b = t), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'size',
                  i({}, l, {
                    get: function () {
                      return E;
                    },
                    set: function (e) {
                      if (e < 0 || e > 100) throw new Error('Size must be between 0 and 100.');
                      (E = e), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                Object.defineProperty(
                  s,
                  'align',
                  i({}, l, {
                    get: function () {
                      return S;
                    },
                    set: function (e) {
                      var t = r(e);
                      if (!t) throw new SyntaxError('An invalid or illegal string was specified.');
                      (S = t), (this.hasBeenReset = !0);
                    },
                  }),
                ),
                (s.displayState = void 0);
            }
            return (
              (a.prototype.getCueAsHTML = function () {
                return self.WebVTT.convertCueToDOMTree(self, this.text);
              }),
              a
            );
          })(),
          Ta = (function () {
            function e() {
              k(this, e);
            }
            return (
              w(e, [
                {
                  key: 'decode',
                  value: function (e, t) {
                    if (!e) return '';
                    if ('string' != typeof e) throw new Error('Error - expected string data.');
                    return decodeURIComponent(encodeURIComponent(e));
                  },
                },
              ]),
              e
            );
          })();
        function wa(e) {
          function t(e, t, n, r) {
            return 3600 * (0 | e) + 60 * (0 | t) + (0 | n) + parseFloat(r || 0);
          }
          var n = e.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
          return n ? (parseFloat(n[2]) > 59 ? t(n[2], n[3], 0, n[4]) : t(n[1], n[2], n[3], n[4])) : null;
        }
        var Aa = (function () {
          function e() {
            k(this, e), (this.values = Object.create(null));
          }
          return (
            w(e, [
              {
                key: 'set',
                value: function (e, t) {
                  this.get(e) || '' === t || (this.values[e] = t);
                },
              },
              {
                key: 'get',
                value: function (e, t, n) {
                  return n ? (this.has(e) ? this.values[e] : t[n]) : this.has(e) ? this.values[e] : t;
                },
              },
              {
                key: 'has',
                value: function (e) {
                  return e in this.values;
                },
              },
              {
                key: 'alt',
                value: function (e, t, n) {
                  for (var r = 0; r < n.length; ++r)
                    if (t === n[r]) {
                      this.set(e, t);
                      break;
                    }
                },
              },
              {
                key: 'integer',
                value: function (e, t) {
                  /^-?\d+$/.test(t) && this.set(e, parseInt(t, 10));
                },
              },
              {
                key: 'percent',
                value: function (e, t) {
                  if (/^([\d]{1,3})(\.[\d]*)?%$/.test(t)) {
                    var n = parseFloat(t);
                    if (n >= 0 && n <= 100) return this.set(e, n), !0;
                  }
                  return !1;
                },
              },
            ]),
            e
          );
        })();
        function La(e, t, n, r) {
          var i = r ? e.split(r) : [e];
          for (var a in i)
            if ('string' == typeof i[a]) {
              var o = i[a].split(n);
              if (2 === o.length) t(o[0], o[1]);
            }
        }
        var Ra = new ka(0, 0, ''),
          Ca = 'middle' === Ra.align ? 'middle' : 'center';
        function xa(e, t, n) {
          var r = e;
          function i() {
            var t = wa(e);
            if (null === t) throw new Error('Malformed timestamp: ' + r);
            return (e = e.replace(/^[^\sa-zA-Z-]+/, '')), t;
          }
          function a() {
            e = e.replace(/^\s+/, '');
          }
          if ((a(), (t.startTime = i()), a(), '--\x3e' !== e.slice(0, 3))) throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + r);
          (e = e.slice(3)),
            a(),
            (t.endTime = i()),
            a(),
            (function (e, t) {
              var r = new Aa();
              La(
                e,
                function (e, t) {
                  var i;
                  switch (e) {
                    case 'region':
                      for (var a = n.length - 1; a >= 0; a--)
                        if (n[a].id === t) {
                          r.set(e, n[a].region);
                          break;
                        }
                      break;
                    case 'vertical':
                      r.alt(e, t, ['rl', 'lr']);
                      break;
                    case 'line':
                      (i = t.split(',')),
                        r.integer(e, i[0]),
                        r.percent(e, i[0]) && r.set('snapToLines', !1),
                        r.alt(e, i[0], ['auto']),
                        2 === i.length && r.alt('lineAlign', i[1], ['start', Ca, 'end']);
                      break;
                    case 'position':
                      (i = t.split(',')), r.percent(e, i[0]), 2 === i.length && r.alt('positionAlign', i[1], ['start', Ca, 'end', 'line-left', 'line-right', 'auto']);
                      break;
                    case 'size':
                      r.percent(e, t);
                      break;
                    case 'align':
                      r.alt(e, t, ['start', Ca, 'end', 'left', 'right']);
                  }
                },
                /:/,
                /\s/,
              ),
                (t.region = r.get('region', null)),
                (t.vertical = r.get('vertical', ''));
              var i = r.get('line', 'auto');
              'auto' === i && -1 === Ra.line && (i = -1),
                (t.line = i),
                (t.lineAlign = r.get('lineAlign', 'start')),
                (t.snapToLines = r.get('snapToLines', !0)),
                (t.size = r.get('size', 100)),
                (t.align = r.get('align', Ca));
              var a = r.get('position', 'auto');
              'auto' === a && 50 === Ra.position && (a = 'start' === t.align || 'left' === t.align ? 0 : 'end' === t.align || 'right' === t.align ? 100 : 50), (t.position = a);
            })(e, t);
        }
        function Da(e) {
          return e.replace(/<br(?: \/)?>/gi, '\n');
        }
        var Ia = (function () {
            function e() {
              k(this, e),
                (this.state = 'INITIAL'),
                (this.buffer = ''),
                (this.decoder = new Ta()),
                (this.regionList = []),
                (this.cue = null),
                (this.oncue = void 0),
                (this.onparsingerror = void 0),
                (this.onflush = void 0);
            }
            return (
              w(e, [
                {
                  key: 'parse',
                  value: function (e) {
                    var t = this;
                    function n() {
                      var e = t.buffer,
                        n = 0;
                      for (e = Da(e); n < e.length && '\r' !== e[n] && '\n' !== e[n]; ) ++n;
                      var r = e.slice(0, n);
                      return '\r' === e[n] && ++n, '\n' === e[n] && ++n, (t.buffer = e.slice(n)), r;
                    }
                    e && (t.buffer += t.decoder.decode(e, { stream: !0 }));
                    try {
                      var r = '';
                      if ('INITIAL' === t.state) {
                        if (!/\r\n|\n/.test(t.buffer)) return this;
                        var i = (r = n()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                        if (null == i || !i[0]) throw new Error('Malformed WebVTT signature.');
                        t.state = 'HEADER';
                      }
                      for (var a = !1; t.buffer; ) {
                        if (!/\r\n|\n/.test(t.buffer)) return this;
                        switch ((a ? (a = !1) : (r = n()), t.state)) {
                          case 'HEADER':
                            /:/.test(r) ? La(r, function (e, t) {}, /:/) : r || (t.state = 'ID');
                            continue;
                          case 'NOTE':
                            r || (t.state = 'ID');
                            continue;
                          case 'ID':
                            if (/^NOTE($|[ \t])/.test(r)) {
                              t.state = 'NOTE';
                              break;
                            }
                            if (!r) continue;
                            if (((t.cue = new ka(0, 0, '')), (t.state = 'CUE'), -1 === r.indexOf('--\x3e'))) {
                              t.cue.id = r;
                              continue;
                            }
                          case 'CUE':
                            if (!t.cue) {
                              t.state = 'BADCUE';
                              continue;
                            }
                            try {
                              xa(r, t.cue, t.regionList);
                            } catch (e) {
                              (t.cue = null), (t.state = 'BADCUE');
                              continue;
                            }
                            t.state = 'CUETEXT';
                            continue;
                          case 'CUETEXT':
                            var o = -1 !== r.indexOf('--\x3e');
                            if (!r || (o && (a = !0))) {
                              t.oncue && t.cue && t.oncue(t.cue), (t.cue = null), (t.state = 'ID');
                              continue;
                            }
                            if (null === t.cue) continue;
                            t.cue.text && (t.cue.text += '\n'), (t.cue.text += r);
                            continue;
                          case 'BADCUE':
                            r || (t.state = 'ID');
                        }
                      }
                    } catch (e) {
                      'CUETEXT' === t.state && t.cue && t.oncue && t.oncue(t.cue), (t.cue = null), (t.state = 'INITIAL' === t.state ? 'BADWEBVTT' : 'BADCUE');
                    }
                    return this;
                  },
                },
                {
                  key: 'flush',
                  value: function () {
                    var e = this;
                    try {
                      if (((e.cue || 'HEADER' === e.state) && ((e.buffer += '\n\n'), e.parse()), 'INITIAL' === e.state || 'BADWEBVTT' === e.state)) throw new Error('Malformed WebVTT signature.');
                    } catch (t) {
                      e.onparsingerror && e.onparsingerror(t);
                    }
                    return e.onflush && e.onflush(), this;
                  },
                },
              ]),
              e
            );
          })(),
          Ma = /\r\n|\n\r|\n|\r/g,
          Pa = function (e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
            return e.slice(n, n + t.length) === t;
          },
          Oa = function (e) {
            for (var t = 5381, n = e.length; n; ) t = (33 * t) ^ e.charCodeAt(--n);
            return (t >>> 0).toString();
          };
        function Fa(e, t, n) {
          return Oa(e.toString()) + Oa(t.toString()) + Oa(n);
        }
        function Na(e, t, n, r, i, a, o) {
          var s,
            l = new Ia(),
            u = qe(new Uint8Array(e)).trim().replace(Ma, '\n').split('\n'),
            c = [],
            d = t
              ? (function (e) {
                  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                  return mi(e, vi, 1 / t);
                })(t.baseTime, t.timescale)
              : 0,
            f = '00:00.000',
            h = 0,
            p = 0,
            v = !0;
          (l.oncue = function (e) {
            var a = n[r],
              o = n.ccOffset,
              l = (h - d) / 9e4;
            if (
              (null != a &&
                a.new &&
                (void 0 !== p
                  ? (o = n.ccOffset = a.start)
                  : (function (e, t, n) {
                      var r = e[t],
                        i = e[r.prevCC];
                      if (!i || (!i.new && r.new)) return (e.ccOffset = e.presentationOffset = r.start), void (r.new = !1);
                      for (; null != (a = i) && a.new; ) {
                        var a;
                        (e.ccOffset += r.start - i.start), (r.new = !1), (i = e[(r = i).prevCC]);
                      }
                      e.presentationOffset = n;
                    })(n, r, l)),
              l)
            ) {
              if (!t) return void (s = new Error('Missing initPTS for VTT MPEGTS'));
              o = l - n.presentationOffset;
            }
            var u = e.endTime - e.startTime,
              f = Ei(9e4 * (e.startTime + o - p), 9e4 * i) / 9e4;
            (e.startTime = Math.max(f, 0)), (e.endTime = Math.max(f + u, 0));
            var v = e.text.trim();
            (e.text = decodeURIComponent(encodeURIComponent(v))), e.id || (e.id = Fa(e.startTime, e.endTime, v)), e.endTime > 0 && c.push(e);
          }),
            (l.onparsingerror = function (e) {
              s = e;
            }),
            (l.onflush = function () {
              s ? o(s) : a(c);
            }),
            u.forEach(function (e) {
              if (v) {
                if (Pa(e, 'X-TIMESTAMP-MAP=')) {
                  (v = !1),
                    e
                      .slice(16)
                      .split(',')
                      .forEach(function (e) {
                        Pa(e, 'LOCAL:') ? (f = e.slice(6)) : Pa(e, 'MPEGTS:') && (h = parseInt(e.slice(7)));
                      });
                  try {
                    p =
                      (function (e) {
                        var t = parseInt(e.slice(-3)),
                          n = parseInt(e.slice(-6, -4)),
                          r = parseInt(e.slice(-9, -7)),
                          i = e.length > 9 ? parseInt(e.substring(0, e.indexOf(':'))) : 0;
                        if (!($(t) && $(n) && $(r) && $(i))) throw Error('Malformed X-TIMESTAMP-MAP: Local:'.concat(e));
                        return (t += 1e3 * n), (t += 6e4 * r), t + 36e5 * i;
                      })(f) / 1e3;
                  } catch (e) {
                    s = e;
                  }
                  return;
                }
                '' === e && (v = !1);
              }
              l.parse(e + '\n');
            }),
            l.flush();
        }
        var Ba = 'stpp.ttml.im1t',
          Ua = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,
          za = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/,
          Ha = { left: 'start', center: 'center', right: 'end', start: 'start', end: 'end' };
        function Va(e, t, n, r) {
          var i = it(new Uint8Array(e), ['mdat']);
          if (0 !== i.length) {
            var a = i.map(function (e) {
                return qe(e);
              }),
              o = (function (e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                  r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                return mi(e, t, 1 / n, r);
              })(t.baseTime, 1, t.timescale);
            try {
              a.forEach(function (e) {
                return n(
                  (function (e, t) {
                    var n = new DOMParser().parseFromString(e, 'text/xml'),
                      r = n.getElementsByTagName('tt')[0];
                    if (!r) throw new Error('Invalid ttml');
                    var i = { frameRate: 30, subFrameRate: 1, frameRateMultiplier: 0, tickRate: 0 },
                      a = Object.keys(i).reduce(function (e, t) {
                        return (e[t] = r.getAttribute('ttp:'.concat(t)) || i[t]), e;
                      }, {}),
                      o = 'preserve' !== r.getAttribute('xml:space'),
                      s = ja(Ga(r, 'styling', 'style')),
                      l = ja(Ga(r, 'layout', 'region')),
                      u = Ga(r, 'body', '[begin]');
                    return [].map
                      .call(u, function (e) {
                        var n = Ka(e, o);
                        if (!n || !e.hasAttribute('begin')) return null;
                        var r = Ya(e.getAttribute('begin'), a),
                          i = Ya(e.getAttribute('dur'), a),
                          u = Ya(e.getAttribute('end'), a);
                        if (null === r) throw qa(e);
                        if (null === u) {
                          if (null === i) throw qa(e);
                          u = r + i;
                        }
                        var c = new ka(r - t, u - t, n);
                        c.id = Fa(c.startTime, c.endTime, c.text);
                        var d = (function (e, t, n) {
                            var r = 'http://www.w3.org/ns/ttml#styling',
                              i = null,
                              a = ['displayAlign', 'textAlign', 'color', 'backgroundColor', 'fontSize', 'fontFamily'],
                              o = null != e && e.hasAttribute('style') ? e.getAttribute('style') : null;
                            o && n.hasOwnProperty(o) && (i = n[o]);
                            return a.reduce(function (n, a) {
                              var o = Wa(t, r, a) || Wa(e, r, a) || Wa(i, r, a);
                              return o && (n[a] = o), n;
                            }, {});
                          })(l[e.getAttribute('region')], s[e.getAttribute('style')], s),
                          f = d.textAlign;
                        if (f) {
                          var h = Ha[f];
                          h && (c.lineAlign = h), (c.align = f);
                        }
                        return X(c, d), c;
                      })
                      .filter(function (e) {
                        return null !== e;
                      });
                  })(e, o),
                );
              });
            } catch (e) {
              r(e);
            }
          } else r(new Error('Could not parse IMSC1 mdat'));
        }
        function Ga(e, t, n) {
          var r = e.getElementsByTagName(t)[0];
          return r ? [].slice.call(r.querySelectorAll(n)) : [];
        }
        function ja(e) {
          return e.reduce(function (e, t) {
            var n = t.getAttribute('xml:id');
            return n && (e[n] = t), e;
          }, {});
        }
        function Ka(e, t) {
          return [].slice.call(e.childNodes).reduce(function (e, n, r) {
            var i;
            return 'br' === n.nodeName && r ? e + '\n' : null != (i = n.childNodes) && i.length ? Ka(n, t) : t ? e + n.textContent.trim().replace(/\s+/g, ' ') : e + n.textContent;
          }, '');
        }
        function Wa(e, t, n) {
          return e && e.hasAttributeNS(t, n) ? e.getAttributeNS(t, n) : null;
        }
        function qa(e) {
          return new Error('Could not parse ttml timestamp '.concat(e));
        }
        function Ya(e, t) {
          if (!e) return null;
          var n = wa(e);
          return (
            null === n &&
              (Ua.test(e)
                ? (n = (function (e, t) {
                    var n = Ua.exec(e),
                      r = (0 | n[4]) + (0 | n[5]) / t.subFrameRate;
                    return 3600 * (0 | n[1]) + 60 * (0 | n[2]) + (0 | n[3]) + r / t.frameRate;
                  })(e, t))
                : za.test(e) &&
                  (n = (function (e, t) {
                    var n = za.exec(e),
                      r = Number(n[1]);
                    switch (n[2]) {
                      case 'h':
                        return 3600 * r;
                      case 'm':
                        return 60 * r;
                      case 'ms':
                        return 1e3 * r;
                      case 'f':
                        return r / t.frameRate;
                      case 't':
                        return r / t.tickRate;
                    }
                    return r;
                  })(e, t))),
            n
          );
        }
        var Xa = (function () {
          function e(t) {
            if (
              (k(this, e),
              (this.hls = void 0),
              (this.media = null),
              (this.config = void 0),
              (this.enabled = !0),
              (this.Cues = void 0),
              (this.textTracks = []),
              (this.tracks = []),
              (this.initPTS = []),
              (this.unparsedVttFrags = []),
              (this.captionsTracks = {}),
              (this.nonNativeCaptionsTracks = {}),
              (this.cea608Parser1 = void 0),
              (this.cea608Parser2 = void 0),
              (this.lastSn = -1),
              (this.lastPartIndex = -1),
              (this.prevCC = -1),
              (this.vttCCs = { ccOffset: 0, presentationOffset: 0, 0: { start: 0, prevCC: -1, new: !0 } }),
              (this.captionsProperties = void 0),
              (this.hls = t),
              (this.config = t.config),
              (this.Cues = t.config.cueHandler),
              (this.captionsProperties = {
                textTrack1: { label: this.config.captionsTextTrack1Label, languageCode: this.config.captionsTextTrack1LanguageCode },
                textTrack2: { label: this.config.captionsTextTrack2Label, languageCode: this.config.captionsTextTrack2LanguageCode },
                textTrack3: { label: this.config.captionsTextTrack3Label, languageCode: this.config.captionsTextTrack3LanguageCode },
                textTrack4: { label: this.config.captionsTextTrack4Label, languageCode: this.config.captionsTextTrack4LanguageCode },
              }),
              this.config.enableCEA708Captions)
            ) {
              var n = new Sa(this, 'textTrack1'),
                r = new Sa(this, 'textTrack2'),
                i = new Sa(this, 'textTrack3'),
                a = new Sa(this, 'textTrack4');
              (this.cea608Parser1 = new _a(1, n, r)), (this.cea608Parser2 = new _a(3, i, a));
            }
            t.on(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
              t.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
              t.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
              t.on(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
              t.on(Q.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
              t.on(Q.FRAG_LOADING, this.onFragLoading, this),
              t.on(Q.FRAG_LOADED, this.onFragLoaded, this),
              t.on(Q.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
              t.on(Q.FRAG_DECRYPTED, this.onFragDecrypted, this),
              t.on(Q.INIT_PTS_FOUND, this.onInitPtsFound, this),
              t.on(Q.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
              t.on(Q.BUFFER_FLUSHING, this.onBufferFlushing, this);
          }
          return (
            w(e, [
              {
                key: 'destroy',
                value: function () {
                  var e = this.hls;
                  e.off(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
                    e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this),
                    e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                    e.off(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
                    e.off(Q.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                    e.off(Q.FRAG_LOADING, this.onFragLoading, this),
                    e.off(Q.FRAG_LOADED, this.onFragLoaded, this),
                    e.off(Q.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
                    e.off(Q.FRAG_DECRYPTED, this.onFragDecrypted, this),
                    e.off(Q.INIT_PTS_FOUND, this.onInitPtsFound, this),
                    e.off(Q.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
                    e.off(Q.BUFFER_FLUSHING, this.onBufferFlushing, this),
                    (this.hls = this.config = this.cea608Parser1 = this.cea608Parser2 = null);
                },
              },
              {
                key: 'addCues',
                value: function (e, t, n, r, i) {
                  for (var a, o, s, l, u = !1, c = i.length; c--; ) {
                    var d = i[c],
                      f = ((a = d[0]), (o = d[1]), (s = t), (l = n), Math.min(o, l) - Math.max(a, s));
                    if (f >= 0 && ((d[0] = Math.min(d[0], t)), (d[1] = Math.max(d[1], n)), (u = !0), f / (n - t) > 0.5)) return;
                  }
                  if ((u || i.push([t, n]), this.config.renderTextTracksNatively)) {
                    var h = this.captionsTracks[e];
                    this.Cues.newCue(h, t, n, r);
                  } else {
                    var p = this.Cues.newCue(null, t, n, r);
                    this.hls.trigger(Q.CUES_PARSED, { type: 'captions', cues: p, track: e });
                  }
                },
              },
              {
                key: 'onInitPtsFound',
                value: function (e, t) {
                  var n = this,
                    r = t.frag,
                    i = t.id,
                    a = t.initPTS,
                    o = t.timescale,
                    s = this.unparsedVttFrags;
                  'main' === i && (this.initPTS[r.cc] = { baseTime: a, timescale: o }),
                    s.length &&
                      ((this.unparsedVttFrags = []),
                      s.forEach(function (e) {
                        n.onFragLoaded(Q.FRAG_LOADED, e);
                      }));
                },
              },
              {
                key: 'getExistingTrack',
                value: function (e) {
                  var t = this.media;
                  if (t)
                    for (var n = 0; n < t.textTracks.length; n++) {
                      var r = t.textTracks[n];
                      if (r[e]) return r;
                    }
                  return null;
                },
              },
              {
                key: 'createCaptionsTrack',
                value: function (e) {
                  this.config.renderTextTracksNatively ? this.createNativeTrack(e) : this.createNonNativeTrack(e);
                },
              },
              {
                key: 'createNativeTrack',
                value: function (e) {
                  if (!this.captionsTracks[e]) {
                    var t = this.captionsProperties,
                      n = this.captionsTracks,
                      r = this.media,
                      i = t[e],
                      a = i.label,
                      o = i.languageCode,
                      s = this.getExistingTrack(e);
                    if (s) (n[e] = s), Zt(n[e]), $t(n[e], r);
                    else {
                      var l = this.createTextTrack('captions', a, o);
                      l && ((l[e] = !0), (n[e] = l));
                    }
                  }
                },
              },
              {
                key: 'createNonNativeTrack',
                value: function (e) {
                  if (!this.nonNativeCaptionsTracks[e]) {
                    var t = this.captionsProperties[e];
                    if (t) {
                      var n = { _id: e, label: t.label, kind: 'captions', default: !!t.media && !!t.media.default, closedCaptions: t.media };
                      (this.nonNativeCaptionsTracks[e] = n), this.hls.trigger(Q.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: [n] });
                    }
                  }
                },
              },
              {
                key: 'createTextTrack',
                value: function (e, t, n) {
                  var r = this.media;
                  if (r) return r.addTextTrack(e, t, n);
                },
              },
              {
                key: 'onMediaAttaching',
                value: function (e, t) {
                  (this.media = t.media), this._cleanTracks();
                },
              },
              {
                key: 'onMediaDetaching',
                value: function () {
                  var e = this.captionsTracks;
                  Object.keys(e).forEach(function (t) {
                    Zt(e[t]), delete e[t];
                  }),
                    (this.nonNativeCaptionsTracks = {});
                },
              },
              {
                key: 'onManifestLoading',
                value: function () {
                  (this.lastSn = -1),
                    (this.lastPartIndex = -1),
                    (this.prevCC = -1),
                    (this.vttCCs = { ccOffset: 0, presentationOffset: 0, 0: { start: 0, prevCC: -1, new: !0 } }),
                    this._cleanTracks(),
                    (this.tracks = []),
                    (this.captionsTracks = {}),
                    (this.nonNativeCaptionsTracks = {}),
                    (this.textTracks = []),
                    (this.unparsedVttFrags = []),
                    (this.initPTS = []),
                    this.cea608Parser1 && this.cea608Parser2 && (this.cea608Parser1.reset(), this.cea608Parser2.reset());
                },
              },
              {
                key: '_cleanTracks',
                value: function () {
                  var e = this.media;
                  if (e) {
                    var t = e.textTracks;
                    if (t) for (var n = 0; n < t.length; n++) Zt(t[n]);
                  }
                },
              },
              {
                key: 'onSubtitleTracksUpdated',
                value: function (e, t) {
                  var n = this,
                    r = t.subtitleTracks || [],
                    i = r.some(function (e) {
                      return e.textCodec === Ba;
                    });
                  if (this.config.enableWebVTT || (i && this.config.enableIMSC1)) {
                    if (qi(this.tracks, r)) return void (this.tracks = r);
                    if (((this.textTracks = []), (this.tracks = r), this.config.renderTextTracksNatively)) {
                      var a = this.media ? this.media.textTracks : null;
                      this.tracks.forEach(function (e, t) {
                        var r;
                        if (a && t < a.length) {
                          for (var i = null, o = 0; o < a.length; o++)
                            if ($a(a[o], e)) {
                              i = a[o];
                              break;
                            }
                          i && (r = i);
                        }
                        if (r) Zt(r);
                        else {
                          var s = n._captionsOrSubtitlesFromCharacteristics(e);
                          (r = n.createTextTrack(s, e.name, e.lang)) && (r.mode = 'disabled');
                        }
                        r && ((r.groupId = e.groupId), n.textTracks.push(r));
                      });
                    } else if (this.tracks.length) {
                      var o = this.tracks.map(function (e) {
                        return { label: e.name, kind: e.type.toLowerCase(), default: e.default, subtitleTrack: e };
                      });
                      this.hls.trigger(Q.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: o });
                    }
                  }
                },
              },
              {
                key: '_captionsOrSubtitlesFromCharacteristics',
                value: function (e) {
                  if (e.attrs.CHARACTERISTICS) {
                    var t = /transcribes-spoken-dialog/gi.test(e.attrs.CHARACTERISTICS),
                      n = /describes-music-and-sound/gi.test(e.attrs.CHARACTERISTICS);
                    if (t && n) return 'captions';
                  }
                  return 'subtitles';
                },
              },
              {
                key: 'onManifestLoaded',
                value: function (e, t) {
                  var n = this;
                  this.config.enableCEA708Captions &&
                    t.captions &&
                    t.captions.forEach(function (e) {
                      var t = /(?:CC|SERVICE)([1-4])/.exec(e.instreamId);
                      if (t) {
                        var r = 'textTrack'.concat(t[1]),
                          i = n.captionsProperties[r];
                        i && ((i.label = e.name), e.lang && (i.languageCode = e.lang), (i.media = e));
                      }
                    });
                },
              },
              {
                key: 'closedCaptionsForLevel',
                value: function (e) {
                  var t = this.hls.levels[e.level];
                  return null == t ? void 0 : t.attrs['CLOSED-CAPTIONS'];
                },
              },
              {
                key: 'onFragLoading',
                value: function (e, t) {
                  var n = this.cea608Parser1,
                    r = this.cea608Parser2,
                    i = this.lastSn,
                    a = this.lastPartIndex;
                  if (this.enabled && n && r && t.frag.type === jt) {
                    var o,
                      s,
                      l = t.frag.sn,
                      u = null != (o = null == t || null == (s = t.part) ? void 0 : s.index) ? o : -1;
                    l === i + 1 || (l === i && u === a + 1) || (n.reset(), r.reset()), (this.lastSn = l), (this.lastPartIndex = u);
                  }
                },
              },
              {
                key: 'onFragLoaded',
                value: function (e, t) {
                  var n = t.frag,
                    r = t.payload;
                  if (n.type === Wt)
                    if (r.byteLength) {
                      var i = n.decryptdata,
                        a = 'stats' in t;
                      if (null == i || !i.encrypted || a) {
                        var o = this.tracks[n.level],
                          s = this.vttCCs;
                        s[n.cc] || ((s[n.cc] = { start: n.start, prevCC: this.prevCC, new: !0 }), (this.prevCC = n.cc)), o && o.textCodec === Ba ? this._parseIMSC1(n, r) : this._parseVTTs(t);
                      }
                    } else this.hls.trigger(Q.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: n, error: new Error('Empty subtitle payload') });
                },
              },
              {
                key: '_parseIMSC1',
                value: function (e, t) {
                  var n = this,
                    r = this.hls;
                  Va(
                    t,
                    this.initPTS[e.cc],
                    function (t) {
                      n._appendCues(t, e.level), r.trigger(Q.SUBTITLE_FRAG_PROCESSED, { success: !0, frag: e });
                    },
                    function (t) {
                      ae.log('Failed to parse IMSC1: '.concat(t)), r.trigger(Q.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: e, error: t });
                    },
                  );
                },
              },
              {
                key: '_parseVTTs',
                value: function (e) {
                  var t,
                    n = this,
                    r = e.frag,
                    i = e.payload,
                    a = this.initPTS,
                    o = this.unparsedVttFrags,
                    s = a.length - 1;
                  if (a[r.cc] || -1 !== s) {
                    var l = this.hls;
                    Na(
                      null != (t = r.initSegment) && t.data ? ut(r.initSegment.data, new Uint8Array(i)) : i,
                      this.initPTS[r.cc],
                      this.vttCCs,
                      r.cc,
                      r.start,
                      function (e) {
                        n._appendCues(e, r.level), l.trigger(Q.SUBTITLE_FRAG_PROCESSED, { success: !0, frag: r });
                      },
                      function (t) {
                        var a = 'Missing initPTS for VTT MPEGTS' === t.message;
                        a ? o.push(e) : n._fallbackToIMSC1(r, i),
                          ae.log('Failed to parse VTT cue: '.concat(t)),
                          (a && s > r.cc) || l.trigger(Q.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: r, error: t });
                      },
                    );
                  } else o.push(e);
                },
              },
              {
                key: '_fallbackToIMSC1',
                value: function (e, t) {
                  var n = this,
                    r = this.tracks[e.level];
                  r.textCodec ||
                    Va(
                      t,
                      this.initPTS[e.cc],
                      function () {
                        (r.textCodec = Ba), n._parseIMSC1(e, t);
                      },
                      function () {
                        r.textCodec = 'wvtt';
                      },
                    );
                },
              },
              {
                key: '_appendCues',
                value: function (e, t) {
                  var n = this.hls;
                  if (this.config.renderTextTracksNatively) {
                    var r = this.textTracks[t];
                    if (!r || 'disabled' === r.mode) return;
                    e.forEach(function (e) {
                      return Qt(r, e);
                    });
                  } else {
                    var i = this.tracks[t];
                    if (!i) return;
                    var a = i.default ? 'default' : 'subtitles' + t;
                    n.trigger(Q.CUES_PARSED, { type: 'subtitles', cues: e, track: a });
                  }
                },
              },
              {
                key: 'onFragDecrypted',
                value: function (e, t) {
                  t.frag.type === Wt && this.onFragLoaded(Q.FRAG_LOADED, t);
                },
              },
              {
                key: 'onSubtitleTracksCleared',
                value: function () {
                  (this.tracks = []), (this.captionsTracks = {});
                },
              },
              {
                key: 'onFragParsingUserdata',
                value: function (e, t) {
                  var n = this.cea608Parser1,
                    r = this.cea608Parser2;
                  if (this.enabled && n && r) {
                    var i = t.frag,
                      a = t.samples;
                    if (i.type !== jt || 'NONE' !== this.closedCaptionsForLevel(i))
                      for (var o = 0; o < a.length; o++) {
                        var s = a[o].bytes;
                        if (s) {
                          var l = this.extractCea608Data(s);
                          n.addData(a[o].pts, l[0]), r.addData(a[o].pts, l[1]);
                        }
                      }
                  }
                },
              },
              {
                key: 'onBufferFlushing',
                value: function (e, t) {
                  var n = t.startOffset,
                    r = t.endOffset,
                    i = t.endOffsetSubtitles,
                    a = t.type,
                    o = this.media;
                  if (o && !(o.currentTime < r)) {
                    if (!a || 'video' === a) {
                      var s = this.captionsTracks;
                      Object.keys(s).forEach(function (e) {
                        return Jt(s[e], n, r);
                      });
                    }
                    if (this.config.renderTextTracksNatively && 0 === n && void 0 !== i) {
                      var l = this.textTracks;
                      Object.keys(l).forEach(function (e) {
                        return Jt(l[e], n, i);
                      });
                    }
                  }
                },
              },
              {
                key: 'extractCea608Data',
                value: function (e) {
                  for (var t = [[], []], n = 31 & e[0], r = 2, i = 0; i < n; i++) {
                    var a = e[r++],
                      o = 127 & e[r++],
                      s = 127 & e[r++];
                    if (0 !== o || 0 !== s)
                      if (0 != (4 & a)) {
                        var l = 3 & a;
                        (0 !== l && 1 !== l) || (t[l].push(o), t[l].push(s));
                      }
                  }
                  return t;
                },
              },
            ]),
            e
          );
        })();
        function $a(e, t) {
          return !!e && e.label === t.name && !(e.textTrack1 || e.textTrack2);
        }
        var Qa = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.autoLevelCapping = void 0),
                (this.firstLevel = void 0),
                (this.media = void 0),
                (this.restrictedLevels = void 0),
                (this.timer = void 0),
                (this.clientRect = void 0),
                (this.streamController = void 0),
                (this.hls = t),
                (this.autoLevelCapping = Number.POSITIVE_INFINITY),
                (this.firstLevel = -1),
                (this.media = null),
                (this.restrictedLevels = []),
                (this.timer = void 0),
                (this.clientRect = null),
                this.registerListeners();
            }
            return (
              w(
                e,
                [
                  {
                    key: 'setStreamController',
                    value: function (e) {
                      this.streamController = e;
                    },
                  },
                  {
                    key: 'destroy',
                    value: function () {
                      this.unregisterListener(), this.hls.config.capLevelToPlayerSize && this.stopCapping(), (this.media = null), (this.clientRect = null), (this.hls = this.streamController = null);
                    },
                  },
                  {
                    key: 'registerListeners',
                    value: function () {
                      var e = this.hls;
                      e.on(Q.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                        e.on(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
                        e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                        e.on(Q.BUFFER_CODECS, this.onBufferCodecs, this),
                        e.on(Q.MEDIA_DETACHING, this.onMediaDetaching, this);
                    },
                  },
                  {
                    key: 'unregisterListener',
                    value: function () {
                      var e = this.hls;
                      e.off(Q.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                        e.off(Q.MEDIA_ATTACHING, this.onMediaAttaching, this),
                        e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                        e.off(Q.BUFFER_CODECS, this.onBufferCodecs, this),
                        e.off(Q.MEDIA_DETACHING, this.onMediaDetaching, this);
                    },
                  },
                  {
                    key: 'onFpsDropLevelCapping',
                    value: function (e, t) {
                      var n = this.hls.levels[t.droppedLevel];
                      this.isLevelAllowed(n) && this.restrictedLevels.push({ bitrate: n.bitrate, height: n.height, width: n.width });
                    },
                  },
                  {
                    key: 'onMediaAttaching',
                    value: function (e, t) {
                      (this.media = t.media instanceof HTMLVideoElement ? t.media : null), (this.clientRect = null);
                    },
                  },
                  {
                    key: 'onManifestParsed',
                    value: function (e, t) {
                      var n = this.hls;
                      (this.restrictedLevels = []), (this.firstLevel = t.firstLevel), n.config.capLevelToPlayerSize && t.video && this.startCapping();
                    },
                  },
                  {
                    key: 'onBufferCodecs',
                    value: function (e, t) {
                      this.hls.config.capLevelToPlayerSize && t.video && this.startCapping();
                    },
                  },
                  {
                    key: 'onMediaDetaching',
                    value: function () {
                      this.stopCapping();
                    },
                  },
                  {
                    key: 'detectPlayerSize',
                    value: function () {
                      if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) {
                        var e = this.hls.levels;
                        if (e.length) {
                          var t = this.hls;
                          (t.autoLevelCapping = this.getMaxLevel(e.length - 1)),
                            t.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(),
                            (this.autoLevelCapping = t.autoLevelCapping);
                        }
                      }
                    },
                  },
                  {
                    key: 'getMaxLevel',
                    value: function (t) {
                      var n = this,
                        r = this.hls.levels;
                      if (!r.length) return -1;
                      var i = r.filter(function (e, r) {
                        return n.isLevelAllowed(e) && r <= t;
                      });
                      return (this.clientRect = null), e.getMaxLevelByMediaSize(i, this.mediaWidth, this.mediaHeight);
                    },
                  },
                  {
                    key: 'startCapping',
                    value: function () {
                      this.timer ||
                        ((this.autoLevelCapping = Number.POSITIVE_INFINITY),
                        (this.hls.firstLevel = this.getMaxLevel(this.firstLevel)),
                        self.clearInterval(this.timer),
                        (this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3)),
                        this.detectPlayerSize());
                    },
                  },
                  {
                    key: 'stopCapping',
                    value: function () {
                      (this.restrictedLevels = []), (this.firstLevel = -1), (this.autoLevelCapping = Number.POSITIVE_INFINITY), this.timer && (self.clearInterval(this.timer), (this.timer = void 0));
                    },
                  },
                  {
                    key: 'getDimensions',
                    value: function () {
                      if (this.clientRect) return this.clientRect;
                      var e = this.media,
                        t = { width: 0, height: 0 };
                      if (e) {
                        var n = e.getBoundingClientRect();
                        (t.width = n.width), (t.height = n.height), t.width || t.height || ((t.width = n.right - n.left || e.width || 0), (t.height = n.bottom - n.top || e.height || 0));
                      }
                      return (this.clientRect = t), t;
                    },
                  },
                  {
                    key: 'mediaWidth',
                    get: function () {
                      return this.getDimensions().width * this.contentScaleFactor;
                    },
                  },
                  {
                    key: 'mediaHeight',
                    get: function () {
                      return this.getDimensions().height * this.contentScaleFactor;
                    },
                  },
                  {
                    key: 'contentScaleFactor',
                    get: function () {
                      var e = 1;
                      if (!this.hls.config.ignoreDevicePixelRatio)
                        try {
                          e = self.devicePixelRatio;
                        } catch (e) {}
                      return e;
                    },
                  },
                  {
                    key: 'isLevelAllowed',
                    value: function (e) {
                      return !this.restrictedLevels.some(function (t) {
                        return e.bitrate === t.bitrate && e.width === t.width && e.height === t.height;
                      });
                    },
                  },
                ],
                [
                  {
                    key: 'getMaxLevelByMediaSize',
                    value: function (e, t, n) {
                      if (null == e || !e.length) return -1;
                      for (var r, i, a = e.length - 1, o = 0; o < e.length; o += 1) {
                        var s = e[o];
                        if ((s.width >= t || s.height >= n) && ((r = s), !(i = e[o + 1]) || r.width !== i.width || r.height !== i.height)) {
                          a = o;
                          break;
                        }
                      }
                      return a;
                    },
                  },
                ],
              ),
              e
            );
          })(),
          Za = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.isVideoPlaybackQualityAvailable = !1),
                (this.timer = void 0),
                (this.media = null),
                (this.lastTime = void 0),
                (this.lastDroppedFrames = 0),
                (this.lastDecodedFrames = 0),
                (this.streamController = void 0),
                (this.hls = t),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'setStreamController',
                  value: function (e) {
                    this.streamController = e;
                  },
                },
                {
                  key: 'registerListeners',
                  value: function () {
                    this.hls.on(Q.MEDIA_ATTACHING, this.onMediaAttaching, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    this.hls.off(Q.MEDIA_ATTACHING, this.onMediaAttaching, this);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.timer && clearInterval(this.timer), this.unregisterListeners(), (this.isVideoPlaybackQualityAvailable = !1), (this.media = null);
                  },
                },
                {
                  key: 'onMediaAttaching',
                  value: function (e, t) {
                    var n = this.hls.config;
                    if (n.capLevelOnFPSDrop) {
                      var r = t.media instanceof self.HTMLVideoElement ? t.media : null;
                      (this.media = r),
                        r && 'function' == typeof r.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0),
                        self.clearInterval(this.timer),
                        (this.timer = self.setInterval(this.checkFPSInterval.bind(this), n.fpsDroppedMonitoringPeriod));
                    }
                  },
                },
                {
                  key: 'checkFPS',
                  value: function (e, t, n) {
                    var r = performance.now();
                    if (t) {
                      if (this.lastTime) {
                        var i = r - this.lastTime,
                          a = n - this.lastDroppedFrames,
                          o = t - this.lastDecodedFrames,
                          s = (1e3 * a) / i,
                          l = this.hls;
                        if ((l.trigger(Q.FPS_DROP, { currentDropped: a, currentDecoded: o, totalDroppedFrames: n }), s > 0 && a > l.config.fpsDroppedMonitoringThreshold * o)) {
                          var u = l.currentLevel;
                          ae.warn('drop FPS ratio greater than max allowed value for currentLevel: ' + u),
                            u > 0 &&
                              (-1 === l.autoLevelCapping || l.autoLevelCapping >= u) &&
                              ((u -= 1), l.trigger(Q.FPS_DROP_LEVEL_CAPPING, { level: u, droppedLevel: l.currentLevel }), (l.autoLevelCapping = u), this.streamController.nextLevelSwitch());
                        }
                      }
                      (this.lastTime = r), (this.lastDroppedFrames = n), (this.lastDecodedFrames = t);
                    }
                  },
                },
                {
                  key: 'checkFPSInterval',
                  value: function () {
                    var e = this.media;
                    if (e)
                      if (this.isVideoPlaybackQualityAvailable) {
                        var t = e.getVideoPlaybackQuality();
                        this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames);
                      } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount);
                  },
                },
              ]),
              e
            );
          })(),
          Ja = '[eme]',
          eo = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.config = void 0),
                (this.media = null),
                (this.keyFormatPromise = null),
                (this.keySystemAccessPromises = {}),
                (this._requestLicenseFailureCount = 0),
                (this.mediaKeySessions = []),
                (this.keyIdToKeySessionPromise = {}),
                (this.setMediaKeysQueue = e.CDMCleanupPromise ? [e.CDMCleanupPromise] : []),
                (this.onMediaEncrypted = this._onMediaEncrypted.bind(this)),
                (this.onWaitingForKey = this._onWaitingForKey.bind(this)),
                (this.debug = ae.debug.bind(ae, Ja)),
                (this.log = ae.log.bind(ae, Ja)),
                (this.warn = ae.warn.bind(ae, Ja)),
                (this.error = ae.error.bind(ae, Ja)),
                (this.hls = t),
                (this.config = t.config),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), this.onMediaDetached();
                    var e = this.config;
                    (e.requestMediaKeySystemAccessFunc = null),
                      (e.licenseXhrSetup = e.licenseResponseCallback = void 0),
                      (e.drmSystems = e.drmSystemOptions = {}),
                      (this.hls = this.onMediaEncrypted = this.onWaitingForKey = this.keyIdToKeySessionPromise = null),
                      (this.config = null);
                  },
                },
                {
                  key: 'registerListeners',
                  value: function () {
                    this.hls.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      this.hls.on(Q.MEDIA_DETACHED, this.onMediaDetached, this),
                      this.hls.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      this.hls.on(Q.MANIFEST_LOADED, this.onManifestLoaded, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    this.hls.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this),
                      this.hls.off(Q.MEDIA_DETACHED, this.onMediaDetached, this),
                      this.hls.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      this.hls.off(Q.MANIFEST_LOADED, this.onManifestLoaded, this);
                  },
                },
                {
                  key: 'getLicenseServerUrl',
                  value: function (e) {
                    var t = this.config,
                      n = t.drmSystems,
                      r = t.widevineLicenseUrl,
                      i = n[e];
                    if (i) return i.licenseUrl;
                    if (e === Se.WIDEVINE && r) return r;
                    throw new Error('no license server URL configured for key-system "'.concat(e, '"'));
                  },
                },
                {
                  key: 'getServerCertificateUrl',
                  value: function (e) {
                    var t = this.config.drmSystems[e];
                    if (t) return t.serverCertificateUrl;
                    this.log('No Server Certificate in config.drmSystems["'.concat(e, '"]'));
                  },
                },
                {
                  key: 'attemptKeySystemAccess',
                  value: function (e) {
                    var t = this,
                      n = this.hls.levels,
                      r = function (e, t, n) {
                        return !!e && n.indexOf(e) === t;
                      },
                      i = n
                        .map(function (e) {
                          return e.audioCodec;
                        })
                        .filter(r),
                      a = n
                        .map(function (e) {
                          return e.videoCodec;
                        })
                        .filter(r);
                    return (
                      i.length + a.length === 0 && a.push('avc1.42e01e'),
                      new Promise(function (n, r) {
                        !(function e(o) {
                          var s = o.shift();
                          t.getMediaKeysPromise(s, i, a)
                            .then(function (e) {
                              return n({ keySystem: s, mediaKeys: e });
                            })
                            .catch(function (t) {
                              o.length ? e(o) : r(t instanceof to ? t : new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_NO_ACCESS, error: t, fatal: !0 }, t.message));
                            });
                        })(e);
                      })
                    );
                  },
                },
                {
                  key: 'requestMediaKeySystemAccess',
                  value: function (e, t) {
                    var n = this.config.requestMediaKeySystemAccessFunc;
                    if ('function' != typeof n) {
                      var r = 'Configured requestMediaKeySystemAccess is not a function '.concat(n);
                      return (
                        null === De && 'http:' === self.location.protocol && (r = 'navigator.requestMediaKeySystemAccess is not available over insecure protocol '.concat(location.protocol)),
                        Promise.reject(new Error(r))
                      );
                    }
                    return n(e, t);
                  },
                },
                {
                  key: 'getMediaKeysPromise',
                  value: function (e, t, n) {
                    var r = this,
                      i = (function (e, t, n, r) {
                        var i;
                        switch (e) {
                          case Se.FAIRPLAY:
                            i = ['cenc', 'sinf'];
                            break;
                          case Se.WIDEVINE:
                          case Se.PLAYREADY:
                            i = ['cenc'];
                            break;
                          case Se.CLEARKEY:
                            i = ['cenc', 'keyids'];
                            break;
                          default:
                            throw new Error('Unknown key-system: '.concat(e));
                        }
                        return (function (e, t, n, r) {
                          return [
                            {
                              initDataTypes: e,
                              persistentState: r.persistentState || 'not-allowed',
                              distinctiveIdentifier: r.distinctiveIdentifier || 'not-allowed',
                              sessionTypes: r.sessionTypes || [r.sessionType || 'temporary'],
                              audioCapabilities: t.map(function (e) {
                                return { contentType: 'audio/mp4; codecs="'.concat(e, '"'), robustness: r.audioRobustness || '', encryptionScheme: r.audioEncryptionScheme || null };
                              }),
                              videoCapabilities: n.map(function (e) {
                                return { contentType: 'video/mp4; codecs="'.concat(e, '"'), robustness: r.videoRobustness || '', encryptionScheme: r.videoEncryptionScheme || null };
                              }),
                            },
                          ];
                        })(i, t, n, r);
                      })(e, t, n, this.config.drmSystemOptions),
                      a = this.keySystemAccessPromises[e],
                      o = null == a ? void 0 : a.keySystemAccess;
                    if (!o) {
                      this.log('Requesting encrypted media "'.concat(e, '" key-system access with config: ').concat(JSON.stringify(i))), (o = this.requestMediaKeySystemAccess(e, i));
                      var s = (this.keySystemAccessPromises[e] = { keySystemAccess: o });
                      return (
                        o.catch(function (t) {
                          r.log('Failed to obtain access to key-system "'.concat(e, '": ').concat(t));
                        }),
                        o.then(function (t) {
                          r.log('Access for key-system "'.concat(t.keySystem, '" obtained'));
                          var n = r.fetchServerCertificate(e);
                          return (
                            r.log('Create media-keys for "'.concat(e, '"')),
                            (s.mediaKeys = t.createMediaKeys().then(function (t) {
                              return (
                                r.log('Media-keys created for "'.concat(e, '"')),
                                n.then(function (n) {
                                  return n ? r.setMediaKeysServerCertificate(t, e, n) : t;
                                })
                              );
                            })),
                            s.mediaKeys.catch(function (t) {
                              r.error('Failed to create media-keys for "'.concat(e, '"}: ').concat(t));
                            }),
                            s.mediaKeys
                          );
                        })
                      );
                    }
                    return o.then(function () {
                      return a.mediaKeys;
                    });
                  },
                },
                {
                  key: 'createMediaKeySessionContext',
                  value: function (e) {
                    var t = e.decryptdata,
                      n = e.keySystem,
                      r = e.mediaKeys;
                    this.log('Creating key-system session "'.concat(n, '" keyId: ').concat(Xe(t.keyId || [])));
                    var i = r.createSession(),
                      a = { decryptdata: t, keySystem: n, mediaKeys: r, mediaKeysSession: i, keyStatus: 'status-pending' };
                    return this.mediaKeySessions.push(a), a;
                  },
                },
                {
                  key: 'renewKeySession',
                  value: function (e) {
                    var t = e.decryptdata;
                    if (t.pssh) {
                      var n = this.createMediaKeySessionContext(e),
                        r = this.getKeyIdString(t);
                      this.keyIdToKeySessionPromise[r] = this.generateRequestWithPreferredKeySession(n, 'cenc', t.pssh, 'expired');
                    } else this.warn('Could not renew expired session. Missing pssh initData.');
                    this.removeSession(e);
                  },
                },
                {
                  key: 'getKeyIdString',
                  value: function (e) {
                    if (!e) throw new Error('Could not read keyId of undefined decryptdata');
                    if (null === e.keyId) throw new Error('keyId is null');
                    return Xe(e.keyId);
                  },
                },
                {
                  key: 'updateKeySession',
                  value: function (e, t) {
                    var n,
                      r = e.mediaKeysSession;
                    return (
                      this.log(
                        'Updating key-session "'
                          .concat(r.sessionId, '" for keyID ')
                          .concat(Xe((null == (n = e.decryptdata) ? void 0 : n.keyId) || []), '\n      } (data length: ')
                          .concat(t ? t.byteLength : t, ')'),
                      ),
                      r.update(t)
                    );
                  },
                },
                {
                  key: 'selectKeySystemFormat',
                  value: function (e) {
                    var t = Object.keys(e.levelkeys || {});
                    return (
                      this.keyFormatPromise ||
                        (this.log('Selecting key-system from fragment (sn: '.concat(e.sn, ' ').concat(e.type, ': ').concat(e.level, ') key formats ').concat(t.join(', '))),
                        (this.keyFormatPromise = this.getKeyFormatPromise(t))),
                      this.keyFormatPromise
                    );
                  },
                },
                {
                  key: 'getKeyFormatPromise',
                  value: function (e) {
                    var t = this;
                    return new Promise(function (n, r) {
                      var i = xe(t.config),
                        a = e.map(Le).filter(function (e) {
                          return !!e && -1 !== i.indexOf(e);
                        });
                      return t
                        .getKeySystemSelectionPromise(a)
                        .then(function (e) {
                          var t = e.keySystem,
                            i = Ce(t);
                          i ? n(i) : r(new Error('Unable to find format for key-system "'.concat(t, '"')));
                        })
                        .catch(r);
                    });
                  },
                },
                {
                  key: 'loadKey',
                  value: function (e) {
                    var t = this,
                      n = e.keyInfo.decryptdata,
                      r = this.getKeyIdString(n),
                      i = '(keyId: '.concat(r, ' format: "').concat(n.keyFormat, '" method: ').concat(n.method, ' uri: ').concat(n.uri, ')');
                    this.log('Starting session for key '.concat(i));
                    var a = this.keyIdToKeySessionPromise[r];
                    return (
                      a ||
                        (a = this.keyIdToKeySessionPromise[r] =
                          this.getKeySystemForKeyPromise(n).then(function (r) {
                            var a = r.keySystem,
                              o = r.mediaKeys;
                            return (
                              t.throwIfDestroyed(),
                              t.log('Handle encrypted media sn: '.concat(e.frag.sn, ' ').concat(e.frag.type, ': ').concat(e.frag.level, ' using key ').concat(i)),
                              t.attemptSetMediaKeys(a, o).then(function () {
                                t.throwIfDestroyed();
                                var e = t.createMediaKeySessionContext({ keySystem: a, mediaKeys: o, decryptdata: n });
                                return t.generateRequestWithPreferredKeySession(e, 'cenc', n.pssh, 'playlist-key');
                              })
                            );
                          })).catch(function (e) {
                          return t.handleError(e);
                        }),
                      a
                    );
                  },
                },
                {
                  key: 'throwIfDestroyed',
                  value: function () {
                    if (!this.hls) throw new Error('invalid state');
                  },
                },
                {
                  key: 'handleError',
                  value: function (e) {
                    this.hls &&
                      (this.error(e.message),
                      e instanceof to ? this.hls.trigger(Q.ERROR, e.data) : this.hls.trigger(Q.ERROR, { type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_NO_KEYS, error: e, fatal: !0 }));
                  },
                },
                {
                  key: 'getKeySystemForKeyPromise',
                  value: function (e) {
                    var t = this.getKeyIdString(e),
                      n = this.keyIdToKeySessionPromise[t];
                    if (!n) {
                      var r = Le(e.keyFormat),
                        i = r ? [r] : xe(this.config);
                      return this.attemptKeySystemAccess(i);
                    }
                    return n;
                  },
                },
                {
                  key: 'getKeySystemSelectionPromise',
                  value: function (e) {
                    if ((e.length || (e = xe(this.config)), 0 === e.length))
                      throw new to(
                        { type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_NO_CONFIGURED_LICENSE, fatal: !0 },
                        'Missing key-system license configuration options '.concat(JSON.stringify({ drmSystems: this.config.drmSystems })),
                      );
                    return this.attemptKeySystemAccess(e);
                  },
                },
                {
                  key: '_onMediaEncrypted',
                  value: function (e) {
                    var t = this,
                      n = e.initDataType,
                      r = e.initData;
                    if ((this.debug('"'.concat(e.type, '" event: init data type: "').concat(n, '"')), null !== r)) {
                      var i, a;
                      if ('sinf' === n && this.config.drmSystems[Se.FAIRPLAY]) {
                        var o = Je(new Uint8Array(r));
                        try {
                          var s = _e(JSON.parse(o).sinf),
                            l = st(new Uint8Array(s));
                          if (!l) return;
                          (i = l.subarray(8, 24)), (a = Se.FAIRPLAY);
                        } catch (e) {
                          return void this.warn('Failed to parse sinf "encrypted" event message initData');
                        }
                      } else {
                        var u = (function (e) {
                          if (!(e instanceof ArrayBuffer) || e.byteLength < 32) return null;
                          var t = { version: 0, systemId: '', kids: null, data: null },
                            n = new DataView(e),
                            r = n.getUint32(0);
                          if (e.byteLength !== r && r > 44) return null;
                          if (1886614376 !== n.getUint32(4)) return null;
                          if (((t.version = n.getUint32(8) >>> 24), t.version > 1)) return null;
                          t.systemId = Xe(new Uint8Array(e, 12, 16));
                          var i = n.getUint32(28);
                          if (0 === t.version) {
                            if (r - 32 < i) return null;
                            t.data = new Uint8Array(e, 32, i);
                          } else if (1 === t.version) {
                            t.kids = [];
                            for (var a = 0; a < i; a++) t.kids.push(new Uint8Array(e, 32 + 16 * a, 16));
                          }
                          return t;
                        })(r);
                        if (null === u) return;
                        0 === u.version && u.systemId === Re && u.data && (i = u.data.subarray(8, 24)),
                          (a = (function (e) {
                            if (e === Re) return Se.WIDEVINE;
                          })(u.systemId));
                      }
                      if (a && i) {
                        for (
                          var c = Xe(i),
                            d = this.keyIdToKeySessionPromise,
                            f = this.mediaKeySessions,
                            h = d[c],
                            p = function () {
                              var e = f[v],
                                a = e.decryptdata;
                              if (a.pssh || !a.keyId) return 'continue';
                              var o = Xe(a.keyId);
                              return c === o || -1 !== a.uri.replace(/-/g, '').indexOf(c)
                                ? ((h = d[o]),
                                  delete d[o],
                                  (a.pssh = new Uint8Array(r)),
                                  (a.keyId = i),
                                  (h = d[c] =
                                    h.then(function () {
                                      return t.generateRequestWithPreferredKeySession(e, n, r, 'encrypted-event-key-match');
                                    })),
                                  'break')
                                : void 0;
                            },
                            v = 0;
                          v < f.length;
                          v++
                        ) {
                          var m = p();
                          if ('continue' !== m && 'break' === m) break;
                        }
                        h ||
                          (h = d[c] =
                            this.getKeySystemSelectionPromise([a]).then(function (e) {
                              var a,
                                o = e.keySystem,
                                s = e.mediaKeys;
                              t.throwIfDestroyed();
                              var l = new mt('ISO-23001-7', c, null != (a = Ce(o)) ? a : '');
                              return (
                                (l.pssh = new Uint8Array(r)),
                                (l.keyId = i),
                                t.attemptSetMediaKeys(o, s).then(function () {
                                  t.throwIfDestroyed();
                                  var e = t.createMediaKeySessionContext({ decryptdata: l, keySystem: o, mediaKeys: s });
                                  return t.generateRequestWithPreferredKeySession(e, n, r, 'encrypted-event-no-match');
                                })
                              );
                            })),
                          h.catch(function (e) {
                            return t.handleError(e);
                          });
                      }
                    }
                  },
                },
                {
                  key: '_onWaitingForKey',
                  value: function (e) {
                    this.log('"'.concat(e.type, '" event'));
                  },
                },
                {
                  key: 'attemptSetMediaKeys',
                  value: function (e, t) {
                    var n = this,
                      r = this.setMediaKeysQueue.slice();
                    this.log('Setting media-keys for "'.concat(e, '"'));
                    var i = Promise.all(r).then(function () {
                      if (!n.media) throw new Error('Attempted to set mediaKeys without media element attached');
                      return n.media.setMediaKeys(t);
                    });
                    return (
                      this.setMediaKeysQueue.push(i),
                      i.then(function () {
                        n.log('Media-keys set for "'.concat(e, '"')),
                          r.push(i),
                          (n.setMediaKeysQueue = n.setMediaKeysQueue.filter(function (e) {
                            return -1 === r.indexOf(e);
                          }));
                      })
                    );
                  },
                },
                {
                  key: 'generateRequestWithPreferredKeySession',
                  value: function (e, t, n, r) {
                    var i,
                      a,
                      o = this,
                      s = null == (i = this.config.drmSystems) || null == (a = i[e.keySystem]) ? void 0 : a.generateRequest;
                    if (s)
                      try {
                        var l = s.call(this.hls, t, n, e);
                        if (!l) throw new Error('Invalid response from configured generateRequest filter');
                        (t = l.initDataType), (n = e.decryptdata.pssh = l.initData ? new Uint8Array(l.initData) : null);
                      } catch (e) {
                        var u;
                        if ((this.warn(e.message), null != (u = this.hls) && u.config.debug)) throw e;
                      }
                    if (null === n) return this.log('Skipping key-session request for "'.concat(r, '" (no initData)')), Promise.resolve(e);
                    var c = this.getKeyIdString(e.decryptdata);
                    this.log(
                      'Generating key-session request for "'
                        .concat(r, '": ')
                        .concat(c, ' (init data type: ')
                        .concat(t, ' length: ')
                        .concat(n ? n.byteLength : null, ')'),
                    );
                    var d = new Fi();
                    (e.mediaKeysSession.onmessage = function (t) {
                      var n = e.mediaKeysSession;
                      if (n) {
                        var r = t.messageType,
                          i = t.message;
                        o.log('"'.concat(r, '" message event for session "').concat(n.sessionId, '" message size: ').concat(i.byteLength)),
                          'license-request' === r || 'license-renewal' === r
                            ? o.renewLicense(e, i).catch(function (e) {
                                o.handleError(e), d.emit('error', e);
                              })
                            : 'license-release' === r
                            ? e.keySystem === Se.FAIRPLAY && (o.updateKeySession(e, Ee('acknowledged')), o.removeSession(e))
                            : o.warn('unhandled media key message type "'.concat(r, '"'));
                      } else d.emit('error', new Error('invalid state'));
                    }),
                      (e.mediaKeysSession.onkeystatuseschange = function (t) {
                        if (e.mediaKeysSession) {
                          o.onKeyStatusChange(e);
                          var n = e.keyStatus;
                          d.emit('keyStatus', n), 'expired' === n && (o.warn(''.concat(e.keySystem, ' expired for key ').concat(c)), o.renewKeySession(e));
                        } else d.emit('error', new Error('invalid state'));
                      });
                    var f = new Promise(function (e, t) {
                      d.on('error', t),
                        d.on('keyStatus', function (n) {
                          n.startsWith('usable')
                            ? e()
                            : 'output-restricted' === n
                            ? t(new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED, fatal: !1 }, 'HDCP level output restricted'))
                            : 'internal-error' === n
                            ? t(new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_STATUS_INTERNAL_ERROR, fatal: !0 }, 'key status changed to "'.concat(n, '"')))
                            : 'expired' === n
                            ? t(new Error('key expired while generating request'))
                            : o.warn('unhandled key status change "'.concat(n, '"'));
                        });
                    });
                    return e.mediaKeysSession
                      .generateRequest(t, n)
                      .then(function () {
                        var t;
                        o.log('Request generated for key-session "'.concat(null == (t = e.mediaKeysSession) ? void 0 : t.sessionId, '" keyId: ').concat(c));
                      })
                      .catch(function (e) {
                        throw new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_NO_SESSION, error: e, fatal: !1 }, 'Error generating key-session request: '.concat(e));
                      })
                      .then(function () {
                        return f;
                      })
                      .catch(function (t) {
                        throw (d.removeAllListeners(), o.removeSession(e), t);
                      })
                      .then(function () {
                        return d.removeAllListeners(), e;
                      });
                  },
                },
                {
                  key: 'onKeyStatusChange',
                  value: function (e) {
                    var t = this;
                    e.mediaKeysSession.keyStatuses.forEach(function (n, r) {
                      t.log(
                        'key status change "'
                          .concat(n, '" for keyStatuses keyId: ')
                          .concat(Xe('buffer' in r ? new Uint8Array(r.buffer, r.byteOffset, r.byteLength) : new Uint8Array(r)), ' session keyId: ')
                          .concat(Xe(new Uint8Array(e.decryptdata.keyId || [])), ' uri: ')
                          .concat(e.decryptdata.uri),
                      ),
                        (e.keyStatus = n);
                    });
                  },
                },
                {
                  key: 'fetchServerCertificate',
                  value: function (e) {
                    var t = this.config,
                      n = new (0, t.loader)(t),
                      r = this.getServerCertificateUrl(e);
                    return r
                      ? (this.log('Fetching serverCertificate for "'.concat(e, '"')),
                        new Promise(function (i, a) {
                          var o = { responseType: 'arraybuffer', url: r },
                            s = t.certLoadPolicy.default,
                            l = { loadPolicy: s, timeout: s.maxLoadTimeMs, maxRetry: 0, retryDelay: 0, maxRetryDelay: 0 },
                            u = {
                              onSuccess: function (e, t, n, r) {
                                i(e.data);
                              },
                              onError: function (t, n, i, s) {
                                a(
                                  new to(
                                    { type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED, fatal: !0, networkDetails: i, response: q({ url: o.url, data: void 0 }, t) },
                                    '"'.concat(e, '" certificate request failed (').concat(r, '). Status: ').concat(t.code, ' (').concat(t.text, ')'),
                                  ),
                                );
                              },
                              onTimeout: function (t, n, i) {
                                a(
                                  new to(
                                    { type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED, fatal: !0, networkDetails: i, response: { url: o.url, data: void 0 } },
                                    '"'.concat(e, '" certificate request timed out (').concat(r, ')'),
                                  ),
                                );
                              },
                              onAbort: function (e, t, n) {
                                a(new Error('aborted'));
                              },
                            };
                          n.load(o, l, u);
                        }))
                      : Promise.resolve();
                  },
                },
                {
                  key: 'setMediaKeysServerCertificate',
                  value: function (e, t, n) {
                    var r = this;
                    return new Promise(function (i, a) {
                      e.setServerCertificate(n)
                        .then(function (a) {
                          r.log(
                            'setServerCertificate '
                              .concat(a ? 'success' : 'not supported by CDM', ' (')
                              .concat(null == n ? void 0 : n.byteLength, ') on "')
                              .concat(t, '"'),
                          ),
                            i(e);
                        })
                        .catch(function (e) {
                          a(new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED, error: e, fatal: !0 }, e.message));
                        });
                    });
                  },
                },
                {
                  key: 'renewLicense',
                  value: function (e, t) {
                    var n = this;
                    return this.requestLicense(e, new Uint8Array(t)).then(function (t) {
                      return n.updateKeySession(e, new Uint8Array(t)).catch(function (e) {
                        throw new to({ type: Z.KEY_SYSTEM_ERROR, details: J.KEY_SYSTEM_SESSION_UPDATE_FAILED, error: e, fatal: !0 }, e.message);
                      });
                    });
                  },
                },
                {
                  key: 'setupLicenseXHR',
                  value: function (e, t, n, r) {
                    var i = this,
                      a = this.config.licenseXhrSetup;
                    return a
                      ? Promise.resolve()
                          .then(function () {
                            if (!n.decryptdata) throw new Error('Key removed');
                            return a.call(i.hls, e, t, n, r);
                          })
                          .catch(function (o) {
                            if (!n.decryptdata) throw o;
                            return e.open('POST', t, !0), a.call(i.hls, e, t, n, r);
                          })
                          .then(function (n) {
                            return e.readyState || e.open('POST', t, !0), { xhr: e, licenseChallenge: n || r };
                          })
                      : (e.open('POST', t, !0), Promise.resolve({ xhr: e, licenseChallenge: r }));
                  },
                },
                {
                  key: 'requestLicense',
                  value: function (e, t) {
                    var n = this,
                      r = this.config.keyLoadPolicy.default;
                    return new Promise(function (i, a) {
                      var o = n.getLicenseServerUrl(e.keySystem);
                      n.log('Sending license request to URL: '.concat(o));
                      var s = new XMLHttpRequest();
                      (s.responseType = 'arraybuffer'),
                        (s.onreadystatechange = function () {
                          if (!n.hls || !e.mediaKeysSession) return a(new Error('invalid state'));
                          if (4 === s.readyState)
                            if (200 === s.status) {
                              n._requestLicenseFailureCount = 0;
                              var l = s.response;
                              n.log('License received '.concat(l instanceof ArrayBuffer ? l.byteLength : l));
                              var u = n.config.licenseResponseCallback;
                              if (u)
                                try {
                                  l = u.call(n.hls, s, o, e);
                                } catch (e) {
                                  n.error(e);
                                }
                              i(l);
                            } else {
                              var c = r.errorRetry,
                                d = c ? c.maxNumRetry : 0;
                              if ((n._requestLicenseFailureCount++, n._requestLicenseFailureCount > d || (s.status >= 400 && s.status < 500)))
                                a(
                                  new to(
                                    {
                                      type: Z.KEY_SYSTEM_ERROR,
                                      details: J.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                      fatal: !0,
                                      networkDetails: s,
                                      response: { url: o, data: void 0, code: s.status, text: s.statusText },
                                    },
                                    'License Request XHR failed ('.concat(o, '). Status: ').concat(s.status, ' (').concat(s.statusText, ')'),
                                  ),
                                );
                              else {
                                var f = d - n._requestLicenseFailureCount + 1;
                                n.warn('Retrying license request, '.concat(f, ' attempts left')), n.requestLicense(e, t).then(i, a);
                              }
                            }
                        }),
                        e.licenseXhr && e.licenseXhr.readyState !== XMLHttpRequest.DONE && e.licenseXhr.abort(),
                        (e.licenseXhr = s),
                        n.setupLicenseXHR(s, o, e, t).then(function (e) {
                          var t = e.xhr,
                            n = e.licenseChallenge;
                          t.send(n);
                        });
                    });
                  },
                },
                {
                  key: 'onMediaAttached',
                  value: function (e, t) {
                    if (this.config.emeEnabled) {
                      var n = t.media;
                      (this.media = n), n.addEventListener('encrypted', this.onMediaEncrypted), n.addEventListener('waitingforkey', this.onWaitingForKey);
                    }
                  },
                },
                {
                  key: 'onMediaDetached',
                  value: function () {
                    var t = this,
                      n = this.media,
                      r = this.mediaKeySessions;
                    n && (n.removeEventListener('encrypted', this.onMediaEncrypted), n.removeEventListener('waitingforkey', this.onWaitingForKey), (this.media = null)),
                      (this._requestLicenseFailureCount = 0),
                      (this.setMediaKeysQueue = []),
                      (this.mediaKeySessions = []),
                      (this.keyIdToKeySessionPromise = {}),
                      mt.clearKeyUriToKeyIdMap();
                    var i = r.length;
                    e.CDMCleanupPromise = Promise.all(
                      r
                        .map(function (e) {
                          return t.removeSession(e);
                        })
                        .concat(
                          null == n
                            ? void 0
                            : n.setMediaKeys(null).catch(function (e) {
                                t.log('Could not clear media keys: '.concat(e, '. media.src: ').concat(null == n ? void 0 : n.src));
                              }),
                        ),
                    )
                      .then(function () {
                        i && (t.log('finished closing key sessions and clearing media keys'), (r.length = 0));
                      })
                      .catch(function (e) {
                        t.log('Could not close sessions and clear media keys: '.concat(e, '. media.src: ').concat(null == n ? void 0 : n.src));
                      });
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    this.keyFormatPromise = null;
                  },
                },
                {
                  key: 'onManifestLoaded',
                  value: function (e, t) {
                    var n = t.sessionKeys;
                    if (n && this.config.emeEnabled && !this.keyFormatPromise) {
                      var r = n.reduce(function (e, t) {
                        return -1 === e.indexOf(t.keyFormat) && e.push(t.keyFormat), e;
                      }, []);
                      this.log('Selecting key-system from session-keys '.concat(r.join(', '))), (this.keyFormatPromise = this.getKeyFormatPromise(r));
                    }
                  },
                },
                {
                  key: 'removeSession',
                  value: function (e) {
                    var t = this,
                      n = e.mediaKeysSession,
                      r = e.licenseXhr;
                    if (n) {
                      this.log('Remove licenses and keys and close session '.concat(n.sessionId)),
                        (n.onmessage = null),
                        (n.onkeystatuseschange = null),
                        r && r.readyState !== XMLHttpRequest.DONE && r.abort(),
                        (e.mediaKeysSession = e.decryptdata = e.licenseXhr = void 0);
                      var i = this.mediaKeySessions.indexOf(e);
                      return (
                        i > -1 && this.mediaKeySessions.splice(i, 1),
                        n
                          .remove()
                          .catch(function (e) {
                            t.log('Could not remove session: '.concat(e));
                          })
                          .then(function () {
                            return n.close();
                          })
                          .catch(function (e) {
                            t.log('Could not close session: '.concat(e));
                          })
                      );
                    }
                  },
                },
              ]),
              e
            );
          })();
        eo.CDMCleanupPromise = void 0;
        var to = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r) {
              var i;
              return k(this, n), ((i = t.call(this, r)).data = void 0), e.error || (e.error = new Error(r)), (i.data = e), (e.err = e.error), i;
            }
            return w(n);
          })(B(Error)),
          no = 'm',
          ro = 'a',
          io = 'v',
          ao = 'av',
          oo = 'i',
          so = 'tt',
          lo = (function () {
            function e(t) {
              var n = this;
              k(this, e),
                (this.hls = void 0),
                (this.config = void 0),
                (this.media = void 0),
                (this.sid = void 0),
                (this.cid = void 0),
                (this.useHeaders = !1),
                (this.initialized = !1),
                (this.starved = !1),
                (this.buffering = !0),
                (this.audioBuffer = void 0),
                (this.videoBuffer = void 0),
                (this.onWaiting = function () {
                  n.initialized && (n.starved = !0), (n.buffering = !0);
                }),
                (this.onPlaying = function () {
                  n.initialized || (n.initialized = !0), (n.buffering = !1);
                }),
                (this.applyPlaylistData = function (e) {
                  try {
                    n.apply(e, { ot: no, su: !n.initialized });
                  } catch (e) {
                    ae.warn('Could not generate manifest CMCD data.', e);
                  }
                }),
                (this.applyFragmentData = function (e) {
                  try {
                    var t = e.frag,
                      r = n.hls.levels[t.level],
                      i = n.getObjectType(t),
                      a = { d: 1e3 * t.duration, ot: i };
                    (i !== io && i !== ro && i != ao) || ((a.br = r.bitrate / 1e3), (a.tb = n.getTopBandwidth(i) / 1e3), (a.bl = n.getBufferLength(i))), n.apply(e, a);
                  } catch (e) {
                    ae.warn('Could not generate segment CMCD data.', e);
                  }
                }),
                (this.hls = t);
              var r = (this.config = t.config),
                i = r.cmcd;
              null != i &&
                ((r.pLoader = this.createPlaylistLoader()),
                (r.fLoader = this.createFragmentLoader()),
                (this.sid = i.sessionId || e.uuid()),
                (this.cid = i.contentId),
                (this.useHeaders = !0 === i.useHeaders),
                this.registerListeners());
            }
            return (
              w(
                e,
                [
                  {
                    key: 'registerListeners',
                    value: function () {
                      var e = this.hls;
                      e.on(Q.MEDIA_ATTACHED, this.onMediaAttached, this), e.on(Q.MEDIA_DETACHED, this.onMediaDetached, this), e.on(Q.BUFFER_CREATED, this.onBufferCreated, this);
                    },
                  },
                  {
                    key: 'unregisterListeners',
                    value: function () {
                      var e = this.hls;
                      e.off(Q.MEDIA_ATTACHED, this.onMediaAttached, this), e.off(Q.MEDIA_DETACHED, this.onMediaDetached, this), e.off(Q.BUFFER_CREATED, this.onBufferCreated, this);
                    },
                  },
                  {
                    key: 'destroy',
                    value: function () {
                      this.unregisterListeners(), this.onMediaDetached(), (this.hls = this.config = this.audioBuffer = this.videoBuffer = null);
                    },
                  },
                  {
                    key: 'onMediaAttached',
                    value: function (e, t) {
                      (this.media = t.media), this.media.addEventListener('waiting', this.onWaiting), this.media.addEventListener('playing', this.onPlaying);
                    },
                  },
                  {
                    key: 'onMediaDetached',
                    value: function () {
                      this.media && (this.media.removeEventListener('waiting', this.onWaiting), this.media.removeEventListener('playing', this.onPlaying), (this.media = null));
                    },
                  },
                  {
                    key: 'onBufferCreated',
                    value: function (e, t) {
                      var n, r;
                      (this.audioBuffer = null == (n = t.tracks.audio) ? void 0 : n.buffer), (this.videoBuffer = null == (r = t.tracks.video) ? void 0 : r.buffer);
                    },
                  },
                  {
                    key: 'createData',
                    value: function () {
                      var e;
                      return { v: 1, sf: 'h', sid: this.sid, cid: this.cid, pr: null == (e = this.media) ? void 0 : e.playbackRate, mtp: this.hls.bandwidthEstimate / 1e3 };
                    },
                  },
                  {
                    key: 'apply',
                    value: function (t) {
                      var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                      X(n, this.createData());
                      var r = n.ot === oo || n.ot === io || n.ot === ao;
                      if ((this.starved && r && ((n.bs = !0), (n.su = !0), (this.starved = !1)), null == n.su && (n.su = this.buffering), this.useHeaders)) {
                        var i = e.toHeaders(n);
                        if (!Object.keys(i).length) return;
                        t.headers || (t.headers = {}), X(t.headers, i);
                      } else {
                        var a = e.toQuery(n);
                        if (!a) return;
                        t.url = e.appendQueryToUri(t.url, a);
                      }
                    },
                  },
                  {
                    key: 'getObjectType',
                    value: function (e) {
                      var t = e.type;
                      return 'subtitle' === t ? so : 'initSegment' === e.sn ? oo : 'audio' === t ? ro : 'main' === t ? (this.hls.audioTracks.length ? io : ao) : void 0;
                    },
                  },
                  {
                    key: 'getTopBandwidth',
                    value: function (e) {
                      var t,
                        n = 0,
                        r = this.hls;
                      if (e === ro) t = r.audioTracks;
                      else {
                        var i = r.maxAutoLevel,
                          a = i > -1 ? i + 1 : r.levels.length;
                        t = r.levels.slice(0, a);
                      }
                      var o,
                        s = F(t);
                      try {
                        for (s.s(); !(o = s.n()).done; ) {
                          var l = o.value;
                          l.bitrate > n && (n = l.bitrate);
                        }
                      } catch (e) {
                        s.e(e);
                      } finally {
                        s.f();
                      }
                      return n > 0 ? n : NaN;
                    },
                  },
                  {
                    key: 'getBufferLength',
                    value: function (e) {
                      var t = this.hls.media,
                        n = e === ro ? this.audioBuffer : this.videoBuffer;
                      return n && t ? 1e3 * ar.bufferInfo(n, t.currentTime, this.config.maxBufferHole).len : NaN;
                    },
                  },
                  {
                    key: 'createPlaylistLoader',
                    value: function () {
                      var e = this.config.pLoader,
                        t = this.applyPlaylistData,
                        n = e || this.config.loader;
                      return (function () {
                        function e(t) {
                          k(this, e), (this.loader = void 0), (this.loader = new n(t));
                        }
                        return (
                          w(e, [
                            {
                              key: 'stats',
                              get: function () {
                                return this.loader.stats;
                              },
                            },
                            {
                              key: 'context',
                              get: function () {
                                return this.loader.context;
                              },
                            },
                            {
                              key: 'destroy',
                              value: function () {
                                this.loader.destroy();
                              },
                            },
                            {
                              key: 'abort',
                              value: function () {
                                this.loader.abort();
                              },
                            },
                            {
                              key: 'load',
                              value: function (e, n, r) {
                                t(e), this.loader.load(e, n, r);
                              },
                            },
                          ]),
                          e
                        );
                      })();
                    },
                  },
                  {
                    key: 'createFragmentLoader',
                    value: function () {
                      var e = this.config.fLoader,
                        t = this.applyFragmentData,
                        n = e || this.config.loader;
                      return (function () {
                        function e(t) {
                          k(this, e), (this.loader = void 0), (this.loader = new n(t));
                        }
                        return (
                          w(e, [
                            {
                              key: 'stats',
                              get: function () {
                                return this.loader.stats;
                              },
                            },
                            {
                              key: 'context',
                              get: function () {
                                return this.loader.context;
                              },
                            },
                            {
                              key: 'destroy',
                              value: function () {
                                this.loader.destroy();
                              },
                            },
                            {
                              key: 'abort',
                              value: function () {
                                this.loader.abort();
                              },
                            },
                            {
                              key: 'load',
                              value: function (e, n, r) {
                                t(e), this.loader.load(e, n, r);
                              },
                            },
                          ]),
                          e
                        );
                      })();
                    },
                  },
                ],
                [
                  {
                    key: 'uuid',
                    value: function () {
                      var e = URL.createObjectURL(new Blob()),
                        t = e.toString();
                      return URL.revokeObjectURL(e), t.slice(t.lastIndexOf('/') + 1);
                    },
                  },
                  {
                    key: 'serialize',
                    value: function (e) {
                      var t,
                        n = [],
                        r = function (e) {
                          return !Number.isNaN(e) && null != e && '' !== e && !1 !== e;
                        },
                        i = function (e) {
                          return Math.round(e);
                        },
                        a = function (e) {
                          return 100 * i(e / 100);
                        },
                        o = {
                          br: i,
                          d: i,
                          bl: a,
                          dl: a,
                          mtp: a,
                          nor: function (e) {
                            return encodeURIComponent(e);
                          },
                          rtp: a,
                          tb: i,
                        },
                        s = Object.keys(e || {}).sort(),
                        u = F(s);
                      try {
                        for (u.s(); !(t = u.n()).done; ) {
                          var c = t.value,
                            d = e[c];
                          if (r(d) && !(('v' === c && 1 === d) || ('pr' == c && 1 === d))) {
                            var f = o[c];
                            f && (d = f(d));
                            var h = l(d),
                              p = void 0;
                            (p =
                              'ot' === c || 'sf' === c || 'st' === c
                                ? ''.concat(c, '=').concat(d)
                                : 'boolean' === h
                                ? c
                                : 'number' === h
                                ? ''.concat(c, '=').concat(d)
                                : ''.concat(c, '=').concat(JSON.stringify(d))),
                              n.push(p);
                          }
                        }
                      } catch (e) {
                        u.e(e);
                      } finally {
                        u.f();
                      }
                      return n.join(',');
                    },
                  },
                  {
                    key: 'toHeaders',
                    value: function (t) {
                      for (
                        var n = {},
                          r = ['Object', 'Request', 'Session', 'Status'],
                          i = [{}, {}, {}, {}],
                          a = { br: 0, d: 0, ot: 0, tb: 0, bl: 1, dl: 1, mtp: 1, nor: 1, nrr: 1, su: 1, cid: 2, pr: 2, sf: 2, sid: 2, st: 2, v: 2, bs: 3, rtp: 3 },
                          o = 0,
                          s = Object.keys(t);
                        o < s.length;
                        o++
                      ) {
                        var l = s[o];
                        i[null != a[l] ? a[l] : 1][l] = t[l];
                      }
                      for (var u = 0; u < i.length; u++) {
                        var c = e.serialize(i[u]);
                        c && (n['CMCD-'.concat(r[u])] = c);
                      }
                      return n;
                    },
                  },
                  {
                    key: 'toQuery',
                    value: function (t) {
                      return 'CMCD='.concat(encodeURIComponent(e.serialize(t)));
                    },
                  },
                  {
                    key: 'appendQueryToUri',
                    value: function (e, t) {
                      if (!t) return e;
                      var n = e.includes('?') ? '&' : '?';
                      return ''.concat(e).concat(n).concat(t);
                    },
                  },
                ],
              ),
              e
            );
          })(),
          uo = (function () {
            function e(t) {
              k(this, e),
                (this.hls = void 0),
                (this.log = void 0),
                (this.loader = null),
                (this.uri = null),
                (this.pathwayId = '.'),
                (this.pathwayPriority = null),
                (this.timeToLoad = 300),
                (this.reloadTimer = -1),
                (this.updated = 0),
                (this.started = !1),
                (this.enabled = !0),
                (this.levels = null),
                (this.audioTracks = null),
                (this.subtitleTracks = null),
                (this.penalizedPathways = {}),
                (this.hls = t),
                (this.log = ae.log.bind(ae, '[content-steering]:')),
                this.registerListeners();
            }
            return (
              w(e, [
                {
                  key: 'registerListeners',
                  value: function () {
                    var e = this.hls;
                    e.on(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.on(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
                      e.on(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.on(Q.ERROR, this.onError, this);
                  },
                },
                {
                  key: 'unregisterListeners',
                  value: function () {
                    var e = this.hls;
                    e &&
                      (e.off(Q.MANIFEST_LOADING, this.onManifestLoading, this),
                      e.off(Q.MANIFEST_LOADED, this.onManifestLoaded, this),
                      e.off(Q.MANIFEST_PARSED, this.onManifestParsed, this),
                      e.off(Q.ERROR, this.onError, this));
                  },
                },
                {
                  key: 'startLoad',
                  value: function () {
                    if (((this.started = !0), self.clearTimeout(this.reloadTimer), this.enabled && this.uri))
                      if (this.updated) {
                        var e = Math.max(1e3 * this.timeToLoad - (performance.now() - this.updated), 0);
                        this.scheduleRefresh(this.uri, e);
                      } else this.loadSteeringManifest(this.uri);
                  },
                },
                {
                  key: 'stopLoad',
                  value: function () {
                    (this.started = !1), this.loader && (this.loader.destroy(), (this.loader = null)), self.clearTimeout(this.reloadTimer);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    this.unregisterListeners(), this.stopLoad(), (this.hls = null), (this.levels = this.audioTracks = this.subtitleTracks = null);
                  },
                },
                {
                  key: 'removeLevel',
                  value: function (e) {
                    var t = this.levels;
                    t &&
                      (this.levels = t.filter(function (t) {
                        return t !== e;
                      }));
                  },
                },
                {
                  key: 'onManifestLoading',
                  value: function () {
                    this.stopLoad(),
                      (this.enabled = !0),
                      (this.timeToLoad = 300),
                      (this.updated = 0),
                      (this.uri = null),
                      (this.pathwayId = '.'),
                      (this.levels = this.audioTracks = this.subtitleTracks = null);
                  },
                },
                {
                  key: 'onManifestLoaded',
                  value: function (e, t) {
                    var n = t.contentSteering;
                    null !== n && ((this.pathwayId = n.pathwayId), (this.uri = n.uri), this.started && this.startLoad());
                  },
                },
                {
                  key: 'onManifestParsed',
                  value: function (e, t) {
                    (this.audioTracks = t.audioTracks), (this.subtitleTracks = t.subtitleTracks);
                  },
                },
                {
                  key: 'onError',
                  value: function (e, t) {
                    var n = t.errorAction;
                    if ((null == n ? void 0 : n.action) === Mn && n.flags === Fn) {
                      var r = this.pathwayPriority,
                        i = this.pathwayId;
                      this.penalizedPathways[i] || (this.penalizedPathways[i] = performance.now()),
                        !r &&
                          this.levels &&
                          (r = this.levels.reduce(function (e, t) {
                            return -1 === e.indexOf(t.pathwayId) && e.push(t.pathwayId), e;
                          }, [])),
                        r && r.length > 1 && (this.updatePathwayPriority(r), (n.resolved = this.pathwayId !== i));
                    }
                  },
                },
                {
                  key: 'filterParsedLevels',
                  value: function (e) {
                    this.levels = e;
                    var t = this.getLevelsForPathway(this.pathwayId);
                    if (0 === t.length) {
                      var n = e[0].pathwayId;
                      this.log('No levels found in Pathway '.concat(this.pathwayId, '. Setting initial Pathway to "').concat(n, '"')), (t = this.getLevelsForPathway(n)), (this.pathwayId = n);
                    }
                    return t.length !== e.length ? (this.log('Found '.concat(t.length, '/').concat(e.length, ' levels in Pathway "').concat(this.pathwayId, '"')), t) : e;
                  },
                },
                {
                  key: 'getLevelsForPathway',
                  value: function (e) {
                    return null === this.levels
                      ? []
                      : this.levels.filter(function (t) {
                          return e === t.pathwayId;
                        });
                  },
                },
                {
                  key: 'updatePathwayPriority',
                  value: function (e) {
                    var t;
                    this.pathwayPriority = e;
                    var n = this.penalizedPathways,
                      r = performance.now();
                    Object.keys(n).forEach(function (e) {
                      r - n[e] > 3e5 && delete n[e];
                    });
                    for (var i = 0; i < e.length; i++) {
                      var a = e[i];
                      if (!n[a]) {
                        if (a === this.pathwayId) return;
                        var o = this.hls.nextLoadLevel,
                          s = this.hls.levels[o];
                        if ((t = this.getLevelsForPathway(a)).length > 0) {
                          this.log('Setting Pathway to "'.concat(a, '"')), (this.pathwayId = a), this.hls.trigger(Q.LEVELS_UPDATED, { levels: t });
                          var l = this.hls.levels[o];
                          s &&
                            l &&
                            this.levels &&
                            (l.attrs['STABLE-VARIANT-ID'] !== s.attrs['STABLE-VARIANT-ID'] &&
                              l.bitrate !== s.bitrate &&
                              this.log('Unstable Pathways change from bitrate '.concat(s.bitrate, ' to ').concat(l.bitrate)),
                            (this.hls.nextLoadLevel = o));
                          break;
                        }
                      }
                    }
                  },
                },
                {
                  key: 'clonePathways',
                  value: function (e) {
                    var t = this,
                      n = this.levels;
                    if (n) {
                      var r = {},
                        i = {};
                      e.forEach(function (e) {
                        var a = e.ID,
                          o = e['BASE-ID'],
                          s = e['URI-REPLACEMENT'];
                        if (
                          !n.some(function (e) {
                            return e.pathwayId === a;
                          })
                        ) {
                          var l = t.getLevelsForPathway(o).map(function (e) {
                            var t = X({}, e);
                            (t.details = void 0), (t.url = fo(e.uri, e.attrs['STABLE-VARIANT-ID'], 'PER-VARIANT-URIS', s));
                            var n = new le(e.attrs);
                            n['PATHWAY-ID'] = a;
                            var o = n.AUDIO && ''.concat(n.AUDIO, '_clone_').concat(a),
                              l = n.SUBTITLES && ''.concat(n.SUBTITLES, '_clone_').concat(a);
                            o && ((r[n.AUDIO] = o), (n.AUDIO = o)), l && ((i[n.SUBTITLES] = l), (n.SUBTITLES = l)), (t.attrs = n);
                            var u = new pn(t);
                            return Vn(u, 'audio', o), Vn(u, 'text', l), u;
                          });
                          n.push.apply(n, P(l)), co(t.audioTracks, r, s, a), co(t.subtitleTracks, i, s, a);
                        }
                      });
                    }
                  },
                },
                {
                  key: 'loadSteeringManifest',
                  value: function (e) {
                    var t,
                      n = this,
                      r = this.hls.config,
                      i = r.loader;
                    this.loader && this.loader.destroy(), (this.loader = new i(r));
                    try {
                      t = new self.URL(e);
                    } catch (t) {
                      return (this.enabled = !1), void this.log('Failed to parse Steering Manifest URI: '.concat(e));
                    }
                    if ('data:' !== t.protocol) {
                      var a = 0 | (this.hls.bandwidthEstimate || r.abrEwmaDefaultEstimate);
                      t.searchParams.set('_HLS_pathway', this.pathwayId), t.searchParams.set('_HLS_throughput', '' + a);
                    }
                    var o = { responseType: 'json', url: t.href },
                      s = r.steeringManifestLoadPolicy.default,
                      l = s.errorRetry || s.timeoutRetry || {},
                      u = { loadPolicy: s, timeout: s.maxLoadTimeMs, maxRetry: l.maxNumRetry || 0, retryDelay: l.retryDelayMs || 0, maxRetryDelay: l.maxRetryDelayMs || 0 },
                      c = {
                        onSuccess: function (e, r, i, a) {
                          n.log('Loaded steering manifest: "'.concat(t, '"'));
                          var o = e.data;
                          if (1 === o.VERSION) {
                            (n.updated = performance.now()), (n.timeToLoad = o.TTL);
                            var s = o['RELOAD-URI'],
                              l = o['PATHWAY-CLONES'],
                              u = o['PATHWAY-PRIORITY'];
                            if (s)
                              try {
                                n.uri = new self.URL(s, t).href;
                              } catch (e) {
                                return (n.enabled = !1), void n.log('Failed to parse Steering Manifest RELOAD-URI: '.concat(s));
                              }
                            n.scheduleRefresh(n.uri || i.url), l && n.clonePathways(l), u && n.updatePathwayPriority(u);
                          } else n.log('Steering VERSION '.concat(o.VERSION, ' not supported!'));
                        },
                        onError: function (e, t, r, i) {
                          if ((n.log('Error loading steering manifest: '.concat(e.code, ' ').concat(e.text, ' (').concat(t.url, ')')), n.stopLoad(), 410 === e.code))
                            return (n.enabled = !1), void n.log('Steering manifest '.concat(t.url, ' no longer available'));
                          var a = 1e3 * n.timeToLoad;
                          if (429 !== e.code) n.scheduleRefresh(n.uri || t.url, a);
                          else {
                            var o = n.loader;
                            if ('function' == typeof (null == o ? void 0 : o.getResponseHeader)) {
                              var s = o.getResponseHeader('Retry-After');
                              s && (a = 1e3 * parseFloat(s));
                            }
                            n.log('Steering manifest '.concat(t.url, ' rate limited'));
                          }
                        },
                        onTimeout: function (e, t, r) {
                          n.log('Timeout loading steering manifest ('.concat(t.url, ')')), n.scheduleRefresh(n.uri || t.url);
                        },
                      };
                    this.log('Requesting steering manifest: '.concat(t)), this.loader.load(o, u, c);
                  },
                },
                {
                  key: 'scheduleRefresh',
                  value: function (e) {
                    var t = this,
                      n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e3 * this.timeToLoad;
                    self.clearTimeout(this.reloadTimer),
                      (this.reloadTimer = self.setTimeout(function () {
                        t.loadSteeringManifest(e);
                      }, n));
                  },
                },
              ]),
              e
            );
          })();
        function co(e, t, n, r) {
          e &&
            Object.keys(t).forEach(function (i) {
              var a = e
                .filter(function (e) {
                  return e.groupId === i;
                })
                .map(function (e) {
                  var a = X({}, e);
                  return (
                    (a.details = void 0),
                    (a.attrs = new le(a.attrs)),
                    (a.url = a.attrs.URI = fo(e.url, e.attrs['STABLE-RENDITION-ID'], 'PER-RENDITION-URIS', n)),
                    (a.groupId = a.attrs['GROUP-ID'] = t[i]),
                    (a.attrs['PATHWAY-ID'] = r),
                    a
                  );
                });
              e.push.apply(e, P(a));
            });
        }
        function fo(e, t, n, r) {
          var i,
            a = r.HOST,
            o = r.PARAMS,
            s = r[n];
          t && (i = null == s ? void 0 : s[t]) && (e = i);
          var l = new self.URL(e);
          return (
            a && !i && (l.host = a),
            o &&
              Object.keys(o)
                .sort()
                .forEach(function (e) {
                  e && l.searchParams.set(e, o[e]);
                }),
            l.href
          );
        }
        var ho = /^age:\s*[\d.]+\s*$/im,
          po = (function () {
            function e(t) {
              k(this, e),
                (this.xhrSetup = void 0),
                (this.requestTimeout = void 0),
                (this.retryTimeout = void 0),
                (this.retryDelay = void 0),
                (this.config = null),
                (this.callbacks = null),
                (this.context = void 0),
                (this.loader = null),
                (this.stats = void 0),
                (this.xhrSetup = (t && t.xhrSetup) || null),
                (this.stats = new de()),
                (this.retryDelay = 0);
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    (this.callbacks = null), this.abortInternal(), (this.loader = null), (this.config = null);
                  },
                },
                {
                  key: 'abortInternal',
                  value: function () {
                    var e = this.loader;
                    self.clearTimeout(this.requestTimeout),
                      self.clearTimeout(this.retryTimeout),
                      e && ((e.onreadystatechange = null), (e.onprogress = null), 4 !== e.readyState && ((this.stats.aborted = !0), e.abort()));
                  },
                },
                {
                  key: 'abort',
                  value: function () {
                    var e;
                    this.abortInternal(), null != (e = this.callbacks) && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader);
                  },
                },
                {
                  key: 'load',
                  value: function (e, t, n) {
                    if (this.stats.loading.start) throw new Error('Loader can only be used once.');
                    (this.stats.loading.start = self.performance.now()), (this.context = e), (this.config = t), (this.callbacks = n), this.loadInternal();
                  },
                },
                {
                  key: 'loadInternal',
                  value: function () {
                    var e = this,
                      t = this.config,
                      n = this.context;
                    if (t) {
                      var r = (this.loader = new self.XMLHttpRequest()),
                        i = this.stats;
                      (i.loading.first = 0), (i.loaded = 0), (i.aborted = !1);
                      var a = this.xhrSetup;
                      a
                        ? Promise.resolve()
                            .then(function () {
                              if (!e.stats.aborted) return a(r, n.url);
                            })
                            .catch(function (e) {
                              return r.open('GET', n.url, !0), a(r, n.url);
                            })
                            .then(function () {
                              e.stats.aborted || e.openAndSendXhr(r, n, t);
                            })
                            .catch(function (t) {
                              e.callbacks.onError({ code: r.status, text: t.message }, n, r, i);
                            })
                        : this.openAndSendXhr(r, n, t);
                    }
                  },
                },
                {
                  key: 'openAndSendXhr',
                  value: function (e, t, n) {
                    e.readyState || e.open('GET', t.url, !0);
                    var r = this.context.headers,
                      i = n.loadPolicy,
                      a = i.maxTimeToFirstByteMs,
                      o = i.maxLoadTimeMs;
                    if (r) for (var s in r) e.setRequestHeader(s, r[s]);
                    t.rangeEnd && e.setRequestHeader('Range', 'bytes=' + t.rangeStart + '-' + (t.rangeEnd - 1)),
                      (e.onreadystatechange = this.readystatechange.bind(this)),
                      (e.onprogress = this.loadprogress.bind(this)),
                      (e.responseType = t.responseType),
                      self.clearTimeout(this.requestTimeout),
                      (n.timeout = a && $(a) ? a : o),
                      (this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), n.timeout)),
                      e.send();
                  },
                },
                {
                  key: 'readystatechange',
                  value: function () {
                    var e = this.context,
                      t = this.loader,
                      n = this.stats;
                    if (e && t) {
                      var r = t.readyState,
                        i = this.config;
                      if (
                        !n.aborted &&
                        r >= 2 &&
                        (0 === n.loading.first &&
                          ((n.loading.first = Math.max(self.performance.now(), n.loading.start)),
                          i.timeout !== i.loadPolicy.maxLoadTimeMs &&
                            (self.clearTimeout(this.requestTimeout),
                            (i.timeout = i.loadPolicy.maxLoadTimeMs),
                            (this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), i.loadPolicy.maxLoadTimeMs - (n.loading.first - n.loading.start))))),
                        4 === r)
                      ) {
                        self.clearTimeout(this.requestTimeout), (t.onreadystatechange = null), (t.onprogress = null);
                        var a = t.status,
                          o = 'text' !== t.responseType;
                        if (a >= 200 && a < 300 && ((o && t.response) || null !== t.responseText)) {
                          n.loading.end = Math.max(self.performance.now(), n.loading.first);
                          var s = o ? t.response : t.responseText,
                            l = 'arraybuffer' === t.responseType ? s.byteLength : s.length;
                          if (((n.loaded = n.total = l), (n.bwEstimate = (8e3 * n.total) / (n.loading.end - n.loading.first)), !this.callbacks)) return;
                          var u = this.callbacks.onProgress;
                          if ((u && u(n, e, s, t), !this.callbacks)) return;
                          var c = { url: t.responseURL, data: s, code: a };
                          this.callbacks.onSuccess(c, n, e, t);
                        } else {
                          var d = i.loadPolicy.errorRetry;
                          An(d, n.retry, !1, a) ? this.retry(d) : (ae.error(''.concat(a, ' while loading ').concat(e.url)), this.callbacks.onError({ code: a, text: t.statusText }, e, t, n));
                        }
                      }
                    }
                  },
                },
                {
                  key: 'loadtimeout',
                  value: function () {
                    var e,
                      t = null == (e = this.config) ? void 0 : e.loadPolicy.timeoutRetry;
                    if (An(t, this.stats.retry, !0)) this.retry(t);
                    else {
                      ae.warn('timeout while loading '.concat(this.context.url));
                      var n = this.callbacks;
                      n && (this.abortInternal(), n.onTimeout(this.stats, this.context, this.loader));
                    }
                  },
                },
                {
                  key: 'retry',
                  value: function (e) {
                    var t = this.context,
                      n = this.stats;
                    (this.retryDelay = Tn(e, n.retry)),
                      n.retry++,
                      ae.warn(
                        ''
                          .concat(status ? 'HTTP Status ' + status : 'Timeout', ' while loading ')
                          .concat(t.url, ', retrying ')
                          .concat(n.retry, '/')
                          .concat(e.maxNumRetry, ' in ')
                          .concat(this.retryDelay, 'ms'),
                      ),
                      this.abortInternal(),
                      (this.loader = null),
                      self.clearTimeout(this.retryTimeout),
                      (this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay));
                  },
                },
                {
                  key: 'loadprogress',
                  value: function (e) {
                    var t = this.stats;
                    (t.loaded = e.loaded), e.lengthComputable && (t.total = e.total);
                  },
                },
                {
                  key: 'getCacheAge',
                  value: function () {
                    var e = null;
                    if (this.loader && ho.test(this.loader.getAllResponseHeaders())) {
                      var t = this.loader.getResponseHeader('age');
                      e = t ? parseFloat(t) : null;
                    }
                    return e;
                  },
                },
                {
                  key: 'getResponseHeader',
                  value: function (e) {
                    return this.loader && new RegExp('^'.concat(e, ':\\s*[\\d.]+\\s*$'), 'im').test(this.loader.getAllResponseHeaders()) ? this.loader.getResponseHeader(e) : null;
                  },
                },
              ]),
              e
            );
          })();
        var vo = /(\d+)-(\d+)\/(\d+)/,
          mo = (function () {
            function e(t) {
              k(this, e),
                (this.fetchSetup = void 0),
                (this.requestTimeout = void 0),
                (this.request = void 0),
                (this.response = void 0),
                (this.controller = void 0),
                (this.context = void 0),
                (this.config = null),
                (this.callbacks = null),
                (this.stats = void 0),
                (this.loader = null),
                (this.fetchSetup = t.fetchSetup || go),
                (this.controller = new self.AbortController()),
                (this.stats = new de());
            }
            return (
              w(e, [
                {
                  key: 'destroy',
                  value: function () {
                    (this.loader = this.callbacks = null), this.abortInternal();
                  },
                },
                {
                  key: 'abortInternal',
                  value: function () {
                    var e = this.response;
                    (null != e && e.ok) || ((this.stats.aborted = !0), this.controller.abort());
                  },
                },
                {
                  key: 'abort',
                  value: function () {
                    var e;
                    this.abortInternal(), null != (e = this.callbacks) && e.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response);
                  },
                },
                {
                  key: 'load',
                  value: function (e, t, n) {
                    var r = this,
                      i = this.stats;
                    if (i.loading.start) throw new Error('Loader can only be used once.');
                    i.loading.start = self.performance.now();
                    var a = (function (e, t) {
                        var n = { method: 'GET', mode: 'cors', credentials: 'same-origin', signal: t, headers: new self.Headers(X({}, e.headers)) };
                        e.rangeEnd && n.headers.set('Range', 'bytes=' + e.rangeStart + '-' + String(e.rangeEnd - 1));
                        return n;
                      })(e, this.controller.signal),
                      o = n.onProgress,
                      s = 'arraybuffer' === e.responseType,
                      l = s ? 'byteLength' : 'length',
                      u = t.loadPolicy,
                      c = u.maxTimeToFirstByteMs,
                      d = u.maxLoadTimeMs;
                    (this.context = e),
                      (this.config = t),
                      (this.callbacks = n),
                      (this.request = this.fetchSetup(e, a)),
                      self.clearTimeout(this.requestTimeout),
                      (t.timeout = c && $(c) ? c : d),
                      (this.requestTimeout = self.setTimeout(function () {
                        r.abortInternal(), n.onTimeout(i, e, r.response);
                      }, t.timeout)),
                      self
                        .fetch(this.request)
                        .then(function (a) {
                          r.response = r.loader = a;
                          var l = Math.max(self.performance.now(), i.loading.start);
                          if (
                            (self.clearTimeout(r.requestTimeout),
                            (t.timeout = d),
                            (r.requestTimeout = self.setTimeout(function () {
                              r.abortInternal(), n.onTimeout(i, e, r.response);
                            }, d - (l - i.loading.start))),
                            !a.ok)
                          ) {
                            var u = a.status,
                              c = a.statusText;
                            throw new yo(c || 'fetch, bad network response', u, a);
                          }
                          return (
                            (i.loading.first = l),
                            (i.total =
                              (function (e) {
                                var t = e.get('Content-Range');
                                if (t) {
                                  var n = (function (e) {
                                    var t = vo.exec(e);
                                    if (t) return parseInt(t[2]) - parseInt(t[1]) + 1;
                                  })(t);
                                  if ($(n)) return n;
                                }
                                var r = e.get('Content-Length');
                                if (r) return parseInt(r);
                              })(a.headers) || i.total),
                            o && $(t.highWaterMark) ? r.loadProgressively(a, i, e, t.highWaterMark, o) : s ? a.arrayBuffer() : 'json' === e.responseType ? a.json() : a.text()
                          );
                        })
                        .then(function (a) {
                          var s = r.response;
                          self.clearTimeout(r.requestTimeout), (i.loading.end = Math.max(self.performance.now(), i.loading.first));
                          var u = a[l];
                          u && (i.loaded = i.total = u);
                          var c = { url: s.url, data: a, code: s.status };
                          o && !$(t.highWaterMark) && o(i, e, a, s), n.onSuccess(c, i, e, s);
                        })
                        .catch(function (t) {
                          if ((self.clearTimeout(r.requestTimeout), !i.aborted)) {
                            var a = (t && t.code) || 0,
                              o = t ? t.message : null;
                            n.onError({ code: a, text: o }, e, t ? t.details : null, i);
                          }
                        });
                  },
                },
                {
                  key: 'getCacheAge',
                  value: function () {
                    var e = null;
                    if (this.response) {
                      var t = this.response.headers.get('age');
                      e = t ? parseFloat(t) : null;
                    }
                    return e;
                  },
                },
                {
                  key: 'getResponseHeader',
                  value: function (e) {
                    return this.response ? this.response.headers.get(e) : null;
                  },
                },
                {
                  key: 'loadProgressively',
                  value: function (e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                      i = arguments.length > 4 ? arguments[4] : void 0,
                      a = new ji(),
                      o = e.body.getReader(),
                      s = function s() {
                        return o
                          .read()
                          .then(function (o) {
                            if (o.done) return a.dataLength && i(t, n, a.flush(), e), Promise.resolve(new ArrayBuffer(0));
                            var l = o.value,
                              u = l.length;
                            return (t.loaded += u), u < r || a.dataLength ? (a.push(l), a.dataLength >= r && i(t, n, a.flush(), e)) : i(t, n, l, e), s();
                          })
                          .catch(function () {
                            return Promise.reject();
                          });
                      };
                    return s();
                  },
                },
              ]),
              e
            );
          })();
        function go(e, t) {
          return new self.Request(e.url, t);
        }
        var yo = (function (e) {
            H(n, e);
            var t = V(n);
            function n(e, r, i) {
              var a;
              return k(this, n), ((a = t.call(this, e)).code = void 0), (a.details = void 0), (a.code = r), (a.details = i), a;
            }
            return w(n);
          })(B(Error)),
          _o = /\s/,
          bo = q(
            q(
              {
                autoStartLoad: !0,
                startPosition: -1,
                defaultAudioCodec: void 0,
                debug: !1,
                capLevelOnFPSDrop: !1,
                capLevelToPlayerSize: !1,
                ignoreDevicePixelRatio: !1,
                initialLiveManifestSize: 1,
                maxBufferLength: 30,
                backBufferLength: 1 / 0,
                maxBufferSize: 6e7,
                maxBufferHole: 0.1,
                highBufferWatchdogPeriod: 2,
                nudgeOffset: 0.1,
                nudgeMaxRetry: 3,
                maxFragLookUpTolerance: 0.25,
                liveSyncDurationCount: 3,
                liveMaxLatencyDurationCount: 1 / 0,
                liveSyncDuration: void 0,
                liveMaxLatencyDuration: void 0,
                maxLiveSyncPlaybackRate: 1,
                liveDurationInfinity: !1,
                liveBackBufferLength: null,
                maxMaxBufferLength: 600,
                enableWorker: !0,
                workerPath: null,
                enableSoftwareAES: !0,
                startLevel: void 0,
                startFragPrefetch: !1,
                fpsDroppedMonitoringPeriod: 5e3,
                fpsDroppedMonitoringThreshold: 0.2,
                appendErrorMaxRetry: 3,
                loader: po,
                fLoader: void 0,
                pLoader: void 0,
                xhrSetup: void 0,
                licenseXhrSetup: void 0,
                licenseResponseCallback: void 0,
                abrController: Gi,
                bufferController: na,
                capLevelController: Qa,
                errorController: Bn,
                fpsController: Za,
                stretchShortVideoTrack: !1,
                maxAudioFramesDrift: 1,
                forceKeyFrameOnDiscontinuity: !0,
                abrEwmaFastLive: 3,
                abrEwmaSlowLive: 9,
                abrEwmaFastVoD: 3,
                abrEwmaSlowVoD: 9,
                abrEwmaDefaultEstimate: 5e5,
                abrBandWidthFactor: 0.95,
                abrBandWidthUpFactor: 0.7,
                abrMaxWithRealBitrate: !1,
                maxStarvationDelay: 4,
                maxLoadingDelay: 4,
                minAutoBitrate: 0,
                emeEnabled: !1,
                widevineLicenseUrl: void 0,
                drmSystems: {},
                drmSystemOptions: {},
                requestMediaKeySystemAccessFunc: De,
                testBandwidth: !0,
                progressive: !1,
                lowLatencyMode: !0,
                cmcd: void 0,
                enableDateRangeMetadataCues: !0,
                enableEmsgMetadataCues: !0,
                enableID3MetadataCues: !0,
                certLoadPolicy: { default: { maxTimeToFirstByteMs: 8e3, maxLoadTimeMs: 2e4, timeoutRetry: null, errorRetry: null } },
                keyLoadPolicy: {
                  default: {
                    maxTimeToFirstByteMs: 8e3,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: { maxNumRetry: 1, retryDelayMs: 1e3, maxRetryDelayMs: 2e4, backoff: 'linear' },
                    errorRetry: { maxNumRetry: 8, retryDelayMs: 1e3, maxRetryDelayMs: 2e4, backoff: 'linear' },
                  },
                },
                manifestLoadPolicy: {
                  default: {
                    maxTimeToFirstByteMs: 1 / 0,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: { maxNumRetry: 2, retryDelayMs: 0, maxRetryDelayMs: 0 },
                    errorRetry: { maxNumRetry: 1, retryDelayMs: 1e3, maxRetryDelayMs: 8e3 },
                  },
                },
                playlistLoadPolicy: {
                  default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: { maxNumRetry: 2, retryDelayMs: 0, maxRetryDelayMs: 0 },
                    errorRetry: { maxNumRetry: 2, retryDelayMs: 1e3, maxRetryDelayMs: 8e3 },
                  },
                },
                fragLoadPolicy: {
                  default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 12e4,
                    timeoutRetry: { maxNumRetry: 4, retryDelayMs: 0, maxRetryDelayMs: 0 },
                    errorRetry: { maxNumRetry: 6, retryDelayMs: 1e3, maxRetryDelayMs: 8e3 },
                  },
                },
                steeringManifestLoadPolicy: {
                  default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: { maxNumRetry: 2, retryDelayMs: 0, maxRetryDelayMs: 0 },
                    errorRetry: { maxNumRetry: 1, retryDelayMs: 1e3, maxRetryDelayMs: 8e3 },
                  },
                },
                manifestLoadingTimeOut: 1e4,
                manifestLoadingMaxRetry: 1,
                manifestLoadingRetryDelay: 1e3,
                manifestLoadingMaxRetryTimeout: 64e3,
                levelLoadingTimeOut: 1e4,
                levelLoadingMaxRetry: 4,
                levelLoadingRetryDelay: 1e3,
                levelLoadingMaxRetryTimeout: 64e3,
                fragLoadingTimeOut: 2e4,
                fragLoadingMaxRetry: 6,
                fragLoadingRetryDelay: 1e3,
                fragLoadingMaxRetryTimeout: 64e3,
              },
              {
                cueHandler: {
                  newCue: function (e, t, n, r) {
                    for (var i, a, o, s, l, u = [], c = self.VTTCue || self.TextTrackCue, d = 0; d < r.rows.length; d++)
                      if (((o = !0), (s = 0), (l = ''), !(i = r.rows[d]).isEmpty())) {
                        for (var f, h = 0; h < i.chars.length; h++) _o.test(i.chars[h].uchar) && o ? s++ : ((l += i.chars[h].uchar), (o = !1));
                        (i.cueStartTime = t), t === n && (n += 1e-4), s >= 16 ? s-- : s++;
                        var p = Da(l.trim()),
                          v = Fa(t, n, p);
                        (null != e && null != (f = e.cues) && f.getCueById(v)) ||
                          (((a = new c(t, n, p)).id = v), (a.line = d + 1), (a.align = 'left'), (a.position = 10 + Math.min(80, 10 * Math.floor((8 * s) / 32))), u.push(a));
                      }
                    return (
                      e &&
                        u.length &&
                        (u.sort(function (e, t) {
                          return 'auto' === e.line || 'auto' === t.line ? 0 : e.line > 8 && t.line > 8 ? t.line - e.line : e.line - t.line;
                        }),
                        u.forEach(function (t) {
                          return Qt(e, t);
                        })),
                      u
                    );
                  },
                },
                enableWebVTT: !0,
                enableIMSC1: !0,
                enableCEA708Captions: !0,
                captionsTextTrack1Label: 'English',
                captionsTextTrack1LanguageCode: 'en',
                captionsTextTrack2Label: 'Spanish',
                captionsTextTrack2LanguageCode: 'es',
                captionsTextTrack3Label: 'Unknown CC',
                captionsTextTrack3LanguageCode: '',
                captionsTextTrack4Label: 'Unknown CC',
                captionsTextTrack4LanguageCode: '',
                renderTextTracksNatively: !0,
              },
            ),
            {},
            {
              subtitleStreamController: Xi,
              subtitleTrackController: Qi,
              timelineController: Xa,
              audioStreamController: Ki,
              audioTrackController: Wi,
              emeController: eo,
              cmcdController: lo,
              contentSteeringController: uo,
            },
          );
        function Eo(e, t) {
          if ((t.liveSyncDurationCount || t.liveMaxLatencyDurationCount) && (t.liveSyncDuration || t.liveMaxLatencyDuration))
            throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
          if (void 0 !== t.liveMaxLatencyDurationCount && (void 0 === t.liveSyncDurationCount || t.liveMaxLatencyDurationCount <= t.liveSyncDurationCount))
            throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');
          if (void 0 !== t.liveMaxLatencyDuration && (void 0 === t.liveSyncDuration || t.liveMaxLatencyDuration <= t.liveSyncDuration))
            throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');
          var n = So(e),
            r = ['TimeOut', 'MaxRetry', 'RetryDelay', 'MaxRetryTimeout'];
          return (
            ['manifest', 'level', 'frag'].forEach(function (e) {
              var i = ''.concat('level' === e ? 'playlist' : e, 'LoadPolicy'),
                a = void 0 === t[i],
                o = [];
              r.forEach(function (r) {
                var s = ''.concat(e, 'Loading').concat(r),
                  l = t[s];
                if (void 0 !== l && a) {
                  o.push(s);
                  var u = n[i].default;
                  switch (((t[i] = { default: u }), r)) {
                    case 'TimeOut':
                      (u.maxLoadTimeMs = l), (u.maxTimeToFirstByteMs = l);
                      break;
                    case 'MaxRetry':
                      (u.errorRetry.maxNumRetry = l), (u.timeoutRetry.maxNumRetry = l);
                      break;
                    case 'RetryDelay':
                      (u.errorRetry.retryDelayMs = l), (u.timeoutRetry.retryDelayMs = l);
                      break;
                    case 'MaxRetryTimeout':
                      (u.errorRetry.maxRetryDelayMs = l), (u.timeoutRetry.maxRetryDelayMs = l);
                  }
                }
              }),
                o.length && ae.warn('hls.js config: "'.concat(o.join('", "'), '" setting(s) are deprecated, use "').concat(i, '": ').concat(JSON.stringify(t[i])));
            }),
            q(q({}, n), t)
          );
        }
        function So(e) {
          return e && 'object' === l(e)
            ? Array.isArray(e)
              ? e.map(So)
              : Object.keys(e).reduce(function (t, n) {
                  return (t[n] = So(e[n])), t;
                }, {})
            : e;
        }
        function ko(e) {
          var t = e.loader;
          t !== mo && t !== po
            ? (ae.log('[config]: Custom loader detected, cannot enable progressive streaming'), (e.progressive = !1))
            : (function () {
                if (self.fetch && self.AbortController && self.ReadableStream && self.Request)
                  try {
                    return new self.ReadableStream({}), !0;
                  } catch (e) {}
                return !1;
              })() && ((e.loader = mo), (e.progressive = !0), (e.enableSoftwareAES = !0), ae.log('[config]: Progressive streaming enabled, using FetchLoader'));
        }
        var To = (function () {
          function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            k(this, e),
              (this.config = void 0),
              (this.userConfig = void 0),
              (this.coreComponents = void 0),
              (this.networkControllers = void 0),
              (this._emitter = new Fi()),
              (this._autoLevelCapping = void 0),
              (this._maxHdcpLevel = null),
              (this.abrController = void 0),
              (this.bufferController = void 0),
              (this.capLevelController = void 0),
              (this.latencyController = void 0),
              (this.levelController = void 0),
              (this.streamController = void 0),
              (this.audioTrackController = void 0),
              (this.subtitleTrackController = void 0),
              (this.emeController = void 0),
              (this.cmcdController = void 0),
              (this._media = null),
              (this.url = null),
              ie(t.debug || !1, 'Hls instance');
            var n = (this.config = Eo(e.DefaultConfig, t));
            (this.userConfig = t), (this._autoLevelCapping = -1), n.progressive && ko(n);
            var r = n.abrController,
              i = n.bufferController,
              a = n.capLevelController,
              o = n.errorController,
              s = n.fpsController,
              l = new o(this),
              u = (this.abrController = new r(this)),
              c = (this.bufferController = new i(this)),
              d = (this.capLevelController = new a(this)),
              f = new s(this),
              h = new Xt(this),
              p = new sn(this),
              v = n.contentSteeringController,
              m = v ? new v(this) : null,
              g = (this.levelController = new Hn(this, m)),
              y = new Yn(this),
              _ = new nr(this.config),
              b = (this.streamController = new zi(this, y, _));
            d.setStreamController(b), f.setStreamController(b);
            var E = [h, g, b];
            m && E.splice(1, 0, m), (this.networkControllers = E);
            var S = [u, c, d, f, p, y];
            this.audioTrackController = this.createController(n.audioTrackController, E);
            var T = n.audioStreamController;
            T && E.push(new T(this, y, _)), (this.subtitleTrackController = this.createController(n.subtitleTrackController, E));
            var w = n.subtitleStreamController;
            w && E.push(new w(this, y, _)),
              this.createController(n.timelineController, S),
              (_.emeController = this.emeController = this.createController(n.emeController, S)),
              (this.cmcdController = this.createController(n.cmcdController, S)),
              (this.latencyController = this.createController(ln, S)),
              (this.coreComponents = S),
              E.push(l);
            var A = l.onErrorOut;
            'function' == typeof A && this.on(Q.ERROR, A, l);
          }
          return (
            w(
              e,
              [
                {
                  key: 'createController',
                  value: function (e, t) {
                    if (e) {
                      var n = new e(this);
                      return t && t.push(n), n;
                    }
                    return null;
                  },
                },
                {
                  key: 'on',
                  value: function (e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this;
                    this._emitter.on(e, t, n);
                  },
                },
                {
                  key: 'once',
                  value: function (e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this;
                    this._emitter.once(e, t, n);
                  },
                },
                {
                  key: 'removeAllListeners',
                  value: function (e) {
                    this._emitter.removeAllListeners(e);
                  },
                },
                {
                  key: 'off',
                  value: function (e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this,
                      r = arguments.length > 3 ? arguments[3] : void 0;
                    this._emitter.off(e, t, n, r);
                  },
                },
                {
                  key: 'listeners',
                  value: function (e) {
                    return this._emitter.listeners(e);
                  },
                },
                {
                  key: 'emit',
                  value: function (e, t, n) {
                    return this._emitter.emit(e, t, n);
                  },
                },
                {
                  key: 'trigger',
                  value: function (e, t) {
                    if (this.config.debug) return this.emit(e, e, t);
                    try {
                      return this.emit(e, e, t);
                    } catch (t) {
                      ae.error('An internal error happened while handling event ' + e + '. Error message: "' + t.message + '". Here is a stacktrace:', t),
                        this.trigger(Q.ERROR, { type: Z.OTHER_ERROR, details: J.INTERNAL_EXCEPTION, fatal: !1, event: e, error: t });
                    }
                    return !1;
                  },
                },
                {
                  key: 'listenerCount',
                  value: function (e) {
                    return this._emitter.listenerCount(e);
                  },
                },
                {
                  key: 'destroy',
                  value: function () {
                    ae.log('destroy'),
                      this.trigger(Q.DESTROYING, void 0),
                      this.detachMedia(),
                      this.removeAllListeners(),
                      (this._autoLevelCapping = -1),
                      (this.url = null),
                      this.networkControllers.forEach(function (e) {
                        return e.destroy();
                      }),
                      (this.networkControllers.length = 0),
                      this.coreComponents.forEach(function (e) {
                        return e.destroy();
                      }),
                      (this.coreComponents.length = 0);
                    var e = this.config;
                    (e.xhrSetup = e.fetchSetup = void 0), (this.userConfig = null);
                  },
                },
                {
                  key: 'attachMedia',
                  value: function (e) {
                    ae.log('attachMedia'), (this._media = e), this.trigger(Q.MEDIA_ATTACHING, { media: e });
                  },
                },
                {
                  key: 'detachMedia',
                  value: function () {
                    ae.log('detachMedia'), this.trigger(Q.MEDIA_DETACHING, void 0), (this._media = null);
                  },
                },
                {
                  key: 'loadSource',
                  value: function (e) {
                    this.stopLoad();
                    var t = this.media,
                      n = this.url,
                      r = (this.url = K.buildAbsoluteURL(self.location.href, e, { alwaysNormalize: !0 }));
                    ae.log('loadSource:'.concat(r)),
                      t && n && (n !== r || this.bufferController.hasSourceTypes()) && (this.detachMedia(), this.attachMedia(t)),
                      this.trigger(Q.MANIFEST_LOADING, { url: e });
                  },
                },
                {
                  key: 'startLoad',
                  value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;
                    ae.log('startLoad('.concat(e, ')')),
                      this.networkControllers.forEach(function (t) {
                        t.startLoad(e);
                      });
                  },
                },
                {
                  key: 'stopLoad',
                  value: function () {
                    ae.log('stopLoad'),
                      this.networkControllers.forEach(function (e) {
                        e.stopLoad();
                      });
                  },
                },
                {
                  key: 'swapAudioCodec',
                  value: function () {
                    ae.log('swapAudioCodec'), this.streamController.swapAudioCodec();
                  },
                },
                {
                  key: 'recoverMediaError',
                  value: function () {
                    ae.log('recoverMediaError');
                    var e = this._media;
                    this.detachMedia(), e && this.attachMedia(e);
                  },
                },
                {
                  key: 'removeLevel',
                  value: function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    this.levelController.removeLevel(e, t);
                  },
                },
                {
                  key: 'levels',
                  get: function () {
                    var e = this.levelController.levels;
                    return e || [];
                  },
                },
                {
                  key: 'currentLevel',
                  get: function () {
                    return this.streamController.currentLevel;
                  },
                  set: function (e) {
                    ae.log('set currentLevel:'.concat(e)), (this.loadLevel = e), this.abrController.clearTimer(), this.streamController.immediateLevelSwitch();
                  },
                },
                {
                  key: 'nextLevel',
                  get: function () {
                    return this.streamController.nextLevel;
                  },
                  set: function (e) {
                    ae.log('set nextLevel:'.concat(e)), (this.levelController.manualLevel = e), this.streamController.nextLevelSwitch();
                  },
                },
                {
                  key: 'loadLevel',
                  get: function () {
                    return this.levelController.level;
                  },
                  set: function (e) {
                    ae.log('set loadLevel:'.concat(e)), (this.levelController.manualLevel = e);
                  },
                },
                {
                  key: 'nextLoadLevel',
                  get: function () {
                    return this.levelController.nextLoadLevel;
                  },
                  set: function (e) {
                    this.levelController.nextLoadLevel = e;
                  },
                },
                {
                  key: 'firstLevel',
                  get: function () {
                    return Math.max(this.levelController.firstLevel, this.minAutoLevel);
                  },
                  set: function (e) {
                    ae.log('set firstLevel:'.concat(e)), (this.levelController.firstLevel = e);
                  },
                },
                {
                  key: 'startLevel',
                  get: function () {
                    return this.levelController.startLevel;
                  },
                  set: function (e) {
                    ae.log('set startLevel:'.concat(e)), -1 !== e && (e = Math.max(e, this.minAutoLevel)), (this.levelController.startLevel = e);
                  },
                },
                {
                  key: 'capLevelToPlayerSize',
                  get: function () {
                    return this.config.capLevelToPlayerSize;
                  },
                  set: function (e) {
                    var t = !!e;
                    t !== this.config.capLevelToPlayerSize &&
                      (t ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), (this.autoLevelCapping = -1), this.streamController.nextLevelSwitch()),
                      (this.config.capLevelToPlayerSize = t));
                  },
                },
                {
                  key: 'autoLevelCapping',
                  get: function () {
                    return this._autoLevelCapping;
                  },
                  set: function (e) {
                    this._autoLevelCapping !== e && (ae.log('set autoLevelCapping:'.concat(e)), (this._autoLevelCapping = e));
                  },
                },
                {
                  key: 'bandwidthEstimate',
                  get: function () {
                    var e = this.abrController.bwEstimator;
                    return e ? e.getEstimate() : NaN;
                  },
                },
                {
                  key: 'ttfbEstimate',
                  get: function () {
                    var e = this.abrController.bwEstimator;
                    return e ? e.getEstimateTTFB() : NaN;
                  },
                },
                {
                  key: 'maxHdcpLevel',
                  get: function () {
                    return this._maxHdcpLevel;
                  },
                  set: function (e) {
                    un.indexOf(e) > -1 && (this._maxHdcpLevel = e);
                  },
                },
                {
                  key: 'autoLevelEnabled',
                  get: function () {
                    return -1 === this.levelController.manualLevel;
                  },
                },
                {
                  key: 'manualLevel',
                  get: function () {
                    return this.levelController.manualLevel;
                  },
                },
                {
                  key: 'minAutoLevel',
                  get: function () {
                    var e = this.levels,
                      t = this.config.minAutoBitrate;
                    if (!e) return 0;
                    for (var n = e.length, r = 0; r < n; r++) if (e[r].maxBitrate >= t) return r;
                    return 0;
                  },
                },
                {
                  key: 'maxAutoLevel',
                  get: function () {
                    var e,
                      t = this.levels,
                      n = this.autoLevelCapping,
                      r = this.maxHdcpLevel;
                    if (((e = -1 === n && t && t.length ? t.length - 1 : n), r))
                      for (var i = e; i--; ) {
                        var a = t[i].attrs['HDCP-LEVEL'];
                        if (a && a <= r) return i;
                      }
                    return e;
                  },
                },
                {
                  key: 'nextAutoLevel',
                  get: function () {
                    return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel);
                  },
                  set: function (e) {
                    this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e);
                  },
                },
                {
                  key: 'playingDate',
                  get: function () {
                    return this.streamController.currentProgramDateTime;
                  },
                },
                {
                  key: 'mainForwardBufferInfo',
                  get: function () {
                    return this.streamController.getMainFwdBufferInfo();
                  },
                },
                {
                  key: 'audioTracks',
                  get: function () {
                    var e = this.audioTrackController;
                    return e ? e.audioTracks : [];
                  },
                },
                {
                  key: 'audioTrack',
                  get: function () {
                    var e = this.audioTrackController;
                    return e ? e.audioTrack : -1;
                  },
                  set: function (e) {
                    var t = this.audioTrackController;
                    t && (t.audioTrack = e);
                  },
                },
                {
                  key: 'subtitleTracks',
                  get: function () {
                    var e = this.subtitleTrackController;
                    return e ? e.subtitleTracks : [];
                  },
                },
                {
                  key: 'subtitleTrack',
                  get: function () {
                    var e = this.subtitleTrackController;
                    return e ? e.subtitleTrack : -1;
                  },
                  set: function (e) {
                    var t = this.subtitleTrackController;
                    t && (t.subtitleTrack = e);
                  },
                },
                {
                  key: 'media',
                  get: function () {
                    return this._media;
                  },
                },
                {
                  key: 'subtitleDisplay',
                  get: function () {
                    var e = this.subtitleTrackController;
                    return !!e && e.subtitleDisplay;
                  },
                  set: function (e) {
                    var t = this.subtitleTrackController;
                    t && (t.subtitleDisplay = e);
                  },
                },
                {
                  key: 'lowLatencyMode',
                  get: function () {
                    return this.config.lowLatencyMode;
                  },
                  set: function (e) {
                    this.config.lowLatencyMode = e;
                  },
                },
                {
                  key: 'liveSyncPosition',
                  get: function () {
                    return this.latencyController.liveSyncPosition;
                  },
                },
                {
                  key: 'latency',
                  get: function () {
                    return this.latencyController.latency;
                  },
                },
                {
                  key: 'maxLatency',
                  get: function () {
                    return this.latencyController.maxLatency;
                  },
                },
                {
                  key: 'targetLatency',
                  get: function () {
                    return this.latencyController.targetLatency;
                  },
                },
                {
                  key: 'drift',
                  get: function () {
                    return this.latencyController.drift;
                  },
                },
                {
                  key: 'forceStartLoad',
                  get: function () {
                    return this.streamController.forceStartLoad;
                  },
                },
              ],
              [
                {
                  key: 'version',
                  get: function () {
                    return '1.4.8';
                  },
                },
                {
                  key: 'isSupported',
                  value: function () {
                    return (function () {
                      var e = kt();
                      if (!e) return !1;
                      var t = xr(),
                        n = e && 'function' == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                        r = !t || (t.prototype && 'function' == typeof t.prototype.appendBuffer && 'function' == typeof t.prototype.remove);
                      return !!n && !!r;
                    })();
                  },
                },
                {
                  key: 'Events',
                  get: function () {
                    return Q;
                  },
                },
                {
                  key: 'ErrorTypes',
                  get: function () {
                    return Z;
                  },
                },
                {
                  key: 'ErrorDetails',
                  get: function () {
                    return J;
                  },
                },
                {
                  key: 'DefaultConfig',
                  get: function () {
                    return e.defaultConfig ? e.defaultConfig : bo;
                  },
                  set: function (t) {
                    e.defaultConfig = t;
                  },
                },
              ],
            ),
            e
          );
        })();
        To.defaultConfig = void 0;
        var wo = {
          RELOAD: 'reload',
          RELOAD_FAIL: 'reloadFail',
          RELOAD_SUCCESS: 'reloadSuccess',
          ERROR: 'error',
          ERROR_RELOAD: 'errorRload',
          HISTORY_PLAY_END: 'historyPlayEnd',
          PLAY_ENDED: 'play_ended',
          SEEK: 'seek',
          TRANSFORM: 'transform',
          CHANGE_PLAY_INDEX: 'changePlayIndex',
          HIDE_CONTRALLER: 'hideContraller',
          SHOW_CONTRALLER: 'showContraller',
          CLEAR_ERROR_TIMER: 'clearErrorTimer',
          CANVAS_PAUSE: 'canvasPause',
          CANVAS_PLAY: 'canvasPlay',
        };
        var Ao = function (e, t, n) {
          e && (e.pause(), t ? t.unload() : n ? n.stopLoad() : e.removeAttribute('src'));
        };
        function Lo(e) {
          var t = Math.round((e / 60 / 60) % 24),
            n = e < 60 ? 0 : Math.round((e / 60) % 60),
            r = Math.round(e % 60);
          return 0 === t
            ? ''.concat(n < 10 ? '0' + n : n, ':').concat(r < 10 ? '0' + r : r)
            : ''
                .concat(t < 10 ? '0' + t : t, ':')
                .concat(n < 10 ? '0' + n : n, ':')
                .concat(r < 10 ? '0' + r : r);
        }
        var Ro = 'YYYY-MM-DD HH:mm:ss';
        function Co(e, t) {
          return new Proxy(e, {
            get: function (e, n, r) {
              return 'object' === u()(e[n]) && Co(e[n]), t && t[n] ? Reflect.get(t, n) : Reflect.get(e, n, r);
            },
            set: function (e, t, n) {
              return Reflect.set(e, t, n);
            },
          });
        }
        var xo = (function () {
          function e(t) {
            var n = this;
            T()(this, e),
              R()(this, 'container', void 0),
              R()(this, 'play', function () {
                x(
                  S()(
                    b()().mark(function e() {
                      var t;
                      return b()().wrap(function (e) {
                        for (;;)
                          switch ((e.prev = e.next)) {
                            case 0:
                              return e.abrupt('return', null === (t = n.video) || void 0 === t ? void 0 : t.play());
                            case 1:
                            case 'end':
                              return e.stop();
                          }
                      }, e);
                    }),
                  ),
                );
              }),
              R()(this, 'pause', function () {
                var e;
                null === (e = n.video) || void 0 === e || e.pause();
              }),
              R()(this, 'seekTo', function (e) {
                n.video && (n.video.currentTime = e);
              }),
              R()(this, 'setVolume', function (e) {
                n.video && (n.video.volume = e);
              }),
              R()(this, 'getVolume', function () {
                var e;
                return null === (e = n.video) || void 0 === e ? void 0 : e.volume;
              }),
              R()(this, 'mute', function () {
                n.video && (n.video.muted = !0);
              }),
              R()(this, 'unmute', function () {
                n.video && (n.video.muted = !1);
              }),
              R()(this, 'requestPictureInPicture', function () {
                var e;
                null === (e = n.video) || void 0 === e || e.requestPictureInPicture();
              }),
              R()(this, 'exitPictureInPicture', function () {
                document.exitPictureInPicture && document.pictureInPictureElement === n.video && document.exitPictureInPicture();
              }),
              R()(this, 'setPlaybackRate', function (e) {
                n.video && (n.video.playbackRate = e);
              }),
              R()(this, 'getDuration', function () {
                var e = n.video || {},
                  t = e.duration,
                  r = e.seekable;
                return t === 1 / 0 && r && r.length > 0 ? r.end(r.length - 1) : null != t ? t : 0;
              }),
              R()(this, 'getCurrentTime', function () {
                var e, t;
                return null !== (e = null === (t = n.video) || void 0 === t ? void 0 : t.currentTime) && void 0 !== e ? e : 0;
              }),
              R()(this, 'getSecondsLoaded', function () {
                var e;
                return null !== (e = n.getBufferedTime()[1]) && void 0 !== e ? e : 0;
              }),
              R()(this, 'getBufferedTime', function () {
                var e,
                  t,
                  r,
                  i = (n.video || {}).buffered;
                if (i && 0 === i.length) return [0, 0];
                var a = null !== (e = null == i ? void 0 : i.end(i.length - 1)) && void 0 !== e ? e : 0,
                  o = null !== (t = null == i ? void 0 : i.start(i.length - 1)) && void 0 !== t ? t : 0,
                  s = null !== (r = n.getDuration()) && void 0 !== r ? r : 0;
                return a > s ? [o, s] : [o, a];
              }),
              R()(this, 'snapshot', function () {
                var e,
                  t,
                  r,
                  i,
                  a,
                  o = document.createElement('canvas'),
                  s = o.getContext('2d');
                return (
                  (o.width = null !== (e = null === (t = n.video) || void 0 === t ? void 0 : t.videoWidth) && void 0 !== e ? e : 0),
                  (o.height = null !== (r = null === (i = n.video) || void 0 === i ? void 0 : i.videoHeight) && void 0 !== r ? r : 0),
                  null === (a = s) || void 0 === a || a.drawImage(n.video, 0, 0, o.width, o.height),
                  setTimeout(function () {
                    o.remove(), (o = null), (s = null);
                  }, 200),
                  o.toDataURL()
                );
              }),
              R()(this, 'unload', function () {}),
              R()(this, 'reload', function () {}),
              R()(this, 'toggleFit', function () {}),
              R()(this, 'openFpsPlay', function () {}),
              R()(this, 'closeFpsPlay', function () {}),
              R()(this, 'destroy', function () {
                n.container = null;
              }),
              (this.container = t);
          }
          return (
            A()(e, [
              {
                key: 'video',
                get: function () {
                  return this.container.querySelector('video');
                },
              },
              {
                key: 'paused',
                get: function () {
                  var e;
                  return null === (e = this.video) || void 0 === e ? void 0 : e.paused;
                },
              },
              {
                key: 'muted',
                get: function () {
                  var e;
                  return null === (e = this.video) || void 0 === e ? void 0 : e.muted;
                },
              },
            ]),
            e
          );
        })();
        function Do(e, n, i, a, o, s, l) {
          var u = (0, d.useState)({ type: '', flv: void 0, hls: void 0 }),
            c = r()(u, 2),
            f = c[0],
            h = c[1];
          return (
            (0, d.useEffect)(
              function () {
                if (a && (e || ('flv' === n && o))) {
                  var r = a.querySelector('video'),
                    u = {};
                  switch (n) {
                    case 'flv':
                      (u.type = 'flv'),
                        (u.flv = (function (e, n, r, i) {
                          if (M().isSupported() && n) {
                            (M().LoggingControl.enableDebug = !1), (M().LoggingControl.enableVerbose = !1), (M().LoggingControl.enableWarn = !1);
                            var a = t()({ type: 'flv', url: n }, null == i ? void 0 : i.mediaDataSource),
                              o = t()({ enableWorker: !0, isLive: null == r || r, enableStashBuffer: !r }, null == i ? void 0 : i.config),
                              s = M().createPlayer(a, o);
                            return s.attachMediaElement(e), s.load(), s;
                          }
                        })(r, e, i, s));
                      break;
                    case 'hls':
                      (u.type = 'hls'),
                        (u.hls = (function (e, n, r, i) {
                          if (To.isSupported() && n) {
                            var a = new To(t()({ liveDurationInfinity: r, enableWorker: !0 }, i));
                            return a.loadSource(n), a.attachMedia(e), a;
                          }
                        })(r, e, i, l));
                      break;
                    default:
                      (u.type = 'native'), null == r || r.setAttribute('src', null != e ? e : '');
                  }
                  return (
                    null != r &&
                      r.paused &&
                      x(
                        S()(
                          b()().mark(function e() {
                            return b()().wrap(function (e) {
                              for (;;)
                                switch ((e.prev = e.next)) {
                                  case 0:
                                    return e.abrupt('return', null == r ? void 0 : r.play());
                                  case 1:
                                  case 'end':
                                    return e.stop();
                                }
                            }, e);
                          }),
                        ),
                      ),
                    h(u),
                    function () {
                      u.flv
                        ? (u.flv.pause(),
                          x(
                            S()(
                              b()().mark(function e() {
                                var t;
                                return b()().wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return e.abrupt('return', null === (t = u.flv) || void 0 === t ? void 0 : t.destroy());
                                      case 1:
                                      case 'end':
                                        return e.stop();
                                    }
                                }, e);
                              }),
                            ),
                          ))
                        : u.hls
                        ? (null == r || r.pause(),
                          x(
                            S()(
                              b()().mark(function e() {
                                var t;
                                return b()().wrap(function (e) {
                                  for (;;)
                                    switch ((e.prev = e.next)) {
                                      case 0:
                                        return e.abrupt('return', null === (t = u.hls) || void 0 === t ? void 0 : t.destroy());
                                      case 1:
                                      case 'end':
                                        return e.stop();
                                    }
                                }, e);
                              }),
                            ),
                          ))
                        : (null == r || r.pause(), null == r || r.removeAttribute('src')),
                        h({});
                    }
                  );
                }
              },
              [e, a, o, n, i, s, l],
            ),
            [f.type, f.flv, f.hls]
          );
        }
        var Io = i(88),
          Mo = ['children'],
          Po = d.createContext(null);
        function Oo(e) {
          var n = e.children,
            r = s()(e, Mo);
          return (0, Io.jsx)(Po.Provider, { value: t()({}, r), children: n });
        }
        Oo.defaultProps = {
          getContainer: function () {
            return document.body;
          },
        };
        var Fo = (function () {
          function e(t) {
            T()(this, e), R()(this, 'video', void 0), R()(this, 'events', void 0), R()(this, 'playerEvents', void 0), (this.video = t), (this.events = {}), (this.playerEvents = {});
          }
          return (
            A()(e, [
              {
                key: 'on',
                value: function (e, t) {
                  this.events && this.events[e] ? this.events[e].listener.push(t) : (this.events[e] = { type: e, listener: [t] });
                },
              },
              {
                key: 'addEventListener',
                value: function (e, t) {
                  this.video && (this.playerEvents[e] ? this.playerEvents[e].push(t) : (this.playerEvents[e] = [t]), this.video.addEventListener(e, t, !1));
                },
              },
              {
                key: 'removeEventListener',
                value: function (e, t) {
                  if (this.video) {
                    if (!this.playerEvents || !this.playerEvents[e]) return;
                    var n = this.playerEvents[e].findIndex(function (e) {
                      return e === t;
                    });
                    n > -1 && this.playerEvents[e].splice(n, 1), this.video.removeEventListener(e, t, !1);
                  }
                },
              },
              {
                key: 'emit',
                value: function (e) {
                  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                  this.events &&
                    this.events[e] &&
                    this.events[e].listener.forEach(function (e) {
                      e.apply(void 0, n);
                    });
                },
              },
              {
                key: 'off',
                value: function (e, t) {
                  if (this.events && this.events.eventName) {
                    var n = this.events[e].listener.findIndex(function (e) {
                      return e === t;
                    });
                    n > -1 && this.events[e].listener.splice(n, 1);
                  }
                },
              },
              {
                key: 'destroy',
                value: function () {
                  var e = this;
                  Object.keys(this.playerEvents).forEach(function (t) {
                    e.playerEvents[t].forEach(function (n) {
                      e.removeEventListener(t, n);
                    });
                  }),
                    (this.playerEvents = {}),
                    (this.events = {}),
                    (this.video = null);
                },
              },
            ]),
            e
          );
        })();
        function No(e, t, n) {
          var r = (0, d.useContext)(Po),
            i = (0, d.useMemo)(
              function () {
                var e;
                return null !== (e = null == r ? void 0 : r.event) && void 0 !== e ? e : n;
              },
              [n, null == r ? void 0 : r.event],
            ),
            a = p(t);
          (0, d.useEffect)(
            function () {
              if (i) {
                var t = function (e) {
                  return a.current(e);
                };
                return (
                  i.addEventListener(e, t),
                  function () {
                    return i.removeEventListener(e, t);
                  }
                );
              }
            },
            [i, e],
          );
        }
        function Bo(e, t, n) {
          var r = (0, d.useContext)(Po),
            i = (0, d.useMemo)(
              function () {
                var e;
                return null !== (e = null == r ? void 0 : r.event) && void 0 !== e ? e : n;
              },
              [n, null == r ? void 0 : r.event],
            ),
            a = p(t);
          (0, d.useEffect)(
            function () {
              if (i) {
                var t = function (e) {
                  return a.current(e);
                };
                return (
                  i.on(e, t),
                  function () {
                    i.off(e, t);
                  }
                );
              }
            },
            [i, e],
          );
        }
        function Uo(e, t) {
          (0, d.useEffect)(
            function () {
              if (e && t)
                return (
                  t.forEach(function (t) {
                    var n = r()(t, 2),
                      i = n[0],
                      a = n[1];
                    e.on(i, a);
                  }),
                  function () {
                    t.forEach(function (t) {
                      var n = r()(t, 2),
                        i = n[0],
                        a = n[1];
                      e.off(i, a);
                    });
                  }
                );
            },
            [e],
          );
        }
        var zo = ['type', 'className', 'title', 'style'],
          Ho = window;
        function Vo(e) {
          var n = e.type,
            r = e.className,
            i = void 0 === r ? '' : r,
            a = e.title,
            o = e.style,
            l = s()(e, zo);
          return (0, Io.jsx)(
            'i',
            t()(
              t()({ className: 'anticon '.concat(i), title: a, style: o }, l),
              {},
              {
                children: (0, Io.jsx)('svg', {
                  width: '1em',
                  height: '1em',
                  fill: 'currentColor',
                  'aria-hidden': 'true',
                  focusable: 'false',
                  children: (0, Io.jsx)('use', { xlinkHref: '#'.concat(n) }),
                }),
              },
            ),
          );
        }
        Ho._ICON_SCRIPT_URL || (Ho._ICON_SCRIPT_URL = {}),
          (Vo.registerIconFont = function (e) {
            var t;
            Ho._ICON_SCRIPT_URL[e] ||
              ((Ho._ICON_SCRIPT_URL[e] = !0),
              ((t = e),
              new Promise(function (e, n) {
                var r = document.createElement('script');
                (r.src = t),
                  document.body.appendChild(r),
                  r.addEventListener('load', function () {
                    e(null);
                  }),
                  r.addEventListener('error', function (e) {
                    n(e);
                  });
              })).catch(function (t) {
                (Ho._ICON_SCRIPT_URL[e] = !1), console.error(t);
              }));
          });
        var Go = Vo,
          jo = (i(75), ['className']);
        var Ko = function (e) {
            var n = e.className,
              r = void 0 === n ? '' : n,
              i = s()(e, jo);
            return (0, Io.jsx)(Go, t()({ className: 'lm-player-iconfont '.concat(r) }, i));
          },
          Wo = ['visibel', 'className', 'children'];
        var qo = function (e) {
          var n = e.visibel,
            r = void 0 === n || n,
            i = e.className,
            a = void 0 === i ? '' : i,
            o = e.children,
            l = s()(e, Wo);
          return !1 === r ? null : (0, Io.jsx)('span', t()(t()({ className: 'contraller-bar-item '.concat(a) }, l), {}, { children: o }));
        };
        var Yo = function () {
          var e = (0, d.useContext)(Po).event,
            n = (0, d.useState)({ status: 1 }),
            i = r()(n, 2),
            a = i[0],
            o = i[1];
          return (
            Uo(e, [
              [
                wo.SHOW_CONTRALLER,
                function () {
                  return o(function (e) {
                    return t()(t()({}, e), {}, { status: 1 });
                  });
                },
              ],
              [
                wo.HIDE_CONTRALLER,
                function () {
                  return o(function (e) {
                    return t()(t()({}, e), {}, { status: 0 });
                  });
                },
              ],
            ]),
            a.status
          );
        };
        function Xo() {
          var e = (0, d.useContext)(Po),
            n = e.api,
            i = e.isFpsPlay,
            a = (0, d.useState)({ currentTime: 0, buffered: 0 }),
            o = r()(a, 2),
            s = o[0],
            l = o[1],
            u = function () {
              return l(function (e) {
                var r;
                return t()(t()({}, e), {}, { buffered: null !== (r = null == n ? void 0 : n.getSecondsLoaded()) && void 0 !== r ? r : 0 });
              });
            };
          return (
            No('timeupdate', function () {
              return l(function (e) {
                var r, i;
                return t()(
                  t()({}, e),
                  {},
                  {
                    currentTime: null !== (r = null == n ? void 0 : n.getCurrentTime()) && void 0 !== r ? r : 0,
                    buffered: null !== (i = null == n ? void 0 : n.getSecondsLoaded()) && void 0 !== i ? i : 0,
                  },
                );
              });
            }),
            No('progress', u),
            No('suspend', u),
            No('seeked', function () {
              return !i && (null == n ? void 0 : n.play());
            }),
            (0, d.useMemo)(
              function () {
                var e;
                return [s.currentTime, s.buffered, null !== (e = null == n ? void 0 : n.getDuration()) && void 0 !== e ? e : 0];
              },
              [s.currentTime, s.buffered, n],
            )
          );
        }
        var $o = function () {
          var e = (0, d.useContext)(Po).api,
            t = Yo(),
            n = Xo(),
            i = r()(n, 3),
            a = i[0],
            o = i[1],
            s = i[2],
            l = (0, d.useMemo)(
              function () {
                return (a / s) * 100;
              },
              [a, s],
            ),
            u = (0, d.useMemo)(
              function () {
                return (o / s) * 100;
              },
              [o, s],
            );
          return (0, Io.jsxs)('div', {
            className: 'player-timeline-layout '.concat(0 === t ? 'hide-time-line' : ''),
            onClick: function (t) {
              var n,
                r = t.currentTarget.getBoundingClientRect(),
                i = ((t.pageX - r.left) / r.width) * (null !== (n = null == e ? void 0 : e.getDuration()) && void 0 !== n ? n : 0);
              null == e || e.seekTo(i);
            },
            children: [(0, Io.jsx)('div', { className: 'buffer-line', style: { width: ''.concat(u, '%') } }), (0, Io.jsx)('div', { className: 'current-line', style: { width: ''.concat(l, '%') } })],
          });
        };
        var Qo = function () {
            var e = Xo(),
              t = r()(e, 3),
              n = t[0],
              i = t[2];
            return (0, Io.jsxs)('span', { className: 'video-time-progress', children: [Lo(n), '/', Lo(i || 0)] });
          },
          Zo = function () {
            var e = c((0, d.useState)({}), 2)[1];
            return (0, d.useCallback)(function () {
              return e({});
            }, []);
          },
          Jo = i(809),
          es = i.n(Jo);
        function ts() {
          return (
            (ts = Object.assign
              ? Object.assign.bind()
              : function (e) {
                  for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                  }
                  return e;
                }),
            ts.apply(this, arguments)
          );
        }
        function ns(e) {
          return (
            (ns =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
                  }),
            ns(e)
          );
        }
        function rs(e) {
          var t = (function (e, t) {
            if ('object' !== ns(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
              var r = n.call(e, t || 'default');
              if ('object' !== ns(r)) return r;
              throw new TypeError('@@toPrimitive must return a primitive value.');
            }
            return ('string' === t ? String : Number)(e);
          })(e, 'string');
          return 'symbol' === ns(t) ? t : String(t);
        }
        function is(e, t, n) {
          return (t = rs(t)) in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n), e;
        }
        function as(e, t) {
          var n = Object.keys(e);
          if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t &&
              (r = r.filter(function (t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
              })),
              n.push.apply(n, r);
          }
          return n;
        }
        function os(e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2
              ? as(Object(n), !0).forEach(function (t) {
                  is(e, t, n[t]);
                })
              : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : as(Object(n)).forEach(function (t) {
                  Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                });
          }
          return e;
        }
        function ss(e, t) {
          if (null == e) return {};
          var n,
            r,
            i = (function (e, t) {
              if (null == e) return {};
              var n,
                r,
                i = {},
                a = Object.keys(e);
              for (r = 0; r < a.length; r++) (n = a[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
              return i;
            })(e, t);
          if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (r = 0; r < a.length; r++) (n = a[r]), t.indexOf(n) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n]));
          }
          return i;
        }
        function ls(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
          return r;
        }
        function us(e, t) {
          if (e) {
            if ('string' == typeof e) return ls(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return (
              'Object' === n && e.constructor && (n = e.constructor.name),
              'Map' === n || 'Set' === n ? Array.from(e) : 'Arguments' === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ls(e, t) : void 0
            );
          }
        }
        function cs(e, t) {
          return (
            (function (e) {
              if (Array.isArray(e)) return e;
            })(e) ||
            (function (e, t) {
              var n = null == e ? null : ('undefined' != typeof Symbol && e[Symbol.iterator]) || e['@@iterator'];
              if (null != n) {
                var r,
                  i,
                  a,
                  o,
                  s = [],
                  l = !0,
                  u = !1;
                try {
                  if (((a = (n = n.call(e)).next), 0 === t)) {
                    if (Object(n) !== n) return;
                    l = !1;
                  } else for (; !(l = (r = a.call(n)).done) && (s.push(r.value), s.length !== t); l = !0);
                } catch (e) {
                  (u = !0), (i = e);
                } finally {
                  try {
                    if (!l && null != n.return && ((o = n.return()), Object(o) !== o)) return;
                  } finally {
                    if (u) throw i;
                  }
                }
                return s;
              }
            })(e, t) ||
            us(e, t) ||
            (function () {
              throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            })()
          );
        }
        var ds = i(234);
        function fs() {
          return !('undefined' == typeof window || !window.document || !window.document.createElement);
        }
        var hs = {},
          ps = [];
        function vs(e, t) {}
        function ms(e, t) {}
        function gs(e, t, n) {
          t || hs[n] || (e(!1, n), (hs[n] = !0));
        }
        function ys(e, t) {
          gs(vs, e, t);
        }
        (ys.preMessage = function (e) {
          ps.push(e);
        }),
          (ys.resetWarned = function () {
            hs = {};
          }),
          (ys.noteOnce = function (e, t) {
            gs(ms, e, t);
          });
        var _s = ys,
          bs = i(53);
        function Es(e, t, n) {
          var r = d.useRef({});
          return ('value' in r.current && !n(r.current.condition, t)) || ((r.current.value = e()), (r.current.condition = t)), r.current.value;
        }
        function Ss(e, t) {
          'function' == typeof e ? e(t) : 'object' === ns(e) && e && 'current' in e && (e.current = t);
        }
        function ks() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          var r = t.filter(function (e) {
            return e;
          });
          return r.length <= 1
            ? r[0]
            : function (e) {
                t.forEach(function (t) {
                  Ss(t, e);
                });
              };
        }
        function Ts() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          return Es(
            function () {
              return ks.apply(void 0, t);
            },
            t,
            function (e, t) {
              return (
                e.length === t.length &&
                e.every(function (e, n) {
                  return e === t[n];
                })
              );
            },
          );
        }
        function ws(e) {
          var t,
            n,
            r = (0, bs.isMemo)(e) ? e.type.type : e.type;
          return !!('function' != typeof r || (null !== (t = r.prototype) && void 0 !== t && t.render)) && !!('function' != typeof e || (null !== (n = e.prototype) && void 0 !== n && n.render));
        }
        var As = d.createContext(null);
        function Ls(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return ls(e);
            })(e) ||
            (function (e) {
              if (('undefined' != typeof Symbol && null != e[Symbol.iterator]) || null != e['@@iterator']) return Array.from(e);
            })(e) ||
            us(e) ||
            (function () {
              throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');
            })()
          );
        }
        var Rs = fs() ? d.useLayoutEffect : d.useEffect,
          Cs = function (e, t) {
            var n = d.useRef(!0);
            Rs(function () {
              return e(n.current);
            }, t),
              Rs(function () {
                return (
                  (n.current = !1),
                  function () {
                    n.current = !0;
                  }
                );
              }, []);
          },
          xs = function (e, t) {
            Cs(function (t) {
              if (!t) return e();
            }, t);
          },
          Ds = Cs,
          Is = [];
        var Ms,
          Ps = 'data-rc-order',
          Os = 'rc-util-key',
          Fs = new Map();
        function Ns() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.mark;
          return t ? (t.startsWith('data-') ? t : 'data-'.concat(t)) : Os;
        }
        function Bs(e) {
          return e.attachTo ? e.attachTo : document.querySelector('head') || document.body;
        }
        function Us(e) {
          return 'queue' === e ? 'prependQueue' : e ? 'prepend' : 'append';
        }
        function zs(e) {
          return Array.from((Fs.get(e) || e).children).filter(function (e) {
            return 'STYLE' === e.tagName;
          });
        }
        function Hs(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (!fs()) return null;
          var n = t.csp,
            r = t.prepend,
            i = document.createElement('style');
          i.setAttribute(Ps, Us(r)), null != n && n.nonce && (i.nonce = null == n ? void 0 : n.nonce), (i.innerHTML = e);
          var a = Bs(t),
            o = a.firstChild;
          if (r) {
            if ('queue' === r) {
              var s = zs(a).filter(function (e) {
                return ['prepend', 'prependQueue'].includes(e.getAttribute(Ps));
              });
              if (s.length) return a.insertBefore(i, s[s.length - 1].nextSibling), i;
            }
            a.insertBefore(i, o);
          } else a.appendChild(i);
          return i;
        }
        function Vs(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            n = Bs(t);
          return zs(n).find(function (n) {
            return n.getAttribute(Ns(t)) === e;
          });
        }
        function Gs(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            n = Vs(e, t);
          if (n) {
            var r = Bs(t);
            r.removeChild(n);
          }
        }
        function js(e, t) {
          var n = Fs.get(e);
          if (
            !n ||
            !(function (e, t) {
              if (!e) return !1;
              if (e.contains) return e.contains(t);
              for (var n = t; n; ) {
                if (n === e) return !0;
                n = n.parentNode;
              }
              return !1;
            })(document, n)
          ) {
            var r = Hs('', t),
              i = r.parentNode;
            Fs.set(e, i), e.removeChild(r);
          }
        }
        function Ks(e, t) {
          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            r = Bs(n);
          js(r, n);
          var i = Vs(t, n);
          if (i) {
            var a, o, s;
            if (null !== (a = n.csp) && void 0 !== a && a.nonce && i.nonce !== (null === (o = n.csp) || void 0 === o ? void 0 : o.nonce))
              i.nonce = null === (s = n.csp) || void 0 === s ? void 0 : s.nonce;
            return i.innerHTML !== e && (i.innerHTML = e), i;
          }
          var l = Hs(e, n);
          return l.setAttribute(Ns(n), t), l;
        }
        function Ws(e) {
          if ('undefined' == typeof document) return 0;
          if (e || void 0 === Ms) {
            var t = document.createElement('div');
            (t.style.width = '100%'), (t.style.height = '200px');
            var n = document.createElement('div'),
              r = n.style;
            (r.position = 'absolute'),
              (r.top = '0'),
              (r.left = '0'),
              (r.pointerEvents = 'none'),
              (r.visibility = 'hidden'),
              (r.width = '200px'),
              (r.height = '150px'),
              (r.overflow = 'hidden'),
              n.appendChild(t),
              document.body.appendChild(n);
            var i = t.offsetWidth;
            n.style.overflow = 'scroll';
            var a = t.offsetWidth;
            i === a && (a = n.clientWidth), document.body.removeChild(n), (Ms = i - a);
          }
          return Ms;
        }
        var qs = 'rc-util-locker-'.concat(Date.now()),
          Ys = 0;
        function Xs(e) {
          var t = !!e,
            n = cs(
              d.useState(function () {
                return (Ys += 1), ''.concat(qs, '_').concat(Ys);
              }),
              1,
            )[0];
          Ds(
            function () {
              if (t) {
                var e = Ws(),
                  r = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;
                Ks('\nhtml body {\n  overflow-y: hidden;\n  '.concat(r ? 'width: calc(100% - '.concat(e, 'px);') : '', '\n}'), n);
              } else Gs(n);
              return function () {
                Gs(n);
              };
            },
            [t, n],
          );
        }
        var $s = !1;
        var Qs = function (e) {
            return !1 !== e && (fs() && e ? ('string' == typeof e ? document.querySelector(e) : 'function' == typeof e ? e() : e) : null);
          },
          Zs = d.forwardRef(function (e, t) {
            var n = e.open,
              r = e.autoLock,
              i = e.getContainer,
              a = (e.debug, e.autoDestroy),
              o = void 0 === a || a,
              s = e.children,
              l = cs(d.useState(n), 2),
              u = l[0],
              c = l[1],
              f = u || n;
            d.useEffect(
              function () {
                (o || n) && c(n);
              },
              [n, o],
            );
            var h = cs(
                d.useState(function () {
                  return Qs(i);
                }),
                2,
              ),
              p = h[0],
              v = h[1];
            d.useEffect(function () {
              var e = Qs(i);
              v(null != e ? e : null);
            });
            var m = (function (e, t) {
                var n = cs(
                    d.useState(function () {
                      return fs() ? document.createElement('div') : null;
                    }),
                    1,
                  )[0],
                  r = d.useRef(!1),
                  i = d.useContext(As),
                  a = cs(d.useState(Is), 2),
                  o = a[0],
                  s = a[1],
                  l =
                    i ||
                    (r.current
                      ? void 0
                      : function (e) {
                          s(function (t) {
                            return [e].concat(Ls(t));
                          });
                        });
                function u() {
                  n.parentElement || document.body.appendChild(n), (r.current = !0);
                }
                function c() {
                  var e;
                  null === (e = n.parentElement) || void 0 === e || e.removeChild(n), (r.current = !1);
                }
                return (
                  Ds(
                    function () {
                      return e ? (i ? i(u) : u()) : c(), c;
                    },
                    [e],
                  ),
                  Ds(
                    function () {
                      o.length &&
                        (o.forEach(function (e) {
                          return e();
                        }),
                        s(Is));
                    },
                    [o],
                  ),
                  [n, l]
                );
              })(f && !p),
              g = cs(m, 2),
              y = g[0],
              _ = g[1],
              b = null != p ? p : y;
            Xs(r && n && fs() && (b === y || b === document.body));
            var E = null;
            s && ws(s) && t && (E = s.ref);
            var S = Ts(E, t);
            if (!f || !fs() || void 0 === p) return null;
            var k,
              T = !1 === b || ('boolean' == typeof k && ($s = k), $s),
              w = s;
            return t && (w = d.cloneElement(s, { ref: S })), d.createElement(As.Provider, { value: _ }, T ? w : (0, ds.createPortal)(w, b));
          });
        var Js = Zs;
        function el(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            n = [];
          return (
            d.Children.forEach(e, function (e) {
              (null != e || t.keepEmpty) && (Array.isArray(e) ? (n = n.concat(el(e))) : (0, bs.isFragment)(e) && e.props ? (n = n.concat(el(e.props.children, t))) : n.push(e));
            }),
            n
          );
        }
        function tl(e) {
          return e instanceof HTMLElement || e instanceof SVGElement;
        }
        function nl(e) {
          return tl(e) ? e : e instanceof d.Component ? ds.findDOMNode(e) : null;
        }
        var rl = (function () {
            if ('undefined' != typeof Map) return Map;
            function e(e, t) {
              var n = -1;
              return (
                e.some(function (e, r) {
                  return e[0] === t && ((n = r), !0);
                }),
                n
              );
            }
            return (function () {
              function t() {
                this.__entries__ = [];
              }
              return (
                Object.defineProperty(t.prototype, 'size', {
                  get: function () {
                    return this.__entries__.length;
                  },
                  enumerable: !0,
                  configurable: !0,
                }),
                (t.prototype.get = function (t) {
                  var n = e(this.__entries__, t),
                    r = this.__entries__[n];
                  return r && r[1];
                }),
                (t.prototype.set = function (t, n) {
                  var r = e(this.__entries__, t);
                  ~r ? (this.__entries__[r][1] = n) : this.__entries__.push([t, n]);
                }),
                (t.prototype.delete = function (t) {
                  var n = this.__entries__,
                    r = e(n, t);
                  ~r && n.splice(r, 1);
                }),
                (t.prototype.has = function (t) {
                  return !!~e(this.__entries__, t);
                }),
                (t.prototype.clear = function () {
                  this.__entries__.splice(0);
                }),
                (t.prototype.forEach = function (e, t) {
                  void 0 === t && (t = null);
                  for (var n = 0, r = this.__entries__; n < r.length; n++) {
                    var i = r[n];
                    e.call(t, i[1], i[0]);
                  }
                }),
                t
              );
            })();
          })(),
          il = 'undefined' != typeof window && 'undefined' != typeof document && window.document === document,
          al =
            void 0 !== i.g && i.g.Math === Math
              ? i.g
              : 'undefined' != typeof self && self.Math === Math
              ? self
              : 'undefined' != typeof window && window.Math === Math
              ? window
              : Function('return this')(),
          ol =
            'function' == typeof requestAnimationFrame
              ? requestAnimationFrame.bind(al)
              : function (e) {
                  return setTimeout(function () {
                    return e(Date.now());
                  }, 1e3 / 60);
                };
        var sl = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'],
          ll = 'undefined' != typeof MutationObserver,
          ul = (function () {
            function e() {
              (this.connected_ = !1),
                (this.mutationEventsAdded_ = !1),
                (this.mutationsObserver_ = null),
                (this.observers_ = []),
                (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)),
                (this.refresh = (function (e, t) {
                  var n = !1,
                    r = !1,
                    i = 0;
                  function a() {
                    n && ((n = !1), e()), r && s();
                  }
                  function o() {
                    ol(a);
                  }
                  function s() {
                    var e = Date.now();
                    if (n) {
                      if (e - i < 2) return;
                      r = !0;
                    } else (n = !0), (r = !1), setTimeout(o, t);
                    i = e;
                  }
                  return s;
                })(this.refresh.bind(this), 20));
            }
            return (
              (e.prototype.addObserver = function (e) {
                ~this.observers_.indexOf(e) || this.observers_.push(e), this.connected_ || this.connect_();
              }),
              (e.prototype.removeObserver = function (e) {
                var t = this.observers_,
                  n = t.indexOf(e);
                ~n && t.splice(n, 1), !t.length && this.connected_ && this.disconnect_();
              }),
              (e.prototype.refresh = function () {
                this.updateObservers_() && this.refresh();
              }),
              (e.prototype.updateObservers_ = function () {
                var e = this.observers_.filter(function (e) {
                  return e.gatherActive(), e.hasActive();
                });
                return (
                  e.forEach(function (e) {
                    return e.broadcastActive();
                  }),
                  e.length > 0
                );
              }),
              (e.prototype.connect_ = function () {
                il &&
                  !this.connected_ &&
                  (document.addEventListener('transitionend', this.onTransitionEnd_),
                  window.addEventListener('resize', this.refresh),
                  ll
                    ? ((this.mutationsObserver_ = new MutationObserver(this.refresh)), this.mutationsObserver_.observe(document, { attributes: !0, childList: !0, characterData: !0, subtree: !0 }))
                    : (document.addEventListener('DOMSubtreeModified', this.refresh), (this.mutationEventsAdded_ = !0)),
                  (this.connected_ = !0));
              }),
              (e.prototype.disconnect_ = function () {
                il &&
                  this.connected_ &&
                  (document.removeEventListener('transitionend', this.onTransitionEnd_),
                  window.removeEventListener('resize', this.refresh),
                  this.mutationsObserver_ && this.mutationsObserver_.disconnect(),
                  this.mutationEventsAdded_ && document.removeEventListener('DOMSubtreeModified', this.refresh),
                  (this.mutationsObserver_ = null),
                  (this.mutationEventsAdded_ = !1),
                  (this.connected_ = !1));
              }),
              (e.prototype.onTransitionEnd_ = function (e) {
                var t = e.propertyName,
                  n = void 0 === t ? '' : t;
                sl.some(function (e) {
                  return !!~n.indexOf(e);
                }) && this.refresh();
              }),
              (e.getInstance = function () {
                return this.instance_ || (this.instance_ = new e()), this.instance_;
              }),
              (e.instance_ = null),
              e
            );
          })(),
          cl = function (e, t) {
            for (var n = 0, r = Object.keys(t); n < r.length; n++) {
              var i = r[n];
              Object.defineProperty(e, i, { value: t[i], enumerable: !1, writable: !1, configurable: !0 });
            }
            return e;
          },
          dl = function (e) {
            return (e && e.ownerDocument && e.ownerDocument.defaultView) || al;
          },
          fl = yl(0, 0, 0, 0);
        function hl(e) {
          return parseFloat(e) || 0;
        }
        function pl(e) {
          for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
          return t.reduce(function (t, n) {
            return t + hl(e['border-' + n + '-width']);
          }, 0);
        }
        function vl(e) {
          var t = e.clientWidth,
            n = e.clientHeight;
          if (!t && !n) return fl;
          var r = dl(e).getComputedStyle(e),
            i = (function (e) {
              for (var t = {}, n = 0, r = ['top', 'right', 'bottom', 'left']; n < r.length; n++) {
                var i = r[n],
                  a = e['padding-' + i];
                t[i] = hl(a);
              }
              return t;
            })(r),
            a = i.left + i.right,
            o = i.top + i.bottom,
            s = hl(r.width),
            l = hl(r.height);
          if (
            ('border-box' === r.boxSizing && (Math.round(s + a) !== t && (s -= pl(r, 'left', 'right') + a), Math.round(l + o) !== n && (l -= pl(r, 'top', 'bottom') + o)),
            !(function (e) {
              return e === dl(e).document.documentElement;
            })(e))
          ) {
            var u = Math.round(s + a) - t,
              c = Math.round(l + o) - n;
            1 !== Math.abs(u) && (s -= u), 1 !== Math.abs(c) && (l -= c);
          }
          return yl(i.left, i.top, s, l);
        }
        var ml =
          'undefined' != typeof SVGGraphicsElement
            ? function (e) {
                return e instanceof dl(e).SVGGraphicsElement;
              }
            : function (e) {
                return e instanceof dl(e).SVGElement && 'function' == typeof e.getBBox;
              };
        function gl(e) {
          return il
            ? ml(e)
              ? (function (e) {
                  var t = e.getBBox();
                  return yl(0, 0, t.width, t.height);
                })(e)
              : vl(e)
            : fl;
        }
        function yl(e, t, n, r) {
          return { x: e, y: t, width: n, height: r };
        }
        var _l = (function () {
            function e(e) {
              (this.broadcastWidth = 0), (this.broadcastHeight = 0), (this.contentRect_ = yl(0, 0, 0, 0)), (this.target = e);
            }
            return (
              (e.prototype.isActive = function () {
                var e = gl(this.target);
                return (this.contentRect_ = e), e.width !== this.broadcastWidth || e.height !== this.broadcastHeight;
              }),
              (e.prototype.broadcastRect = function () {
                var e = this.contentRect_;
                return (this.broadcastWidth = e.width), (this.broadcastHeight = e.height), e;
              }),
              e
            );
          })(),
          bl = function (e, t) {
            var n,
              r,
              i,
              a,
              o,
              s,
              l,
              u =
                ((r = (n = t).x),
                (i = n.y),
                (a = n.width),
                (o = n.height),
                (s = 'undefined' != typeof DOMRectReadOnly ? DOMRectReadOnly : Object),
                (l = Object.create(s.prototype)),
                cl(l, { x: r, y: i, width: a, height: o, top: i, right: r + a, bottom: o + i, left: r }),
                l);
            cl(this, { target: e, contentRect: u });
          },
          El = (function () {
            function e(e, t, n) {
              if (((this.activeObservations_ = []), (this.observations_ = new rl()), 'function' != typeof e)) throw new TypeError('The callback provided as parameter 1 is not a function.');
              (this.callback_ = e), (this.controller_ = t), (this.callbackCtx_ = n);
            }
            return (
              (e.prototype.observe = function (e) {
                if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.');
                if ('undefined' != typeof Element && Element instanceof Object) {
                  if (!(e instanceof dl(e).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                  var t = this.observations_;
                  t.has(e) || (t.set(e, new _l(e)), this.controller_.addObserver(this), this.controller_.refresh());
                }
              }),
              (e.prototype.unobserve = function (e) {
                if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.');
                if ('undefined' != typeof Element && Element instanceof Object) {
                  if (!(e instanceof dl(e).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                  var t = this.observations_;
                  t.has(e) && (t.delete(e), t.size || this.controller_.removeObserver(this));
                }
              }),
              (e.prototype.disconnect = function () {
                this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
              }),
              (e.prototype.gatherActive = function () {
                var e = this;
                this.clearActive(),
                  this.observations_.forEach(function (t) {
                    t.isActive() && e.activeObservations_.push(t);
                  });
              }),
              (e.prototype.broadcastActive = function () {
                if (this.hasActive()) {
                  var e = this.callbackCtx_,
                    t = this.activeObservations_.map(function (e) {
                      return new bl(e.target, e.broadcastRect());
                    });
                  this.callback_.call(e, t, e), this.clearActive();
                }
              }),
              (e.prototype.clearActive = function () {
                this.activeObservations_.splice(0);
              }),
              (e.prototype.hasActive = function () {
                return this.activeObservations_.length > 0;
              }),
              e
            );
          })(),
          Sl = 'undefined' != typeof WeakMap ? new WeakMap() : new rl(),
          kl = function e(t) {
            if (!(this instanceof e)) throw new TypeError('Cannot call a class as a function.');
            if (!arguments.length) throw new TypeError('1 argument required, but only 0 present.');
            var n = ul.getInstance(),
              r = new El(t, n, this);
            Sl.set(this, r);
          };
        ['observe', 'unobserve', 'disconnect'].forEach(function (e) {
          kl.prototype[e] = function () {
            var t;
            return (t = Sl.get(this))[e].apply(t, arguments);
          };
        });
        var Tl = void 0 !== al.ResizeObserver ? al.ResizeObserver : kl,
          wl = new Map();
        var Al = new Tl(function (e) {
          e.forEach(function (e) {
            var t,
              n = e.target;
            null === (t = wl.get(n)) ||
              void 0 === t ||
              t.forEach(function (e) {
                return e(n);
              });
          });
        });
        function Ll(e, t) {
          if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function');
        }
        function Rl(e, t) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            (r.enumerable = r.enumerable || !1), (r.configurable = !0), 'value' in r && (r.writable = !0), Object.defineProperty(e, rs(r.key), r);
          }
        }
        function Cl(e, t, n) {
          return t && Rl(e.prototype, t), n && Rl(e, n), Object.defineProperty(e, 'prototype', { writable: !1 }), e;
        }
        function xl(e, t) {
          return (
            (xl = Object.setPrototypeOf
              ? Object.setPrototypeOf.bind()
              : function (e, t) {
                  return (e.__proto__ = t), e;
                }),
            xl(e, t)
          );
        }
        function Dl(e, t) {
          if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function');
          (e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } })), Object.defineProperty(e, 'prototype', { writable: !1 }), t && xl(e, t);
        }
        function Il(e) {
          return (
            (Il = Object.setPrototypeOf
              ? Object.getPrototypeOf.bind()
              : function (e) {
                  return e.__proto__ || Object.getPrototypeOf(e);
                }),
            Il(e)
          );
        }
        function Ml(e) {
          if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return e;
        }
        function Pl(e, t) {
          if (t && ('object' === ns(t) || 'function' == typeof t)) return t;
          if (void 0 !== t) throw new TypeError('Derived constructors may only return object or undefined');
          return Ml(e);
        }
        function Ol(e) {
          var t = (function () {
            if ('undefined' == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ('function' == typeof Proxy) return !0;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
            } catch (e) {
              return !1;
            }
          })();
          return function () {
            var n,
              r = Il(e);
            if (t) {
              var i = Il(this).constructor;
              n = Reflect.construct(r, arguments, i);
            } else n = r.apply(this, arguments);
            return Pl(this, n);
          };
        }
        var Fl = (function (e) {
            Dl(n, e);
            var t = Ol(n);
            function n() {
              return Ll(this, n), t.apply(this, arguments);
            }
            return (
              Cl(n, [
                {
                  key: 'render',
                  value: function () {
                    return this.props.children;
                  },
                },
              ]),
              n
            );
          })(d.Component),
          Nl = d.createContext(null);
        function Bl(e, t) {
          var n = e.children,
            r = e.disabled,
            i = d.useRef(null),
            a = d.useRef(null),
            o = d.useContext(Nl),
            s = 'function' == typeof n,
            l = s ? n(i) : n,
            u = d.useRef({ width: -1, height: -1, offsetWidth: -1, offsetHeight: -1 }),
            c = !s && d.isValidElement(l) && ws(l),
            f = c ? l.ref : null,
            h = d.useMemo(
              function () {
                return ks(f, i);
              },
              [f, i],
            ),
            p = function () {
              return nl(i.current) || nl(a.current);
            };
          d.useImperativeHandle(t, function () {
            return p();
          });
          var v = d.useRef(e);
          v.current = e;
          var m = d.useCallback(function (e) {
            var t = v.current,
              n = t.onResize,
              r = t.data,
              i = e.getBoundingClientRect(),
              a = i.width,
              s = i.height,
              l = e.offsetWidth,
              c = e.offsetHeight,
              d = Math.floor(a),
              f = Math.floor(s);
            if (u.current.width !== d || u.current.height !== f || u.current.offsetWidth !== l || u.current.offsetHeight !== c) {
              var h = { width: d, height: f, offsetWidth: l, offsetHeight: c };
              u.current = h;
              var p = l === Math.round(a) ? a : l,
                m = c === Math.round(s) ? s : c,
                g = os(os({}, h), {}, { offsetWidth: p, offsetHeight: m });
              null == o || o(g, e, r),
                n &&
                  Promise.resolve().then(function () {
                    n(g, e);
                  });
            }
          }, []);
          return (
            d.useEffect(
              function () {
                var e,
                  t,
                  n = p();
                return (
                  n && !r && ((e = n), (t = m), wl.has(e) || (wl.set(e, new Set()), Al.observe(e)), wl.get(e).add(t)),
                  function () {
                    return (function (e, t) {
                      wl.has(e) && (wl.get(e).delete(t), wl.get(e).size || (Al.unobserve(e), wl.delete(e)));
                    })(n, m);
                  }
                );
              },
              [i.current, r],
            ),
            d.createElement(Fl, { ref: a }, c ? d.cloneElement(l, { ref: h }) : l)
          );
        }
        var Ul = d.forwardRef(Bl);
        function zl(e, t) {
          var n = e.children;
          return ('function' == typeof n ? [n] : el(n)).map(function (n, r) {
            var i = (null == n ? void 0 : n.key) || ''.concat('rc-observer-key', '-').concat(r);
            return d.createElement(Ul, ts({}, e, { key: i, ref: 0 === r ? t : void 0 }), n);
          });
        }
        var Hl = d.forwardRef(zl);
        Hl.Collection = function (e) {
          var t = e.children,
            n = e.onBatchResize,
            r = d.useRef(0),
            i = d.useRef([]),
            a = d.useContext(Nl),
            o = d.useCallback(
              function (e, t, o) {
                r.current += 1;
                var s = r.current;
                i.current.push({ size: e, element: t, data: o }),
                  Promise.resolve().then(function () {
                    s === r.current && (null == n || n(i.current), (i.current = []));
                  }),
                  null == a || a(e, t, o);
              },
              [n, a],
            );
          return d.createElement(Nl.Provider, { value: o }, t);
        };
        var Vl = Hl;
        function Gl(e) {
          var t;
          return null == e || null === (t = e.getRootNode) || void 0 === t ? void 0 : t.call(e);
        }
        function jl(e) {
          return (function (e) {
            return Gl(e) !== (null == e ? void 0 : e.ownerDocument);
          })(e)
            ? Gl(e)
            : null;
        }
        function Kl(e) {
          var t = d.useRef();
          t.current = e;
          var n = d.useCallback(function () {
            for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
            return null === (e = t.current) || void 0 === e ? void 0 : e.call.apply(e, [t].concat(r));
          }, []);
          return n;
        }
        var Wl = 0;
        function ql(e) {
          var t = cs(d.useState('ssr-id'), 2),
            n = t[0],
            r = t[1],
            i = os({}, f).useId,
            a = null == i ? void 0 : i();
          return (
            d.useEffect(function () {
              if (!i) {
                var e = Wl;
                (Wl += 1), r('rc_unique_'.concat(e));
              }
            }, []),
            e || a || n
          );
        }
        var Yl = function () {
            if ('undefined' == typeof navigator || 'undefined' == typeof window) return !1;
            var e = navigator.userAgent || navigator.vendor || window.opera;
            return (
              /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
                e,
              ) ||
              /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(
                null == e ? void 0 : e.substr(0, 4),
              )
            );
          },
          Xl = d.createContext(null);
        function $l(e) {
          return e ? (Array.isArray(e) ? e : [e]) : [];
        }
        function Ql(e, t, n, r) {
          return d.useMemo(
            function () {
              var i = $l(null != n ? n : t),
                a = $l(null != r ? r : t),
                o = new Set(i),
                s = new Set(a);
              return e && (o.has('hover') && (o.delete('hover'), o.add('click')), s.has('hover') && (s.delete('hover'), s.add('click'))), [o, s];
            },
            [e, t, n, r],
          );
        }
        function Zl() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
            n = arguments.length > 2 ? arguments[2] : void 0;
          return n ? e[0] === t[0] : e[0] === t[0] && e[1] === t[1];
        }
        function Jl(e, t, n, r) {
          for (var i = n.points, a = Object.keys(e), o = 0; o < a.length; o += 1) {
            var s,
              l = a[o];
            if (Zl(null === (s = e[l]) || void 0 === s ? void 0 : s.points, i, r)) return ''.concat(t, '-placement-').concat(l);
          }
          return '';
        }
        function eu(e, t, n, r) {
          return t || (n ? { motionName: ''.concat(e, '-').concat(n) } : r ? { motionName: r } : null);
        }
        function tu(e) {
          return e.ownerDocument.defaultView;
        }
        function nu(e) {
          for (var t = [], n = null == e ? void 0 : e.parentElement, r = ['hidden', 'scroll', 'clip', 'auto']; n; ) {
            var i = tu(n).getComputedStyle(n);
            [i.overflowX, i.overflowY, i.overflow].some(function (e) {
              return r.includes(e);
            }) && t.push(n),
              (n = n.parentElement);
          }
          return t;
        }
        function ru(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
          return Number.isNaN(e) ? t : e;
        }
        function iu(e) {
          return ru(parseFloat(e), 0);
        }
        function au(e, t) {
          var n = os({}, e);
          return (
            (t || []).forEach(function (e) {
              if (!(e instanceof HTMLBodyElement)) {
                var t = tu(e).getComputedStyle(e),
                  r = t.overflow,
                  i = t.overflowClipMargin,
                  a = t.borderTopWidth,
                  o = t.borderBottomWidth,
                  s = t.borderLeftWidth,
                  l = t.borderRightWidth,
                  u = e.getBoundingClientRect(),
                  c = e.offsetHeight,
                  d = e.clientHeight,
                  f = e.offsetWidth,
                  h = e.clientWidth,
                  p = iu(a),
                  v = iu(o),
                  m = iu(s),
                  g = iu(l),
                  y = ru(Math.round((u.width / f) * 1e3) / 1e3),
                  _ = ru(Math.round((u.height / c) * 1e3) / 1e3),
                  b = (f - h - m - g) * y,
                  E = (c - d - p - v) * _,
                  S = p * _,
                  k = v * _,
                  T = m * y,
                  w = g * y,
                  A = 0,
                  L = 0;
                if ('clip' === r) {
                  var R = iu(i);
                  (A = R * y), (L = R * _);
                }
                var C = u.x + T - A,
                  x = u.y + S - L,
                  D = C + u.width + 2 * A - T - w - b,
                  I = x + u.height + 2 * L - S - k - E;
                (n.left = Math.max(n.left, C)), (n.top = Math.max(n.top, x)), (n.right = Math.min(n.right, D)), (n.bottom = Math.min(n.bottom, I));
              }
            }),
            n
          );
        }
        function ou(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            n = ''.concat(t),
            r = n.match(/^(.*)\%$/);
          return r ? e * (parseFloat(r[1]) / 100) : parseFloat(n);
        }
        function su(e, t) {
          var n = cs(t || [], 2),
            r = n[0],
            i = n[1];
          return [ou(e.width, r), ou(e.height, i)];
        }
        function lu() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '';
          return [e[0], e[1]];
        }
        function uu(e, t) {
          var n,
            r = t[0],
            i = t[1];
          return (n = 't' === r ? e.y : 'b' === r ? e.y + e.height : e.y + e.height / 2), { x: 'l' === i ? e.x : 'r' === i ? e.x + e.width : e.x + e.width / 2, y: n };
        }
        function cu(e, t) {
          var n = { t: 'b', b: 't', l: 'r', r: 'l' };
          return e
            .map(function (e, r) {
              return r === t ? n[e] || 'c' : e;
            })
            .join('');
        }
        function du(e, t, n, r, i, a, o) {
          var s = cs(d.useState({ ready: !1, offsetX: 0, offsetY: 0, arrowX: 0, arrowY: 0, scaleX: 1, scaleY: 1, align: i[r] || {} }), 2),
            l = s[0],
            u = s[1],
            c = d.useRef(0),
            f = d.useMemo(
              function () {
                return t ? nu(t) : [];
              },
              [t],
            ),
            h = d.useRef({});
          e || (h.current = {});
          var p = Kl(function () {
              if (t && n && e) {
                var s,
                  l = t,
                  c = l.style.left,
                  d = l.style.top,
                  p = l.ownerDocument,
                  v = tu(l),
                  m = os(os({}, i[r]), a);
                if (((l.style.left = '0'), (l.style.top = '0'), Array.isArray(n))) s = { x: n[0], y: n[1], width: 0, height: 0 };
                else {
                  var g = n.getBoundingClientRect();
                  s = { x: g.x, y: g.y, width: g.width, height: g.height };
                }
                var y = l.getBoundingClientRect(),
                  _ = v.getComputedStyle(l),
                  b = _.width,
                  E = _.height,
                  S = p.documentElement,
                  k = S.clientWidth,
                  T = S.clientHeight,
                  w = S.scrollWidth,
                  A = S.scrollHeight,
                  L = S.scrollTop,
                  R = S.scrollLeft,
                  C = y.height,
                  x = y.width,
                  D = s.height,
                  I = s.width,
                  M = { left: 0, top: 0, right: k, bottom: T },
                  P = { left: -R, top: -L, right: w - R, bottom: A - L },
                  O = m.htmlRegion,
                  F = 'visible',
                  N = 'visibleFirst';
                'scroll' !== O && O !== N && (O = F);
                var B = O === N,
                  U = au(P, f),
                  z = au(M, f),
                  H = O === F ? z : U,
                  V = B ? z : H;
                (l.style.left = c), (l.style.top = d);
                var G = ru(Math.round((x / parseFloat(b)) * 1e3) / 1e3),
                  j = ru(Math.round((C / parseFloat(E)) * 1e3) / 1e3);
                if (
                  0 === G ||
                  0 === j ||
                  (tl(n) &&
                    !(function (e) {
                      if (!e) return !1;
                      if (e instanceof Element) {
                        if (e.offsetParent) return !0;
                        if (e.getBBox) {
                          var t = e.getBBox(),
                            n = t.width,
                            r = t.height;
                          if (n || r) return !0;
                        }
                        if (e.getBoundingClientRect) {
                          var i = e.getBoundingClientRect(),
                            a = i.width,
                            o = i.height;
                          if (a || o) return !0;
                        }
                      }
                      return !1;
                    })(n))
                )
                  return;
                var K = m.offset,
                  W = m.targetOffset,
                  q = cs(su(y, K), 2),
                  Y = q[0],
                  X = q[1],
                  $ = cs(su(s, W), 2),
                  Q = $[0],
                  Z = $[1];
                (s.x -= Q), (s.y -= Z);
                var J = cs(m.points || [], 2),
                  ee = J[0],
                  te = lu(J[1]),
                  ne = lu(ee),
                  re = uu(s, te),
                  ie = uu(y, ne),
                  ae = os({}, m),
                  oe = re.x - ie.x + Y,
                  se = re.y - ie.y + X;
                function Ze(e, t) {
                  var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : H,
                    r = y.x + e,
                    i = y.y + t,
                    a = r + x,
                    o = i + C,
                    s = Math.max(r, n.left),
                    l = Math.max(i, n.top),
                    u = Math.min(a, n.right),
                    c = Math.min(o, n.bottom);
                  return Math.max(0, (u - s) * (c - l));
                }
                var le,
                  ue,
                  ce,
                  de,
                  fe = Ze(oe, se),
                  he = Ze(oe, se, z),
                  pe = uu(s, ['t', 'l']),
                  ve = uu(y, ['t', 'l']),
                  me = uu(s, ['b', 'r']),
                  ge = uu(y, ['b', 'r']),
                  ye = m.overflow || {},
                  _e = ye.adjustX,
                  be = ye.adjustY,
                  Ee = ye.shiftX,
                  Se = ye.shiftY,
                  ke = function (e) {
                    return 'boolean' == typeof e ? e : e >= 0;
                  };
                function Je() {
                  (le = y.y + se), (ue = le + C), (ce = y.x + oe), (de = ce + x);
                }
                Je();
                var Te = ke(be),
                  we = ne[0] === te[0];
                if (Te && 't' === ne[0] && (ue > V.bottom || h.current.bt)) {
                  var Ae = se;
                  we ? (Ae -= C - D) : (Ae = pe.y - ge.y - X);
                  var Le = Ze(oe, Ae),
                    Re = Ze(oe, Ae, z);
                  Le > fe || (Le === fe && (!B || Re >= he)) ? ((h.current.bt = !0), (se = Ae), (ae.points = [cu(ne, 0), cu(te, 0)])) : (h.current.bt = !1);
                }
                if (Te && 'b' === ne[0] && (le < V.top || h.current.tb)) {
                  var Ce = se;
                  we ? (Ce += C - D) : (Ce = me.y - ve.y - X);
                  var xe = Ze(oe, Ce),
                    De = Ze(oe, Ce, z);
                  xe > fe || (xe === fe && (!B || De >= he)) ? ((h.current.tb = !0), (se = Ce), (ae.points = [cu(ne, 0), cu(te, 0)])) : (h.current.tb = !1);
                }
                var Ie = ke(_e),
                  Me = ne[1] === te[1];
                if (Ie && 'l' === ne[1] && (de > V.right || h.current.rl)) {
                  var Pe = oe;
                  Me ? (Pe -= x - I) : (Pe = pe.x - ge.x - Y);
                  var Oe = Ze(Pe, se),
                    Fe = Ze(Pe, se, z);
                  Oe > fe || (Oe === fe && (!B || Fe >= he)) ? ((h.current.rl = !0), (oe = Pe), (ae.points = [cu(ne, 1), cu(te, 1)])) : (h.current.rl = !1);
                }
                if (Ie && 'r' === ne[1] && (ce < V.left || h.current.lr)) {
                  var Ne = oe;
                  Me ? (Ne += x - I) : (Ne = me.x - ve.x - Y);
                  var Be = Ze(Ne, se),
                    Ue = Ze(Ne, se, z);
                  Be > fe || (Be === fe && (!B || Ue >= he)) ? ((h.current.lr = !0), (oe = Ne), (ae.points = [cu(ne, 1), cu(te, 1)])) : (h.current.lr = !1);
                }
                Je();
                var ze = !0 === Ee ? 0 : Ee;
                'number' == typeof ze &&
                  (ce < H.left && ((oe -= ce - H.left), s.x + I < H.left + ze && (oe += s.x - H.left + I - ze)),
                  de > H.right && ((oe -= de - H.right), s.x > H.right - ze && (oe += s.x - H.right + ze)));
                var He = !0 === Se ? 0 : Se;
                'number' == typeof He &&
                  (le < H.top && ((se -= le - H.top), s.y + D < H.top + He && (se += s.y - H.top + D - He)),
                  ue > H.bottom && ((se -= ue - H.bottom), s.y > H.bottom - He && (se += s.y - H.bottom + He)));
                var Ve = y.x + oe,
                  Ge = Ve + x,
                  je = y.y + se,
                  Ke = je + C,
                  We = s.x,
                  qe = We + I,
                  Ye = s.y,
                  Xe = Ye + D,
                  $e = (Math.max(Ve, We) + Math.min(Ge, qe)) / 2 - Ve,
                  Qe = (Math.max(je, Ye) + Math.min(Ke, Xe)) / 2 - je;
                null == o || o(t, ae), u({ ready: !0, offsetX: oe / G, offsetY: se / j, arrowX: $e / G, arrowY: Qe / j, scaleX: G, scaleY: j, align: ae });
              }
            }),
            v = function () {
              u(function (e) {
                return os(os({}, e), {}, { ready: !1 });
              });
            };
          return (
            Ds(v, [r]),
            Ds(
              function () {
                e || v();
              },
              [e],
            ),
            [
              l.ready,
              l.offsetX,
              l.offsetY,
              l.arrowX,
              l.arrowY,
              l.scaleX,
              l.scaleY,
              l.align,
              function () {
                c.current += 1;
                var e = c.current;
                Promise.resolve().then(function () {
                  c.current === e && p();
                });
              },
            ]
          );
        }
        function fu(e, t, n, r) {
          Ds(
            function () {
              if (e && t && n) {
                var i = n,
                  a = nu(t),
                  o = nu(i),
                  s = tu(i),
                  l = new Set([s].concat(Ls(a), Ls(o)));
                function u() {
                  r();
                }
                return (
                  l.forEach(function (e) {
                    e.addEventListener('scroll', u, { passive: !0 });
                  }),
                  s.addEventListener('resize', u, { passive: !0 }),
                  r(),
                  function () {
                    l.forEach(function (e) {
                      e.removeEventListener('scroll', u), s.removeEventListener('resize', u);
                    });
                  }
                );
              }
            },
            [e, t, n],
          );
        }
        function hu(e) {
          var t = d.useRef(!1),
            n = cs(d.useState(e), 2),
            r = n[0],
            i = n[1];
          return (
            d.useEffect(function () {
              return (
                (t.current = !1),
                function () {
                  t.current = !0;
                }
              );
            }, []),
            [
              r,
              function (e, n) {
                (n && t.current) || i(e);
              },
            ]
          );
        }
        function pu(e) {
          return void 0 !== e;
        }
        function vu(e, t) {
          var n = t || {},
            r = n.defaultValue,
            i = n.value,
            a = n.onChange,
            o = n.postState,
            s = cs(
              hu(function () {
                return pu(i) ? i : pu(r) ? ('function' == typeof r ? r() : r) : 'function' == typeof e ? e() : e;
              }),
              2,
            ),
            l = s[0],
            u = s[1],
            c = void 0 !== i ? i : l,
            d = o ? o(c) : c,
            f = Kl(a),
            h = cs(hu([c]), 2),
            p = h[0],
            v = h[1];
          return (
            xs(
              function () {
                var e = p[0];
                l !== e && f(l, e);
              },
              [p],
            ),
            xs(
              function () {
                pu(i) || u(i);
              },
              [i],
            ),
            [
              d,
              Kl(function (e, t) {
                u(e, t), v([c], t);
              }),
            ]
          );
        }
        var mu = function (e) {
            return +setTimeout(e, 16);
          },
          gu = function (e) {
            return clearTimeout(e);
          };
        'undefined' != typeof window &&
          'requestAnimationFrame' in window &&
          ((mu = function (e) {
            return window.requestAnimationFrame(e);
          }),
          (gu = function (e) {
            return window.cancelAnimationFrame(e);
          }));
        var yu = 0,
          _u = new Map();
        function bu(e) {
          _u.delete(e);
        }
        var Eu = function (e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
            n = (yu += 1);
          function r(t) {
            if (0 === t) bu(n), e();
            else {
              var i = mu(function () {
                r(t - 1);
              });
              _u.set(n, i);
            }
          }
          return r(t), n;
        };
        Eu.cancel = function (e) {
          var t = _u.get(e);
          return bu(t), gu(t);
        };
        var Su = Eu;
        function ku(e, t, n, r, i, a, o, s) {
          var l = d.useRef(e),
            u = d.useRef(!1);
          l.current !== e && ((u.current = !0), (l.current = e)),
            d.useEffect(
              function () {
                var e = Su(function () {
                  u.current = !1;
                });
                return function () {
                  Su.cancel(e);
                };
              },
              [e],
            ),
            d.useEffect(
              function () {
                if (t && r && (!i || a)) {
                  var e = !1,
                    c = function (t) {
                      var n = t.target;
                      e = o(n);
                    },
                    d = function (t) {
                      var n = t.target;
                      u.current || !l.current || e || o(n) || s(!1);
                    },
                    f = tu(r);
                  f.addEventListener('mousedown', c), f.addEventListener('click', d);
                  var h = jl(n);
                  return (
                    h && (h.addEventListener('mousedown', c), h.addEventListener('click', d)),
                    function () {
                      f.removeEventListener('mousedown', c), f.removeEventListener('click', d), h && (h.removeEventListener('mousedown', c), h.removeEventListener('click', d));
                    }
                  );
                }
              },
              [t, n, r, i, a],
            );
        }
        var Tu = d.createContext({});
        var wu = (function (e) {
            Dl(n, e);
            var t = Ol(n);
            function n() {
              return Ll(this, n), t.apply(this, arguments);
            }
            return (
              Cl(n, [
                {
                  key: 'render',
                  value: function () {
                    return this.props.children;
                  },
                },
              ]),
              n
            );
          })(d.Component),
          Au = wu,
          Lu = 'none',
          Ru = 'appear',
          Cu = 'enter',
          xu = 'leave',
          Du = 'none',
          Iu = 'prepare',
          Mu = 'start',
          Pu = 'active',
          Ou = 'end',
          Fu = 'prepared';
        function Nu(e, t) {
          var n = {};
          return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n['Webkit'.concat(e)] = 'webkit'.concat(t)),
            (n['Moz'.concat(e)] = 'moz'.concat(t)),
            (n['ms'.concat(e)] = 'MS'.concat(t)),
            (n['O'.concat(e)] = 'o'.concat(t.toLowerCase())),
            n
          );
        }
        var Bu = (function (e, t) {
            var n = { animationend: Nu('Animation', 'AnimationEnd'), transitionend: Nu('Transition', 'TransitionEnd') };
            return e && ('AnimationEvent' in t || delete n.animationend.animation, 'TransitionEvent' in t || delete n.transitionend.transition), n;
          })(fs(), 'undefined' != typeof window ? window : {}),
          Uu = {};
        if (fs()) {
          var zu = document.createElement('div');
          Uu = zu.style;
        }
        var Hu = {};
        function Vu(e) {
          if (Hu[e]) return Hu[e];
          var t = Bu[e];
          if (t)
            for (var n = Object.keys(t), r = n.length, i = 0; i < r; i += 1) {
              var a = n[i];
              if (Object.prototype.hasOwnProperty.call(t, a) && a in Uu) return (Hu[e] = t[a]), Hu[e];
            }
          return '';
        }
        var Gu = Vu('animationend'),
          ju = Vu('transitionend'),
          Ku = !(!Gu || !ju),
          Wu = Gu || 'animationend',
          qu = ju || 'transitionend';
        function Yu(e, t) {
          if (!e) return null;
          if ('object' === ns(e)) {
            var n = t.replace(/-\w/g, function (e) {
              return e[1].toUpperCase();
            });
            return e[n];
          }
          return ''.concat(e, '-').concat(t);
        }
        var Xu = fs() ? d.useLayoutEffect : d.useEffect,
          $u = [Iu, Mu, Pu, Ou],
          Qu = [Iu, Fu];
        function Zu(e) {
          return e === Pu || e === Ou;
        }
        var Ju = function (e, t, n) {
          var r = cs(hu(Du), 2),
            i = r[0],
            a = r[1],
            o = (function () {
              var e = d.useRef(null);
              function t() {
                Su.cancel(e.current);
              }
              return (
                d.useEffect(function () {
                  return function () {
                    t();
                  };
                }, []),
                [
                  function n(r) {
                    var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                    t();
                    var a = Su(function () {
                      i <= 1
                        ? r({
                            isCanceled: function () {
                              return a !== e.current;
                            },
                          })
                        : n(r, i - 1);
                    });
                    e.current = a;
                  },
                  t,
                ]
              );
            })(),
            s = cs(o, 2),
            l = s[0],
            u = s[1];
          var c = t ? Qu : $u;
          return (
            Xu(
              function () {
                if (i !== Du && i !== Ou) {
                  var e = c.indexOf(i),
                    t = c[e + 1],
                    r = n(i);
                  false === r
                    ? a(t, !0)
                    : t &&
                      l(function (e) {
                        function n() {
                          e.isCanceled() || a(t, !0);
                        }
                        !0 === r ? n() : Promise.resolve(r).then(n);
                      });
                }
              },
              [e, i],
            ),
            d.useEffect(function () {
              return function () {
                u();
              };
            }, []),
            [
              function () {
                a(Iu, !0);
              },
              i,
            ]
          );
        };
        function ec(e, t, n, r) {
          var i = r.motionEnter,
            a = void 0 === i || i,
            o = r.motionAppear,
            s = void 0 === o || o,
            l = r.motionLeave,
            u = void 0 === l || l,
            c = r.motionDeadline,
            f = r.motionLeaveImmediately,
            h = r.onAppearPrepare,
            p = r.onEnterPrepare,
            v = r.onLeavePrepare,
            m = r.onAppearStart,
            g = r.onEnterStart,
            y = r.onLeaveStart,
            _ = r.onAppearActive,
            b = r.onEnterActive,
            E = r.onLeaveActive,
            S = r.onAppearEnd,
            k = r.onEnterEnd,
            T = r.onLeaveEnd,
            w = r.onVisibleChanged,
            A = cs(hu(), 2),
            L = A[0],
            R = A[1],
            C = cs(hu(Lu), 2),
            x = C[0],
            D = C[1],
            I = cs(hu(null), 2),
            M = I[0],
            P = I[1],
            O = (0, d.useRef)(!1),
            F = (0, d.useRef)(null);
          function N() {
            return n();
          }
          var B = (0, d.useRef)(!1);
          function U() {
            D(Lu, !0), P(null, !0);
          }
          function z(e) {
            var t = N();
            if (!e || e.deadline || e.target === t) {
              var n,
                r = B.current;
              x === Ru && r ? (n = null == S ? void 0 : S(t, e)) : x === Cu && r ? (n = null == k ? void 0 : k(t, e)) : x === xu && r && (n = null == T ? void 0 : T(t, e)),
                x !== Lu && r && !1 !== n && U();
            }
          }
          var H = (function (e) {
              var t = (0, d.useRef)(),
                n = (0, d.useRef)(e);
              n.current = e;
              var r = d.useCallback(function (e) {
                n.current(e);
              }, []);
              function i(e) {
                e && (e.removeEventListener(qu, r), e.removeEventListener(Wu, r));
              }
              return (
                d.useEffect(function () {
                  return function () {
                    i(t.current);
                  };
                }, []),
                [
                  function (e) {
                    t.current && t.current !== e && i(t.current), e && e !== t.current && (e.addEventListener(qu, r), e.addEventListener(Wu, r), (t.current = e));
                  },
                  i,
                ]
              );
            })(z),
            V = cs(H, 1)[0],
            G = function (e) {
              var t, n, r;
              switch (e) {
                case Ru:
                  return is((t = {}), Iu, h), is(t, Mu, m), is(t, Pu, _), t;
                case Cu:
                  return is((n = {}), Iu, p), is(n, Mu, g), is(n, Pu, b), n;
                case xu:
                  return is((r = {}), Iu, v), is(r, Mu, y), is(r, Pu, E), r;
                default:
                  return {};
              }
            },
            j = d.useMemo(
              function () {
                return G(x);
              },
              [x],
            ),
            K = cs(
              Ju(x, !e, function (e) {
                if (e === Iu) {
                  var t = j[Iu];
                  return !!t && t(N());
                }
                var n;
                q in j && P((null === (n = j[q]) || void 0 === n ? void 0 : n.call(j, N(), null)) || null);
                return (
                  q === Pu &&
                    (V(N()),
                    c > 0 &&
                      (clearTimeout(F.current),
                      (F.current = setTimeout(function () {
                        z({ deadline: !0 });
                      }, c)))),
                  q === Fu && U(),
                  true
                );
              }),
              2,
            ),
            W = K[0],
            q = K[1],
            Y = Zu(q);
          (B.current = Y),
            Xu(
              function () {
                R(t);
                var n,
                  r = O.current;
                (O.current = !0), !r && t && s && (n = Ru), r && t && a && (n = Cu), ((r && !t && u) || (!r && f && !t && u)) && (n = xu);
                var i = G(n);
                n && (e || i[Iu]) ? (D(n), W()) : D(Lu);
              },
              [t],
            ),
            (0, d.useEffect)(
              function () {
                ((x === Ru && !s) || (x === Cu && !a) || (x === xu && !u)) && D(Lu);
              },
              [s, a, u],
            ),
            (0, d.useEffect)(function () {
              return function () {
                (O.current = !1), clearTimeout(F.current);
              };
            }, []);
          var X = d.useRef(!1);
          (0, d.useEffect)(
            function () {
              L && (X.current = !0), void 0 !== L && x === Lu && ((X.current || L) && (null == w || w(L)), (X.current = !0));
            },
            [L, x],
          );
          var $ = M;
          return j[Iu] && q === Mu && ($ = os({ transition: 'none' }, $)), [x, q, $, null != L ? L : t];
        }
        var tc = (function (e) {
            var t = e;
            'object' === ns(e) && (t = e.transitionSupport);
            var n = d.forwardRef(function (e, n) {
              var r = e.visible,
                i = void 0 === r || r,
                a = e.removeOnLeave,
                o = void 0 === a || a,
                s = e.forceRender,
                l = e.children,
                u = e.motionName,
                c = e.leavedClassName,
                f = e.eventProps,
                h = (function (e, n) {
                  return !(!e.motionName || !t || !1 === n);
                })(e, d.useContext(Tu).motion),
                p = (0, d.useRef)(),
                v = (0, d.useRef)();
              var m = cs(
                  ec(
                    h,
                    i,
                    function () {
                      try {
                        return p.current instanceof HTMLElement ? p.current : nl(v.current);
                      } catch (e) {
                        return null;
                      }
                    },
                    e,
                  ),
                  4,
                ),
                g = m[0],
                y = m[1],
                _ = m[2],
                b = m[3],
                E = d.useRef(b);
              b && (E.current = !0);
              var S,
                k = d.useCallback(
                  function (e) {
                    (p.current = e), Ss(n, e);
                  },
                  [n],
                ),
                T = os(os({}, f), {}, { visible: i });
              if (l)
                if (g === Lu)
                  S = b ? l(os({}, T), k) : !o && E.current && c ? l(os(os({}, T), {}, { className: c }), k) : s || (!o && !c) ? l(os(os({}, T), {}, { style: { display: 'none' } }), k) : null;
                else {
                  var w, A;
                  y === Iu ? (A = 'prepare') : Zu(y) ? (A = 'active') : y === Mu && (A = 'start');
                  var L = Yu(u, ''.concat(g, '-').concat(A));
                  S = l(os(os({}, T), {}, { className: es()(Yu(u, g), ((w = {}), is(w, L, L && A), is(w, u, 'string' == typeof u), w)), style: _ }), k);
                }
              else S = null;
              d.isValidElement(S) && ws(S) && (S.ref || (S = d.cloneElement(S, { ref: k })));
              return d.createElement(Au, { ref: v }, S);
            });
            return (n.displayName = 'CSSMotion'), n;
          })(Ku),
          nc = 'add',
          rc = 'keep',
          ic = 'remove',
          ac = 'removed';
        function oc(e) {
          var t;
          return os(os({}, (t = e && 'object' === ns(e) && 'key' in e ? e : { key: e })), {}, { key: String(t.key) });
        }
        function sc() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
          return e.map(oc);
        }
        function lc() {
          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
            n = [],
            r = 0,
            i = t.length,
            a = sc(e),
            o = sc(t);
          a.forEach(function (e) {
            for (var t = !1, a = r; a < i; a += 1) {
              var s = o[a];
              if (s.key === e.key) {
                r < a &&
                  ((n = n.concat(
                    o.slice(r, a).map(function (e) {
                      return os(os({}, e), {}, { status: nc });
                    }),
                  )),
                  (r = a)),
                  n.push(os(os({}, s), {}, { status: rc })),
                  (r += 1),
                  (t = !0);
                break;
              }
            }
            t || n.push(os(os({}, e), {}, { status: ic }));
          }),
            r < i &&
              (n = n.concat(
                o.slice(r).map(function (e) {
                  return os(os({}, e), {}, { status: nc });
                }),
              ));
          var s = {};
          n.forEach(function (e) {
            var t = e.key;
            s[t] = (s[t] || 0) + 1;
          });
          var l = Object.keys(s).filter(function (e) {
            return s[e] > 1;
          });
          return (
            l.forEach(function (e) {
              (n = n.filter(function (t) {
                var n = t.key,
                  r = t.status;
                return n !== e || r !== ic;
              })).forEach(function (t) {
                t.key === e && (t.status = rc);
              });
            }),
            n
          );
        }
        var uc = ['component', 'children', 'onVisibleChanged', 'onAllRemoved'],
          cc = ['status'],
          dc = [
            'eventProps',
            'visible',
            'children',
            'motionName',
            'motionAppear',
            'motionEnter',
            'motionLeave',
            'motionLeaveImmediately',
            'motionDeadline',
            'removeOnLeave',
            'leavedClassName',
            'onAppearStart',
            'onAppearActive',
            'onAppearEnd',
            'onEnterStart',
            'onEnterActive',
            'onEnterEnd',
            'onLeaveStart',
            'onLeaveActive',
            'onLeaveEnd',
          ];
        !(function (e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : tc,
            n = (function (e) {
              Dl(r, e);
              var n = Ol(r);
              function r() {
                var e;
                Ll(this, r);
                for (var t = arguments.length, i = new Array(t), a = 0; a < t; a++) i[a] = arguments[a];
                return (
                  is(Ml((e = n.call.apply(n, [this].concat(i)))), 'state', { keyEntities: [] }),
                  is(Ml(e), 'removeKey', function (t) {
                    var n = e.state.keyEntities.map(function (e) {
                      return e.key !== t ? e : os(os({}, e), {}, { status: ac });
                    });
                    return (
                      e.setState({ keyEntities: n }),
                      n.filter(function (e) {
                        return e.status !== ac;
                      }).length
                    );
                  }),
                  e
                );
              }
              return (
                Cl(
                  r,
                  [
                    {
                      key: 'render',
                      value: function () {
                        var e = this,
                          n = this.state.keyEntities,
                          r = this.props,
                          i = r.component,
                          a = r.children,
                          o = r.onVisibleChanged,
                          s = r.onAllRemoved,
                          l = ss(r, uc),
                          u = i || d.Fragment,
                          c = {};
                        return (
                          dc.forEach(function (e) {
                            (c[e] = l[e]), delete l[e];
                          }),
                          delete l.keys,
                          d.createElement(
                            u,
                            l,
                            n.map(function (n) {
                              var r = n.status,
                                i = ss(n, cc),
                                l = r === nc || r === rc;
                              return d.createElement(
                                t,
                                ts({}, c, {
                                  key: i.key,
                                  visible: l,
                                  eventProps: i,
                                  onVisibleChanged: function (t) {
                                    (null == o || o(t, { key: i.key }), t) || (0 === e.removeKey(i.key) && s && s());
                                  },
                                }),
                                a,
                              );
                            }),
                          )
                        );
                      },
                    },
                  ],
                  [
                    {
                      key: 'getDerivedStateFromProps',
                      value: function (e, t) {
                        var n = e.keys,
                          r = t.keyEntities,
                          i = sc(n);
                        return {
                          keyEntities: lc(r, i).filter(function (e) {
                            var t = r.find(function (t) {
                              var n = t.key;
                              return e.key === n;
                            });
                            return !t || t.status !== ac || e.status !== ic;
                          }),
                        };
                      },
                    },
                  ],
                ),
                r
              );
            })(d.Component);
          is(n, 'defaultProps', { component: 'div' });
        })(Ku);
        var fc = tc;
        function hc(e) {
          var t = e.prefixCls,
            n = e.align,
            r = e.arrow,
            i = e.arrowPos,
            a = r || {},
            o = a.className,
            s = a.content,
            l = i.x,
            u = void 0 === l ? 0 : l,
            c = i.y,
            f = void 0 === c ? 0 : c,
            h = d.useRef();
          if (!n || !n.points) return null;
          var p = { position: 'absolute' };
          if (!1 !== n.autoArrow) {
            var v = n.points[0],
              m = n.points[1],
              g = v[0],
              y = v[1],
              _ = m[0],
              b = m[1];
            g !== _ && ['t', 'b'].includes(g) ? ('t' === g ? (p.top = 0) : (p.bottom = 0)) : (p.top = f), y !== b && ['l', 'r'].includes(y) ? ('l' === y ? (p.left = 0) : (p.right = 0)) : (p.left = u);
          }
          return d.createElement('div', { ref: h, className: es()(''.concat(t, '-arrow'), o), style: p }, s);
        }
        function pc(e) {
          var t = e.prefixCls,
            n = e.open,
            r = e.zIndex,
            i = e.mask,
            a = e.motion;
          return i
            ? d.createElement(fc, ts({}, a, { motionAppear: !0, visible: n, removeOnLeave: !0 }), function (e) {
                var n = e.className;
                return d.createElement('div', { style: { zIndex: r }, className: es()(''.concat(t, '-mask'), n) });
              })
            : null;
        }
        var vc = d.memo(
          function (e) {
            return e.children;
          },
          function (e, t) {
            return t.cache;
          },
        );
        var mc = vc,
          gc = d.forwardRef(function (e, t) {
            var n = e.popup,
              r = e.className,
              i = e.prefixCls,
              a = e.style,
              o = e.target,
              s = e.onVisibleChanged,
              l = e.open,
              u = e.keepDom,
              c = e.onClick,
              f = e.mask,
              h = e.arrow,
              p = e.arrowPos,
              v = e.align,
              m = e.motion,
              g = e.maskMotion,
              y = e.forceRender,
              _ = e.getPopupContainer,
              b = e.autoDestroy,
              E = e.portal,
              S = e.zIndex,
              k = e.onMouseEnter,
              T = e.onMouseLeave,
              w = e.ready,
              A = e.offsetX,
              L = e.offsetY,
              R = e.onAlign,
              C = e.onPrepare,
              x = e.stretch,
              D = e.targetWidth,
              I = e.targetHeight,
              M = 'function' == typeof n ? n() : n,
              P = l || u,
              O = (null == _ ? void 0 : _.length) > 0,
              F = cs(d.useState(!_ || !O), 2),
              N = F[0],
              B = F[1];
            if (
              (Ds(
                function () {
                  !N && O && o && B(!0);
                },
                [N, O, o],
              ),
              !N)
            )
              return null;
            var U = w || !l ? { left: A, top: L } : { left: '-1000vw', top: '-1000vh' },
              z = {};
            return (
              x &&
                (x.includes('height') && I ? (z.height = I) : x.includes('minHeight') && I && (z.minHeight = I),
                x.includes('width') && D ? (z.width = D) : x.includes('minWidth') && D && (z.minWidth = D)),
              l || (z.pointerEvents = 'none'),
              d.createElement(
                E,
                {
                  open: y || P,
                  getContainer:
                    _ &&
                    function () {
                      return _(o);
                    },
                  autoDestroy: b,
                },
                d.createElement(pc, { prefixCls: i, open: l, zIndex: S, mask: f, motion: g }),
                d.createElement(Vl, { onResize: R, disabled: !l }, function (e) {
                  return d.createElement(
                    fc,
                    ts({ motionAppear: !0, motionEnter: !0, motionLeave: !0, removeOnLeave: !1, forceRender: y, leavedClassName: ''.concat(i, '-hidden') }, m, {
                      onAppearPrepare: C,
                      onEnterPrepare: C,
                      visible: l,
                      onVisibleChanged: function (e) {
                        var t;
                        null == m || null === (t = m.onVisibleChanged) || void 0 === t || t.call(m, e), s(e);
                      },
                    }),
                    function (n, o) {
                      var s = n.className,
                        u = n.style,
                        f = es()(i, s, r);
                      return d.createElement(
                        'div',
                        {
                          ref: ks(e, t, o),
                          className: f,
                          style: os(os(os(os({ '--arrow-x': ''.concat(p.x || 0, 'px'), '--arrow-y': ''.concat(p.y || 0, 'px') }, U), z), u), {}, { boxSizing: 'border-box', zIndex: S }, a),
                          onMouseEnter: k,
                          onMouseLeave: T,
                          onClick: c,
                        },
                        h && d.createElement(hc, { prefixCls: i, arrow: h, arrowPos: p, align: v }),
                        d.createElement(mc, { cache: !l }, M),
                      );
                    },
                  );
                }),
              )
            );
          });
        var yc = gc,
          _c = d.forwardRef(function (e, t) {
            var n = e.children,
              r = e.getTriggerDOMNode,
              i = ws(n),
              a = d.useCallback(
                function (e) {
                  Ss(t, r ? r(e) : e);
                },
                [r],
              ),
              o = Ts(a, n.ref);
            return i ? d.cloneElement(n, { ref: o }) : n;
          });
        var bc = _c,
          Ec = [
            'prefixCls',
            'children',
            'action',
            'showAction',
            'hideAction',
            'popupVisible',
            'defaultPopupVisible',
            'onPopupVisibleChange',
            'afterPopupVisibleChange',
            'mouseEnterDelay',
            'mouseLeaveDelay',
            'focusDelay',
            'blurDelay',
            'mask',
            'maskClosable',
            'getPopupContainer',
            'forceRender',
            'autoDestroy',
            'destroyPopupOnHide',
            'popup',
            'popupClassName',
            'popupStyle',
            'popupPlacement',
            'builtinPlacements',
            'popupAlign',
            'zIndex',
            'stretch',
            'getPopupClassNameFromAlign',
            'alignPoint',
            'onPopupClick',
            'onPopupAlign',
            'arrow',
            'popupMotion',
            'maskMotion',
            'popupTransitionName',
            'popupAnimation',
            'maskTransitionName',
            'maskAnimation',
            'className',
            'getTriggerDOMNode',
          ];
        var Sc = (function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Js,
              t = d.forwardRef(function (t, n) {
                var r = t.prefixCls,
                  i = void 0 === r ? 'rc-trigger-popup' : r,
                  a = t.children,
                  o = t.action,
                  s = void 0 === o ? 'hover' : o,
                  l = t.showAction,
                  u = t.hideAction,
                  c = t.popupVisible,
                  f = t.defaultPopupVisible,
                  h = t.onPopupVisibleChange,
                  p = t.afterPopupVisibleChange,
                  v = t.mouseEnterDelay,
                  m = t.mouseLeaveDelay,
                  g = void 0 === m ? 0.1 : m,
                  y = t.focusDelay,
                  _ = t.blurDelay,
                  b = t.mask,
                  E = t.maskClosable,
                  S = void 0 === E || E,
                  k = t.getPopupContainer,
                  T = t.forceRender,
                  w = t.autoDestroy,
                  A = t.destroyPopupOnHide,
                  L = t.popup,
                  R = t.popupClassName,
                  C = t.popupStyle,
                  x = t.popupPlacement,
                  D = t.builtinPlacements,
                  I = void 0 === D ? {} : D,
                  M = t.popupAlign,
                  P = t.zIndex,
                  O = t.stretch,
                  F = t.getPopupClassNameFromAlign,
                  N = t.alignPoint,
                  B = t.onPopupClick,
                  U = t.onPopupAlign,
                  z = t.arrow,
                  H = t.popupMotion,
                  V = t.maskMotion,
                  G = t.popupTransitionName,
                  j = t.popupAnimation,
                  K = t.maskTransitionName,
                  W = t.maskAnimation,
                  q = t.className,
                  Y = t.getTriggerDOMNode,
                  X = ss(t, Ec),
                  $ = w || A || !1,
                  Q = cs(d.useState(!1), 2),
                  Z = Q[0],
                  J = Q[1];
                Ds(function () {
                  J(Yl());
                }, []);
                var ee = d.useRef({}),
                  te = d.useContext(Xl),
                  ne = d.useMemo(
                    function () {
                      return {
                        registerSubPopup: function (e, t) {
                          (ee.current[e] = t), null == te || te.registerSubPopup(e, t);
                        },
                      };
                    },
                    [te],
                  ),
                  re = ql(),
                  ie = cs(d.useState(null), 2),
                  ae = ie[0],
                  oe = ie[1],
                  se = Kl(function (e) {
                    tl(e) && ae !== e && oe(e), null == te || te.registerSubPopup(re, e);
                  }),
                  le = cs(d.useState(null), 2),
                  ue = le[0],
                  ce = le[1],
                  de = Kl(function (e) {
                    tl(e) && ue !== e && ce(e);
                  }),
                  fe = d.Children.only(a),
                  he = (null == fe ? void 0 : fe.props) || {},
                  pe = {},
                  ve = Kl(function (e) {
                    var t,
                      n,
                      r = ue;
                    return (
                      (null == r ? void 0 : r.contains(e)) ||
                      (null === (t = jl(r)) || void 0 === t ? void 0 : t.host) === e ||
                      e === r ||
                      (null == ae ? void 0 : ae.contains(e)) ||
                      (null === (n = jl(ae)) || void 0 === n ? void 0 : n.host) === e ||
                      e === ae ||
                      Object.values(ee.current).some(function (t) {
                        return (null == t ? void 0 : t.contains(e)) || e === t;
                      })
                    );
                  }),
                  me = eu(i, H, j, G),
                  ge = eu(i, V, W, K),
                  ye = cs(d.useState(f || !1), 2),
                  _e = ye[0],
                  be = ye[1],
                  Ee = null != c ? c : _e,
                  Se = Kl(function (e) {
                    void 0 === c && be(e);
                  });
                Ds(
                  function () {
                    be(c || !1);
                  },
                  [c],
                );
                var ke = d.useRef(Ee);
                ke.current = Ee;
                var Te = Kl(function (e) {
                    Ee !== e && (Se(e), null == h || h(e));
                  }),
                  we = d.useRef(),
                  Ae = function () {
                    clearTimeout(we.current);
                  },
                  Le = function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    Ae(),
                      0 === t
                        ? Te(e)
                        : (we.current = setTimeout(function () {
                            Te(e);
                          }, 1e3 * t));
                  };
                d.useEffect(function () {
                  return Ae;
                }, []);
                var Re = cs(d.useState(!1), 2),
                  Ce = Re[0],
                  xe = Re[1];
                Ds(
                  function (e) {
                    (e && !Ee) || xe(!0);
                  },
                  [Ee],
                );
                var De = cs(d.useState(null), 2),
                  Ie = De[0],
                  Me = De[1],
                  Pe = cs(d.useState([0, 0]), 2),
                  Oe = Pe[0],
                  Fe = Pe[1],
                  Ne = function (e) {
                    Fe([e.clientX, e.clientY]);
                  },
                  Be = cs(du(Ee, ae, N ? Oe : ue, x, I, M, U), 9),
                  Ue = Be[0],
                  ze = Be[1],
                  He = Be[2],
                  Ve = Be[3],
                  Ge = Be[4],
                  je = Be[5],
                  Ke = Be[6],
                  We = Be[7],
                  qe = Be[8],
                  Ye = Kl(function () {
                    Ce || qe();
                  });
                fu(Ee, ue, ae, Ye),
                  Ds(
                    function () {
                      Ye();
                    },
                    [Oe, x],
                  ),
                  Ds(
                    function () {
                      !Ee || (null != I && I[x]) || Ye();
                    },
                    [JSON.stringify(M)],
                  );
                var Xe = d.useMemo(
                  function () {
                    var e = Jl(I, i, We, N);
                    return es()(e, null == F ? void 0 : F(We));
                  },
                  [We, F, I, i, N],
                );
                d.useImperativeHandle(n, function () {
                  return { forceAlign: Ye };
                });
                Ds(
                  function () {
                    Ie && (qe(), Ie(), Me(null));
                  },
                  [Ie],
                );
                var $e = cs(d.useState(0), 2),
                  Qe = $e[0],
                  Ze = $e[1],
                  Je = cs(d.useState(0), 2),
                  et = Je[0],
                  tt = Je[1],
                  nt = cs(Ql(Z, s, l, u), 2),
                  rt = nt[0],
                  it = nt[1],
                  at = function (e, t, n, r) {
                    pe[e] = function (i) {
                      var a;
                      null == r || r(i), Le(t, n);
                      for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), l = 1; l < o; l++) s[l - 1] = arguments[l];
                      null === (a = he[e]) || void 0 === a || a.call.apply(a, [he, i].concat(s));
                    };
                  },
                  ot = rt.has('click'),
                  st = it.has('click') || it.has('contextMenu');
                (ot || st) &&
                  (pe.onClick = function (e) {
                    var t;
                    ke.current && st ? Le(!1) : !ke.current && ot && (Ne(e), Le(!0));
                    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
                    null === (t = he.onClick) || void 0 === t || t.call.apply(t, [he, e].concat(r));
                  }),
                  ku(Ee, st, ue, ae, b, S, ve, Le);
                var lt,
                  ut,
                  ct = rt.has('hover'),
                  dt = it.has('hover');
                ct &&
                  (at('onMouseEnter', !0, v, function (e) {
                    Ne(e);
                  }),
                  (lt = function () {
                    Le(!0, v);
                  }),
                  N &&
                    (pe.onMouseMove = function (e) {
                      var t;
                      null === (t = he.onMouseMove) || void 0 === t || t.call(he, e);
                    })),
                  dt &&
                    (at('onMouseLeave', !1, g),
                    (ut = function () {
                      Le(!1, g);
                    })),
                  rt.has('focus') && at('onFocus', !0, y),
                  it.has('focus') && at('onBlur', !1, _),
                  rt.has('contextMenu') &&
                    (pe.onContextMenu = function (e) {
                      var t;
                      Ne(e), Le(!0), e.preventDefault();
                      for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
                      null === (t = he.onContextMenu) || void 0 === t || t.call.apply(t, [he, e].concat(r));
                    }),
                  q && (pe.className = es()(he.className, q));
                var ft = os(os({}, he), pe),
                  ht = {};
                ['onContextMenu', 'onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur'].forEach(function (e) {
                  X[e] &&
                    (ht[e] = function () {
                      for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
                      null === (t = ft[e]) || void 0 === t || t.call.apply(t, [ft].concat(r)), X[e].apply(X, r);
                    });
                });
                var pt = d.cloneElement(fe, os(os({}, ft), ht)),
                  vt = { x: Ve, y: Ge },
                  mt = z ? os({}, !0 !== z ? z : {}) : null;
                return d.createElement(
                  d.Fragment,
                  null,
                  d.createElement(
                    Vl,
                    {
                      disabled: !Ee,
                      ref: de,
                      onResize: function (e, t) {
                        if ((Ye(), O)) {
                          var n = t.getBoundingClientRect();
                          Ze(n.width), tt(n.height);
                        }
                      },
                    },
                    d.createElement(bc, { getTriggerDOMNode: Y }, pt),
                  ),
                  d.createElement(
                    Xl.Provider,
                    { value: ne },
                    d.createElement(yc, {
                      portal: e,
                      ref: se,
                      prefixCls: i,
                      popup: L,
                      className: es()(R, Xe),
                      style: C,
                      target: ue,
                      onMouseEnter: lt,
                      onMouseLeave: ut,
                      zIndex: P,
                      open: Ee,
                      keepDom: Ce,
                      onClick: B,
                      mask: b,
                      motion: me,
                      maskMotion: ge,
                      onVisibleChanged: function (e) {
                        xe(!1), qe(), null == p || p(e);
                      },
                      onPrepare: function () {
                        return new Promise(function (e) {
                          Me(function () {
                            return e;
                          });
                        });
                      },
                      forceRender: T,
                      autoDestroy: $,
                      getPopupContainer: k,
                      align: We,
                      arrow: mt,
                      arrowPos: vt,
                      ready: Ue,
                      offsetX: ze,
                      offsetY: He,
                      onAlign: Ye,
                      stretch: O,
                      targetWidth: Qe / je,
                      targetHeight: et / Ke,
                    }),
                  ),
                );
              });
            return t;
          })(Js),
          kc = { shiftX: 64, adjustY: 1 },
          Tc = { adjustX: 1, shiftY: !0 },
          wc = [0, 0],
          Ac = {
            left: { points: ['cr', 'cl'], overflow: Tc, offset: [-4, 0], targetOffset: wc },
            right: { points: ['cl', 'cr'], overflow: Tc, offset: [4, 0], targetOffset: wc },
            top: { points: ['bc', 'tc'], overflow: kc, offset: [0, -4], targetOffset: wc },
            bottom: { points: ['tc', 'bc'], overflow: kc, offset: [0, 4], targetOffset: wc },
            topLeft: { points: ['bl', 'tl'], overflow: kc, offset: [0, -4], targetOffset: wc },
            leftTop: { points: ['tr', 'tl'], overflow: Tc, offset: [-4, 0], targetOffset: wc },
            topRight: { points: ['br', 'tr'], overflow: kc, offset: [0, -4], targetOffset: wc },
            rightTop: { points: ['tl', 'tr'], overflow: Tc, offset: [4, 0], targetOffset: wc },
            bottomRight: { points: ['tr', 'br'], overflow: kc, offset: [0, 4], targetOffset: wc },
            rightBottom: { points: ['bl', 'br'], overflow: Tc, offset: [4, 0], targetOffset: wc },
            bottomLeft: { points: ['tl', 'bl'], overflow: kc, offset: [0, 4], targetOffset: wc },
            leftBottom: { points: ['br', 'bl'], overflow: Tc, offset: [-4, 0], targetOffset: wc },
          };
        function Lc(e) {
          var t = e.children,
            n = e.prefixCls,
            r = e.id,
            i = e.overlayInnerStyle,
            a = e.className,
            o = e.style;
          return d.createElement(
            'div',
            { className: es()(''.concat(n, '-content'), a), style: o },
            d.createElement('div', { className: ''.concat(n, '-inner'), id: r, role: 'tooltip', style: i }, 'function' == typeof t ? t() : t),
          );
        }
        var Rc = [
            'overlayClassName',
            'trigger',
            'mouseEnterDelay',
            'mouseLeaveDelay',
            'overlayStyle',
            'prefixCls',
            'children',
            'onVisibleChange',
            'afterVisibleChange',
            'transitionName',
            'animation',
            'motion',
            'placement',
            'align',
            'destroyTooltipOnHide',
            'defaultVisible',
            'getTooltipContainer',
            'overlayInnerStyle',
            'arrowContent',
            'overlay',
            'id',
            'showArrow',
          ],
          Cc = function (e, t) {
            var n = e.overlayClassName,
              r = e.trigger,
              i = void 0 === r ? ['hover'] : r,
              a = e.mouseEnterDelay,
              o = void 0 === a ? 0 : a,
              s = e.mouseLeaveDelay,
              l = void 0 === s ? 0.1 : s,
              u = e.overlayStyle,
              c = e.prefixCls,
              f = void 0 === c ? 'rc-tooltip' : c,
              h = e.children,
              p = e.onVisibleChange,
              v = e.afterVisibleChange,
              m = e.transitionName,
              g = e.animation,
              y = e.motion,
              _ = e.placement,
              b = void 0 === _ ? 'right' : _,
              E = e.align,
              S = void 0 === E ? {} : E,
              k = e.destroyTooltipOnHide,
              T = void 0 !== k && k,
              w = e.defaultVisible,
              A = e.getTooltipContainer,
              L = e.overlayInnerStyle,
              R = (e.arrowContent, e.overlay),
              C = e.id,
              x = e.showArrow,
              D = void 0 === x || x,
              I = ss(e, Rc),
              M = (0, d.useRef)(null);
            (0, d.useImperativeHandle)(t, function () {
              return M.current;
            });
            var P = os({}, I);
            'visible' in e && (P.popupVisible = e.visible);
            return d.createElement(
              Sc,
              ts(
                {
                  popupClassName: n,
                  prefixCls: f,
                  popup: function () {
                    return d.createElement(Lc, { key: 'content', prefixCls: f, id: C, overlayInnerStyle: L }, R);
                  },
                  action: i,
                  builtinPlacements: Ac,
                  popupPlacement: b,
                  ref: M,
                  popupAlign: S,
                  getPopupContainer: A,
                  onPopupVisibleChange: p,
                  afterPopupVisibleChange: v,
                  popupTransitionName: m,
                  popupAnimation: g,
                  popupMotion: y,
                  defaultPopupVisible: w,
                  autoDestroy: T,
                  mouseLeaveDelay: l,
                  popupStyle: u,
                  mouseEnterDelay: o,
                  arrow: D,
                },
                P,
              ),
              h,
            );
          },
          xc = (0, d.forwardRef)(Cc),
          Dc = function (e, t, n) {
            return void 0 !== n ? n : ''.concat(e, '-').concat(t);
          };
        function Ic(e) {
          var t = e.contentRadius,
            n = t > 12 ? t + 2 : 12;
          return { dropdownArrowOffset: n, dropdownArrowOffsetVertical: e.limitVerticalRadius ? 8 : n };
        }
        function Mc(e, t) {
          return e ? t : {};
        }
        function Pc(e, t) {
          var n,
            r,
            i,
            a,
            o,
            s,
            l,
            u,
            c,
            d,
            f,
            h,
            p,
            v,
            m,
            g,
            y,
            _,
            b,
            E,
            S,
            k,
            T,
            w = e.componentCls,
            A = e.sizePopupArrow,
            L = e.borderRadiusXS,
            C = e.borderRadiusOuter,
            x = e.boxShadowPopoverArrow,
            D = t.colorBg,
            I = t.contentRadius,
            M = void 0 === I ? e.borderRadiusLG : I,
            P = t.limitVerticalRadius,
            O = t.arrowDistance,
            F = void 0 === O ? 0 : O,
            N = t.arrowPlacement,
            B = void 0 === N ? { left: !0, right: !0, top: !0, bottom: !0 } : N,
            U = Ic({ contentRadius: M, limitVerticalRadius: P }),
            z = U.dropdownArrowOffsetVertical,
            H = U.dropdownArrowOffset;
          return R()(
            {},
            w,
            Object.assign(
              Object.assign(
                Object.assign(
                  Object.assign(
                    R()({}, ''.concat(w, '-arrow'), [
                      Object.assign(
                        Object.assign(
                          { position: 'absolute', zIndex: 1, display: 'block' },
                          ((o = A),
                          (s = L),
                          (l = C),
                          (u = D),
                          (c = x),
                          (d = o / 2),
                          (f = d),
                          (h = (1 * l) / Math.sqrt(2)),
                          (p = d - l * (1 - 1 / Math.sqrt(2))),
                          (v = d - s * (1 / Math.sqrt(2))),
                          (m = l * (Math.sqrt(2) - 1) + s * (1 / Math.sqrt(2))),
                          (g = 2 * d - v),
                          (y = m),
                          (_ = 2 * d - h),
                          (b = p),
                          (E = 2 * d - 0),
                          (S = f),
                          (k = d * Math.sqrt(2) + l * (Math.sqrt(2) - 2)),
                          (T = l * (Math.sqrt(2) - 1)),
                          {
                            pointerEvents: 'none',
                            width: o,
                            height: o,
                            overflow: 'hidden',
                            '&::before': {
                              position: 'absolute',
                              bottom: 0,
                              insetInlineStart: 0,
                              width: o,
                              height: o / 2,
                              background: u,
                              clipPath: {
                                _multi_value_: !0,
                                value: [
                                  'polygon('
                                    .concat(T, 'px 100%, 50% ')
                                    .concat(T, 'px, ')
                                    .concat(2 * d - T, 'px 100%, ')
                                    .concat(T, 'px 100%)'),
                                  "path('M "
                                    .concat(0, ' ')
                                    .concat(f, ' A ')
                                    .concat(l, ' ')
                                    .concat(l, ' 0 0 0 ')
                                    .concat(h, ' ')
                                    .concat(p, ' L ')
                                    .concat(v, ' ')
                                    .concat(m, ' A ')
                                    .concat(s, ' ')
                                    .concat(s, ' 0 0 1 ')
                                    .concat(g, ' ')
                                    .concat(y, ' L ')
                                    .concat(_, ' ')
                                    .concat(b, ' A ')
                                    .concat(l, ' ')
                                    .concat(l, ' 0 0 0 ')
                                    .concat(E, ' ')
                                    .concat(S, " Z')"),
                                ],
                              },
                              content: '""',
                            },
                            '&::after': {
                              content: '""',
                              position: 'absolute',
                              width: k,
                              height: k,
                              bottom: 0,
                              insetInline: 0,
                              margin: 'auto',
                              borderRadius: { _skip_check_: !0, value: '0 0 '.concat(s, 'px 0') },
                              transform: 'translateY(50%) rotate(-135deg)',
                              boxShadow: c,
                              zIndex: 0,
                              background: 'transparent',
                            },
                          }),
                        ),
                        { '&:before': { background: D } },
                      ),
                    ]),
                    Mc(
                      !!B.top,
                      ((n = {}),
                      R()(n, ['&-placement-top '.concat(w, '-arrow'), '&-placement-topLeft '.concat(w, '-arrow'), '&-placement-topRight '.concat(w, '-arrow')].join(','), {
                        bottom: F,
                        transform: 'translateY(100%) rotate(180deg)',
                      }),
                      R()(n, '&-placement-top '.concat(w, '-arrow'), { left: { _skip_check_: !0, value: '50%' }, transform: 'translateX(-50%) translateY(100%) rotate(180deg)' }),
                      R()(n, '&-placement-topLeft '.concat(w, '-arrow'), { left: { _skip_check_: !0, value: H } }),
                      R()(n, '&-placement-topRight '.concat(w, '-arrow'), { right: { _skip_check_: !0, value: H } }),
                      n),
                    ),
                  ),
                  Mc(
                    !!B.bottom,
                    ((r = {}),
                    R()(r, ['&-placement-bottom '.concat(w, '-arrow'), '&-placement-bottomLeft '.concat(w, '-arrow'), '&-placement-bottomRight '.concat(w, '-arrow')].join(','), {
                      top: F,
                      transform: 'translateY(-100%)',
                    }),
                    R()(r, '&-placement-bottom '.concat(w, '-arrow'), { left: { _skip_check_: !0, value: '50%' }, transform: 'translateX(-50%) translateY(-100%)' }),
                    R()(r, '&-placement-bottomLeft '.concat(w, '-arrow'), { left: { _skip_check_: !0, value: H } }),
                    R()(r, '&-placement-bottomRight '.concat(w, '-arrow'), { right: { _skip_check_: !0, value: H } }),
                    r),
                  ),
                ),
                Mc(
                  !!B.left,
                  ((i = {}),
                  R()(i, ['&-placement-left '.concat(w, '-arrow'), '&-placement-leftTop '.concat(w, '-arrow'), '&-placement-leftBottom '.concat(w, '-arrow')].join(','), {
                    right: { _skip_check_: !0, value: F },
                    transform: 'translateX(100%) rotate(90deg)',
                  }),
                  R()(i, '&-placement-left '.concat(w, '-arrow'), { top: { _skip_check_: !0, value: '50%' }, transform: 'translateY(-50%) translateX(100%) rotate(90deg)' }),
                  R()(i, '&-placement-leftTop '.concat(w, '-arrow'), { top: z }),
                  R()(i, '&-placement-leftBottom '.concat(w, '-arrow'), { bottom: z }),
                  i),
                ),
              ),
              Mc(
                !!B.right,
                ((a = {}),
                R()(a, ['&-placement-right '.concat(w, '-arrow'), '&-placement-rightTop '.concat(w, '-arrow'), '&-placement-rightBottom '.concat(w, '-arrow')].join(','), {
                  left: { _skip_check_: !0, value: F },
                  transform: 'translateX(-100%) rotate(-90deg)',
                }),
                R()(a, '&-placement-right '.concat(w, '-arrow'), { top: { _skip_check_: !0, value: '50%' }, transform: 'translateY(-50%) translateX(-100%) rotate(-90deg)' }),
                R()(a, '&-placement-rightTop '.concat(w, '-arrow'), { top: z }),
                R()(a, '&-placement-rightBottom '.concat(w, '-arrow'), { bottom: z }),
                a),
              ),
            ),
          );
        }
        var Oc = {
            left: { points: ['cr', 'cl'] },
            right: { points: ['cl', 'cr'] },
            top: { points: ['bc', 'tc'] },
            bottom: { points: ['tc', 'bc'] },
            topLeft: { points: ['bl', 'tl'] },
            leftTop: { points: ['tr', 'tl'] },
            topRight: { points: ['br', 'tr'] },
            rightTop: { points: ['tl', 'tr'] },
            bottomRight: { points: ['tr', 'br'] },
            rightBottom: { points: ['bl', 'br'] },
            bottomLeft: { points: ['tl', 'bl'] },
            leftBottom: { points: ['br', 'bl'] },
          },
          Fc = {
            topLeft: { points: ['bl', 'tc'] },
            leftTop: { points: ['tr', 'cl'] },
            topRight: { points: ['br', 'tc'] },
            rightTop: { points: ['tl', 'cr'] },
            bottomRight: { points: ['tr', 'bc'] },
            rightBottom: { points: ['bl', 'cr'] },
            bottomLeft: { points: ['tl', 'bc'] },
            leftBottom: { points: ['br', 'cl'] },
          },
          Nc = new Set(['topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'leftTop', 'leftBottom', 'rightTop', 'rightBottom']);
        function Bc(e) {
          var t = e.arrowWidth,
            n = e.autoAdjustOverflow,
            r = e.arrowPointAtCenter,
            i = e.offset,
            a = e.borderRadius,
            o = e.visibleFirst,
            s = t / 2,
            l = {};
          return (
            Object.keys(Oc).forEach(function (e) {
              var c = (r && Fc[e]) || Oc[e],
                d = Object.assign(Object.assign({}, c), { offset: [0, 0] });
              switch (((l[e] = d), Nc.has(e) && (d.autoArrow = !1), e)) {
                case 'top':
                case 'topLeft':
                case 'topRight':
                  d.offset[1] = -s - i;
                  break;
                case 'bottom':
                case 'bottomLeft':
                case 'bottomRight':
                  d.offset[1] = s + i;
                  break;
                case 'left':
                case 'leftTop':
                case 'leftBottom':
                  d.offset[0] = -s - i;
                  break;
                case 'right':
                case 'rightTop':
                case 'rightBottom':
                  d.offset[0] = s + i;
              }
              var f = Ic({ contentRadius: a, limitVerticalRadius: !0 });
              if (r)
                switch (e) {
                  case 'topLeft':
                  case 'bottomLeft':
                    d.offset[0] = -f.dropdownArrowOffset - s;
                    break;
                  case 'topRight':
                  case 'bottomRight':
                    d.offset[0] = f.dropdownArrowOffset + s;
                    break;
                  case 'leftTop':
                  case 'rightTop':
                    d.offset[1] = -f.dropdownArrowOffset - s;
                    break;
                  case 'leftBottom':
                  case 'rightBottom':
                    d.offset[1] = f.dropdownArrowOffset + s;
                }
              (d.overflow = (function (e, t, n, r) {
                if (!1 === r) return { adjustX: !1, adjustY: !1 };
                var i = r && 'object' === u()(r) ? r : {},
                  a = {};
                switch (e) {
                  case 'top':
                  case 'bottom':
                    a.shiftX = 2 * t.dropdownArrowOffset + n;
                    break;
                  case 'left':
                  case 'right':
                    a.shiftY = 2 * t.dropdownArrowOffsetVertical + n;
                }
                var o = Object.assign(Object.assign({}, a), i);
                return o.shiftX || (o.adjustX = !0), o.shiftY || (o.adjustY = !0), o;
              })(e, f, t, n)),
                o && (d.htmlRegion = 'visibleFirst');
            }),
            l
          );
        }
        var Uc = d.isValidElement;
        function zc(e, t) {
          return (function (e, t, n) {
            return Uc(e) ? d.cloneElement(e, 'function' == typeof n ? n(e.props || {}) : n) : t;
          })(e, e, t);
        }
        var Hc = d.createContext({
            getPrefixCls: function (e, t) {
              return t || (e ? 'ant-'.concat(e) : 'ant');
            },
            iconPrefixCls: 'anticon',
          }),
          Vc = (Hc.Consumer, d.createContext(null)),
          Gc = function (e) {
            var t = e.children;
            return d.createElement(Vc.Provider, { value: null }, t);
          };
        var jc = function (e) {
          for (var t, n = 0, r = 0, i = e.length; i >= 4; ++r, i -= 4)
            (t =
              1540483477 * (65535 & (t = (255 & e.charCodeAt(r)) | ((255 & e.charCodeAt(++r)) << 8) | ((255 & e.charCodeAt(++r)) << 16) | ((255 & e.charCodeAt(++r)) << 24))) +
              ((59797 * (t >>> 16)) << 16)),
              (n = (1540483477 * (65535 & (t ^= t >>> 24)) + ((59797 * (t >>> 16)) << 16)) ^ (1540483477 * (65535 & n) + ((59797 * (n >>> 16)) << 16)));
          switch (i) {
            case 3:
              n ^= (255 & e.charCodeAt(r + 2)) << 16;
            case 2:
              n ^= (255 & e.charCodeAt(r + 1)) << 8;
            case 1:
              n = 1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) + ((59797 * (n >>> 16)) << 16);
          }
          return (((n = 1540483477 * (65535 & (n ^= n >>> 13)) + ((59797 * (n >>> 16)) << 16)) ^ (n >>> 15)) >>> 0).toString(36);
        };
        var Kc = function (e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              r = new Set();
            function i(e, t) {
              var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                o = r.has(e);
              if ((_s(!o, 'Warning: There may be circular references'), o)) return !1;
              if (e === t) return !0;
              if (n && a > 1) return !1;
              r.add(e);
              var s = a + 1;
              if (Array.isArray(e)) {
                if (!Array.isArray(t) || e.length !== t.length) return !1;
                for (var l = 0; l < e.length; l++) if (!i(e[l], t[l], s)) return !1;
                return !0;
              }
              if (e && t && 'object' === ns(e) && 'object' === ns(t)) {
                var u = Object.keys(e);
                return (
                  u.length === Object.keys(t).length &&
                  u.every(function (n) {
                    return i(e[n], t[n], s);
                  })
                );
              }
              return !1;
            }
            return i(e, t);
          },
          Wc = (function () {
            function e(t) {
              Ll(this, e), is(this, 'instanceId', void 0), is(this, 'cache', new Map()), (this.instanceId = t);
            }
            return (
              Cl(e, [
                {
                  key: 'get',
                  value: function (e) {
                    return this.cache.get(e.join('%')) || null;
                  },
                },
                {
                  key: 'update',
                  value: function (e, t) {
                    var n = e.join('%'),
                      r = t(this.cache.get(n));
                    null === r ? this.cache.delete(n) : this.cache.set(n, r);
                  },
                },
              ]),
              e
            );
          })(),
          qc = 'data-token-hash',
          Yc = 'data-css-hash',
          Xc = '__cssinjs_instance__';
        function $c() {
          var e = Math.random().toString(12).slice(2);
          if ('undefined' != typeof document && document.head && document.body) {
            var t = document.body.querySelectorAll('style['.concat(Yc, ']')) || [],
              n = document.head.firstChild;
            Array.from(t).forEach(function (t) {
              (t[Xc] = t[Xc] || e), t[Xc] === e && document.head.insertBefore(t, n);
            });
            var r = {};
            Array.from(document.querySelectorAll('style['.concat(Yc, ']'))).forEach(function (t) {
              var n,
                i = t.getAttribute(Yc);
              r[i] ? t[Xc] === e && (null === (n = t.parentNode) || void 0 === n || n.removeChild(t)) : (r[i] = !0);
            });
          }
          return new Wc(e);
        }
        var Qc = d.createContext({ hashPriority: 'low', cache: $c(), defaultCache: !0 }),
          Zc = Qc;
        function Jc(e) {
          var t = '';
          return (
            Object.keys(e).forEach(function (n) {
              var r = e[n];
              (t += n), r && 'object' === ns(r) ? (t += Jc(r)) : (t += r);
            }),
            t
          );
        }
        function ed(e, t) {
          return jc(''.concat(t, '_').concat(Jc(e)));
        }
        var td = 'layer-'.concat(Date.now(), '-').concat(Math.random()).replace(/\./g, ''),
          nd = '903px';
        var rd = void 0;
        function id() {
          return (
            void 0 === rd &&
              (rd = (function (e, t) {
                if (fs()) {
                  var n;
                  Ks(e, td);
                  var r = document.createElement('div');
                  (r.style.position = 'fixed'), (r.style.left = '0'), (r.style.top = '0'), null == t || t(r), document.body.appendChild(r);
                  var i = getComputedStyle(r).width === nd;
                  return null === (n = r.parentNode) || void 0 === n || n.removeChild(r), Gs(td), i;
                }
                return !1;
              })('@layer '.concat(td, ' { .').concat(td, ' { width: ').concat(nd, '!important; } }'), function (e) {
                e.className = td;
              })),
            rd
          );
        }
        var ad = function () {
          return !1;
        };
        function od(e, t, n, r) {
          var i = d.useContext(Zc).cache,
            a = [e].concat(Ls(t));
          ad();
          return (
            d.useMemo(
              function () {
                i.update(a, function (e) {
                  var t = cs(e || [], 2),
                    r = t[0];
                  return [(void 0 === r ? 0 : r) + 1, t[1] || n()];
                });
              },
              [a.join('_')],
            ),
            d.useEffect(function () {
              return function () {
                i.update(a, function (e) {
                  var t = cs(e || [], 2),
                    n = t[0],
                    i = void 0 === n ? 0 : n,
                    a = t[1];
                  return 0 === i - 1 ? (null == r || r(a, !1), null) : [i - 1, a];
                });
              };
            }, a),
            i.get(a)[1]
          );
        }
        var sd = {},
          ld = new Map();
        function ud(e) {
          ld.set(e, (ld.get(e) || 0) + 1);
        }
        function cd(e, t) {
          ld.set(e, (ld.get(e) || 0) - 1);
          var n = Array.from(ld.keys()),
            r = n.filter(function (e) {
              return (ld.get(e) || 0) <= 0;
            });
          r.length < n.length &&
            r.forEach(function (e) {
              !(function (e, t) {
                'undefined' != typeof document &&
                  document.querySelectorAll('style['.concat(qc, '="').concat(e, '"]')).forEach(function (e) {
                    var n;
                    e[Xc] === t && (null === (n = e.parentNode) || void 0 === n || n.removeChild(e));
                  });
              })(e, t),
                ld.delete(e);
            });
        }
        var dd = function (e, t, n, r) {
          var i = os(os({}, n.getDerivativeToken(e)), t);
          return r && (i = r(i)), i;
        };
        var fd = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1,
          },
          hd = 'comm',
          pd = 'rule',
          vd = 'decl',
          md = Math.abs,
          gd = String.fromCharCode;
        Object.assign;
        function yd(e) {
          return e.trim();
        }
        function _d(e, t, n) {
          return e.replace(t, n);
        }
        function bd(e, t) {
          return e.indexOf(t);
        }
        function Ed(e, t) {
          return 0 | e.charCodeAt(t);
        }
        function Sd(e, t, n) {
          return e.slice(t, n);
        }
        function kd(e) {
          return e.length;
        }
        function Td(e) {
          return e.length;
        }
        function wd(e, t) {
          return t.push(e), e;
        }
        function Ad(e, t) {
          for (var n = '', r = Td(e), i = 0; i < r; i++) n += t(e[i], i, e, t) || '';
          return n;
        }
        function Ld(e, t, n, r) {
          switch (e.type) {
            case '@layer':
              if (e.children.length) break;
            case '@import':
            case vd:
              return (e.return = e.return || e.value);
            case hd:
              return '';
            case '@keyframes':
              return (e.return = e.value + '{' + Ad(e.children, r) + '}');
            case pd:
              e.value = e.props.join(',');
          }
          return kd((n = Ad(e.children, r))) ? (e.return = e.value + '{' + n + '}') : '';
        }
        var Rd = 1,
          Cd = 1,
          xd = 0,
          Dd = 0,
          Id = 0,
          Md = '';
        function Pd(e, t, n, r, i, a, o) {
          return { value: e, root: t, parent: n, type: r, props: i, children: a, line: Rd, column: Cd, length: o, return: '' };
        }
        function Od() {
          return (Id = Dd > 0 ? Ed(Md, --Dd) : 0), Cd--, 10 === Id && ((Cd = 1), Rd--), Id;
        }
        function Fd() {
          return (Id = Dd < xd ? Ed(Md, Dd++) : 0), Cd++, 10 === Id && ((Cd = 1), Rd++), Id;
        }
        function Nd() {
          return Ed(Md, Dd);
        }
        function Bd() {
          return Dd;
        }
        function Ud(e, t) {
          return Sd(Md, e, t);
        }
        function zd(e) {
          switch (e) {
            case 0:
            case 9:
            case 10:
            case 13:
            case 32:
              return 5;
            case 33:
            case 43:
            case 44:
            case 47:
            case 62:
            case 64:
            case 126:
            case 59:
            case 123:
            case 125:
              return 4;
            case 58:
              return 3;
            case 34:
            case 39:
            case 40:
            case 91:
              return 2;
            case 41:
            case 93:
              return 1;
          }
          return 0;
        }
        function Hd(e) {
          return (Rd = Cd = 1), (xd = kd((Md = e))), (Dd = 0), [];
        }
        function Vd(e) {
          return (Md = ''), e;
        }
        function Gd(e) {
          return yd(Ud(Dd - 1, Wd(91 === e ? e + 2 : 40 === e ? e + 1 : e)));
        }
        function jd(e) {
          for (; (Id = Nd()) && Id < 33; ) Fd();
          return zd(e) > 2 || zd(Id) > 3 ? '' : ' ';
        }
        function Kd(e, t) {
          for (; --t && Fd() && !(Id < 48 || Id > 102 || (Id > 57 && Id < 65) || (Id > 70 && Id < 97)); );
          return Ud(e, Bd() + (t < 6 && 32 == Nd() && 32 == Fd()));
        }
        function Wd(e) {
          for (; Fd(); )
            switch (Id) {
              case e:
                return Dd;
              case 34:
              case 39:
                34 !== e && 39 !== e && Wd(Id);
                break;
              case 40:
                41 === e && Wd(e);
                break;
              case 92:
                Fd();
            }
          return Dd;
        }
        function qd(e, t) {
          for (; Fd() && e + Id !== 57 && (e + Id !== 84 || 47 !== Nd()); );
          return '/*' + Ud(t, Dd - 1) + '*' + gd(47 === e ? e : Fd());
        }
        function Yd(e) {
          for (; !zd(Nd()); ) Fd();
          return Ud(e, Dd);
        }
        function Xd(e) {
          return Vd($d('', null, null, null, [''], (e = Hd(e)), 0, [0], e));
        }
        function $d(e, t, n, r, i, a, o, s, l) {
          for (var u = 0, c = 0, d = o, f = 0, h = 0, p = 0, v = 1, m = 1, g = 1, y = 0, _ = '', b = i, E = a, S = r, k = _; m; )
            switch (((p = y), (y = Fd()))) {
              case 40:
                if (108 != p && 58 == Ed(k, d - 1)) {
                  -1 != bd((k += _d(Gd(y), '&', '&\f')), '&\f') && (g = -1);
                  break;
                }
              case 34:
              case 39:
              case 91:
                k += Gd(y);
                break;
              case 9:
              case 10:
              case 13:
              case 32:
                k += jd(p);
                break;
              case 92:
                k += Kd(Bd() - 1, 7);
                continue;
              case 47:
                switch (Nd()) {
                  case 42:
                  case 47:
                    wd(Zd(qd(Fd(), Bd()), t, n), l);
                    break;
                  default:
                    k += '/';
                }
                break;
              case 123 * v:
                s[u++] = kd(k) * g;
              case 125 * v:
              case 59:
              case 0:
                switch (y) {
                  case 0:
                  case 125:
                    m = 0;
                  case 59 + c:
                    -1 == g && (k = _d(k, /\f/g, '')), h > 0 && kd(k) - d && wd(h > 32 ? Jd(k + ';', r, n, d - 1) : Jd(_d(k, ' ', '') + ';', r, n, d - 2), l);
                    break;
                  case 59:
                    k += ';';
                  default:
                    if ((wd((S = Qd(k, t, n, u, c, i, s, _, (b = []), (E = []), d)), a), 123 === y))
                      if (0 === c) $d(k, t, S, S, b, a, d, s, E);
                      else
                        switch (99 === f && 110 === Ed(k, 3) ? 100 : f) {
                          case 100:
                          case 108:
                          case 109:
                          case 115:
                            $d(e, S, S, r && wd(Qd(e, S, S, 0, 0, i, s, _, i, (b = []), d), E), i, E, d, s, r ? b : E);
                            break;
                          default:
                            $d(k, S, S, S, [''], E, 0, s, E);
                        }
                }
                (u = c = h = 0), (v = g = 1), (_ = k = ''), (d = o);
                break;
              case 58:
                (d = 1 + kd(k)), (h = p);
              default:
                if (v < 1)
                  if (123 == y) --v;
                  else if (125 == y && 0 == v++ && 125 == Od()) continue;
                switch (((k += gd(y)), y * v)) {
                  case 38:
                    g = c > 0 ? 1 : ((k += '\f'), -1);
                    break;
                  case 44:
                    (s[u++] = (kd(k) - 1) * g), (g = 1);
                    break;
                  case 64:
                    45 === Nd() && (k += Gd(Fd())), (f = Nd()), (c = d = kd((_ = k += Yd(Bd())))), y++;
                    break;
                  case 45:
                    45 === p && 2 == kd(k) && (v = 0);
                }
            }
          return a;
        }
        function Qd(e, t, n, r, i, a, o, s, l, u, c) {
          for (var d = i - 1, f = 0 === i ? a : [''], h = Td(f), p = 0, v = 0, m = 0; p < r; ++p)
            for (var g = 0, y = Sd(e, d + 1, (d = md((v = o[p])))), _ = e; g < h; ++g) (_ = yd(v > 0 ? f[g] + ' ' + y : _d(y, /&\f/g, f[g]))) && (l[m++] = _);
          return Pd(e, t, n, 0 === i ? pd : s, l, u, c);
        }
        function Zd(e, t, n) {
          return Pd(e, t, n, hd, gd(Id), Sd(e, 2, -2), 0);
        }
        function Jd(e, t, n, r) {
          return Pd(e, t, n, vd, Sd(e, 0, r), Sd(e, r + 1, -1), r);
        }
        var ef = fs(),
          tf = '_multi_value_';
        function nf(e) {
          return Ad(Xd(e), Ld).replace(/\{%%%\:[^;];}/g, ';');
        }
        function rf(e) {
          return 'object' === ns(e) && e && ('_skip_check_' in e || tf in e);
        }
        function af(e, t, n) {
          if (!t) return e;
          var r = '.'.concat(t),
            i = 'low' === n ? ':where('.concat(r, ')') : r;
          return e
            .split(',')
            .map(function (e) {
              var t,
                n = e.trim().split(/\s+/),
                r = n[0] || '',
                a = (null === (t = r.match(/^\w+/)) || void 0 === t ? void 0 : t[0]) || '';
              return [(r = ''.concat(a).concat(i).concat(r.slice(a.length)))].concat(Ls(n.slice(1))).join(' ');
            })
            .join(',');
        }
        var of = function e(t) {
          var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : { root: !0, parentSelectors: [] },
            i = r.root,
            a = r.injectHash,
            o = r.parentSelectors,
            s = n.hashId,
            l = n.layer,
            u = (n.path, n.hashPriority),
            c = n.transformers,
            d = void 0 === c ? [] : c,
            f = (n.linters, ''),
            h = {};
          function p(t) {
            var r = t.getName(s);
            if (!h[r]) {
              var i = cs(e(t.style, n, { root: !1, parentSelectors: o }), 1)[0];
              h[r] = '@keyframes '.concat(t.getName(s)).concat(i);
            }
          }
          function v(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            return (
              e.forEach(function (e) {
                Array.isArray(e) ? v(e, t) : e && t.push(e);
              }),
              t
            );
          }
          var m = v(Array.isArray(t) ? t : [t]);
          if (
            (m.forEach(function (t) {
              var r = 'string' != typeof t || i ? t : {};
              if ('string' == typeof r) f += ''.concat(r, '\n');
              else if (r._keyframe) p(r);
              else {
                var l = d.reduce(function (e, t) {
                  var n;
                  return (null == t || null === (n = t.visit) || void 0 === n ? void 0 : n.call(t, e)) || e;
                }, r);
                Object.keys(l).forEach(function (t) {
                  var r = l[t];
                  if ('object' !== ns(r) || !r || ('animationName' === t && r._keyframe) || rf(r)) {
                    var c;
                    function E(e, t) {
                      var n = e.replace(/[A-Z]/g, function (e) {
                          return '-'.concat(e.toLowerCase());
                        }),
                        r = t;
                      fd[e] || 'number' != typeof r || 0 === r || (r = ''.concat(r, 'px')),
                        'animationName' === e && null != t && t._keyframe && (p(t), (r = t.getName(s))),
                        (f += ''.concat(n, ':').concat(r, ';'));
                    }
                    var d = null !== (c = null == r ? void 0 : r.value) && void 0 !== c ? c : r;
                    'object' === ns(r) && null != r && r[tf] && Array.isArray(d)
                      ? d.forEach(function (e) {
                          E(t, e);
                        })
                      : E(t, d);
                  } else {
                    var v = !1,
                      m = t.trim(),
                      g = !1;
                    (i || a) && s ? (m.startsWith('@') ? (v = !0) : (m = af(t, s, u))) : !i || s || ('&' !== m && '' !== m) || ((m = ''), (g = !0));
                    var y = cs(e(r, n, { root: g, injectHash: v, parentSelectors: [].concat(Ls(o), [m]) }), 2),
                      _ = y[0],
                      b = y[1];
                    (h = os(os({}, h), b)), (f += ''.concat(m).concat(_));
                  }
                });
              }
            }),
            i)
          ) {
            if (l && id()) {
              var g = l.split(','),
                y = g[g.length - 1].trim();
              (f = '@layer '.concat(y, ' {').concat(f, '}')), g.length > 1 && (f = '@layer '.concat(l, '{%%%:%}').concat(f));
            }
          } else f = '{'.concat(f, '}');
          return [f, h];
        };
        function sf() {
          return null;
        }
        function lf(e, t) {
          var n = e.token,
            r = e.path,
            i = e.hashId,
            a = e.layer,
            o = e.nonce,
            s = d.useContext(Zc),
            l = s.autoClear,
            u = (s.mock, s.defaultCache),
            c = s.hashPriority,
            f = s.container,
            h = s.ssrInline,
            p = s.transformers,
            v = s.linters,
            m = s.cache,
            g = n._tokenKey,
            y = [g].concat(Ls(r)),
            _ = ef;
          var b = od(
              'style',
              y,
              function () {
                var e = t(),
                  n = cs(of(e, { hashId: i, hashPriority: c, layer: a, path: r.join('-'), transformers: p, linters: v }), 2),
                  s = n[0],
                  l = n[1],
                  u = nf(s),
                  d = (function (e, t) {
                    return jc(''.concat(e.join('%')).concat(t));
                  })(y, u);
                if (_) {
                  var h = { mark: Yc, prepend: 'queue', attachTo: f },
                    b = 'function' == typeof o ? o() : o;
                  b && (h.csp = { nonce: b });
                  var E = Ks(u, d, h);
                  (E[Xc] = m.instanceId),
                    E.setAttribute(qc, g),
                    Object.keys(l).forEach(function (e) {
                      Ks(nf(l[e]), '_effect-'.concat(e), h);
                    });
                }
                return [u, g, d];
              },
              function (e, t) {
                var n = cs(e, 3)[2];
                (t || l) && ef && Gs(n, { mark: Yc });
              },
            ),
            E = cs(b, 3),
            S = E[0],
            k = E[1],
            T = E[2];
          return function (e) {
            var t, n;
            h && !_ && u ? (t = d.createElement('style', ts({}, (is((n = {}), qc, k), is(n, Yc, T), n), { dangerouslySetInnerHTML: { __html: S } }))) : (t = d.createElement(sf, null));
            return d.createElement(d.Fragment, null, t, e);
          };
        }
        var uf = (function () {
            function e(t, n) {
              Ll(this, e), is(this, 'name', void 0), is(this, 'style', void 0), is(this, '_keyframe', !0), (this.name = t), (this.style = n);
            }
            return (
              Cl(e, [
                {
                  key: 'getName',
                  value: function () {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '';
                    return e ? ''.concat(e, '-').concat(this.name) : this.name;
                  },
                },
              ]),
              e
            );
          })(),
          cf = uf;
        var df = (function () {
          function e() {
            Ll(this, e), is(this, 'cache', void 0), is(this, 'keys', void 0), is(this, 'cacheCallTimes', void 0), (this.cache = new Map()), (this.keys = []), (this.cacheCallTimes = 0);
          }
          return (
            Cl(e, [
              {
                key: 'size',
                value: function () {
                  return this.keys.length;
                },
              },
              {
                key: 'internalGet',
                value: function (e) {
                  var t,
                    n,
                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = { map: this.cache };
                  return (
                    e.forEach(function (e) {
                      var t, n;
                      i ? (i = null === (t = i) || void 0 === t || null === (n = t.map) || void 0 === n ? void 0 : n.get(e)) : (i = void 0);
                    }),
                    null !== (t = i) && void 0 !== t && t.value && r && (i.value[1] = this.cacheCallTimes++),
                    null === (n = i) || void 0 === n ? void 0 : n.value
                  );
                },
              },
              {
                key: 'get',
                value: function (e) {
                  var t;
                  return null === (t = this.internalGet(e, !0)) || void 0 === t ? void 0 : t[0];
                },
              },
              {
                key: 'has',
                value: function (e) {
                  return !!this.internalGet(e);
                },
              },
              {
                key: 'set',
                value: function (t, n) {
                  var r = this;
                  if (!this.has(t)) {
                    if (this.size() + 1 > e.MAX_CACHE_SIZE + e.MAX_CACHE_OFFSET) {
                      var i = this.keys.reduce(
                          function (e, t) {
                            var n = cs(e, 2)[1];
                            return r.internalGet(t)[1] < n ? [t, r.internalGet(t)[1]] : e;
                          },
                          [this.keys[0], this.cacheCallTimes],
                        ),
                        a = cs(i, 1)[0];
                      this.delete(a);
                    }
                    this.keys.push(t);
                  }
                  var o = this.cache;
                  t.forEach(function (e, i) {
                    if (i === t.length - 1) o.set(e, { value: [n, r.cacheCallTimes++] });
                    else {
                      var a = o.get(e);
                      a ? a.map || (a.map = new Map()) : o.set(e, { map: new Map() }), (o = o.get(e).map);
                    }
                  });
                },
              },
              {
                key: 'deleteByPath',
                value: function (e, t) {
                  var n,
                    r = e.get(t[0]);
                  if (1 === t.length) return r.map ? e.set(t[0], { map: r.map }) : e.delete(t[0]), null === (n = r.value) || void 0 === n ? void 0 : n[0];
                  var i = this.deleteByPath(r.map, t.slice(1));
                  return (r.map && 0 !== r.map.size) || r.value || e.delete(t[0]), i;
                },
              },
              {
                key: 'delete',
                value: function (e) {
                  if (this.has(e))
                    return (
                      (this.keys = this.keys.filter(function (t) {
                        return !(function (e, t) {
                          if (e.length !== t.length) return !1;
                          for (var n = 0; n < e.length; n++) if (e[n] !== t[n]) return !1;
                          return !0;
                        })(t, e);
                      })),
                      this.deleteByPath(this.cache, e)
                    );
                },
              },
            ]),
            e
          );
        })();
        is(df, 'MAX_CACHE_SIZE', 20), is(df, 'MAX_CACHE_OFFSET', 5);
        var ff = 0,
          hf = (function () {
            function e(t) {
              Ll(this, e), is(this, 'derivatives', void 0), is(this, 'id', void 0), (this.derivatives = Array.isArray(t) ? t : [t]), (this.id = ff), 0 === t.length && t.length, (ff += 1);
            }
            return (
              Cl(e, [
                {
                  key: 'getDerivativeToken',
                  value: function (e) {
                    return this.derivatives.reduce(function (t, n) {
                      return n(e, t);
                    }, void 0);
                  },
                },
              ]),
              e
            );
          })(),
          pf = new df();
        function vf(e) {
          var t = Array.isArray(e) ? e : [e];
          return pf.has(t) || pf.set(t, new hf(t)), pf.get(t);
        }
        function mf(e) {
          return (e.notSplit = !0), e;
        }
        mf(['borderTop', 'borderBottom']), mf(['borderTop']), mf(['borderBottom']), mf(['borderLeft', 'borderRight']), mf(['borderLeft']), mf(['borderRight']);
        function gf(e, t) {
          (function (e) {
            return 'string' == typeof e && -1 !== e.indexOf('.') && 1 === parseFloat(e);
          })(e) && (e = '100%');
          var n = (function (e) {
            return 'string' == typeof e && -1 !== e.indexOf('%');
          })(e);
          return (
            (e = 360 === t ? e : Math.min(t, Math.max(0, parseFloat(e)))),
            n && (e = parseInt(String(e * t), 10) / 100),
            Math.abs(e - t) < 1e-6 ? 1 : (e = 360 === t ? (e < 0 ? (e % t) + t : e % t) / parseFloat(String(t)) : (e % t) / parseFloat(String(t)))
          );
        }
        function yf(e) {
          return Math.min(1, Math.max(0, e));
        }
        function _f(e) {
          return (e = parseFloat(e)), (isNaN(e) || e < 0 || e > 1) && (e = 1), e;
        }
        function bf(e) {
          return e <= 1 ? ''.concat(100 * Number(e), '%') : e;
        }
        function Ef(e) {
          return 1 === e.length ? '0' + e : String(e);
        }
        function Sf(e, t, n) {
          (e = gf(e, 255)), (t = gf(t, 255)), (n = gf(n, 255));
          var r = Math.max(e, t, n),
            i = Math.min(e, t, n),
            a = 0,
            o = 0,
            s = (r + i) / 2;
          if (r === i) (o = 0), (a = 0);
          else {
            var l = r - i;
            switch (((o = s > 0.5 ? l / (2 - r - i) : l / (r + i)), r)) {
              case e:
                a = (t - n) / l + (t < n ? 6 : 0);
                break;
              case t:
                a = (n - e) / l + 2;
                break;
              case n:
                a = (e - t) / l + 4;
            }
            a /= 6;
          }
          return { h: a, s: o, l: s };
        }
        function kf(e, t, n) {
          return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * n * (t - e) : n < 0.5 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e;
        }
        function Tf(e, t, n) {
          (e = gf(e, 255)), (t = gf(t, 255)), (n = gf(n, 255));
          var r = Math.max(e, t, n),
            i = Math.min(e, t, n),
            a = 0,
            o = r,
            s = r - i,
            l = 0 === r ? 0 : s / r;
          if (r === i) a = 0;
          else {
            switch (r) {
              case e:
                a = (t - n) / s + (t < n ? 6 : 0);
                break;
              case t:
                a = (n - e) / s + 2;
                break;
              case n:
                a = (e - t) / s + 4;
            }
            a /= 6;
          }
          return { h: a, s: l, v: o };
        }
        function wf(e, t, n, r) {
          var i = [Ef(Math.round(e).toString(16)), Ef(Math.round(t).toString(16)), Ef(Math.round(n).toString(16))];
          return r && i[0].startsWith(i[0].charAt(1)) && i[1].startsWith(i[1].charAt(1)) && i[2].startsWith(i[2].charAt(1)) ? i[0].charAt(0) + i[1].charAt(0) + i[2].charAt(0) : i.join('');
        }
        function Af(e) {
          return Math.round(255 * parseFloat(e)).toString(16);
        }
        function Lf(e) {
          return Rf(e) / 255;
        }
        function Rf(e) {
          return parseInt(e, 16);
        }
        var Cf = {
          aliceblue: '#f0f8ff',
          antiquewhite: '#faebd7',
          aqua: '#00ffff',
          aquamarine: '#7fffd4',
          azure: '#f0ffff',
          beige: '#f5f5dc',
          bisque: '#ffe4c4',
          black: '#000000',
          blanchedalmond: '#ffebcd',
          blue: '#0000ff',
          blueviolet: '#8a2be2',
          brown: '#a52a2a',
          burlywood: '#deb887',
          cadetblue: '#5f9ea0',
          chartreuse: '#7fff00',
          chocolate: '#d2691e',
          coral: '#ff7f50',
          cornflowerblue: '#6495ed',
          cornsilk: '#fff8dc',
          crimson: '#dc143c',
          cyan: '#00ffff',
          darkblue: '#00008b',
          darkcyan: '#008b8b',
          darkgoldenrod: '#b8860b',
          darkgray: '#a9a9a9',
          darkgreen: '#006400',
          darkgrey: '#a9a9a9',
          darkkhaki: '#bdb76b',
          darkmagenta: '#8b008b',
          darkolivegreen: '#556b2f',
          darkorange: '#ff8c00',
          darkorchid: '#9932cc',
          darkred: '#8b0000',
          darksalmon: '#e9967a',
          darkseagreen: '#8fbc8f',
          darkslateblue: '#483d8b',
          darkslategray: '#2f4f4f',
          darkslategrey: '#2f4f4f',
          darkturquoise: '#00ced1',
          darkviolet: '#9400d3',
          deeppink: '#ff1493',
          deepskyblue: '#00bfff',
          dimgray: '#696969',
          dimgrey: '#696969',
          dodgerblue: '#1e90ff',
          firebrick: '#b22222',
          floralwhite: '#fffaf0',
          forestgreen: '#228b22',
          fuchsia: '#ff00ff',
          gainsboro: '#dcdcdc',
          ghostwhite: '#f8f8ff',
          goldenrod: '#daa520',
          gold: '#ffd700',
          gray: '#808080',
          green: '#008000',
          greenyellow: '#adff2f',
          grey: '#808080',
          honeydew: '#f0fff0',
          hotpink: '#ff69b4',
          indianred: '#cd5c5c',
          indigo: '#4b0082',
          ivory: '#fffff0',
          khaki: '#f0e68c',
          lavenderblush: '#fff0f5',
          lavender: '#e6e6fa',
          lawngreen: '#7cfc00',
          lemonchiffon: '#fffacd',
          lightblue: '#add8e6',
          lightcoral: '#f08080',
          lightcyan: '#e0ffff',
          lightgoldenrodyellow: '#fafad2',
          lightgray: '#d3d3d3',
          lightgreen: '#90ee90',
          lightgrey: '#d3d3d3',
          lightpink: '#ffb6c1',
          lightsalmon: '#ffa07a',
          lightseagreen: '#20b2aa',
          lightskyblue: '#87cefa',
          lightslategray: '#778899',
          lightslategrey: '#778899',
          lightsteelblue: '#b0c4de',
          lightyellow: '#ffffe0',
          lime: '#00ff00',
          limegreen: '#32cd32',
          linen: '#faf0e6',
          magenta: '#ff00ff',
          maroon: '#800000',
          mediumaquamarine: '#66cdaa',
          mediumblue: '#0000cd',
          mediumorchid: '#ba55d3',
          mediumpurple: '#9370db',
          mediumseagreen: '#3cb371',
          mediumslateblue: '#7b68ee',
          mediumspringgreen: '#00fa9a',
          mediumturquoise: '#48d1cc',
          mediumvioletred: '#c71585',
          midnightblue: '#191970',
          mintcream: '#f5fffa',
          mistyrose: '#ffe4e1',
          moccasin: '#ffe4b5',
          navajowhite: '#ffdead',
          navy: '#000080',
          oldlace: '#fdf5e6',
          olive: '#808000',
          olivedrab: '#6b8e23',
          orange: '#ffa500',
          orangered: '#ff4500',
          orchid: '#da70d6',
          palegoldenrod: '#eee8aa',
          palegreen: '#98fb98',
          paleturquoise: '#afeeee',
          palevioletred: '#db7093',
          papayawhip: '#ffefd5',
          peachpuff: '#ffdab9',
          peru: '#cd853f',
          pink: '#ffc0cb',
          plum: '#dda0dd',
          powderblue: '#b0e0e6',
          purple: '#800080',
          rebeccapurple: '#663399',
          red: '#ff0000',
          rosybrown: '#bc8f8f',
          royalblue: '#4169e1',
          saddlebrown: '#8b4513',
          salmon: '#fa8072',
          sandybrown: '#f4a460',
          seagreen: '#2e8b57',
          seashell: '#fff5ee',
          sienna: '#a0522d',
          silver: '#c0c0c0',
          skyblue: '#87ceeb',
          slateblue: '#6a5acd',
          slategray: '#708090',
          slategrey: '#708090',
          snow: '#fffafa',
          springgreen: '#00ff7f',
          steelblue: '#4682b4',
          tan: '#d2b48c',
          teal: '#008080',
          thistle: '#d8bfd8',
          tomato: '#ff6347',
          turquoise: '#40e0d0',
          violet: '#ee82ee',
          wheat: '#f5deb3',
          white: '#ffffff',
          whitesmoke: '#f5f5f5',
          yellow: '#ffff00',
          yellowgreen: '#9acd32',
        };
        function xf(e) {
          var t,
            n,
            r,
            i = { r: 0, g: 0, b: 0 },
            a = 1,
            o = null,
            s = null,
            l = null,
            c = !1,
            d = !1;
          return (
            'string' == typeof e &&
              (e = (function (e) {
                if (((e = e.trim().toLowerCase()), 0 === e.length)) return !1;
                var t = !1;
                if (Cf[e]) (e = Cf[e]), (t = !0);
                else if ('transparent' === e) return { r: 0, g: 0, b: 0, a: 0, format: 'name' };
                var n = Pf.rgb.exec(e);
                if (n) return { r: n[1], g: n[2], b: n[3] };
                if (((n = Pf.rgba.exec(e)), n)) return { r: n[1], g: n[2], b: n[3], a: n[4] };
                if (((n = Pf.hsl.exec(e)), n)) return { h: n[1], s: n[2], l: n[3] };
                if (((n = Pf.hsla.exec(e)), n)) return { h: n[1], s: n[2], l: n[3], a: n[4] };
                if (((n = Pf.hsv.exec(e)), n)) return { h: n[1], s: n[2], v: n[3] };
                if (((n = Pf.hsva.exec(e)), n)) return { h: n[1], s: n[2], v: n[3], a: n[4] };
                if (((n = Pf.hex8.exec(e)), n)) return { r: Rf(n[1]), g: Rf(n[2]), b: Rf(n[3]), a: Lf(n[4]), format: t ? 'name' : 'hex8' };
                if (((n = Pf.hex6.exec(e)), n)) return { r: Rf(n[1]), g: Rf(n[2]), b: Rf(n[3]), format: t ? 'name' : 'hex' };
                if (((n = Pf.hex4.exec(e)), n)) return { r: Rf(n[1] + n[1]), g: Rf(n[2] + n[2]), b: Rf(n[3] + n[3]), a: Lf(n[4] + n[4]), format: t ? 'name' : 'hex8' };
                if (((n = Pf.hex3.exec(e)), n)) return { r: Rf(n[1] + n[1]), g: Rf(n[2] + n[2]), b: Rf(n[3] + n[3]), format: t ? 'name' : 'hex' };
                return !1;
              })(e)),
            'object' === u()(e) &&
              (Of(e.r) && Of(e.g) && Of(e.b)
                ? ((t = e.r), (n = e.g), (r = e.b), (i = { r: 255 * gf(t, 255), g: 255 * gf(n, 255), b: 255 * gf(r, 255) }), (c = !0), (d = '%' === String(e.r).substr(-1) ? 'prgb' : 'rgb'))
                : Of(e.h) && Of(e.s) && Of(e.v)
                ? ((o = bf(e.s)),
                  (s = bf(e.v)),
                  (i = (function (e, t, n) {
                    (e = 6 * gf(e, 360)), (t = gf(t, 100)), (n = gf(n, 100));
                    var r = Math.floor(e),
                      i = e - r,
                      a = n * (1 - t),
                      o = n * (1 - i * t),
                      s = n * (1 - (1 - i) * t),
                      l = r % 6;
                    return { r: 255 * [n, o, a, a, s, n][l], g: 255 * [s, n, n, o, a, a][l], b: 255 * [a, a, s, n, n, o][l] };
                  })(e.h, o, s)),
                  (c = !0),
                  (d = 'hsv'))
                : Of(e.h) &&
                  Of(e.s) &&
                  Of(e.l) &&
                  ((o = bf(e.s)),
                  (l = bf(e.l)),
                  (i = (function (e, t, n) {
                    var r, i, a;
                    if (((e = gf(e, 360)), (t = gf(t, 100)), (n = gf(n, 100)), 0 === t)) (i = n), (a = n), (r = n);
                    else {
                      var o = n < 0.5 ? n * (1 + t) : n + t - n * t,
                        s = 2 * n - o;
                      (r = kf(s, o, e + 1 / 3)), (i = kf(s, o, e)), (a = kf(s, o, e - 1 / 3));
                    }
                    return { r: 255 * r, g: 255 * i, b: 255 * a };
                  })(e.h, o, l)),
                  (c = !0),
                  (d = 'hsl')),
              Object.prototype.hasOwnProperty.call(e, 'a') && (a = e.a)),
            (a = _f(a)),
            { ok: c, format: e.format || d, r: Math.min(255, Math.max(i.r, 0)), g: Math.min(255, Math.max(i.g, 0)), b: Math.min(255, Math.max(i.b, 0)), a: a }
          );
        }
        var Df = '(?:'.concat('[-\\+]?\\d*\\.\\d+%?', ')|(?:').concat('[-\\+]?\\d+%?', ')'),
          If = '[\\s|\\(]+('.concat(Df, ')[,|\\s]+(').concat(Df, ')[,|\\s]+(').concat(Df, ')\\s*\\)?'),
          Mf = '[\\s|\\(]+('.concat(Df, ')[,|\\s]+(').concat(Df, ')[,|\\s]+(').concat(Df, ')[,|\\s]+(').concat(Df, ')\\s*\\)?'),
          Pf = {
            CSS_UNIT: new RegExp(Df),
            rgb: new RegExp('rgb' + If),
            rgba: new RegExp('rgba' + Mf),
            hsl: new RegExp('hsl' + If),
            hsla: new RegExp('hsla' + Mf),
            hsv: new RegExp('hsv' + If),
            hsva: new RegExp('hsva' + Mf),
            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
            hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
          };
        function Of(e) {
          return Boolean(Pf.CSS_UNIT.exec(String(e)));
        }
        var Ff = [
          { index: 7, opacity: 0.15 },
          { index: 6, opacity: 0.25 },
          { index: 5, opacity: 0.3 },
          { index: 5, opacity: 0.45 },
          { index: 5, opacity: 0.65 },
          { index: 5, opacity: 0.85 },
          { index: 4, opacity: 0.9 },
          { index: 3, opacity: 0.95 },
          { index: 2, opacity: 0.97 },
          { index: 1, opacity: 0.98 },
        ];
        function Nf(e) {
          var t = Tf(e.r, e.g, e.b);
          return { h: 360 * t.h, s: t.s, v: t.v };
        }
        function Bf(e) {
          var t = e.r,
            n = e.g,
            r = e.b;
          return '#'.concat(wf(t, n, r, !1));
        }
        function Uf(e, t, n) {
          var r = n / 100;
          return { r: (t.r - e.r) * r + e.r, g: (t.g - e.g) * r + e.g, b: (t.b - e.b) * r + e.b };
        }
        function zf(e, t, n) {
          var r;
          return (
            (r = Math.round(e.h) >= 60 && Math.round(e.h) <= 240 ? (n ? Math.round(e.h) - 2 * t : Math.round(e.h) + 2 * t) : n ? Math.round(e.h) + 2 * t : Math.round(e.h) - 2 * t) < 0
              ? (r += 360)
              : r >= 360 && (r -= 360),
            r
          );
        }
        function Hf(e, t, n) {
          return 0 === e.h && 0 === e.s
            ? e.s
            : ((r = n ? e.s - 0.16 * t : 4 === t ? e.s + 0.16 : e.s + 0.05 * t) > 1 && (r = 1), n && 5 === t && r > 0.1 && (r = 0.1), r < 0.06 && (r = 0.06), Number(r.toFixed(2)));
          var r;
        }
        function Vf(e, t, n) {
          var r;
          return (r = n ? e.v + 0.05 * t : e.v - 0.15 * t) > 1 && (r = 1), Number(r.toFixed(2));
        }
        function Gf(e) {
          for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = [], r = xf(e), i = 5; i > 0; i -= 1) {
            var a = Nf(r),
              o = Bf(xf({ h: zf(a, i, !0), s: Hf(a, i, !0), v: Vf(a, i, !0) }));
            n.push(o);
          }
          n.push(Bf(r));
          for (var s = 1; s <= 4; s += 1) {
            var l = Nf(r),
              u = Bf(xf({ h: zf(l, s), s: Hf(l, s), v: Vf(l, s) }));
            n.push(u);
          }
          return 'dark' === t.theme
            ? Ff.map(function (e) {
                var r = e.index,
                  i = e.opacity;
                return Bf(Uf(xf(t.backgroundColor || '#141414'), xf(n[r]), 100 * i));
              })
            : n;
        }
        var jf = {
            red: '#F5222D',
            volcano: '#FA541C',
            orange: '#FA8C16',
            gold: '#FAAD14',
            yellow: '#FADB14',
            lime: '#A0D911',
            green: '#52C41A',
            cyan: '#13C2C2',
            blue: '#1677FF',
            geekblue: '#2F54EB',
            purple: '#722ED1',
            magenta: '#EB2F96',
            grey: '#666666',
          },
          Kf = {},
          Wf = {};
        Object.keys(jf).forEach(function (e) {
          (Kf[e] = Gf(jf[e])), (Kf[e].primary = Kf[e][5]), (Wf[e] = Gf(jf[e], { theme: 'dark', backgroundColor: '#141414' })), (Wf[e].primary = Wf[e][5]);
        });
        Kf.red, Kf.volcano, Kf.gold, Kf.orange, Kf.yellow, Kf.lime, Kf.green, Kf.cyan, Kf.blue, Kf.geekblue, Kf.purple, Kf.magenta, Kf.grey, Kf.grey;
        var qf = function (e) {
          var t = e.controlHeight;
          return { controlHeightSM: 0.75 * t, controlHeightXS: 0.5 * t, controlHeightLG: 1.25 * t };
        };
        var Yf = {
            blue: '#1677ff',
            purple: '#722ED1',
            cyan: '#13C2C2',
            green: '#52C41A',
            magenta: '#EB2F96',
            pink: '#eb2f96',
            red: '#F5222D',
            orange: '#FA8C16',
            yellow: '#FADB14',
            volcano: '#FA541C',
            geekblue: '#2F54EB',
            gold: '#FAAD14',
            lime: '#A0D911',
          },
          Xf = Object.assign(Object.assign({}, Yf), {
            colorPrimary: '#1677ff',
            colorSuccess: '#52c41a',
            colorWarning: '#faad14',
            colorError: '#ff4d4f',
            colorInfo: '#1677ff',
            colorTextBase: '',
            colorBgBase: '',
            fontFamily:
              "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n'Noto Color Emoji'",
            fontFamilyCode: "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace",
            fontSize: 14,
            lineWidth: 1,
            lineType: 'solid',
            motionUnit: 0.1,
            motionBase: 0,
            motionEaseOutCirc: 'cubic-bezier(0.08, 0.82, 0.17, 1)',
            motionEaseInOutCirc: 'cubic-bezier(0.78, 0.14, 0.15, 0.86)',
            motionEaseOut: 'cubic-bezier(0.215, 0.61, 0.355, 1)',
            motionEaseInOut: 'cubic-bezier(0.645, 0.045, 0.355, 1)',
            motionEaseOutBack: 'cubic-bezier(0.12, 0.4, 0.29, 1.46)',
            motionEaseInBack: 'cubic-bezier(0.71, -0.46, 0.88, 0.6)',
            motionEaseInQuint: 'cubic-bezier(0.755, 0.05, 0.855, 0.06)',
            motionEaseOutQuint: 'cubic-bezier(0.23, 1, 0.32, 1)',
            borderRadius: 6,
            sizeUnit: 4,
            sizeStep: 4,
            sizePopupArrow: 16,
            controlHeight: 32,
            zIndexBase: 0,
            zIndexPopupBase: 1e3,
            opacityImage: 1,
            wireframe: !1,
            motion: !0,
          }),
          $f = (function () {
            function e(t, n) {
              var r;
              if ((void 0 === t && (t = ''), void 0 === n && (n = {}), t instanceof e)) return t;
              'number' == typeof t &&
                (t = (function (e) {
                  return { r: e >> 16, g: (65280 & e) >> 8, b: 255 & e };
                })(t)),
                (this.originalInput = t);
              var i = xf(t);
              (this.originalInput = t),
                (this.r = i.r),
                (this.g = i.g),
                (this.b = i.b),
                (this.a = i.a),
                (this.roundA = Math.round(100 * this.a) / 100),
                (this.format = null !== (r = n.format) && void 0 !== r ? r : i.format),
                (this.gradientType = n.gradientType),
                this.r < 1 && (this.r = Math.round(this.r)),
                this.g < 1 && (this.g = Math.round(this.g)),
                this.b < 1 && (this.b = Math.round(this.b)),
                (this.isValid = i.ok);
            }
            return (
              (e.prototype.isDark = function () {
                return this.getBrightness() < 128;
              }),
              (e.prototype.isLight = function () {
                return !this.isDark();
              }),
              (e.prototype.getBrightness = function () {
                var e = this.toRgb();
                return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3;
              }),
              (e.prototype.getLuminance = function () {
                var e = this.toRgb(),
                  t = e.r / 255,
                  n = e.g / 255,
                  r = e.b / 255;
                return (
                  0.2126 * (t <= 0.03928 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4)) +
                  0.7152 * (n <= 0.03928 ? n / 12.92 : Math.pow((n + 0.055) / 1.055, 2.4)) +
                  0.0722 * (r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4))
                );
              }),
              (e.prototype.getAlpha = function () {
                return this.a;
              }),
              (e.prototype.setAlpha = function (e) {
                return (this.a = _f(e)), (this.roundA = Math.round(100 * this.a) / 100), this;
              }),
              (e.prototype.isMonochrome = function () {
                return 0 === this.toHsl().s;
              }),
              (e.prototype.toHsv = function () {
                var e = Tf(this.r, this.g, this.b);
                return { h: 360 * e.h, s: e.s, v: e.v, a: this.a };
              }),
              (e.prototype.toHsvString = function () {
                var e = Tf(this.r, this.g, this.b),
                  t = Math.round(360 * e.h),
                  n = Math.round(100 * e.s),
                  r = Math.round(100 * e.v);
                return 1 === this.a ? 'hsv('.concat(t, ', ').concat(n, '%, ').concat(r, '%)') : 'hsva('.concat(t, ', ').concat(n, '%, ').concat(r, '%, ').concat(this.roundA, ')');
              }),
              (e.prototype.toHsl = function () {
                var e = Sf(this.r, this.g, this.b);
                return { h: 360 * e.h, s: e.s, l: e.l, a: this.a };
              }),
              (e.prototype.toHslString = function () {
                var e = Sf(this.r, this.g, this.b),
                  t = Math.round(360 * e.h),
                  n = Math.round(100 * e.s),
                  r = Math.round(100 * e.l);
                return 1 === this.a ? 'hsl('.concat(t, ', ').concat(n, '%, ').concat(r, '%)') : 'hsla('.concat(t, ', ').concat(n, '%, ').concat(r, '%, ').concat(this.roundA, ')');
              }),
              (e.prototype.toHex = function (e) {
                return void 0 === e && (e = !1), wf(this.r, this.g, this.b, e);
              }),
              (e.prototype.toHexString = function (e) {
                return void 0 === e && (e = !1), '#' + this.toHex(e);
              }),
              (e.prototype.toHex8 = function (e) {
                return (
                  void 0 === e && (e = !1),
                  (function (e, t, n, r, i) {
                    var a = [Ef(Math.round(e).toString(16)), Ef(Math.round(t).toString(16)), Ef(Math.round(n).toString(16)), Ef(Af(r))];
                    return i && a[0].startsWith(a[0].charAt(1)) && a[1].startsWith(a[1].charAt(1)) && a[2].startsWith(a[2].charAt(1)) && a[3].startsWith(a[3].charAt(1))
                      ? a[0].charAt(0) + a[1].charAt(0) + a[2].charAt(0) + a[3].charAt(0)
                      : a.join('');
                  })(this.r, this.g, this.b, this.a, e)
                );
              }),
              (e.prototype.toHex8String = function (e) {
                return void 0 === e && (e = !1), '#' + this.toHex8(e);
              }),
              (e.prototype.toHexShortString = function (e) {
                return void 0 === e && (e = !1), 1 === this.a ? this.toHexString(e) : this.toHex8String(e);
              }),
              (e.prototype.toRgb = function () {
                return { r: Math.round(this.r), g: Math.round(this.g), b: Math.round(this.b), a: this.a };
              }),
              (e.prototype.toRgbString = function () {
                var e = Math.round(this.r),
                  t = Math.round(this.g),
                  n = Math.round(this.b);
                return 1 === this.a ? 'rgb('.concat(e, ', ').concat(t, ', ').concat(n, ')') : 'rgba('.concat(e, ', ').concat(t, ', ').concat(n, ', ').concat(this.roundA, ')');
              }),
              (e.prototype.toPercentageRgb = function () {
                var e = function (e) {
                  return ''.concat(Math.round(100 * gf(e, 255)), '%');
                };
                return { r: e(this.r), g: e(this.g), b: e(this.b), a: this.a };
              }),
              (e.prototype.toPercentageRgbString = function () {
                var e = function (e) {
                  return Math.round(100 * gf(e, 255));
                };
                return 1 === this.a
                  ? 'rgb('.concat(e(this.r), '%, ').concat(e(this.g), '%, ').concat(e(this.b), '%)')
                  : 'rgba('.concat(e(this.r), '%, ').concat(e(this.g), '%, ').concat(e(this.b), '%, ').concat(this.roundA, ')');
              }),
              (e.prototype.toName = function () {
                if (0 === this.a) return 'transparent';
                if (this.a < 1) return !1;
                for (var e = '#' + wf(this.r, this.g, this.b, !1), t = 0, n = Object.entries(Cf); t < n.length; t++) {
                  var r = n[t],
                    i = r[0];
                  if (e === r[1]) return i;
                }
                return !1;
              }),
              (e.prototype.toString = function (e) {
                var t = Boolean(e);
                e = null != e ? e : this.format;
                var n = !1,
                  r = this.a < 1 && this.a >= 0;
                return t || !r || (!e.startsWith('hex') && 'name' !== e)
                  ? ('rgb' === e && (n = this.toRgbString()),
                    'prgb' === e && (n = this.toPercentageRgbString()),
                    ('hex' !== e && 'hex6' !== e) || (n = this.toHexString()),
                    'hex3' === e && (n = this.toHexString(!0)),
                    'hex4' === e && (n = this.toHex8String(!0)),
                    'hex8' === e && (n = this.toHex8String()),
                    'name' === e && (n = this.toName()),
                    'hsl' === e && (n = this.toHslString()),
                    'hsv' === e && (n = this.toHsvString()),
                    n || this.toHexString())
                  : 'name' === e && 0 === this.a
                  ? this.toName()
                  : this.toRgbString();
              }),
              (e.prototype.toNumber = function () {
                return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);
              }),
              (e.prototype.clone = function () {
                return new e(this.toString());
              }),
              (e.prototype.lighten = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.l += t / 100), (n.l = yf(n.l)), new e(n);
              }),
              (e.prototype.brighten = function (t) {
                void 0 === t && (t = 10);
                var n = this.toRgb();
                return (
                  (n.r = Math.max(0, Math.min(255, n.r - Math.round((-t / 100) * 255)))),
                  (n.g = Math.max(0, Math.min(255, n.g - Math.round((-t / 100) * 255)))),
                  (n.b = Math.max(0, Math.min(255, n.b - Math.round((-t / 100) * 255)))),
                  new e(n)
                );
              }),
              (e.prototype.darken = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.l -= t / 100), (n.l = yf(n.l)), new e(n);
              }),
              (e.prototype.tint = function (e) {
                return void 0 === e && (e = 10), this.mix('white', e);
              }),
              (e.prototype.shade = function (e) {
                return void 0 === e && (e = 10), this.mix('black', e);
              }),
              (e.prototype.desaturate = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.s -= t / 100), (n.s = yf(n.s)), new e(n);
              }),
              (e.prototype.saturate = function (t) {
                void 0 === t && (t = 10);
                var n = this.toHsl();
                return (n.s += t / 100), (n.s = yf(n.s)), new e(n);
              }),
              (e.prototype.greyscale = function () {
                return this.desaturate(100);
              }),
              (e.prototype.spin = function (t) {
                var n = this.toHsl(),
                  r = (n.h + t) % 360;
                return (n.h = r < 0 ? 360 + r : r), new e(n);
              }),
              (e.prototype.mix = function (t, n) {
                void 0 === n && (n = 50);
                var r = this.toRgb(),
                  i = new e(t).toRgb(),
                  a = n / 100;
                return new e({ r: (i.r - r.r) * a + r.r, g: (i.g - r.g) * a + r.g, b: (i.b - r.b) * a + r.b, a: (i.a - r.a) * a + r.a });
              }),
              (e.prototype.analogous = function (t, n) {
                void 0 === t && (t = 6), void 0 === n && (n = 30);
                var r = this.toHsl(),
                  i = 360 / n,
                  a = [this];
                for (r.h = (r.h - ((i * t) >> 1) + 720) % 360; --t; ) (r.h = (r.h + i) % 360), a.push(new e(r));
                return a;
              }),
              (e.prototype.complement = function () {
                var t = this.toHsl();
                return (t.h = (t.h + 180) % 360), new e(t);
              }),
              (e.prototype.monochromatic = function (t) {
                void 0 === t && (t = 6);
                for (var n = this.toHsv(), r = n.h, i = n.s, a = n.v, o = [], s = 1 / t; t--; ) o.push(new e({ h: r, s: i, v: a })), (a = (a + s) % 1);
                return o;
              }),
              (e.prototype.splitcomplement = function () {
                var t = this.toHsl(),
                  n = t.h;
                return [this, new e({ h: (n + 72) % 360, s: t.s, l: t.l }), new e({ h: (n + 216) % 360, s: t.s, l: t.l })];
              }),
              (e.prototype.onBackground = function (t) {
                var n = this.toRgb(),
                  r = new e(t).toRgb(),
                  i = n.a + r.a * (1 - n.a);
                return new e({ r: (n.r * n.a + r.r * r.a * (1 - n.a)) / i, g: (n.g * n.a + r.g * r.a * (1 - n.a)) / i, b: (n.b * n.a + r.b * r.a * (1 - n.a)) / i, a: i });
              }),
              (e.prototype.triad = function () {
                return this.polyad(3);
              }),
              (e.prototype.tetrad = function () {
                return this.polyad(4);
              }),
              (e.prototype.polyad = function (t) {
                for (var n = this.toHsl(), r = n.h, i = [this], a = 360 / t, o = 1; o < t; o++) i.push(new e({ h: (r + o * a) % 360, s: n.s, l: n.l }));
                return i;
              }),
              (e.prototype.equals = function (t) {
                return this.toRgbString() === new e(t).toRgbString();
              }),
              e
            );
          })();
        function Qf(e, t) {
          var n = t.generateColorPalettes,
            r = t.generateNeutralColorPalettes,
            i = e.colorSuccess,
            a = e.colorWarning,
            o = e.colorError,
            s = e.colorInfo,
            l = e.colorPrimary,
            u = e.colorBgBase,
            c = e.colorTextBase,
            d = n(l),
            f = n(i),
            h = n(a),
            p = n(o),
            v = n(s),
            m = r(u, c);
          return Object.assign(Object.assign({}, m), {
            colorPrimaryBg: d[1],
            colorPrimaryBgHover: d[2],
            colorPrimaryBorder: d[3],
            colorPrimaryBorderHover: d[4],
            colorPrimaryHover: d[5],
            colorPrimary: d[6],
            colorPrimaryActive: d[7],
            colorPrimaryTextHover: d[8],
            colorPrimaryText: d[9],
            colorPrimaryTextActive: d[10],
            colorSuccessBg: f[1],
            colorSuccessBgHover: f[2],
            colorSuccessBorder: f[3],
            colorSuccessBorderHover: f[4],
            colorSuccessHover: f[4],
            colorSuccess: f[6],
            colorSuccessActive: f[7],
            colorSuccessTextHover: f[8],
            colorSuccessText: f[9],
            colorSuccessTextActive: f[10],
            colorErrorBg: p[1],
            colorErrorBgHover: p[2],
            colorErrorBorder: p[3],
            colorErrorBorderHover: p[4],
            colorErrorHover: p[5],
            colorError: p[6],
            colorErrorActive: p[7],
            colorErrorTextHover: p[8],
            colorErrorText: p[9],
            colorErrorTextActive: p[10],
            colorWarningBg: h[1],
            colorWarningBgHover: h[2],
            colorWarningBorder: h[3],
            colorWarningBorderHover: h[4],
            colorWarningHover: h[4],
            colorWarning: h[6],
            colorWarningActive: h[7],
            colorWarningTextHover: h[8],
            colorWarningText: h[9],
            colorWarningTextActive: h[10],
            colorInfoBg: v[1],
            colorInfoBgHover: v[2],
            colorInfoBorder: v[3],
            colorInfoBorderHover: v[4],
            colorInfoHover: v[4],
            colorInfo: v[6],
            colorInfoActive: v[7],
            colorInfoTextHover: v[8],
            colorInfoText: v[9],
            colorInfoTextActive: v[10],
            colorBgMask: new $f('#000').setAlpha(0.45).toRgbString(),
            colorWhite: '#fff',
          });
        }
        var Zf = function (e) {
          var t = e,
            n = e,
            r = e,
            i = e;
          return (
            e < 6 && e >= 5 ? (t = e + 1) : e < 16 && e >= 6 ? (t = e + 2) : e >= 16 && (t = 16),
            e < 7 && e >= 5 ? (n = 4) : e < 8 && e >= 7 ? (n = 5) : e < 14 && e >= 8 ? (n = 6) : e < 16 && e >= 14 ? (n = 7) : e >= 16 && (n = 8),
            e < 6 && e >= 2 ? (r = 1) : e >= 6 && (r = 2),
            e > 4 && e < 8 ? (i = 4) : e >= 8 && (i = 6),
            { borderRadius: e > 16 ? 16 : e, borderRadiusXS: r, borderRadiusSM: n, borderRadiusLG: t, borderRadiusOuter: i }
          );
        };
        var Jf = function (e, t) {
            return new $f(e).setAlpha(t).toRgbString();
          },
          eh = function (e, t) {
            return new $f(e).darken(t).toHexString();
          },
          th = function (e) {
            var t = Gf(e);
            return { 1: t[0], 2: t[1], 3: t[2], 4: t[3], 5: t[4], 6: t[5], 7: t[6], 8: t[4], 9: t[5], 10: t[6] };
          },
          nh = function (e, t) {
            var n = e || '#fff',
              r = t || '#000';
            return {
              colorBgBase: n,
              colorTextBase: r,
              colorText: Jf(r, 0.88),
              colorTextSecondary: Jf(r, 0.65),
              colorTextTertiary: Jf(r, 0.45),
              colorTextQuaternary: Jf(r, 0.25),
              colorFill: Jf(r, 0.15),
              colorFillSecondary: Jf(r, 0.06),
              colorFillTertiary: Jf(r, 0.04),
              colorFillQuaternary: Jf(r, 0.02),
              colorBgLayout: eh(n, 4),
              colorBgContainer: eh(n, 0),
              colorBgElevated: eh(n, 0),
              colorBgSpotlight: Jf(r, 0.85),
              colorBorder: eh(n, 15),
              colorBorderSecondary: eh(n, 6),
            };
          };
        var rh = function (e) {
          var t = (function (e) {
              var t = new Array(10).fill(null).map(function (t, n) {
                var r = n - 1,
                  i = e * Math.pow(2.71828, r / 5),
                  a = n > 1 ? Math.floor(i) : Math.ceil(i);
                return 2 * Math.floor(a / 2);
              });
              return (
                (t[1] = e),
                t.map(function (e) {
                  return { size: e, lineHeight: (e + 8) / e };
                })
              );
            })(e),
            n = t.map(function (e) {
              return e.size;
            }),
            r = t.map(function (e) {
              return e.lineHeight;
            });
          return {
            fontSizeSM: n[0],
            fontSize: n[1],
            fontSizeLG: n[2],
            fontSizeXL: n[3],
            fontSizeHeading1: n[6],
            fontSizeHeading2: n[5],
            fontSizeHeading3: n[4],
            fontSizeHeading4: n[3],
            fontSizeHeading5: n[2],
            lineHeight: r[1],
            lineHeightLG: r[2],
            lineHeightSM: r[0],
            lineHeightHeading1: r[6],
            lineHeightHeading2: r[5],
            lineHeightHeading3: r[4],
            lineHeightHeading4: r[3],
            lineHeightHeading5: r[2],
          };
        };
        function ih(e) {
          var t = Object.keys(Yf)
            .map(function (t) {
              var n = Gf(e[t]);
              return new Array(10).fill(1).reduce(function (e, r, i) {
                return (e[''.concat(t, '-').concat(i + 1)] = n[i]), (e[''.concat(t).concat(i + 1)] = n[i]), e;
              }, {});
            })
            .reduce(function (e, t) {
              return (e = Object.assign(Object.assign({}, e), t));
            }, {});
          return Object.assign(
            Object.assign(
              Object.assign(
                Object.assign(Object.assign(Object.assign(Object.assign({}, e), t), Qf(e, { generateColorPalettes: th, generateNeutralColorPalettes: nh })), rh(e.fontSize)),
                (function (e) {
                  var t = e.sizeUnit,
                    n = e.sizeStep;
                  return {
                    sizeXXL: t * (n + 8),
                    sizeXL: t * (n + 4),
                    sizeLG: t * (n + 2),
                    sizeMD: t * (n + 1),
                    sizeMS: t * n,
                    size: t * n,
                    sizeSM: t * (n - 1),
                    sizeXS: t * (n - 2),
                    sizeXXS: t * (n - 3),
                  };
                })(e),
              ),
              qf(e),
            ),
            (function (e) {
              var t = e.motionUnit,
                n = e.motionBase,
                r = e.borderRadius,
                i = e.lineWidth;
              return Object.assign(
                {
                  motionDurationFast: ''.concat((n + t).toFixed(1), 's'),
                  motionDurationMid: ''.concat((n + 2 * t).toFixed(1), 's'),
                  motionDurationSlow: ''.concat((n + 3 * t).toFixed(1), 's'),
                  lineWidthBold: i + 1,
                },
                Zf(r),
              );
            })(e),
          );
        }
        function ah(e) {
          return e >= 0 && e <= 255;
        }
        var oh = function (e, t) {
            var n = new $f(e).toRgb(),
              r = n.r,
              i = n.g,
              a = n.b;
            if (n.a < 1) return e;
            for (var o = new $f(t).toRgb(), s = o.r, l = o.g, u = o.b, c = 0.01; c <= 1; c += 0.01) {
              var d = Math.round((r - s * (1 - c)) / c),
                f = Math.round((i - l * (1 - c)) / c),
                h = Math.round((a - u * (1 - c)) / c);
              if (ah(d) && ah(f) && ah(h)) return new $f({ r: d, g: f, b: h, a: Math.round(100 * c) / 100 }).toRgbString();
            }
            return new $f({ r: r, g: i, b: a, a: 1 }).toRgbString();
          },
          sh = function (e, t) {
            var n = {};
            for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
            if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
            }
            return n;
          };
        function lh(e) {
          var t = e.override,
            n = sh(e, ['override']),
            r = Object.assign({}, t);
          Object.keys(Xf).forEach(function (e) {
            delete r[e];
          });
          var i = Object.assign(Object.assign({}, n), r),
            a = 1200,
            o = 1600;
          if (!1 === i.motion) {
            var s = '0s';
            (i.motionDurationFast = s), (i.motionDurationMid = s), (i.motionDurationSlow = s);
          }
          return Object.assign(
            Object.assign(Object.assign({}, i), {
              colorLink: i.colorInfoText,
              colorLinkHover: i.colorInfoHover,
              colorLinkActive: i.colorInfoActive,
              colorFillContent: i.colorFillSecondary,
              colorFillContentHover: i.colorFill,
              colorFillAlter: i.colorFillQuaternary,
              colorBgContainerDisabled: i.colorFillTertiary,
              colorBorderBg: i.colorBgContainer,
              colorSplit: oh(i.colorBorderSecondary, i.colorBgContainer),
              colorTextPlaceholder: i.colorTextQuaternary,
              colorTextDisabled: i.colorTextQuaternary,
              colorTextHeading: i.colorText,
              colorTextLabel: i.colorTextSecondary,
              colorTextDescription: i.colorTextTertiary,
              colorTextLightSolid: i.colorWhite,
              colorHighlight: i.colorError,
              colorBgTextHover: i.colorFillSecondary,
              colorBgTextActive: i.colorFill,
              colorIcon: i.colorTextTertiary,
              colorIconHover: i.colorText,
              colorErrorOutline: oh(i.colorErrorBg, i.colorBgContainer),
              colorWarningOutline: oh(i.colorWarningBg, i.colorBgContainer),
              fontSizeIcon: i.fontSizeSM,
              lineWidthFocus: 4 * i.lineWidth,
              lineWidth: i.lineWidth,
              controlOutlineWidth: 2 * i.lineWidth,
              controlInteractiveSize: i.controlHeight / 2,
              controlItemBgHover: i.colorFillTertiary,
              controlItemBgActive: i.colorPrimaryBg,
              controlItemBgActiveHover: i.colorPrimaryBgHover,
              controlItemBgActiveDisabled: i.colorFill,
              controlTmpOutline: i.colorFillQuaternary,
              controlOutline: oh(i.colorPrimaryBg, i.colorBgContainer),
              lineType: i.lineType,
              borderRadius: i.borderRadius,
              borderRadiusXS: i.borderRadiusXS,
              borderRadiusSM: i.borderRadiusSM,
              borderRadiusLG: i.borderRadiusLG,
              fontWeightStrong: 600,
              opacityLoading: 0.65,
              linkDecoration: 'none',
              linkHoverDecoration: 'none',
              linkFocusDecoration: 'none',
              controlPaddingHorizontal: 12,
              controlPaddingHorizontalSM: 8,
              paddingXXS: i.sizeXXS,
              paddingXS: i.sizeXS,
              paddingSM: i.sizeSM,
              padding: i.size,
              paddingMD: i.sizeMD,
              paddingLG: i.sizeLG,
              paddingXL: i.sizeXL,
              paddingContentHorizontalLG: i.sizeLG,
              paddingContentVerticalLG: i.sizeMS,
              paddingContentHorizontal: i.sizeMS,
              paddingContentVertical: i.sizeSM,
              paddingContentHorizontalSM: i.size,
              paddingContentVerticalSM: i.sizeXS,
              marginXXS: i.sizeXXS,
              marginXS: i.sizeXS,
              marginSM: i.sizeSM,
              margin: i.size,
              marginMD: i.sizeMD,
              marginLG: i.sizeLG,
              marginXL: i.sizeXL,
              marginXXL: i.sizeXXL,
              boxShadow: '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowSecondary: '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowTertiary: '\n      0 1px 2px 0 rgba(0, 0, 0, 0.03),\n      0 1px 6px -1px rgba(0, 0, 0, 0.02),\n      0 2px 4px 0 rgba(0, 0, 0, 0.02)\n    ',
              screenXS: 480,
              screenXSMin: 480,
              screenXSMax: 575,
              screenSM: 576,
              screenSMMin: 576,
              screenSMMax: 767,
              screenMD: 768,
              screenMDMin: 768,
              screenMDMax: 991,
              screenLG: 992,
              screenLGMin: 992,
              screenLGMax: 1199,
              screenXL: a,
              screenXLMin: a,
              screenXLMax: 1599,
              screenXXL: o,
              screenXXLMin: o,
              boxShadowPopoverArrow: '2px 2px 5px rgba(0, 0, 0, 0.05)',
              boxShadowCard: '\n      0 1px 2px -2px '
                .concat(new $f('rgba(0, 0, 0, 0.16)').toRgbString(), ',\n      0 3px 6px 0 ')
                .concat(new $f('rgba(0, 0, 0, 0.12)').toRgbString(), ',\n      0 5px 12px 4px ')
                .concat(new $f('rgba(0, 0, 0, 0.09)').toRgbString(), '\n    '),
              boxShadowDrawerRight: '\n      -6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      -3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      -9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerLeft: '\n      6px 0 16px 0 rgba(0, 0, 0, 0.08),\n      3px 0 6px -4px rgba(0, 0, 0, 0.12),\n      9px 0 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerUp: '\n      0 6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowDrawerDown: '\n      0 -6px 16px 0 rgba(0, 0, 0, 0.08),\n      0 -3px 6px -4px rgba(0, 0, 0, 0.12),\n      0 -9px 28px 8px rgba(0, 0, 0, 0.05)\n    ',
              boxShadowTabsOverflowLeft: 'inset 10px 0 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowRight: 'inset -10px 0 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowTop: 'inset 0 10px 8px -8px rgba(0, 0, 0, 0.08)',
              boxShadowTabsOverflowBottom: 'inset 0 -10px 8px -8px rgba(0, 0, 0, 0.08)',
            }),
            r,
          );
        }
        var uh = vf(ih),
          ch = { token: Xf, hashed: !0 },
          dh = d.createContext(ch);
        function fh() {
          var e = d.useContext(dh),
            t = e.token,
            n = e.hashed,
            i = e.theme,
            a = e.components,
            o = ''.concat('5.6.4', '-').concat(n || ''),
            s = i || uh,
            l = (function (e, t) {
              var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                r = (0, d.useContext)(Zc).cache.instanceId,
                i = n.salt,
                a = void 0 === i ? '' : i,
                o = n.override,
                s = void 0 === o ? sd : o,
                l = n.formatToken,
                u = d.useMemo(
                  function () {
                    return Object.assign.apply(Object, [{}].concat(Ls(t)));
                  },
                  [t],
                ),
                c = d.useMemo(
                  function () {
                    return Jc(u);
                  },
                  [u],
                ),
                f = d.useMemo(
                  function () {
                    return Jc(s);
                  },
                  [s],
                ),
                h = od(
                  'token',
                  [a, e.id, c, f],
                  function () {
                    var t = dd(u, s, e, l),
                      n = ed(t, a);
                    (t._tokenKey = n), ud(n);
                    var r = ''.concat('css', '-').concat(jc(n));
                    return (t._hashId = r), [t, r];
                  },
                  function (e) {
                    cd(e[0]._tokenKey, r);
                  },
                );
              return h;
            })(s, [Xf, t], { salt: o, override: Object.assign({ override: t }, a), formatToken: lh }),
            u = r()(l, 2),
            c = u[0],
            f = u[1];
          return [s, c, n ? f : ''];
        }
        var hh = function () {
            var e = fh(),
              t = r()(e, 3);
            return { theme: t[0], token: t[1], hashId: t[2] };
          },
          ph = function (e) {
            return { boxSizing: 'border-box', margin: 0, padding: 0, color: e.colorText, fontSize: e.fontSize, lineHeight: e.lineHeight, listStyle: 'none', fontFamily: e.fontFamily };
          },
          vh = function (e) {
            var t;
            return {
              a:
                ((t = {
                  color: e.colorLink,
                  textDecoration: e.linkDecoration,
                  backgroundColor: 'transparent',
                  outline: 'none',
                  cursor: 'pointer',
                  transition: 'color '.concat(e.motionDurationSlow),
                  '-webkit-text-decoration-skip': 'objects',
                  '&:hover': { color: e.colorLinkHover },
                  '&:active': { color: e.colorLinkActive },
                }),
                R()(t, '&:active,\n  &:hover', { textDecoration: e.linkHoverDecoration, outline: 0 }),
                R()(t, '&:focus', { textDecoration: e.linkFocusDecoration, outline: 0 }),
                R()(t, '&[disabled]', { color: e.colorTextDisabled, cursor: 'not-allowed' }),
                t),
            };
          },
          mh = function (e, t) {
            var n = e.fontFamily,
              r = e.fontSize,
              i = '[class^="'.concat(t, '"], [class*=" ').concat(t, '"]');
            return R()(
              {},
              i,
              R()({ fontFamily: n, fontSize: r, boxSizing: 'border-box', '&::before, &::after': { boxSizing: 'border-box' } }, i, {
                boxSizing: 'border-box',
                '&::before, &::after': { boxSizing: 'border-box' },
              }),
            );
          },
          gh = function (e) {
            return { animationDuration: e, animationFillMode: 'both' };
          },
          yh = function (e) {
            return { animationDuration: e, animationFillMode: 'both' };
          },
          _h = function (e, t, n, r) {
            var i,
              a = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              o = a ? '&' : '';
            return (
              (i = {}),
              R()(i, '\n      '.concat(o).concat(e, '-enter,\n      ').concat(o).concat(e, '-appear\n    '), Object.assign(Object.assign({}, gh(r)), { animationPlayState: 'paused' })),
              R()(i, ''.concat(o).concat(e, '-leave'), Object.assign(Object.assign({}, yh(r)), { animationPlayState: 'paused' })),
              R()(i, '\n      '.concat(o).concat(e, '-enter').concat(e, '-enter-active,\n      ').concat(o).concat(e, '-appear').concat(e, '-appear-active\n    '), {
                animationName: t,
                animationPlayState: 'running',
              }),
              R()(i, ''.concat(o).concat(e, '-leave').concat(e, '-leave-active'), { animationName: n, animationPlayState: 'running', pointerEvents: 'none' }),
              i
            );
          },
          bh = new cf('antZoomIn', { '0%': { transform: 'scale(0.2)', opacity: 0 }, '100%': { transform: 'scale(1)', opacity: 1 } }),
          Eh = new cf('antZoomOut', { '0%': { transform: 'scale(1)' }, '100%': { transform: 'scale(0.2)', opacity: 0 } }),
          Sh = new cf('antZoomBigIn', { '0%': { transform: 'scale(0.8)', opacity: 0 }, '100%': { transform: 'scale(1)', opacity: 1 } }),
          kh = new cf('antZoomBigOut', { '0%': { transform: 'scale(1)' }, '100%': { transform: 'scale(0.8)', opacity: 0 } }),
          Th = new cf('antZoomUpIn', { '0%': { transform: 'scale(0.8)', transformOrigin: '50% 0%', opacity: 0 }, '100%': { transform: 'scale(1)', transformOrigin: '50% 0%' } }),
          wh = new cf('antZoomUpOut', { '0%': { transform: 'scale(1)', transformOrigin: '50% 0%' }, '100%': { transform: 'scale(0.8)', transformOrigin: '50% 0%', opacity: 0 } }),
          Ah = {
            zoom: { inKeyframes: bh, outKeyframes: Eh },
            'zoom-big': { inKeyframes: Sh, outKeyframes: kh },
            'zoom-big-fast': { inKeyframes: Sh, outKeyframes: kh },
            'zoom-left': {
              inKeyframes: new cf('antZoomLeftIn', { '0%': { transform: 'scale(0.8)', transformOrigin: '0% 50%', opacity: 0 }, '100%': { transform: 'scale(1)', transformOrigin: '0% 50%' } }),
              outKeyframes: new cf('antZoomLeftOut', { '0%': { transform: 'scale(1)', transformOrigin: '0% 50%' }, '100%': { transform: 'scale(0.8)', transformOrigin: '0% 50%', opacity: 0 } }),
            },
            'zoom-right': {
              inKeyframes: new cf('antZoomRightIn', { '0%': { transform: 'scale(0.8)', transformOrigin: '100% 50%', opacity: 0 }, '100%': { transform: 'scale(1)', transformOrigin: '100% 50%' } }),
              outKeyframes: new cf('antZoomRightOut', { '0%': { transform: 'scale(1)', transformOrigin: '100% 50%' }, '100%': { transform: 'scale(0.8)', transformOrigin: '100% 50%', opacity: 0 } }),
            },
            'zoom-up': { inKeyframes: Th, outKeyframes: wh },
            'zoom-down': {
              inKeyframes: new cf('antZoomDownIn', { '0%': { transform: 'scale(0.8)', transformOrigin: '50% 100%', opacity: 0 }, '100%': { transform: 'scale(1)', transformOrigin: '50% 100%' } }),
              outKeyframes: new cf('antZoomDownOut', { '0%': { transform: 'scale(1)', transformOrigin: '50% 100%' }, '100%': { transform: 'scale(0.8)', transformOrigin: '50% 100%', opacity: 0 } }),
            },
          },
          Lh = function (e, t) {
            var n,
              r = e.antCls,
              i = ''.concat(r, '-').concat(t),
              a = Ah[t],
              o = a.inKeyframes,
              s = a.outKeyframes;
            return [
              _h(i, o, s, 'zoom-big-fast' === t ? e.motionDurationFast : e.motionDurationMid),
              ((n = {}),
              R()(n, '\n        '.concat(i, '-enter,\n        ').concat(i, '-appear\n      '), {
                transform: 'scale(0)',
                opacity: 0,
                animationTimingFunction: e.motionEaseOutCirc,
                '&-prepare': { transform: 'none' },
              }),
              R()(n, ''.concat(i, '-leave'), { animationTimingFunction: e.motionEaseInOutCirc }),
              n),
            ];
          },
          Rh = ['blue', 'purple', 'cyan', 'green', 'magenta', 'pink', 'red', 'orange', 'yellow', 'volcano', 'geekblue', 'lime', 'gold'];
        function Ch(e, t) {
          return Rh.reduce(function (n, r) {
            var i = e[''.concat(r, '1')],
              a = e[''.concat(r, '3')],
              o = e[''.concat(r, '6')],
              s = e[''.concat(r, '7')];
            return Object.assign(Object.assign({}, n), t(r, { lightColor: i, lightBorderColor: a, darkColor: o, textColor: s }));
          }, {});
        }
        var xh = 'undefined' != typeof CSSINJS_STATISTIC,
          Dh = !0;
        function Ih() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          if (!xh) return Object.assign.apply(Object, [{}].concat(t));
          Dh = !1;
          var r = {};
          return (
            t.forEach(function (e) {
              Object.keys(e).forEach(function (t) {
                Object.defineProperty(r, t, {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    return e[t];
                  },
                });
              });
            }),
            (Dh = !0),
            r
          );
        }
        var Mh = {};
        function Ph() {}
        function Oh(e, t, n, i) {
          return function (a) {
            var o = fh(),
              s = r()(o, 3),
              l = s[0],
              u = s[1],
              c = s[2],
              f = (0, d.useContext)(Hc),
              h = f.getPrefixCls,
              p = f.iconPrefixCls,
              v = f.csp,
              m = h(),
              g = {
                theme: l,
                token: u,
                hashId: c,
                nonce: function () {
                  return null == v ? void 0 : v.nonce;
                },
              };
            return (
              lf(Object.assign(Object.assign({}, g), { path: ['Shared', m] }), function () {
                return [{ '&': vh(u) }];
              }),
              [
                lf(Object.assign(Object.assign({}, g), { path: [e, a, p] }), function () {
                  var o = (function (e) {
                      var t,
                        n = e,
                        r = Ph;
                      return (
                        xh &&
                          ((t = new Set()),
                          (n = new Proxy(e, {
                            get: function (e, n) {
                              return Dh && t.add(n), e[n];
                            },
                          })),
                          (r = function (e, n) {
                            Mh[e] = { global: Array.from(t), component: n };
                          })),
                        { token: n, keys: t, flush: r }
                      );
                    })(u),
                    s = o.token,
                    l = o.flush,
                    d = Object.assign({}, u[e]);
                  (null == i ? void 0 : i.deprecatedTokens) &&
                    i.deprecatedTokens.forEach(function (e) {
                      var t,
                        n = r()(e, 2),
                        i = n[0],
                        a = n[1];
                      ((null == d ? void 0 : d[i]) || (null == d ? void 0 : d[a])) && ((null !== (t = d[a]) && void 0 !== t) || (d[a] = null == d ? void 0 : d[i]));
                    });
                  var f = 'function' == typeof n ? n(Ih(s, null != d ? d : {})) : n,
                    h = Object.assign(Object.assign({}, f), d),
                    v = Ih(s, { componentCls: '.'.concat(a), prefixCls: a, iconCls: '.'.concat(p), antCls: '.'.concat(m) }, h),
                    g = t(v, { hashId: c, prefixCls: a, rootPrefixCls: m, iconPrefixCls: p, overrideComponentToken: d });
                  return l(e, h), [!1 === (null == i ? void 0 : i.resetStyle) ? null : mh(u, a), g];
                }),
                c,
              ]
            );
          };
        }
        var Fh = function (e) {
            var t,
              n = e.componentCls,
              r = e.tooltipMaxWidth,
              i = e.tooltipColor,
              a = e.tooltipBg,
              o = e.tooltipBorderRadius,
              s = e.zIndexPopup,
              l = e.controlHeight,
              u = e.boxShadowSecondary,
              c = e.paddingSM,
              d = e.paddingXS,
              f = e.tooltipRadiusOuter;
            return [
              R()(
                {},
                n,
                Object.assign(
                  Object.assign(
                    Object.assign(
                      Object.assign({}, ph(e)),
                      ((t = {
                        position: 'absolute',
                        zIndex: s,
                        display: 'block',
                        width: 'max-content',
                        maxWidth: r,
                        visibility: 'visible',
                        transformOrigin: 'var(--arrow-x, 50%) var(--arrow-y, 50%)',
                        '&-hidden': { display: 'none' },
                        '--antd-arrow-background-color': a,
                      }),
                      R()(t, ''.concat(n, '-inner'), {
                        minWidth: l,
                        minHeight: l,
                        padding: ''.concat(c / 2, 'px ').concat(d, 'px'),
                        color: i,
                        textAlign: 'start',
                        textDecoration: 'none',
                        wordWrap: 'break-word',
                        backgroundColor: a,
                        borderRadius: o,
                        boxShadow: u,
                        boxSizing: 'border-box',
                      }),
                      R()(
                        t,
                        ['&-placement-left', '&-placement-leftTop', '&-placement-leftBottom', '&-placement-right', '&-placement-rightTop', '&-placement-rightBottom'].join(','),
                        R()({}, ''.concat(n, '-inner'), { borderRadius: Math.min(o, 8) }),
                      ),
                      R()(t, ''.concat(n, '-content'), { position: 'relative' }),
                      t),
                    ),
                    Ch(e, function (e, t) {
                      var r,
                        i = t.darkColor;
                      return R()(
                        {},
                        '&'.concat(n, '-').concat(e),
                        ((r = {}), R()(r, ''.concat(n, '-inner'), { backgroundColor: i }), R()(r, ''.concat(n, '-arrow'), { '--antd-arrow-background-color': i }), r),
                      );
                    }),
                  ),
                  { '&-rtl': { direction: 'rtl' } },
                ),
              ),
              Pc(Ih(e, { borderRadiusOuter: f }), { colorBg: 'var(--antd-arrow-background-color)', contentRadius: o, limitVerticalRadius: !0 }),
              R()({}, ''.concat(n, '-pure'), { position: 'relative', maxWidth: 'none', margin: e.sizePopupArrow }),
            ];
          },
          Nh = function (e, t) {
            var n = Oh(
              'Tooltip',
              function (e) {
                if (!1 === t) return [];
                var n = e.borderRadius,
                  r = e.colorTextLightSolid,
                  i = e.colorBgDefault,
                  a = e.borderRadiusOuter,
                  o = Ih(e, { tooltipMaxWidth: 250, tooltipColor: r, tooltipBorderRadius: n, tooltipBg: i, tooltipRadiusOuter: a > 4 ? 4 : a });
                return [Fh(o), Lh(e, 'zoom-big-fast')];
              },
              function (e) {
                return { zIndexPopup: e.zIndexPopupBase + 70, colorBgDefault: e.colorBgSpotlight };
              },
              { resetStyle: !1 },
            );
            return n(e);
          },
          Bh = Rh.map(function (e) {
            return ''.concat(e, '-inverse');
          });
        function Uh(e, t) {
          var n = (function (e) {
              var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
              return t ? [].concat(Ls(Bh), Ls(Rh)).includes(e) : Rh.includes(e);
            })(t),
            r = es()(R()({}, ''.concat(e, '-').concat(t), t && n)),
            i = {},
            a = {};
          return t && !n && ((i.background = t), (a['--antd-arrow-background-color'] = t)), { className: r, overlayStyle: i, arrowStyle: a };
        }
        var zh = function (e, t) {
            var n = {};
            for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
            if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Hh = hh;
        function Vh(e, t) {
          var n = e.type;
          if (((!0 === n.__ANT_BUTTON || 'button' === e.type) && e.props.disabled) || (!0 === n.__ANT_SWITCH && (e.props.disabled || e.props.loading)) || (!0 === n.__ANT_RADIO && e.props.disabled)) {
            var r = (function (e, t) {
                var n = {},
                  r = Object.assign({}, e);
                return (
                  t.forEach(function (t) {
                    e && t in e && ((n[t] = e[t]), delete r[t]);
                  }),
                  { picked: n, omitted: r }
                );
              })(e.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),
              i = r.picked,
              a = r.omitted,
              o = Object.assign(Object.assign({ display: 'inline-block' }, i), { cursor: 'not-allowed', width: e.props.block ? '100%' : void 0 }),
              s = zc(e, { style: Object.assign(Object.assign({}, a), { pointerEvents: 'none' }), className: null });
            return d.createElement('span', { style: o, className: es()(e.props.className, ''.concat(t, '-disabled-compatible-wrapper')) }, s);
          }
          return e;
        }
        var Gh = d.forwardRef(function (e, t) {
          var n,
            i,
            a = e.prefixCls,
            o = e.openClassName,
            s = e.getTooltipContainer,
            l = e.overlayClassName,
            c = e.color,
            f = e.overlayInnerStyle,
            h = e.children,
            p = e.afterOpenChange,
            v = e.afterVisibleChange,
            m = e.destroyTooltipOnHide,
            g = e.arrow,
            y = void 0 === g || g,
            _ = e.title,
            b = e.overlay,
            E = e.builtinPlacements,
            S = e.arrowPointAtCenter,
            k = void 0 !== S && S,
            T = e.autoAdjustOverflow,
            w = void 0 === T || T,
            A = !!y,
            L = Hh().token,
            C = d.useContext(Hc),
            x = C.getPopupContainer,
            D = C.getPrefixCls,
            I = C.direction,
            M = d.useRef(null),
            P = function () {
              var e;
              null === (e = M.current) || void 0 === e || e.forceAlign();
            };
          d.useImperativeHandle(t, function () {
            return {
              forceAlign: P,
              forcePopupAlign: function () {
                P();
              },
            };
          });
          var O = vu(!1, { value: null !== (n = e.open) && void 0 !== n ? n : e.visible, defaultValue: null !== (i = e.defaultOpen) && void 0 !== i ? i : e.defaultVisible }),
            F = r()(O, 2),
            N = F[0],
            B = F[1],
            U = !_ && !b && 0 !== _,
            z = d.useMemo(
              function () {
                var e,
                  t,
                  n = k;
                return (
                  'object' === u()(y) && (n = null !== (t = null !== (e = y.pointAtCenter) && void 0 !== e ? e : y.arrowPointAtCenter) && void 0 !== t ? t : k),
                  E || Bc({ arrowPointAtCenter: n, autoAdjustOverflow: w, arrowWidth: A ? L.sizePopupArrow : 0, borderRadius: L.borderRadius, offset: L.marginXXS, visibleFirst: !0 })
                );
              },
              [k, y, E, L],
            ),
            H = d.useMemo(
              function () {
                return 0 === _ ? _ : b || _ || '';
              },
              [b, _],
            ),
            V = d.createElement(Gc, null, 'function' == typeof H ? H() : H),
            G = e.getPopupContainer,
            j = e.placement,
            K = void 0 === j ? 'top' : j,
            W = e.mouseEnterDelay,
            q = void 0 === W ? 0.1 : W,
            Y = e.mouseLeaveDelay,
            X = void 0 === Y ? 0.1 : Y,
            $ = e.overlayStyle,
            Q = e.rootClassName,
            Z = zh(e, ['getPopupContainer', 'placement', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'rootClassName']),
            J = D('tooltip', a),
            ee = D(),
            te = e['data-popover-inject'],
            ne = N;
          'open' in e || 'visible' in e || !U || (ne = !1);
          var re = Vh(
              Uc(h) &&
                !(function (e) {
                  return e && Uc(e) && e.type === d.Fragment;
                })(h)
                ? h
                : d.createElement('span', null, h),
              J,
            ),
            ie = re.props,
            ae = ie.className && 'string' != typeof ie.className ? ie.className : es()(ie.className, R()({}, o || ''.concat(J, '-open'), !0)),
            oe = Nh(J, !te),
            se = r()(oe, 2),
            le = se[0],
            ue = se[1],
            ce = Uh(J, c),
            de = Object.assign(Object.assign({}, f), ce.overlayStyle),
            fe = ce.arrowStyle,
            he = es()(l, R()({}, ''.concat(J, '-rtl'), 'rtl' === I), ce.className, Q, ue);
          return le(
            d.createElement(
              xc,
              Object.assign({}, Z, {
                showArrow: A,
                placement: K,
                mouseEnterDelay: q,
                mouseLeaveDelay: X,
                prefixCls: J,
                overlayClassName: he,
                overlayStyle: Object.assign(Object.assign({}, fe), $),
                getTooltipContainer: G || s || x,
                ref: M,
                builtinPlacements: z,
                overlay: V,
                visible: ne,
                onVisibleChange: function (t) {
                  var n, r;
                  B(!U && t), U || (null === (n = e.onOpenChange) || void 0 === n || n.call(e, t), null === (r = e.onVisibleChange) || void 0 === r || r.call(e, t));
                },
                afterVisibleChange: null != p ? p : v,
                overlayInnerStyle: de,
                arrowContent: d.createElement('span', { className: ''.concat(J, '-arrow-content') }),
                motion: { motionName: Dc(ee, 'zoom-big-fast', e.transitionName), motionDeadline: 1e3 },
                destroyTooltipOnHide: !!m,
              }),
              ne ? zc(re, { className: ae }) : re,
            ),
          );
        });
        Gh._InternalPanelDoNotUseOrYouWillBeFired = function (e) {
          var t = e.prefixCls,
            n = e.className,
            i = e.placement,
            a = void 0 === i ? 'top' : i,
            o = e.title,
            s = e.color,
            l = e.overlayInnerStyle,
            u = (0, d.useContext(Hc).getPrefixCls)('tooltip', t),
            c = Nh(u, !0),
            f = r()(c, 2),
            h = f[0],
            p = f[1],
            v = Uh(u, s),
            m = Object.assign(Object.assign({}, l), v.overlayStyle),
            g = v.arrowStyle;
          return h(
            d.createElement(
              'div',
              { className: es()(p, u, ''.concat(u, '-pure'), ''.concat(u, '-placement-').concat(a), n, v.className), style: g },
              d.createElement('div', { className: ''.concat(u, '-arrow') }),
              d.createElement(Lc, Object.assign({}, e, { className: p, prefixCls: u, overlayInnerStyle: m }), o),
            ),
          );
        };
        var jh = Gh,
          Kh = {
            MAC_ENTER: 3,
            BACKSPACE: 8,
            TAB: 9,
            NUM_CENTER: 12,
            ENTER: 13,
            SHIFT: 16,
            CTRL: 17,
            ALT: 18,
            PAUSE: 19,
            CAPS_LOCK: 20,
            ESC: 27,
            SPACE: 32,
            PAGE_UP: 33,
            PAGE_DOWN: 34,
            END: 35,
            HOME: 36,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            PRINT_SCREEN: 44,
            INSERT: 45,
            DELETE: 46,
            ZERO: 48,
            ONE: 49,
            TWO: 50,
            THREE: 51,
            FOUR: 52,
            FIVE: 53,
            SIX: 54,
            SEVEN: 55,
            EIGHT: 56,
            NINE: 57,
            QUESTION_MARK: 63,
            A: 65,
            B: 66,
            C: 67,
            D: 68,
            E: 69,
            F: 70,
            G: 71,
            H: 72,
            I: 73,
            J: 74,
            K: 75,
            L: 76,
            M: 77,
            N: 78,
            O: 79,
            P: 80,
            Q: 81,
            R: 82,
            S: 83,
            T: 84,
            U: 85,
            V: 86,
            W: 87,
            X: 88,
            Y: 89,
            Z: 90,
            META: 91,
            WIN_KEY_RIGHT: 92,
            CONTEXT_MENU: 93,
            NUM_ZERO: 96,
            NUM_ONE: 97,
            NUM_TWO: 98,
            NUM_THREE: 99,
            NUM_FOUR: 100,
            NUM_FIVE: 101,
            NUM_SIX: 102,
            NUM_SEVEN: 103,
            NUM_EIGHT: 104,
            NUM_NINE: 105,
            NUM_MULTIPLY: 106,
            NUM_PLUS: 107,
            NUM_MINUS: 109,
            NUM_PERIOD: 110,
            NUM_DIVISION: 111,
            F1: 112,
            F2: 113,
            F3: 114,
            F4: 115,
            F5: 116,
            F6: 117,
            F7: 118,
            F8: 119,
            F9: 120,
            F10: 121,
            F11: 122,
            F12: 123,
            NUMLOCK: 144,
            SEMICOLON: 186,
            DASH: 189,
            EQUALS: 187,
            COMMA: 188,
            PERIOD: 190,
            SLASH: 191,
            APOSTROPHE: 192,
            SINGLE_QUOTE: 222,
            OPEN_SQUARE_BRACKET: 219,
            BACKSLASH: 220,
            CLOSE_SQUARE_BRACKET: 221,
            WIN_KEY: 224,
            MAC_FF_META: 224,
            WIN_IME: 229,
            isTextModifyingKeyEvent: function (e) {
              var t = e.keyCode;
              if ((e.altKey && !e.ctrlKey) || e.metaKey || (t >= Kh.F1 && t <= Kh.F12)) return !1;
              switch (t) {
                case Kh.ALT:
                case Kh.CAPS_LOCK:
                case Kh.CONTEXT_MENU:
                case Kh.CTRL:
                case Kh.DOWN:
                case Kh.END:
                case Kh.ESC:
                case Kh.HOME:
                case Kh.INSERT:
                case Kh.LEFT:
                case Kh.MAC_FF_META:
                case Kh.META:
                case Kh.NUMLOCK:
                case Kh.NUM_CENTER:
                case Kh.PAGE_DOWN:
                case Kh.PAGE_UP:
                case Kh.PAUSE:
                case Kh.PRINT_SCREEN:
                case Kh.RIGHT:
                case Kh.SHIFT:
                case Kh.UP:
                case Kh.WIN_KEY:
                case Kh.WIN_KEY_RIGHT:
                  return !1;
                default:
                  return !0;
              }
            },
            isCharacterKey: function (e) {
              if (e >= Kh.ZERO && e <= Kh.NINE) return !0;
              if (e >= Kh.NUM_ZERO && e <= Kh.NUM_MULTIPLY) return !0;
              if (e >= Kh.A && e <= Kh.Z) return !0;
              if (-1 !== window.navigator.userAgent.indexOf('WebKit') && 0 === e) return !0;
              switch (e) {
                case Kh.SPACE:
                case Kh.QUESTION_MARK:
                case Kh.NUM_PLUS:
                case Kh.NUM_MINUS:
                case Kh.NUM_PERIOD:
                case Kh.NUM_DIVISION:
                case Kh.SEMICOLON:
                case Kh.DASH:
                case Kh.EQUALS:
                case Kh.COMMA:
                case Kh.PERIOD:
                case Kh.SLASH:
                case Kh.APOSTROPHE:
                case Kh.SINGLE_QUOTE:
                case Kh.OPEN_SQUARE_BRACKET:
                case Kh.BACKSLASH:
                case Kh.CLOSE_SQUARE_BRACKET:
                  return !0;
                default:
                  return !1;
              }
            },
          },
          Wh = Kh,
          qh = d.createContext({ min: 0, max: 0, direction: 'ltr', step: 1, includedStart: 0, includedEnd: 0, tabIndex: 0, keyboard: !0 });
        function Yh(e, t, n) {
          return (e - t) / (n - t);
        }
        function Xh(e, t, n, r) {
          var i = Yh(t, n, r),
            a = {};
          switch (e) {
            case 'rtl':
              (a.right = ''.concat(100 * i, '%')), (a.transform = 'translateX(50%)');
              break;
            case 'btt':
              (a.bottom = ''.concat(100 * i, '%')), (a.transform = 'translateY(50%)');
              break;
            case 'ttb':
              (a.top = ''.concat(100 * i, '%')), (a.transform = 'translateY(-50%)');
              break;
            default:
              (a.left = ''.concat(100 * i, '%')), (a.transform = 'translateX(-50%)');
          }
          return a;
        }
        function $h(e, t) {
          return Array.isArray(e) ? e[t] : e;
        }
        var Qh = ['prefixCls', 'value', 'valueIndex', 'onStartMove', 'style', 'render', 'dragging', 'onOffsetChange'],
          Zh = d.forwardRef(function (e, t) {
            var n,
              r,
              i = e.prefixCls,
              a = e.value,
              o = e.valueIndex,
              s = e.onStartMove,
              l = e.style,
              u = e.render,
              c = e.dragging,
              f = e.onOffsetChange,
              h = ss(e, Qh),
              p = d.useContext(qh),
              v = p.min,
              m = p.max,
              g = p.direction,
              y = p.disabled,
              _ = p.keyboard,
              b = p.range,
              E = p.tabIndex,
              S = p.ariaLabelForHandle,
              k = p.ariaLabelledByForHandle,
              T = p.ariaValueTextFormatterForHandle,
              w = ''.concat(i, '-handle'),
              A = function (e) {
                y || s(e, o);
              },
              L = Xh(g, a, v, m),
              R = d.createElement(
                'div',
                ts(
                  {
                    ref: t,
                    className: es()(w, ((n = {}), is(n, ''.concat(w, '-').concat(o + 1), b), is(n, ''.concat(w, '-dragging'), c), n)),
                    style: os(os({}, L), l),
                    onMouseDown: A,
                    onTouchStart: A,
                    onKeyDown: function (e) {
                      if (!y && _) {
                        var t = null;
                        switch (e.which || e.keyCode) {
                          case Wh.LEFT:
                            t = 'ltr' === g || 'btt' === g ? -1 : 1;
                            break;
                          case Wh.RIGHT:
                            t = 'ltr' === g || 'btt' === g ? 1 : -1;
                            break;
                          case Wh.UP:
                            t = 'ttb' !== g ? 1 : -1;
                            break;
                          case Wh.DOWN:
                            t = 'ttb' !== g ? -1 : 1;
                            break;
                          case Wh.HOME:
                            t = 'min';
                            break;
                          case Wh.END:
                            t = 'max';
                            break;
                          case Wh.PAGE_UP:
                            t = 2;
                            break;
                          case Wh.PAGE_DOWN:
                            t = -2;
                        }
                        null !== t && (e.preventDefault(), f(t, o));
                      }
                    },
                    tabIndex: y ? null : $h(E, o),
                    role: 'slider',
                    'aria-valuemin': v,
                    'aria-valuemax': m,
                    'aria-valuenow': a,
                    'aria-disabled': y,
                    'aria-label': $h(S, o),
                    'aria-labelledby': $h(k, o),
                    'aria-valuetext': null === (r = $h(T, o)) || void 0 === r ? void 0 : r(a),
                  },
                  h,
                ),
              );
            return u && (R = u(R, { index: o, prefixCls: i, value: a, dragging: c })), R;
          });
        var Jh = Zh,
          ep = ['prefixCls', 'style', 'onStartMove', 'onOffsetChange', 'values', 'handleRender', 'draggingIndex'],
          tp = d.forwardRef(function (e, t) {
            var n = e.prefixCls,
              r = e.style,
              i = e.onStartMove,
              a = e.onOffsetChange,
              o = e.values,
              s = e.handleRender,
              l = e.draggingIndex,
              u = ss(e, ep),
              c = d.useRef({});
            return (
              d.useImperativeHandle(t, function () {
                return {
                  focus: function (e) {
                    var t;
                    null === (t = c.current[e]) || void 0 === t || t.focus();
                  },
                };
              }),
              d.createElement(
                d.Fragment,
                null,
                o.map(function (e, t) {
                  return d.createElement(
                    Jh,
                    ts(
                      {
                        ref: function (e) {
                          e ? (c.current[t] = e) : delete c.current[t];
                        },
                        dragging: l === t,
                        prefixCls: n,
                        style: $h(r, t),
                        key: t,
                        value: e,
                        valueIndex: t,
                        onStartMove: i,
                        onOffsetChange: a,
                        render: s,
                      },
                      u,
                    ),
                  );
                }),
              )
            );
          });
        var np = tp;
        function rp(e) {
          var t = 'touches' in e ? e.touches[0] : e;
          return { pageX: t.pageX, pageY: t.pageY };
        }
        function ip(e) {
          var t = e.prefixCls,
            n = e.style,
            r = e.start,
            i = e.end,
            a = e.index,
            o = e.onStartMove,
            s = d.useContext(qh),
            l = s.direction,
            u = s.min,
            c = s.max,
            f = s.disabled,
            h = s.range,
            p = ''.concat(t, '-track'),
            v = Yh(r, u, c),
            m = Yh(i, u, c),
            g = function (e) {
              !f && o && o(e, -1);
            },
            y = {};
          switch (l) {
            case 'rtl':
              (y.right = ''.concat(100 * v, '%')), (y.width = ''.concat(100 * m - 100 * v, '%'));
              break;
            case 'btt':
              (y.bottom = ''.concat(100 * v, '%')), (y.height = ''.concat(100 * m - 100 * v, '%'));
              break;
            case 'ttb':
              (y.top = ''.concat(100 * v, '%')), (y.height = ''.concat(100 * m - 100 * v, '%'));
              break;
            default:
              (y.left = ''.concat(100 * v, '%')), (y.width = ''.concat(100 * m - 100 * v, '%'));
          }
          return d.createElement('div', { className: es()(p, h && ''.concat(p, '-').concat(a + 1)), style: os(os({}, y), n), onMouseDown: g, onTouchStart: g });
        }
        function ap(e) {
          var t = e.prefixCls,
            n = e.style,
            r = e.values,
            i = e.startPoint,
            a = e.onStartMove,
            o = d.useContext(qh),
            s = o.included,
            l = o.range,
            u = o.min,
            c = d.useMemo(
              function () {
                if (!l) {
                  if (0 === r.length) return [];
                  var e = null != i ? i : u,
                    t = r[0];
                  return [{ start: Math.min(e, t), end: Math.max(e, t) }];
                }
                for (var n = [], a = 0; a < r.length - 1; a += 1) n.push({ start: r[a], end: r[a + 1] });
                return n;
              },
              [r, l, i, u],
            );
          return s
            ? c.map(function (e, r) {
                var i = e.start,
                  o = e.end;
                return d.createElement(ip, { index: r, prefixCls: t, style: $h(n, r), start: i, end: o, key: r, onStartMove: a });
              })
            : null;
        }
        function op(e) {
          var t = e.prefixCls,
            n = e.style,
            r = e.children,
            i = e.value,
            a = e.onClick,
            o = d.useContext(qh),
            s = o.min,
            l = o.max,
            u = o.direction,
            c = o.includedStart,
            f = o.includedEnd,
            h = o.included,
            p = ''.concat(t, '-text'),
            v = Xh(u, i, s, l);
          return d.createElement(
            'span',
            {
              className: es()(p, is({}, ''.concat(p, '-active'), h && c <= i && i <= f)),
              style: os(os({}, v), n),
              onMouseDown: function (e) {
                e.stopPropagation();
              },
              onClick: function () {
                a(i);
              },
            },
            r,
          );
        }
        function sp(e) {
          var t = e.prefixCls,
            n = e.marks,
            r = e.onClick,
            i = ''.concat(t, '-mark');
          return n.length
            ? d.createElement(
                'div',
                { className: i },
                n.map(function (e) {
                  var t = e.value,
                    n = e.style,
                    a = e.label;
                  return d.createElement(op, { key: t, prefixCls: i, style: n, value: t, onClick: r }, a);
                }),
              )
            : null;
        }
        function lp(e) {
          var t = e.prefixCls,
            n = e.value,
            r = e.style,
            i = e.activeStyle,
            a = d.useContext(qh),
            o = a.min,
            s = a.max,
            l = a.direction,
            u = a.included,
            c = a.includedStart,
            f = a.includedEnd,
            h = ''.concat(t, '-dot'),
            p = u && c <= n && n <= f,
            v = os(os({}, Xh(l, n, o, s)), 'function' == typeof r ? r(n) : r);
          return p && (v = os(os({}, v), 'function' == typeof i ? i(n) : i)), d.createElement('span', { className: es()(h, is({}, ''.concat(h, '-active'), p)), style: v });
        }
        function up(e) {
          var t = e.prefixCls,
            n = e.marks,
            r = e.dots,
            i = e.style,
            a = e.activeStyle,
            o = d.useContext(qh),
            s = o.min,
            l = o.max,
            u = o.step,
            c = d.useMemo(
              function () {
                var e = new Set();
                if (
                  (n.forEach(function (t) {
                    e.add(t.value);
                  }),
                  r && null !== u)
                )
                  for (var t = s; t <= l; ) e.add(t), (t += u);
                return Array.from(e);
              },
              [s, l, u, r, n],
            );
          return d.createElement(
            'div',
            { className: ''.concat(t, '-step') },
            c.map(function (e) {
              return d.createElement(lp, { prefixCls: t, key: e, value: e, style: i, activeStyle: a });
            }),
          );
        }
        var cp = d.forwardRef(function (e, t) {
          var n,
            r = e.prefixCls,
            i = void 0 === r ? 'rc-slider' : r,
            a = e.className,
            o = e.style,
            s = e.disabled,
            l = void 0 !== s && s,
            u = e.keyboard,
            c = void 0 === u || u,
            f = e.autoFocus,
            h = e.onFocus,
            p = e.onBlur,
            v = e.min,
            m = void 0 === v ? 0 : v,
            g = e.max,
            y = void 0 === g ? 100 : g,
            _ = e.step,
            b = void 0 === _ ? 1 : _,
            E = e.value,
            S = e.defaultValue,
            k = e.range,
            T = e.count,
            w = e.onChange,
            A = e.onBeforeChange,
            L = e.onAfterChange,
            R = e.allowCross,
            C = void 0 === R || R,
            x = e.pushable,
            D = void 0 !== x && x,
            I = e.draggableTrack,
            M = e.reverse,
            P = e.vertical,
            O = e.included,
            F = void 0 === O || O,
            N = e.startPoint,
            B = e.trackStyle,
            U = e.handleStyle,
            z = e.railStyle,
            H = e.dotStyle,
            V = e.activeDotStyle,
            G = e.marks,
            j = e.dots,
            K = e.handleRender,
            W = e.tabIndex,
            q = void 0 === W ? 0 : W,
            Y = e.ariaLabelForHandle,
            X = e.ariaLabelledByForHandle,
            $ = e.ariaValueTextFormatterForHandle,
            Q = d.useRef(),
            Z = d.useRef(),
            J = d.useMemo(
              function () {
                return P ? (M ? 'ttb' : 'btt') : M ? 'rtl' : 'ltr';
              },
              [M, P],
            ),
            ee = d.useMemo(
              function () {
                return isFinite(m) ? m : 0;
              },
              [m],
            ),
            te = d.useMemo(
              function () {
                return isFinite(y) ? y : 100;
              },
              [y],
            ),
            ne = d.useMemo(
              function () {
                return null !== b && b <= 0 ? 1 : b;
              },
              [b],
            ),
            re = d.useMemo(
              function () {
                return !0 === D ? ne : D >= 0 && D;
              },
              [D, ne],
            ),
            ie = d.useMemo(
              function () {
                return Object.keys(G || {})
                  .map(function (e) {
                    var t = G[e],
                      n = { value: Number(e) };
                    return t && 'object' === ns(t) && !d.isValidElement(t) && ('label' in t || 'style' in t) ? ((n.style = t.style), (n.label = t.label)) : (n.label = t), n;
                  })
                  .filter(function (e) {
                    var t = e.label;
                    return t || 'number' == typeof t;
                  })
                  .sort(function (e, t) {
                    return e.value - t.value;
                  });
              },
              [G],
            ),
            ae = (function (e, t, n, r, i, a) {
              var o = d.useCallback(
                  function (n) {
                    var r = isFinite(n) ? n : e;
                    return (r = Math.min(t, n)), Math.max(e, r);
                  },
                  [e, t],
                ),
                s = d.useCallback(
                  function (r) {
                    if (null !== n) {
                      var i = e + Math.round((o(r) - e) / n) * n,
                        a = function (e) {
                          return (String(e).split('.')[1] || '').length;
                        },
                        s = Math.max(a(n), a(t), a(e)),
                        l = Number(i.toFixed(s));
                      return e <= l && l <= t ? l : null;
                    }
                    return null;
                  },
                  [n, e, t, o],
                ),
                l = d.useCallback(
                  function (i) {
                    var a = o(i),
                      l = r.map(function (e) {
                        return e.value;
                      });
                    null !== n && l.push(s(i)), l.push(e, t);
                    var u = l[0],
                      c = t - e;
                    return (
                      l.forEach(function (e) {
                        var t = Math.abs(a - e);
                        t <= c && ((u = e), (c = t));
                      }),
                      u
                    );
                  },
                  [e, t, r, n, o, s],
                ),
                u = function i(a, o, l) {
                  var u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'unit';
                  if ('number' == typeof o) {
                    var c,
                      d = a[l],
                      f = d + o,
                      h = [];
                    r.forEach(function (e) {
                      h.push(e.value);
                    }),
                      h.push(e, t),
                      h.push(s(d));
                    var p = o > 0 ? 1 : -1;
                    'unit' === u ? h.push(s(d + p * n)) : h.push(s(f)),
                      (h = h
                        .filter(function (e) {
                          return null !== e;
                        })
                        .filter(function (e) {
                          return o < 0 ? e <= d : e >= d;
                        })),
                      'unit' === u &&
                        (h = h.filter(function (e) {
                          return e !== d;
                        }));
                    var v = 'unit' === u ? d : f;
                    c = h[0];
                    var m = Math.abs(c - v);
                    if (
                      (h.forEach(function (e) {
                        var t = Math.abs(e - v);
                        t < m && ((c = e), (m = t));
                      }),
                      void 0 === c)
                    )
                      return o < 0 ? e : t;
                    if ('dist' === u) return c;
                    if (Math.abs(o) > 1) {
                      var g = Ls(a);
                      return (g[l] = c), i(g, o - p, l, u);
                    }
                    return c;
                  }
                  return 'min' === o ? e : 'max' === o ? t : void 0;
                },
                c = function (e, t, n) {
                  var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'unit',
                    i = e[n],
                    a = u(e, t, n, r);
                  return { value: a, changed: a !== i };
                },
                f = function (e) {
                  return (null === a && 0 === e) || ('number' == typeof a && e < a);
                };
              return [
                l,
                function (e, t, n) {
                  var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'unit',
                    o = e.map(l),
                    s = o[n],
                    d = u(o, t, n, r);
                  if (((o[n] = d), !1 === i)) {
                    var h = a || 0;
                    n > 0 && o[n - 1] !== s && (o[n] = Math.max(o[n], o[n - 1] + h)), n < o.length - 1 && o[n + 1] !== s && (o[n] = Math.min(o[n], o[n + 1] - h));
                  } else if ('number' == typeof a || null === a) {
                    for (var p = n + 1; p < o.length; p += 1)
                      for (var v = !0; f(o[p] - o[p - 1]) && v; ) {
                        var m = c(o, 1, p);
                        (o[p] = m.value), (v = m.changed);
                      }
                    for (var g = n; g > 0; g -= 1)
                      for (var y = !0; f(o[g] - o[g - 1]) && y; ) {
                        var _ = c(o, -1, g - 1);
                        (o[g - 1] = _.value), (y = _.changed);
                      }
                    for (var b = o.length - 1; b > 0; b -= 1)
                      for (var E = !0; f(o[b] - o[b - 1]) && E; ) {
                        var S = c(o, -1, b - 1);
                        (o[b - 1] = S.value), (E = S.changed);
                      }
                    for (var k = 0; k < o.length - 1; k += 1)
                      for (var T = !0; f(o[k + 1] - o[k]) && T; ) {
                        var w = c(o, 1, k + 1);
                        (o[k + 1] = w.value), (T = w.changed);
                      }
                  }
                  return { value: o[n], values: o };
                },
              ];
            })(ee, te, ne, ie, C, re),
            oe = cs(ae, 2),
            se = oe[0],
            le = oe[1],
            ue = cs(vu(S, { value: E }), 2),
            ce = ue[0],
            de = ue[1],
            fe = d.useMemo(
              function () {
                var e = null == ce ? [] : Array.isArray(ce) ? ce : [ce],
                  t = cs(e, 1)[0],
                  n = null === ce ? [] : [void 0 === t ? ee : t];
                if (k) {
                  if (((n = Ls(e)), T || void 0 === ce)) {
                    var r = T >= 0 ? T + 1 : 2;
                    for (n = n.slice(0, r); n.length < r; ) {
                      var i;
                      n.push(null !== (i = n[n.length - 1]) && void 0 !== i ? i : ee);
                    }
                  }
                  n.sort(function (e, t) {
                    return e - t;
                  });
                }
                return (
                  n.forEach(function (e, t) {
                    n[t] = se(e);
                  }),
                  n
                );
              },
              [ce, k, ee, T, se],
            ),
            he = d.useRef(fe);
          he.current = fe;
          var pe = function (e) {
              return k ? e : e[0];
            },
            ve = function (e) {
              var t = Ls(e).sort(function (e, t) {
                return e - t;
              });
              w && !Kc(t, he.current, !0) && w(pe(t)), de(t);
            },
            me = function (e) {
              if (!l) {
                var t = 0,
                  n = te - ee;
                fe.forEach(function (r, i) {
                  var a = Math.abs(e - r);
                  a <= n && ((n = a), (t = i));
                });
                var r = Ls(fe);
                (r[t] = e), k && !fe.length && void 0 === T && r.push(e), null == A || A(pe(r)), ve(r), null == L || L(pe(r));
              }
            },
            ge = cs(d.useState(null), 2),
            ye = ge[0],
            _e = ge[1];
          d.useEffect(
            function () {
              if (null !== ye) {
                var e = fe.indexOf(ye);
                e >= 0 && Q.current.focus(e);
              }
              _e(null);
            },
            [ye],
          );
          var be = d.useMemo(
              function () {
                return (!I || null !== ne) && I;
              },
              [I, ne],
            ),
            Ee = (function (e, t, n, r, i, a, o, s, l) {
              var u = cs(d.useState(null), 2),
                c = u[0],
                f = u[1],
                h = cs(d.useState(-1), 2),
                p = h[0],
                v = h[1],
                m = cs(d.useState(n), 2),
                g = m[0],
                y = m[1],
                _ = cs(d.useState(n), 2),
                b = _[0],
                E = _[1],
                S = d.useRef(null),
                k = d.useRef(null);
              d.useEffect(
                function () {
                  -1 === p && y(n);
                },
                [n, p],
              ),
                d.useEffect(function () {
                  return function () {
                    document.removeEventListener('mousemove', S.current),
                      document.removeEventListener('mouseup', k.current),
                      document.removeEventListener('touchmove', S.current),
                      document.removeEventListener('touchend', k.current);
                  };
                }, []);
              var T = function (e, t) {
                  g.some(function (t, n) {
                    return t !== e[n];
                  }) && (void 0 !== t && f(t), y(e), o(e));
                },
                w = function (e, t) {
                  if (-1 === e) {
                    var n = b[0],
                      o = b[b.length - 1],
                      s = r - n,
                      u = i - o,
                      c = t * (i - r);
                    (c = Math.max(c, s)), (c = Math.min(c, u));
                    var d = a(n + c);
                    c = d - n;
                    var f = b.map(function (e) {
                      return e + c;
                    });
                    T(f);
                  } else {
                    var h = (i - r) * t,
                      p = Ls(g);
                    p[e] = b[e];
                    var v = l(p, h, e, 'dist');
                    T(v.values, v.value);
                  }
                },
                A = d.useRef(w);
              A.current = w;
              var L = d.useMemo(
                function () {
                  var e = Ls(n).sort(function (e, t) {
                      return e - t;
                    }),
                    t = Ls(g).sort(function (e, t) {
                      return e - t;
                    });
                  return e.every(function (e, n) {
                    return e === t[n];
                  })
                    ? g
                    : n;
                },
                [n, g],
              );
              return [
                p,
                c,
                L,
                function (r, i) {
                  r.stopPropagation();
                  var a = n[i];
                  v(i), f(a), E(n);
                  var o = rp(r),
                    l = o.pageX,
                    u = o.pageY,
                    c = function (n) {
                      n.preventDefault();
                      var r,
                        a = rp(n),
                        o = a.pageX,
                        s = a.pageY,
                        c = o - l,
                        d = s - u,
                        f = e.current.getBoundingClientRect(),
                        h = f.width,
                        p = f.height;
                      switch (t) {
                        case 'btt':
                          r = -d / p;
                          break;
                        case 'ttb':
                          r = d / p;
                          break;
                        case 'rtl':
                          r = -c / h;
                          break;
                        default:
                          r = c / h;
                      }
                      A.current(i, r);
                    },
                    d = function e(t) {
                      t.preventDefault(),
                        document.removeEventListener('mouseup', e),
                        document.removeEventListener('mousemove', c),
                        document.removeEventListener('touchend', e),
                        document.removeEventListener('touchmove', c),
                        (S.current = null),
                        (k.current = null),
                        v(-1),
                        s();
                    };
                  document.addEventListener('mouseup', d),
                    document.addEventListener('mousemove', c),
                    document.addEventListener('touchend', d),
                    document.addEventListener('touchmove', c),
                    (S.current = c),
                    (k.current = d);
                },
              ];
            })(
              Z,
              J,
              fe,
              ee,
              te,
              se,
              ve,
              function () {
                null == L || L(pe(he.current));
              },
              le,
            ),
            Se = cs(Ee, 4),
            ke = Se[0],
            Te = Se[1],
            we = Se[2],
            Ae = Se[3],
            Le = function (e, t) {
              Ae(e, t), null == A || A(pe(he.current));
            },
            Re = -1 !== ke;
          d.useEffect(
            function () {
              if (!Re) {
                var e = fe.lastIndexOf(Te);
                Q.current.focus(e);
              }
            },
            [Re],
          );
          var Ce = d.useMemo(
              function () {
                return Ls(we).sort(function (e, t) {
                  return e - t;
                });
              },
              [we],
            ),
            xe = cs(
              d.useMemo(
                function () {
                  return k ? [Ce[0], Ce[Ce.length - 1]] : [ee, Ce[0]];
                },
                [Ce, k, ee],
              ),
              2,
            ),
            De = xe[0],
            Ie = xe[1];
          d.useImperativeHandle(t, function () {
            return {
              focus: function () {
                Q.current.focus(0);
              },
              blur: function () {
                var e = document.activeElement;
                Z.current.contains(e) && (null == e || e.blur());
              },
            };
          }),
            d.useEffect(function () {
              f && Q.current.focus(0);
            }, []);
          var Me = d.useMemo(
            function () {
              return {
                min: ee,
                max: te,
                direction: J,
                disabled: l,
                keyboard: c,
                step: ne,
                included: F,
                includedStart: De,
                includedEnd: Ie,
                range: k,
                tabIndex: q,
                ariaLabelForHandle: Y,
                ariaLabelledByForHandle: X,
                ariaValueTextFormatterForHandle: $,
              };
            },
            [ee, te, J, l, c, ne, F, De, Ie, k, q, Y, X, $],
          );
          return d.createElement(
            qh.Provider,
            { value: Me },
            d.createElement(
              'div',
              {
                ref: Z,
                className: es()(
                  i,
                  a,
                  ((n = {}), is(n, ''.concat(i, '-disabled'), l), is(n, ''.concat(i, '-vertical'), P), is(n, ''.concat(i, '-horizontal'), !P), is(n, ''.concat(i, '-with-marks'), ie.length), n),
                ),
                style: o,
                onMouseDown: function (e) {
                  e.preventDefault();
                  var t,
                    n = Z.current.getBoundingClientRect(),
                    r = n.width,
                    i = n.height,
                    a = n.left,
                    o = n.top,
                    s = n.bottom,
                    l = n.right,
                    u = e.clientX,
                    c = e.clientY;
                  switch (J) {
                    case 'btt':
                      t = (s - c) / i;
                      break;
                    case 'ttb':
                      t = (c - o) / i;
                      break;
                    case 'rtl':
                      t = (l - u) / r;
                      break;
                    default:
                      t = (u - a) / r;
                  }
                  me(se(ee + t * (te - ee)));
                },
              },
              d.createElement('div', { className: ''.concat(i, '-rail'), style: z }),
              d.createElement(ap, { prefixCls: i, style: B, values: Ce, startPoint: N, onStartMove: be ? Le : null }),
              d.createElement(up, { prefixCls: i, marks: ie, dots: j, style: H, activeStyle: V }),
              d.createElement(np, {
                ref: Q,
                prefixCls: i,
                style: U,
                values: we,
                draggingIndex: ke,
                onStartMove: Le,
                onOffsetChange: function (e, t) {
                  if (!l) {
                    var n = le(fe, e, t);
                    null == A || A(pe(fe)), ve(n.values), null == L || L(pe(n.values)), _e(n.value);
                  }
                },
                onFocus: h,
                onBlur: p,
                handleRender: K,
              }),
              d.createElement(sp, { prefixCls: i, marks: ie, onClick: me }),
            ),
          );
        });
        var dp = cp,
          fp = d.createContext(!1),
          hp = fp;
        var pp = d.forwardRef(function (e, t) {
            var n = e.open,
              r = (0, d.useRef)(null),
              i = (0, d.useRef)(null);
            function a() {
              Su.cancel(i.current), (i.current = null);
            }
            return (
              d.useEffect(
                function () {
                  return (
                    n
                      ? (i.current = Su(function () {
                          var e;
                          null === (e = r.current) || void 0 === e || e.forceAlign(), (i.current = null);
                        }))
                      : a(),
                    a
                  );
                },
                [n, e.title],
              ),
              d.createElement(jh, Object.assign({ ref: ks(r, t) }, e))
            );
          }),
          vp = function (e) {
            var t,
              n,
              r,
              i,
              a = e.componentCls,
              o = e.controlSize,
              s = e.dotSize,
              l = e.marginFull,
              u = e.marginPart,
              c = e.colorFillContentHover;
            return R()(
              {},
              a,
              Object.assign(
                Object.assign({}, ph(e)),
                ((i = { position: 'relative', height: o, margin: ''.concat(u, 'px ').concat(l, 'px'), padding: 0, cursor: 'pointer', touchAction: 'none' }),
                R()(i, '&-vertical', { margin: ''.concat(l, 'px ').concat(u, 'px') }),
                R()(i, ''.concat(a, '-rail'), {
                  position: 'absolute',
                  backgroundColor: e.colorFillTertiary,
                  borderRadius: e.borderRadiusXS,
                  transition: 'background-color '.concat(e.motionDurationMid),
                }),
                R()(i, ''.concat(a, '-track'), {
                  position: 'absolute',
                  backgroundColor: e.colorPrimaryBorder,
                  borderRadius: e.borderRadiusXS,
                  transition: 'background-color '.concat(e.motionDurationMid),
                }),
                R()(
                  i,
                  '&:hover',
                  ((t = {}),
                  R()(t, ''.concat(a, '-rail'), { backgroundColor: e.colorFillSecondary }),
                  R()(t, ''.concat(a, '-track'), { backgroundColor: e.colorPrimaryBorderHover }),
                  R()(t, ''.concat(a, '-dot'), { borderColor: c }),
                  R()(t, ''.concat(a, '-handle::after'), { boxShadow: '0 0 0 '.concat(e.handleLineWidth, 'px ').concat(e.colorPrimaryBorderHover) }),
                  R()(t, ''.concat(a, '-dot-active'), { borderColor: e.colorPrimary }),
                  t),
                ),
                R()(
                  i,
                  ''.concat(a, '-handle'),
                  ((n = { position: 'absolute', width: e.handleSize, height: e.handleSize, outline: 'none' }),
                  R()(n, ''.concat(a, '-dragging'), { zIndex: 1 }),
                  R()(n, '&::before', {
                    content: '""',
                    position: 'absolute',
                    insetInlineStart: -e.handleLineWidth,
                    insetBlockStart: -e.handleLineWidth,
                    width: e.handleSize + 2 * e.handleLineWidth,
                    height: e.handleSize + 2 * e.handleLineWidth,
                    backgroundColor: 'transparent',
                  }),
                  R()(n, '&::after', {
                    content: '""',
                    position: 'absolute',
                    insetBlockStart: 0,
                    insetInlineStart: 0,
                    width: e.handleSize,
                    height: e.handleSize,
                    backgroundColor: e.colorBgElevated,
                    boxShadow: '0 0 0 '.concat(e.handleLineWidth, 'px ').concat(e.colorPrimaryBorder),
                    borderRadius: '50%',
                    cursor: 'pointer',
                    transition: '\n            inset-inline-start '
                      .concat(e.motionDurationMid, ',\n            inset-block-start ')
                      .concat(e.motionDurationMid, ',\n            width ')
                      .concat(e.motionDurationMid, ',\n            height ')
                      .concat(e.motionDurationMid, ',\n            box-shadow ')
                      .concat(e.motionDurationMid, '\n          '),
                  }),
                  R()(n, '&:hover, &:active, &:focus', {
                    '&::before': {
                      insetInlineStart: -((e.handleSizeHover - e.handleSize) / 2 + e.handleLineWidthHover),
                      insetBlockStart: -((e.handleSizeHover - e.handleSize) / 2 + e.handleLineWidthHover),
                      width: e.handleSizeHover + 2 * e.handleLineWidthHover,
                      height: e.handleSizeHover + 2 * e.handleLineWidthHover,
                    },
                    '&::after': {
                      boxShadow: '0 0 0 '.concat(e.handleLineWidthHover, 'px ').concat(e.colorPrimary),
                      width: e.handleSizeHover,
                      height: e.handleSizeHover,
                      insetInlineStart: (e.handleSize - e.handleSizeHover) / 2,
                      insetBlockStart: (e.handleSize - e.handleSizeHover) / 2,
                    },
                  }),
                  n),
                ),
                R()(i, ''.concat(a, '-mark'), { position: 'absolute', fontSize: e.fontSize }),
                R()(i, ''.concat(a, '-mark-text'), {
                  position: 'absolute',
                  display: 'inline-block',
                  color: e.colorTextDescription,
                  textAlign: 'center',
                  wordBreak: 'keep-all',
                  cursor: 'pointer',
                  userSelect: 'none',
                  '&-active': { color: e.colorText },
                }),
                R()(i, ''.concat(a, '-step'), { position: 'absolute', background: 'transparent', pointerEvents: 'none' }),
                R()(i, ''.concat(a, '-dot'), {
                  position: 'absolute',
                  width: s,
                  height: s,
                  backgroundColor: e.colorBgElevated,
                  border: ''.concat(e.handleLineWidth, 'px solid ').concat(e.colorBorderSecondary),
                  borderRadius: '50%',
                  cursor: 'pointer',
                  transition: 'border-color '.concat(e.motionDurationSlow),
                  pointerEvents: 'auto',
                  '&-active': { borderColor: e.colorPrimaryBorder },
                }),
                R()(
                  i,
                  '&'.concat(a, '-disabled'),
                  ((r = { cursor: 'not-allowed' }),
                  R()(r, ''.concat(a, '-rail'), { backgroundColor: ''.concat(e.colorFillSecondary, ' !important') }),
                  R()(r, ''.concat(a, '-track'), { backgroundColor: ''.concat(e.colorTextDisabled, ' !important') }),
                  R()(r, '\n          '.concat(a, '-dot\n        '), { backgroundColor: e.colorBgElevated, borderColor: e.colorTextDisabled, boxShadow: 'none', cursor: 'not-allowed' }),
                  R()(r, ''.concat(a, '-handle::after'), {
                    backgroundColor: e.colorBgElevated,
                    cursor: 'not-allowed',
                    width: e.handleSize,
                    height: e.handleSize,
                    boxShadow: '0 0 0 '.concat(e.handleLineWidth, 'px ').concat(new $f(e.colorTextDisabled).onBackground(e.colorBgContainer).toHexShortString()),
                    insetInlineStart: 0,
                    insetBlockStart: 0,
                  }),
                  R()(r, '\n          '.concat(a, '-mark-text,\n          ').concat(a, '-dot\n        '), { cursor: 'not-allowed !important' }),
                  r),
                ),
                i),
              ),
            );
          },
          mp = function (e, t) {
            var n,
              r,
              i,
              a,
              o = e.componentCls,
              s = e.railSize,
              l = e.handleSize,
              u = e.dotSize,
              c = t ? 'paddingBlock' : 'paddingInline',
              d = t ? 'width' : 'height',
              f = t ? 'height' : 'width',
              h = t ? 'insetBlockStart' : 'insetInlineStart',
              p = t ? 'top' : 'insetInlineStart';
            return (
              (a = {}),
              R()(a, c, s),
              R()(a, f, 3 * s),
              R()(a, ''.concat(o, '-rail'), ((n = {}), R()(n, d, '100%'), R()(n, f, s), n)),
              R()(a, ''.concat(o, '-track'), R()({}, f, s)),
              R()(a, ''.concat(o, '-handle'), R()({}, h, (3 * s - l) / 2)),
              R()(a, ''.concat(o, '-mark'), ((r = { insetInlineStart: 0, top: 0 }), R()(r, p, l), R()(r, d, '100%'), r)),
              R()(a, ''.concat(o, '-step'), ((i = { insetInlineStart: 0, top: 0 }), R()(i, p, s), R()(i, d, '100%'), R()(i, f, s), i)),
              R()(a, ''.concat(o, '-dot'), R()({ position: 'absolute' }, h, (s - u) / 2)),
              a
            );
          },
          gp = function (e) {
            var t = e.componentCls,
              n = e.marginPartWithMark;
            return R()({}, ''.concat(t, '-horizontal'), Object.assign(Object.assign({}, mp(e, !0)), R()({}, '&'.concat(t, '-with-marks'), { marginBottom: n })));
          },
          yp = function (e) {
            var t = e.componentCls;
            return R()({}, ''.concat(t, '-vertical'), Object.assign(Object.assign({}, mp(e, !1)), { height: '100%' }));
          },
          _p = Oh(
            'Slider',
            function (e) {
              var t = Ih(e, { marginPart: (e.controlHeight - e.controlSize) / 2, marginFull: e.controlSize / 2, marginPartWithMark: e.controlHeightLG - e.controlSize });
              return [vp(t), gp(t), yp(t)];
            },
            function (e) {
              var t = e.controlHeightLG / 4;
              return { controlSize: t, railSize: 4, handleSize: t, handleSizeHover: e.controlHeightSM / 2, dotSize: 8, handleLineWidth: e.lineWidth + 1, handleLineWidthHover: e.lineWidth + 3 };
            },
          ),
          bp = function (e, t) {
            var n = {};
            for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
            if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
              var i = 0;
              for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
            }
            return n;
          },
          Ep = function (e) {
            return 'number' == typeof e ? e.toString() : '';
          },
          Sp = d.forwardRef(function (e, t) {
            var n = e.prefixCls,
              i = e.range,
              a = e.className,
              o = e.rootClassName,
              s = e.disabled,
              l = e.tooltipPrefixCls,
              c = e.tipFormatter,
              f = e.tooltipVisible,
              h = e.getTooltipPopupContainer,
              p = e.tooltipPlacement,
              v = bp(e, ['prefixCls', 'range', 'className', 'rootClassName', 'disabled', 'tooltipPrefixCls', 'tipFormatter', 'tooltipVisible', 'getTooltipPopupContainer', 'tooltipPlacement']),
              m = d.useContext(Hc),
              g = m.getPrefixCls,
              y = m.direction,
              _ = m.getPopupContainer,
              b = d.useContext(hp),
              E = null != s ? s : b,
              S = d.useState({}),
              k = r()(S, 2),
              T = k[0],
              w = k[1],
              A = function (e, t) {
                w(function (n) {
                  return Object.assign(Object.assign({}, n), R()({}, e, t));
                });
              },
              L = function (e, t) {
                return e || (t ? ('rtl' === y ? 'left' : 'right') : 'top');
              },
              C = g('slider', n),
              x = _p(C),
              D = r()(x, 2),
              I = D[0],
              M = D[1],
              P = es()(a, o, R()({}, ''.concat(C, '-rtl'), 'rtl' === y), M);
            'rtl' !== y || v.vertical || (v.reverse = !v.reverse);
            var O = d.useMemo(
                function () {
                  return i ? ('object' === u()(i) ? [!0, i.draggableTrack] : [!0, !1]) : [!1];
                },
                [i],
              ),
              F = r()(O, 2),
              N = F[0],
              B = F[1];
            return I(
              d.createElement(
                dp,
                Object.assign({}, v, {
                  step: v.step,
                  range: N,
                  draggableTrack: B,
                  className: P,
                  disabled: E,
                  ref: t,
                  prefixCls: C,
                  handleRender: function (t, n) {
                    var r,
                      i,
                      a = n.index,
                      o = n.dragging,
                      s = e.tooltip,
                      u = void 0 === s ? {} : s,
                      v = e.vertical,
                      m = Object.assign({}, u),
                      y = m.open,
                      b = m.placement,
                      E = m.getPopupContainer,
                      S = m.prefixCls,
                      k = m.formatter,
                      w = !!(i = k || null === k ? k : c || null === c ? c : Ep) && (T[a] || o),
                      R = null !== (r = null != y ? y : f) && void 0 !== r ? r : void 0 === y && w,
                      x = Object.assign(Object.assign({}, t.props), {
                        onMouseEnter: function () {
                          return A(a, !0);
                        },
                        onMouseLeave: function () {
                          return A(a, !1);
                        },
                      }),
                      D = g('tooltip', null != S ? S : l);
                    return d.createElement(
                      pp,
                      { prefixCls: D, title: i ? i(n.value) : '', open: R, placement: L(null != b ? b : p, v), key: a, overlayClassName: ''.concat(C, '-tooltip'), getPopupContainer: E || h || _ },
                      d.cloneElement(t, x),
                    );
                  },
                }),
              ),
            );
          });
        var kp = Sp;
        function Tp(e) {
          var t,
            n = e.api,
            i = e.style,
            a = (0, d.useState)(Math.round(null !== (t = null == n ? void 0 : n.getVolume()) && void 0 !== t ? t : 0)),
            o = r()(a, 2),
            s = o[0],
            l = o[1],
            u = Zo(),
            c = (0, d.useMemo)(function () {
              return null != n && n.muted ? 0 : s;
            }, void 0);
          return (
            y(
              function () {
                return null == n ? void 0 : n.setVolume(s / 100);
              },
              [s],
            ),
            (0, Io.jsx)(jh, {
              arrow: !1,
              overlayClassName: 'lm-player-volume-popup',
              title: (0, Io.jsx)(kp, {
                onChange: function (e) {
                  null != n && n.muted && (null == n || n.unmute()), l(e), u();
                },
                vertical: !0,
                value: s,
              }),
              children: (0, Io.jsx)(Ko, {
                style: i,
                type: 0 !== c ? 'lm-player-volume-open' : 'lm-player-volume-close',
                onClick: function () {
                  n && (n.muted ? (n.unmute(), l(100)) : (n.mute(), l(0)), u());
                },
              }),
            })
          );
        }
        var wp = d.memo(Tp);
        var Ap = function (e) {
            var t = e.reload,
              n = e.leftExtContents,
              i = e.leftMidExtContents,
              a = e.hideTimeProgress,
              o = e.oneFpsPlay,
              s = (0, d.useContext)(Po),
              l = s.api,
              u = s.container,
              c = s.isLive,
              f = s.isFpsPlay,
              h = s.event,
              p = (0, d.useState)(Date.now()),
              v = r()(p, 2),
              m = v[0],
              g = v[1],
              y = function () {
                return g(Date.now());
              };
            No('play', y), No('pause', y), No('volumechange', y);
            var _ = null == u ? void 0 : u.querySelector('video'),
              b = (0, d.useMemo)(
                function () {
                  return null == _ ? void 0 : _.paused;
                },
                [m, _],
              ),
              E = (0, d.useMemo)(
                function () {
                  return b ? 'lm-player-Play_Main' : 'lm-player-Pause_Main';
                },
                [b],
              ),
              S = (0, d.useMemo)(
                function () {
                  return b ? '播放' : '暂停';
                },
                [b],
              ),
              k = (0, d.useCallback)(
                function () {
                  if (null != _ && _.paused) {
                    var e,
                      t = null !== (e = null == l ? void 0 : l.getSecondsLoaded()) && void 0 !== e ? e : 1;
                    null == l || l.seekTo(t - 1), null == l || l.play();
                  } else null == l || l.pause();
                },
                [_, l],
              );
            return (0, Io.jsxs)('div', {
              className: 'contraller-left-bar',
              children: [
                n,
                !f && (0, Io.jsx)(qo, { children: (0, Io.jsx)(Ko, { onClick: k, type: E, title: S }) }),
                (0, Io.jsx)(qo, { children: (0, Io.jsx)(wp, { api: l }) }),
                !c && !a && (0, Io.jsx)(Qo, {}),
                (0, Io.jsx)(qo, {
                  children: (0, Io.jsx)(Ko, {
                    onClick: function () {
                      null == h || h.emit(wo.CLEAR_ERROR_TIMER), null == h || h.emit(wo.RELOAD_SUCCESS), t();
                    },
                    type: 'lm-player-Refresh_Main',
                    title: '重载',
                  }),
                }),
                !c &&
                  o &&
                  (0, Io.jsx)(qo, {
                    children: (0, Io.jsx)(Ko, { onClick: f ? (null == l ? void 0 : l.closeFpsPlay) : null == l ? void 0 : l.openFpsPlay, type: 'lm-player-zhuzhenplay', title: '逐帧播放' }),
                  }),
                i,
              ],
            });
          },
          Lp = function (e) {
            var t = p(e);
            (0, d.useEffect)(function () {
              return function () {
                t.current();
              };
            }, []);
          },
          Rp = !('undefined' == typeof window || !window.document || !window.document.createElement);
        function Cp(e, t) {
          if (Rp) return e ? (v(e) ? e() : 'current' in e ? e.current : e) : t;
        }
        var xp = [
            ['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],
            ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],
            ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],
            ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],
            ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError'],
          ],
          Dp = (function () {
            if ('undefined' == typeof document) return !1;
            for (var e = xp[0], t = {}, r = 0, i = xp; r < i.length; r++) {
              var a = i[r];
              if ((null == a ? void 0 : a[1]) in document) {
                var o,
                  s = F(a.entries());
                try {
                  for (s.s(); !(o = s.n()).done; ) {
                    var l = n(o.value, 2),
                      u = l[0],
                      c = l[1];
                    t[e[u]] = c;
                  }
                } catch (e) {
                  s.e(e);
                } finally {
                  s.f();
                }
                return t;
              }
            }
            return !1;
          })(),
          Ip = { change: Dp.fullscreenchange, error: Dp.fullscreenerror },
          Mp = {
            request: function () {
              var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document.documentElement,
                t = arguments.length > 1 ? arguments[1] : void 0;
              return new Promise(function (n, r) {
                var i = function e() {
                  Mp.off('change', e), n();
                };
                Mp.on('change', i);
                var a = e[Dp.requestFullscreen](t);
                a instanceof Promise && a.then(i).catch(r);
              });
            },
            exit: function () {
              return new Promise(function (e, t) {
                if (Mp.isFullscreen) {
                  var n = function t() {
                    Mp.off('change', t), e();
                  };
                  Mp.on('change', n);
                  var r = document[Dp.exitFullscreen]();
                  r instanceof Promise && r.then(n).catch(t);
                } else e();
              });
            },
            toggle: function (e, t) {
              return Mp.isFullscreen ? Mp.exit() : Mp.request(e, t);
            },
            onchange: function (e) {
              Mp.on('change', e);
            },
            onerror: function (e) {
              Mp.on('error', e);
            },
            on: function (e, t) {
              var n = Ip[e];
              n && document.addEventListener(n, t, !1);
            },
            off: function (e, t) {
              var n = Ip[e];
              n && document.removeEventListener(n, t, !1);
            },
            raw: Dp,
          };
        Object.defineProperties(Mp, {
          isFullscreen: {
            get: function () {
              return Boolean(document[Dp.fullscreenElement]);
            },
          },
          element: {
            enumerable: !0,
            get: function () {
              var e;
              return null !== (e = document[Dp.fullscreenElement]) && void 0 !== e ? e : void 0;
            },
          },
          isEnabled: {
            enumerable: !0,
            get: function () {
              return Boolean(document[Dp.fullscreenEnabled]);
            },
          },
        }),
          Dp || (Mp = { isEnabled: !1 });
        var Pp = Mp,
          Op = function (e, t) {
            var n = t || {},
              i = n.onExit,
              a = n.onEnter,
              o = p(i),
              s = p(a),
              l = (0, d.useState)(!1),
              u = r()(l, 2),
              c = u[0],
              f = u[1],
              h = function t() {
                if (Pp.isEnabled) {
                  var n,
                    r,
                    i = Cp(e),
                    a = document.fullscreenElement === i;
                  if (a) null === (n = s.current) || void 0 === n || n.call(s);
                  else Pp.off('change', t), null === (r = o.current) || void 0 === r || r.call(o);
                  f(a);
                }
              },
              v = function () {
                var t = Cp(e);
                if (t && Pp.isEnabled)
                  try {
                    Pp.request(t), Pp.on('change', h);
                  } catch (e) {
                    console.error(e);
                  }
              },
              g = function () {
                Pp.isEnabled && Pp.exit();
              };
            return (
              Lp(function () {
                Pp.isEnabled && Pp.off('change', h);
              }),
              [
                c,
                {
                  enterFullscreen: m(v),
                  exitFullscreen: m(g),
                  toggleFullscreen: m(function () {
                    c ? g() : v();
                  }),
                  isEnabled: Pp.isEnabled,
                },
              ]
            );
          };
        var Fp = function (e) {
          var t = e.rightExtContents,
            n = e.rightMidExtContents,
            i = (0, d.useContext)(Po).container,
            a = Op(i),
            o = r()(a, 2),
            s = o[0],
            l = o[1],
            u = l.enterFullscreen,
            c = l.exitFullscreen,
            f = s ? c : u;
          return (0, Io.jsxs)('div', {
            className: 'contraller-right-bar',
            children: [
              n,
              (0, Io.jsx)(qo, { children: (0, Io.jsx)(Ko, { title: s ? '窗口' : '全屏', onClick: f, type: s ? 'lm-player-S_View_ScreenViewExit' : 'lm-player-S_View_ScreenViewFull' }) }),
              t,
            ],
          });
        };
        var Np = function (e) {
            var t = e.rightExtContents,
              n = e.rightMidExtContents,
              r = e.visibel,
              i = e.leftExtContents,
              a = e.leftMidExtContents,
              o = e.reload,
              s = e.hideTimeProgress,
              l = e.oneFpsPlay;
            return (0, Io.jsx)(Io.Fragment, {
              children: (0, Io.jsxs)('div', {
                className: 'contraller-bar-layout '.concat(r ? '' : 'hide-contraller-bar'),
                children: [
                  (0, Io.jsx)(Ap, { oneFpsPlay: l, hideTimeProgress: s, reload: o, leftMidExtContents: a, leftExtContents: i }),
                  (0, Io.jsx)(Fp, { rightExtContents: t, rightMidExtContents: n }),
                ],
              }),
            });
          },
          Bp = function (e) {
            (0, d.useEffect)(function () {
              null == e || e();
            }, []);
          };
        function Up(e, t) {
          if (e === t) return !0;
          for (var n = 0; n < e.length; n++) if (!Object.is(e[n], t[n])) return !1;
          return !0;
        }
        var zp = (function (e) {
          return function (t, n, r) {
            var i = (0, d.useRef)(!1),
              a = (0, d.useRef)([]),
              o = (0, d.useRef)([]),
              s = (0, d.useRef)();
            e(function () {
              var e,
                l = (Array.isArray(r) ? r : [r]).map(function (e) {
                  return Cp(e);
                });
              if (!i.current) return (i.current = !0), (a.current = l), (o.current = n), void (s.current = t());
              (l.length === a.current.length && Up(l, a.current) && Up(n, o.current)) || (null === (e = s.current) || void 0 === e || e.call(s), (a.current = l), (o.current = n), (s.current = t()));
            }),
              Lp(function () {
                var e;
                null === (e = s.current) || void 0 === e || e.call(s), (i.current = !1);
              });
          };
        })(d.useEffect);
        var Hp = function (e, t, n) {
          void 0 === n && (n = {});
          var r = p(t);
          zp(
            function () {
              var t = Cp(n.target, window);
              if (null == t ? void 0 : t.addEventListener) {
                var i = function (e) {
                  return r.current(e);
                };
                return (
                  t.addEventListener(e, i, { capture: n.capture, once: n.once, passive: n.passive }),
                  function () {
                    t.removeEventListener(e, i, { capture: n.capture });
                  }
                );
              }
            },
            [e, n.capture, n.once, n.passive],
            n.target,
          );
        };
        var Vp = function (e) {
          var t = e.children,
            n = (0, d.useContext)(Po),
            i = n.event,
            a = n.container,
            o = (0, d.useRef)(),
            s = (0, d.useState)(!0),
            l = r()(s, 2),
            u = l[0],
            c = l[1],
            f = function () {
              clearTimeout(o.current),
                (o.current = setTimeout(function () {
                  c(!1), null == i || i.emit(wo.HIDE_CONTRALLER);
                }, 3e3));
            };
          return (
            Bp(function () {
              return f();
            }),
            Hp(
              'mouseenter',
              function () {
                clearTimeout(o.current), c(!0), null == i || i.emit(wo.SHOW_CONTRALLER);
              },
              { target: a },
            ),
            Hp('mouseleave', f, { target: a }),
            (0, Io.jsx)(Io.Fragment, {
              children: d.Children.map(t, function (e) {
                return d.isValidElement(e) ? d.cloneElement(e, { visibel: u }) : e;
              }),
            })
          );
        };
        function Gp() {
          return (0, Io.jsx)(Io.Fragment, {});
        }
        var jp = function (e) {
            var t = e.event,
              n = e.reload,
              i = e.unload,
              a = e.errorReloadTimer,
              o = e.flv,
              s = e.hls,
              l = e.errorHandleAdapter,
              u = (0, d.useState)(0),
              c = r()(u, 2),
              f = c[0],
              h = c[1],
              p = (0, d.useRef)(null),
              v = (0, d.useRef)(),
              m = function () {
                for (var e, t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
                (n[2] && n[2].msg && n[2].msg.includes('Unsupported audio')) || ((e = console).error.apply(e, n), (p.current = n), (null != l && l(n)) || h(f + 1));
              },
              g = function () {
                return h(0);
              };
            No('error', m, t),
              No(
                'canplay',
                function () {
                  f > 0 && (console.warn('视频重连成功！'), null == t || t.emit(wo.RELOAD_SUCCESS), g());
                },
                t,
              ),
              Bo(wo.ERROR, m, t),
              Bo(wo.CLEAR_ERROR_TIMER, g, t),
              (0, d.useEffect)(
                function () {
                  o && o.on(M().Events.ERROR, m), s && s.on(To.Events.ERROR, m);
                },
                [o, s],
              ),
              (0, d.useEffect)(
                function () {
                  if (0 !== f)
                    return f > a
                      ? (i(), void (null == t || t.emit(wo.RELOAD_FAIL)))
                      : (console.warn('视频播放出错，正在进行重连'.concat(f)),
                        (v.current = setTimeout(function () {
                          null == t || t.emit.apply(t, [wo.ERROR_RELOAD, f].concat(O()(p.current))), n();
                        }, 2e3)),
                        function () {
                          clearTimeout(v.current);
                        });
                },
                [f, t, o, s],
              );
          },
          Kp = 'object' == ('undefined' == typeof global ? 'undefined' : l(global)) && global && global.Object === Object && global,
          Wp = 'object' == ('undefined' == typeof self ? 'undefined' : l(self)) && self && self.Object === Object && self,
          qp = (Kp || Wp || Function('return this')()).Symbol,
          Yp = Object.prototype,
          Xp = Yp.hasOwnProperty,
          $p = Yp.toString,
          Qp = qp ? qp.toStringTag : void 0;
        var Zp = function (e) {
            var t = Xp.call(e, Qp),
              n = e[Qp];
            try {
              e[Qp] = void 0;
              var r = !0;
            } catch (e) {}
            var i = $p.call(e);
            return r && (t ? (e[Qp] = n) : delete e[Qp]), i;
          },
          Jp = Object.prototype.toString;
        var ev = function (e) {
            return Jp.call(e);
          },
          tv = qp ? qp.toStringTag : void 0;
        var nv = function (e) {
          return null == e ? (void 0 === e ? '[object Undefined]' : '[object Null]') : tv && tv in Object(e) ? Zp(e) : ev(e);
        };
        var rv = function (e) {
          return null != e && 'object' == l(e);
        };
        var iv = function (e) {
          return 'number' == typeof e || (rv(e) && '[object Number]' == nv(e));
        };
        var av = function (e) {
          if ((e.id, 'undefined' === ('undefined' == typeof cancelAnimationFrame ? 'undefined' : u()(cancelAnimationFrame)))) return clearInterval(e.id);
          cancelAnimationFrame(e.id);
        };
        var ov = function (e, t, n) {
          var r,
            i = null == n ? void 0 : n.immediate,
            a = null !== (r = null == n ? void 0 : n.deps) && void 0 !== r ? r : [],
            o = p(e),
            s = (0, d.useRef)();
          return (
            (0, d.useEffect)(function () {
              if (iv(t) && !(t < 0))
                return (
                  i && o.current(),
                  (s.current = (function (e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    if ('undefined' === ('undefined' == typeof requestAnimationFrame ? 'undefined' : u()(requestAnimationFrame))) return { id: setInterval(e, t) };
                    var n = new Date().getTime(),
                      r = { id: 0 },
                      i = function i() {
                        new Date().getTime() - n >= t && (e(), (n = new Date().getTime())), (r.id = requestAnimationFrame(i));
                      };
                    return (r.id = requestAnimationFrame(i)), r;
                  })(function () {
                    o.current();
                  }, t)),
                  function () {
                    s.current && av(s.current);
                  }
                );
            }, [t].concat(O()(a))),
            (0, d.useCallback)(function () {
              s.current && av(s.current);
            }, [])
          );
        };
        var sv = function (e) {
            var t = e.api,
              n = e.event,
              i = e.fpsDelay,
              a = e.fps,
              o = (0, d.useState)(Date.now()),
              s = r()(o, 2),
              l = s[0],
              u = s[1],
              c = (0, d.useRef)(null),
              f = (0, d.useRef)(),
              h = (0, d.useMemo)(
                function () {
                  return a ? 1 / a : 0.03333333333333333;
                },
                [a],
              );
            return (
              (0, d.useEffect)(
                function () {
                  var e = function () {
                    if (c.current && null != n && n.video && t) {
                      var e = n.video,
                        r = t.getCurrentTime() + h;
                      (e.currentTime = r), e.currentTime >= t.getDuration() && (clearInterval(f.current), (e.currentTime = 0), n.emit(wo.PLAY_ENDED));
                      var i,
                        a,
                        o = c.current,
                        s = o.getContext('2d'),
                        l = e.getBoundingClientRect(),
                        u = l.width,
                        d = l.height;
                      if (((o.width = u), (o.height = d), 'fill' === ((a = 'object-fit'), (i = e) ? window.getComputedStyle(i).getPropertyValue(a) : ''))) null == s || s.drawImage(e, 0, 0, u, d);
                      else {
                        var p = e.videoWidth,
                          v = (d / e.videoHeight) * p,
                          m = (u - v) / 2;
                        null == s || s.drawImage(e, m, 0, v, d);
                      }
                    }
                  };
                  return (
                    e(),
                    (f.current = setInterval(e, i)),
                    function () {
                      clearInterval(f.current);
                    }
                  );
                },
                [t, n, i, l, h],
              ),
              Bo(wo.CANVAS_PAUSE, function () {
                clearInterval(f.current);
              }),
              Bo(wo.CANVAS_PLAY, function () {
                u(Date.now());
              }),
              ov(function () {
                return null != t && t.paused ? null : null == t ? void 0 : t.pause();
              }, 10),
              (0, Io.jsx)('canvas', { className: 'fps-play-canvas', ref: c })
            );
          },
          lv = function () {
            return Rp ? document.visibilityState : 'visible';
          };
        var uv = function () {
          var e = c(
              (0, d.useState)(function () {
                return lv();
              }),
              2,
            ),
            t = e[0],
            n = e[1];
          return (
            Hp(
              'visibilitychange',
              function () {
                n(lv());
              },
              {
                target: function () {
                  return document;
                },
              },
            ),
            t
          );
        };
        var cv = function (e) {
          if ((e.id, 'undefined' === ('undefined' == typeof cancelAnimationFrame ? 'undefined' : u()(cancelAnimationFrame)))) return clearInterval(e.id);
          cancelAnimationFrame(e.id);
        };
        var dv = function (e, t, n) {
          var r = null == n ? void 0 : n.immediate,
            i = p(e),
            a = (0, d.useRef)();
          return (
            (0, d.useEffect)(
              function () {
                if (!('number' != typeof t || t < 0))
                  return (
                    r && i.current(),
                    (a.current = (function (e, t) {
                      if ((void 0 === t && (t = 0), 'undefined' === ('undefined' == typeof requestAnimationFrame ? 'undefined' : u()(requestAnimationFrame)))) return { id: setInterval(e, t) };
                      var n = new Date().getTime(),
                        r = { id: 0 };
                      return (
                        (r.id = requestAnimationFrame(function i() {
                          new Date().getTime() - n >= t && (e(), (n = new Date().getTime())), (r.id = requestAnimationFrame(i));
                        })),
                        r
                      );
                    })(function () {
                      i.current();
                    }, t)),
                    function () {
                      a.current && cv(a.current);
                    }
                  );
              },
              [t],
            ),
            (0, d.useCallback)(function () {
              a.current && cv(a.current);
            }, [])
          );
        };
        var fv = function (e) {
          var t = e.api,
            n = e.event,
            r = e.isLive,
            i = uv(),
            a = (0, d.useRef)(0),
            o = function () {
              var e;
              if (r && 'visible' === i && t) {
                var n = null !== (e = t.getCurrentTime()) && void 0 !== e ? e : 0,
                  a = t.getSecondsLoaded();
                a - n > 5 &&
                  (console.debug(
                    '当前延时过大current->'
                      .concat(n, ' buffered->')
                      .concat(a, ', 基于视频当前缓存时间更新当前播放时间 updateTime -> ')
                      .concat(a - 2),
                  ),
                  t.seekTo(a - 2 > 0 ? a - 2 : 0),
                  t.play());
              }
            };
          y(
            function () {
              return o();
            },
            [i],
          ),
            dv(function () {
              var e;
              return (a.current = null !== (e = null == t ? void 0 : t.getCurrentTime()) && void 0 !== e ? e : 0);
            }, 1e3),
            dv(function () {
              return o();
            }, 3e4),
            dv(function () {
              var e;
              if (t && n) {
                var i = t.getCurrentTime();
                !r || (null !== (e = t.video) && void 0 !== e && e.paused) || i !== a.current || n.emit(wo.ERROR, 'long time no play！');
              }
            }, 2e4);
        };
        var hv = function () {
            var e = (0, d.useContext)(Po).api,
              n = (0, d.useState)({ status: null, errorTimer: 1, loading: !1 }),
              i = r()(n, 2),
              a = i[0],
              o = i[1],
              s = (0, d.useRef)(),
              l = (0, d.useMemo)(
                function () {
                  return 'fail' === a.status
                    ? (console.warn('视频错误，请手动刷新重试！'), '请稍后重试！')
                    : 'reload' === a.status
                    ? (console.warn('第'.concat(a.errorTimer, '次重连')), '正在刷新...')
                    : '';
                },
                [a.errorTimer, a.status],
              ),
              u = function () {
                clearTimeout(s.current),
                  o(function (e) {
                    return t()(t()({}, e), {}, { loading: !1 });
                  });
              },
              c = function () {
                return o(function (e) {
                  return t()(t()({}, e), {}, { status: null });
                });
              };
            No('loadstart', function () {
              clearTimeout(s.current),
                (s.current = setTimeout(function () {
                  return o(function (e) {
                    return t()(t()({}, e), {}, { loading: !0 });
                  });
                }, 200));
            }),
              No('loadeddata', u),
              No('canplay', u),
              Bo(wo.ERROR_RELOAD, function (e) {
                clearTimeout(s.current),
                  o(function () {
                    return { status: 'reload', errorTimer: e, loading: !0 };
                  });
              }),
              Bo(wo.RELOAD_FAIL, function () {
                return o(function (e) {
                  return t()(t()({}, e), {}, { status: 'fail' });
                });
              }),
              Bo(wo.RELOAD_SUCCESS, c),
              Bo(wo.RELOAD, function () {
                return o(function (e) {
                  return t()(t()({}, e), {}, { status: 'reload', loading: !0 });
                });
              }),
              Bo(wo.HISTORY_PLAY_END, function () {
                clearTimeout(s.current),
                  o(function (e) {
                    return t()(t()({}, e), {}, { status: null, loading: !1 });
                  }),
                  null == e || e.pause();
              }),
              Bo(wo.CLEAR_ERROR_TIMER, c);
            var f = a.loading,
              h = a.status;
            return (0, Io.jsxs)('div', {
              className: 'lm-player-message-mask '.concat(f || 'fail' === h ? 'lm-player-mask-loading-animation' : ''),
              children: [
                (0, Io.jsx)(Ko, {
                  type: 'fail' === h ? 'lm-player-YesorNo_No_Dark' : 'lm-player-Loading',
                  className: ''.concat(f && 'fail' !== h ? 'lm-player-loading-animation' : 'fail' === h ? 'lm-player-loadfail' : '', ' lm-player-loading-icon'),
                }),
                (0, Io.jsx)('span', { className: 'lm-player-message', children: l }),
              ],
            });
          },
          pv = ['className', 'url', 'type', 'hideContrallerBar', 'isLive', 'errorReloadTimer', 'children', 'onCanPlayerInit', 'extActions'],
          vv = d.forwardRef(function (e, n) {
            var i,
              a = e.className,
              o = e.url,
              l = e.type,
              u = e.hideContrallerBar,
              c = e.isLive,
              f = e.errorReloadTimer,
              v = e.children,
              g = e.onCanPlayerInit,
              _ = e.extActions,
              b = s()(e, pv),
              E = b.autoPlay,
              S = b.preload,
              k = b.muted,
              T = b.poster,
              w = b.playsInline,
              A = b.loop,
              L = b.rightExtContents,
              R = b.rightMidExtContents,
              C = b.leftExtContents,
              x = b.leftMidExtContents,
              I = b.customTimeLine,
              M = b.flvConfig,
              P = b.hlsConfig,
              O = b.videoEvents,
              F = b.playerEvents,
              N = b.oneFpsPlay,
              B = b.fpsDelay,
              U = b.fps,
              z = (0, d.useState)({ container: void 0, isFpsPlay: !1 }),
              H = r()(z, 2),
              V = H[0],
              G = H[1],
              j = h('fill', 'contain'),
              K = r()(j, 2),
              W = K[0],
              q = K[1].toggle,
              Y = (0, d.useMemo)(
                function () {
                  return (
                    l ||
                    (function (e) {
                      return e ? (e.indexOf('.flv') > -1 ? 'flv' : e.indexOf('.m3u8') > -1 ? 'hls' : 'native') : 'native';
                    })(o)
                  );
                },
                [o, l],
              ),
              X = (0, d.useRef)(null),
              $ = (0, d.useMemo)(
                function () {
                  var e;
                  return V.container && null !== (e = V.container.querySelector('video')) && void 0 !== e ? e : void 0;
                },
                [V.container],
              ),
              Q = (function (e) {
                var t = (0, d.useState)(void 0),
                  n = r()(t, 2),
                  i = n[0],
                  a = n[1];
                return (
                  (0, d.useEffect)(
                    function () {
                      if (e) {
                        var t = new Fo(e);
                        return (
                          a(t),
                          function () {
                            return D(function () {
                              return t.destroy();
                            });
                          }
                        );
                      }
                      console.debug('wait create event...');
                    },
                    [e],
                  ),
                  i
                );
              })($);
            !(function (e, t) {
              (0, d.useEffect)(
                function () {
                  if (e && t)
                    return (
                      t.forEach(function (t) {
                        var n = r()(t, 2),
                          i = n[0],
                          a = n[1];
                        e.addEventListener(i, a);
                      }),
                      function () {
                        t.forEach(function (t) {
                          var n = r()(t, 2),
                            i = n[0],
                            a = n[1];
                          e.removeEventListener(i, a);
                        });
                      }
                    );
                },
                [e],
              );
            })(Q, O),
              Uo(Q, F);
            var Z = (function (e, n, i, a, o, s, l) {
                var u = (0, d.useState)(void 0),
                  c = r()(u, 2),
                  f = c[0],
                  h = c[1],
                  p = (0, d.useState)(Date.now()),
                  v = r()(p, 2),
                  g = v[0],
                  y = v[1],
                  _ = (0, d.useMemo)(
                    function () {
                      return { flvConfig: t()({}, s), hlsConfig: t()({}, l) };
                    },
                    [g],
                  ),
                  b = Do(e, n, i, a, o, _.flvConfig, _.hlsConfig),
                  E = m(function () {
                    return y(Date.now());
                  });
                return (
                  (0, d.useEffect)(
                    function () {
                      if (a) {
                        var e = new xo(a);
                        return (
                          h(e),
                          function () {
                            return D(function () {
                              return e.destroy();
                            });
                          }
                        );
                      }
                      console.debug('wait create api...');
                    },
                    [a, o],
                  ),
                  [f, b, E]
                );
              })(o, Y, c, V.container, null == M ? void 0 : M.mediaDataSource.segments, M, P),
              J = r()(Z, 3),
              ee = J[0],
              te = r()(J[1], 3),
              ne = te[1],
              re = te[2],
              ie = J[2],
              ae = (0, d.useMemo)(
                function () {
                  return !!o || (!(null == M || !M.mediaDataSource.segments) && 'flv' === Y);
                },
                [o, null == M ? void 0 : M.mediaDataSource.segments, Y],
              ),
              oe = p(re),
              se = p(ne);
            (0, d.useEffect)(function () {
              G(function (e) {
                return t()(t()({}, e), {}, { container: X.current });
              });
            }, []),
              (0, d.useEffect)(
                function () {
                  null == Q || Q.emit(wo.CLEAR_ERROR_TIMER);
                },
                [o],
              );
            var le = m(function () {
                ie();
              }),
              ue = m(function () {
                return Ao($, se.current, oe.current);
              }),
              ce = m(function () {
                G(function (e) {
                  return t()(t()({}, e), {}, { isFpsPlay: !0 });
                }),
                  null == ee || ee.pause();
              }),
              de = m(function () {
                G(function (e) {
                  return t()(t()({}, e), {}, { isFpsPlay: !1 });
                }),
                  null == ee || ee.play();
              }),
              fe = (0, d.useMemo)(
                function () {
                  if (ee) {
                    var e = t()({ reload: le, unload: ue, toggleFit: q, openFpsPlay: ce, closeFpsPlay: de }, _);
                    return Co(ee, e);
                  }
                },
                [ee],
              ),
              he = (0, d.useMemo)(
                function () {
                  if (Q) return Co(Q);
                },
                [Q],
              );
            (0, d.useImperativeHandle)(
              n,
              function () {
                return { video: $, container: V.container, api: fe, event: he, plugins: [se.current, oe.current], fit: W };
              },
              [$, V.container, fe, he, W],
            ),
              y(
                function () {
                  return ee && Q && $ ? (null == g ? void 0 : g()) : void 0;
                },
                [ee, Q, $],
              ),
              jp({ unload: ue, flv: se.current, hls: oe.current, event: Q, reload: le, errorReloadTimer: f }),
              fv({ api: ee, event: Q, isLive: c });
            var pe = { autoPlay: !V.isFpsPlay && E, preload: S, muted: !V.isFpsPlay && k, poster: T, controls: !1, playsInline: w, loop: !V.isFpsPlay && A },
              ve = {
                rightExtContents: L,
                rightMidExtContents: R,
                leftMidExtContents: x,
                leftExtContents: C,
                reload: null !== (i = b.reload) && void 0 !== i ? i : le,
                hideTimeProgress: !!I,
                oneFpsPlay: N,
              },
              me = ee && Q;
            return (0,
            Io.jsx)(Oo, { api: fe, event: Q, container: V.container, isLive: c, isFpsPlay: V.isFpsPlay, children: (0, Io.jsxs)('div', { className: 'lm-player-container '.concat(a), ref: X, children: [(0, Io.jsxs)('div', { className: 'player-mask-layout', children: [(0, Io.jsx)('video', t()(t()({}, pe), {}, { style: { objectFit: W, visibility: V.isFpsPlay ? 'hidden' : 'unset' } })), me && ae && V.isFpsPlay ? (0, Io.jsx)(sv, { fps: U, event: Q, api: fe, fpsDelay: B }) : (0, Io.jsx)(Gp, {})] }), me && ae ? (0, Io.jsx)(hv, {}) : (0, Io.jsx)(Gp, {}), me && ae && !u ? (0, Io.jsx)(Vp, { children: (0, Io.jsx)(Np, t()({}, ve)) }) : (0, Io.jsx)(Gp, {}), me ? I || (u ? (0, Io.jsx)(Gp, {}) : (0, Io.jsx)($o, {})) : (0, Io.jsx)(Gp, {}), v] }) });
          });
        vv.defaultProps = {
          isLive: !0,
          errorReloadTimer: 5,
          muted: !0,
          autoPlay: !0,
          playsInline: !1,
          preload: 'auto',
          loop: !1,
          hideContrallerBar: !1,
          className: '',
          flvConfig: { mediaDataSource: {}, config: {} },
          hlsConfig: {},
          extActions: {},
          oneFpsPlay: !1,
          fpsDelay: 500,
          fps: 30,
        };
        var mv = vv,
          gv = mv,
          yv = i(413),
          _v = i.n(yv);
        function bv(e) {
          var t = e.index,
            n = e.segments,
            r = e.begin,
            i = e.current,
            a = e.markTime,
            o = (0, d.useMemo)(
              function () {
                if (0 === t) {
                  var e = r,
                    i = r + (n[0].endTime - n[0].beginTime);
                  return { start: _v()(e).format(Ro), end: _v()(i).format(Ro) };
                }
                var a = n
                    .map(function (e) {
                      return e.endTime - e.beginTime;
                    })
                    .reduce(function (e, n, r) {
                      return r >= t ? e : e + n;
                    }, 0),
                  o = r + a,
                  s = o + (n[t].endTime - n[t].beginTime);
                return { start: _v()(o).format(Ro), end: _v()(s).format(Ro) };
              },
              [t, n, r],
            ),
            s = o.start,
            l = o.end,
            u = (0, d.useMemo)(
              function () {
                var e;
                return !(null === (e = n[t]) || void 0 === e || !e.url);
              },
              [t, n],
            );
          return (0, Io.jsxs)('div', {
            className: 'segment-line-tip-box',
            children: [
              (0, Io.jsx)('div', { style: { fontWeight: 600 }, children: '录像片段信息' }),
              (0, Io.jsxs)('div', { children: ['开始：', s] }),
              (0, Io.jsxs)('div', { children: ['结束：', l] }),
              (0, Io.jsxs)('div', { children: ['刻度：', _v()(a).format(Ro)] }),
              (0, Io.jsxs)('div', { children: ['当前：', _v()(i).format(Ro)] }),
              (0, Io.jsxs)('div', { children: ['状态：', (0, Io.jsx)('span', { style: { color: u ? 'green' : 'red' }, children: u ? '正常' : '缺失' })] }),
            ],
          });
        }
        var Ev = function (e) {
            var n = e.index,
              i = e.segments,
              a = e.duration,
              o = e.begin,
              s = e.seekTo,
              l = (0, d.useState)({ time: 0, markTime: 0, left: -1, visible: !1 }),
              u = r()(l, 2),
              c = u[0],
              f = u[1],
              h = Yo(),
              p = Xo(),
              v = r()(p, 2),
              m = v[0],
              g = v[1],
              y = (0, d.useMemo)(
                function () {
                  return i
                    .map(function (e) {
                      return (e.endTime - e.beginTime) / 1e3;
                    })
                    .reduce(function (e, t, r) {
                      return r >= n ? e : e + t;
                    }, 0);
                },
                [n, i],
              ),
              _ = (0, d.useMemo)(
                function () {
                  return ((m + y) / a) * 100;
                },
                [m, a, y],
              ),
              b = (0, d.useMemo)(
                function () {
                  return ((g + y) / a) * 100;
                },
                [g, a, y],
              );
            return (0, Io.jsx)('div', {
              className: 'player-timeline-layout player-segment-timeline-layout '.concat(0 === h ? 'hide-time-line' : ''),
              onMouseMove: function (e) {
                var n = e.currentTarget.getBoundingClientRect(),
                  r = e.pageX - n.left,
                  i = (r / n.width) * a;
                f(function (e) {
                  return t()(t()({}, e), {}, { left: r, markTime: o + 1e3 * i });
                });
              },
              onMouseOut: function () {
                return (0, d.startTransition)(function () {
                  return f(function (e) {
                    return t()(t()({}, e), {}, { left: -1 });
                  });
                });
              },
              children: (0, Io.jsxs)('div', {
                className: 'segment-line-box',
                children: [
                  i.map(function (e, t) {
                    return (0, Io.jsx)(
                      jh,
                      {
                        title: (0, Io.jsx)(bv, { segments: i, index: t, begin: o, current: 1e3 * m + o, markTime: c.markTime }),
                        children: (0, Io.jsx)('div', {
                          className: 'segment-line-item '.concat(e.url ? '' : 'segment-line-item-none', ' ').concat(t === i.length - 1 ? 'last-segment-line-item' : ''),
                          onClick: function (e) {
                            return (function (e, t) {
                              if (i[t].url) {
                                var n = e.currentTarget.getBoundingClientRect(),
                                  r = e.pageX - n.left,
                                  a = i[t - 1],
                                  l = a ? a.endTime : o,
                                  u = i[t].endTime - i[t].beginTime,
                                  c = (r / n.width) * u;
                                s(Math.round(c + l));
                              }
                            })(e, t);
                          },
                          style: { width: ''.concat(((e.endTime / 1e3 - e.beginTime / 1e3) / a) * 100, '%') },
                        }),
                      },
                      'time-line-'.concat(t),
                    );
                  }),
                  (0, Io.jsx)('div', { className: 'buffer-line', style: { width: ''.concat(b, '%') } }),
                  (0, Io.jsx)('div', { className: 'current-line', style: { width: ''.concat(_, '%') } }),
                  -1 !== c.left && (0, Io.jsx)('span', { className: 'segment-line-mark', style: { left: c.left } }),
                ],
              }),
            });
          },
          Sv = ['segments', 'begin', 'forwordRef', 'defaultIndex', 'onCanPlayerInit', 'customTimeLine'];
        function kv(e) {
          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
          if (!(Array.isArray(e) && e.length > 0)) return t;
          if (e[t].url) return t;
          var n = t + 1;
          return n > e.length ? n : kv(e, n);
        }
        var Tv = function (e) {
            var n = e.segments,
              i = e.begin,
              a = e.forwordRef,
              o = e.defaultIndex,
              l = e.onCanPlayerInit,
              u = e.customTimeLine,
              c = s()(e, Sv),
              f = (0, d.useState)({ seekTime: 0 }),
              h = r()(f, 2),
              v = h[0],
              m = h[1],
              g = p(n),
              y = Zo(),
              _ = (0, d.useRef)(null),
              b = a || _,
              E = b.current || {},
              S = E.api,
              k = E.event,
              T = (0, d.useMemo)(
                function () {
                  return null == n
                    ? void 0
                    : n
                        .map(function (e) {
                          return (e.endTime - e.beginTime) / 1e3;
                        })
                        .reduce(function (e, t) {
                          return e + t;
                        }, 0);
                },
                [n],
              ),
              w = (function (e, n) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                  a = (0, d.useState)({ index: kv(null != n ? n : [], i) }),
                  o = r()(a, 2),
                  s = o[0],
                  l = o[1];
                (0, d.useEffect)(
                  function () {
                    var e = kv(null != n ? n : [], 0);
                    l(function (n) {
                      return t()(t()({}, n), {}, { index: e });
                    });
                  },
                  [n],
                ),
                  (0, d.useEffect)(
                    function () {
                      var e, r;
                      (null == n || null === (e = n[s.index]) || void 0 === e || !e.url) &&
                        s.index < (null !== (r = null == n ? void 0 : n.length) && void 0 !== r ? r : 0) - 1 &&
                        l(function (e) {
                          return t()(t()({}, e), {}, { index: e.index + 1 });
                        });
                    },
                    [n, s.index],
                  );
                var u = function () {
                  return l(function (e) {
                    var r;
                    return t()(t()({}, e), {}, { index: e.index + 1 < (null !== (r = null == n ? void 0 : n.length) && void 0 !== r ? r : 0) ? e.index + 1 : e.index });
                  });
                };
                return (
                  No('ended', u, e),
                  Bo(wo.PLAY_ENDED, u, e),
                  {
                    index: s.index,
                    setIndex: function (e) {
                      return l(function (n) {
                        return t()(t()({}, n), {}, { index: e });
                      });
                    },
                  }
                );
              })(k, n, o),
              A = w.index,
              L = w.setIndex,
              R = (0, d.useMemo)(
                function () {
                  return null != n && n[A] ? n[A].url : void 0;
                },
                [n, A],
              ),
              C = function (e) {
                var n,
                  i,
                  a,
                  o,
                  s = null !== (n = g.current) && void 0 !== n ? n : [],
                  l = s.findIndex(function (t) {
                    return e >= t.beginTime && e < t.endTime;
                  });
                if (-1 !== l) {
                  var u = null !== (i = null === (a = b.current) || void 0 === a ? void 0 : a.plugins) && void 0 !== i ? i : [],
                    c = r()(u, 2)[1];
                  c && (c.swapAudioCodec(), c.recoverMediaError());
                  var d = e - (null === (o = s[l]) || void 0 === o ? void 0 : o.beginTime);
                  L(l),
                    m(function (e) {
                      return t()(t()({}, e), {}, { seekTime: d / 1e3 });
                    });
                }
              };
            (0, d.useEffect)(
              function () {
                var e;
                0 !== v.seekTime &&
                  (m(function (e) {
                    return t()(t()({}, e), {}, { seekTime: 0 });
                  }),
                  null !== (e = b.current) && void 0 !== e && e.video && (b.current.video.currentTime = v.seekTime));
              },
              [v.seekTime],
            );
            var x = S && k,
              D = null != u ? u : (0, Io.jsx)(Ev, { begin: null != i ? i : 0, seekTo: C, index: A, segments: null != n ? n : [], duration: null != T ? T : 0 }),
              I = (0, d.useCallback)(function () {
                y(), null == l || l();
              }, []);
            return (0, Io.jsx)(
              mv,
              t()(
                {
                  ref: b,
                  url: R,
                  isLive: !1,
                  onCanPlayerInit: I,
                  reload: function () {
                    var e,
                      t,
                      n,
                      i,
                      a,
                      o = null !== (e = null === (t = b.current) || void 0 === t ? void 0 : t.plugins) && void 0 !== e ? e : [],
                      s = r()(o, 2)[1];
                    s && (s.swapAudioCodec(), s.recoverMediaError()),
                      null === (n = b.current) || void 0 === n || n.event.emit(wo.RELOAD),
                      null === (i = b.current) || void 0 === i || i.event.emit(wo.CLEAR_ERROR_TIMER),
                      L(0),
                      null === (a = b.current) || void 0 === a || a.api.reload();
                  },
                  extActions: { setIndex: L, seekTo: C },
                  customTimeLine: x ? D : (0, Io.jsx)(Io.Fragment, {}),
                },
                c,
              ),
            );
          },
          wv = gv,
          Av = Tv,
          Lv = gv;
      })(),
      a
    );
  })();
});
